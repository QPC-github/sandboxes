var i=(e=>typeof require!="undefined"?require:typeof Proxy!="undefined"?new Proxy(e,{get:(t,r)=>(typeof require!="undefined"?require:t)[r]}):e)(function(e){if(typeof require!="undefined")return require.apply(this,arguments);throw new Error('Dynamic require of "'+e+'" is not supported')});import{dirname as k,join as f}from"path";import{copy as W,writeFile as $,remove as K}from"fs-extra";import J from"express";import{logger as x}from"@storybook/node-logger";import{globalExternals as z}from"@fal-works/esbuild-plugin-global-externals";import{pnpPlugin as Q}from"@yarnpkg/esbuild-plugin-pnp";import X from"esbuild-plugin-alias";import se,{dirname as q,join as _}from"path";import{readFile as B,pathExists as ie}from"fs-extra";import{render as A}from"ejs";var j=async e=>_(q(i.resolve("@storybook/builder-manager/package.json")),"templates",e),N=async e=>{let t=await j(e);return B(t,"utf8")};var P=async(e,t,r,o,s,a,n,l,c,{versionCheck:u,releaseNotesData:w,docsMode:R,previewUrl:O,serverChannelUrl:m})=>{let d=await r,g=await t,h=await e;return A(h,{title:g?`${g} - Storybook`:"Storybook",files:{js:s,css:o},globals:{FEATURES:JSON.stringify(await a,null,2),REFS:JSON.stringify(await n,null,2),LOGLEVEL:JSON.stringify(await l,null,2),DOCS_OPTIONS:JSON.stringify(await c,null,2),VERSIONCHECK:JSON.stringify(JSON.stringify(u),null,2),RELEASE_NOTES_DATA:JSON.stringify(JSON.stringify(w),null,2),PREVIEW_URL:JSON.stringify(O,null,2),SERVER_CHANNEL_URL:JSON.stringify(m,null,2)},head:d?await B(d,"utf8"):""})};import{definitions as T}from"@storybook/ui/dist/globals";import{join as I}from"path";import{getRefs as V}from"@storybook/core-common";var S=e=>{try{return Promise.resolve(i.resolve(e))}catch{return Promise.resolve(!1)}};var v=async e=>{let t=V(e),r=e.presets.apply("features"),o=e.presets.apply("logLevel"),s=e.presets.apply("title"),a=e.presets.apply("docs",{}),n=N("template.ejs"),l=S(I(e.configDir,"manager-head.html")),[c,u]=await Promise.all([M.get(),L(e)]);return{refs:t,features:r,title:s,docsOptions:a,template:n,customHead:l,instance:c,config:u,logLevel:o}};import{writeFile as U,ensureFile as G}from"fs-extra";async function D(e){let t=await Promise.all(p?.outputFiles?.map(async s=>(await G(s.path).then(()=>U(s.path,s.contents)),s.path.replace(e,"./sb-addons")))||[]),r=t.filter(s=>s.endsWith(".mjs"));return{cssFiles:t.filter(s=>s.endsWith(".css")),jsFiles:r}}var p,y,L=async e=>{let[t,r,o]=await Promise.all([e.presets.apply("managerEntries",[]),S(f(e.configDir,"manager")),j("addon.tsconfig.json")]);return{entryPoints:r?[...t,r]:t,outdir:f(e.outputDir||"./","sb-addons"),format:"esm",write:!1,outExtension:{".js":".mjs"},loader:{".js":"jsx",".png":"dataurl",".gif":"dataurl",".jpg":"dataurl",".jpeg":"dataurl",".svg":"dataurl",".webp":"dataurl",".webm":"dataurl"},target:["chrome100"],platform:"browser",bundle:!0,minify:!1,sourcemap:!0,jsxFactory:"React.createElement",jsxFragment:"React.Fragment",jsx:"transform",jsxImportSource:"react",tsconfig:o,legalComments:"external",plugins:[X({process:i.resolve("process/browser.js"),util:i.resolve("util/util.js"),assert:i.resolve("browser-assert")}),z(T),Q()],define:{"process.env.NODE_ENV":"'production'","process.env":"{}",global:"window",module:"{}"}}},M={get:async()=>{let{build:e}=await import("esbuild");return e}},Y=async function*({startTime:t,options:r,router:o}){x.info("=> Starting manager..");let{config:s,customHead:a,features:n,instance:l,refs:c,template:u,title:w,logLevel:R,docsOptions:O}=await v(r);yield;let m=s.outdir;await K(m),yield,p=await l({...s,watch:!0}),yield;let d=f(k(i.resolve("@storybook/ui/package.json")),"dist");o.use("/sb-addons",J.static(m)),o.use("/sb-manager",J.static(d));let{cssFiles:g,jsFiles:h}=await D(m);yield;let F=await P(u,w,a,g,h,n,c,R,O,r);return yield,o.use("/",({path:E},C,H)=>{E==="/"?C.status(200).send(F):H()}),{bail:ee,stats:{toJson:()=>({})},totalTime:process.hrtime(t)}},Z=async function*({startTime:t,options:r}){if(!r.outputDir)throw new Error("outputDir is required");x.info("=> Building manager..");let{config:o,customHead:s,features:a,instance:n,refs:l,template:c,title:u,logLevel:w,docsOptions:R}=await v(r);yield;let O=o.outdir,m=f(k(i.resolve("@storybook/ui/package.json")),"dist"),d=f(r.outputDir,"sb-manager");p=await n({...o,minify:!0,watch:!1}),yield;let g=W(m,d),{cssFiles:h,jsFiles:F}=await D(O);yield;let E=await P(c,u,s,h,F,a,l,w,R,r);return await Promise.all([$(f(r.outputDir,"index.html"),E),g]),x.trace({message:"=> Manager built",time:process.hrtime(t)}),{toJson:()=>({})}},ee=async()=>{if(y)try{await y.throw(new Error)}catch{}if(p&&p.stop)try{p.stop(),x.warn("Force closed manager build")}catch{x.warn("Unable to close manager build!")}},Te=async e=>{y=Y(e);let t;do t=await y.next();while(!t.done);return t.value},Le=async e=>{y=Z(e);let t;do t=await y.next();while(!t.done);return t.value},Me=[],Je=[];export{ee as bail,Le as build,p as compilation,Me as corePresets,M as executor,L as getConfig,Je as overridePresets,Te as start};
