import j from"util-deprecate";import{dedent as b}from"ts-dedent";import Q from"global";import{logger as G}from"@storybook/client-logger";import{toId as U,sanitize as W}from"@storybook/csf";import{combineParameters as v,composeStepRunners as B,normalizeInputTypes as C}from"@storybook/store";import O from"global";import{dedent as M}from"ts-dedent";import{SynchronousPromise as D}from"synchronous-promise";import{toId as T,isExportStory as L,storyNameFromExport as N}from"@storybook/csf";import{userOrAutoTitle as _,sortStoriesV6 as z}from"@storybook/store";import{logger as V}from"@storybook/client-logger";import K from"util-deprecate";var Y=K(()=>{},"You cannot use `.mdx` files without using `storyStoreV7`. Consider upgrading to the new store."),w=class{constructor(){this.projectAnnotations={loaders:[],decorators:[],parameters:{},argsEnhancers:[],argTypesEnhancers:[],args:{},argTypes:{}},this.entries={},this.csfExports={}}importFn(r){return D.resolve().then(()=>{let e=this.csfExports[r];if(!e)throw new Error(`Unknown path: ${r}`);return e})}getStoryIndex(r){let e=Object.keys(this.csfExports),c=this.projectAnnotations.parameters?.options?.storySort,l=Object.entries(this.entries).map(([s,{type:y,importPath:a,...i}])=>{let n=this.csfExports[a],p=r.processCSFFileWithCache(n,a,n.default.title),u;return y==="story"?u=r.storyFromCSFFile({storyId:s,csfFile:p}):u={...i,story:i.name,kind:i.title,componentId:T(i.componentId||i.title),parameters:{fileName:a}},[s,u,p.meta.parameters,this.projectAnnotations.parameters]}),m;try{m=z(l,c,e)}catch(s){throw typeof c=="function"?new Error(M`
          Error sorting stories with sort parameter ${c}:

          > ${s.message}
          
          Are you using a V7-style sort function in V6 compatibility mode?
          
          More info: https://github.com/storybookjs/storybook/blob/next/MIGRATION.md#v7-style-story-sort
        `):s}let t=m.reduce((s,y)=>(s[y.id]=this.entries[y.id],s),{});return{v:4,entries:t}}clearFilenameExports(r){!this.csfExports[r]||(Object.entries(this.entries).forEach(([e,{importPath:c}])=>{c===r&&delete this.entries[e]}),this.csfExports[r]={})}addStoriesFromExports(r,e){if(r.match(/\.mdx$/)&&!r.match(/\.stories\.mdx$/)){Y();return}if(this.csfExports[r]===e)return;this.clearFilenameExports(r);let{default:c,__namedExportsOrder:d,...l}=e,{id:m,title:t}=c||{},s=(O.STORIES||[]).map(n=>({...n,importPathMatcher:new RegExp(n.importPathMatcher)}));if(t=_(r,s,t),!t){V.info(`Unexpected default export without title in '${r}': ${JSON.stringify(e.default)}`);return}this.csfExports[r]={...e,default:{...c,title:t}};let y=l;Array.isArray(d)&&(y={},d.forEach(n=>{let p=l[n];p&&(y[n]=p)}));let a=O.DOCS_OPTIONS||{},i=new Set;Object.entries(y).filter(([n])=>L(n,c)).forEach(([n,p])=>{let u=N(n),g=p.parameters?.__id||T(m||t,u),F=typeof p!="function"&&p.name||p.storyName||p.story?.name||u;if(!i.has(t)&&a.docsPage){let S=a.defaultName,A=T(m||t,S);i.add(t),this.entries[A]={type:"docs",standalone:!1,id:A,title:t,name:S,importPath:r,storiesImports:[],componentId:m}}this.entries[g]={type:"story",id:g,name:F,title:t,importPath:r,componentId:m}})}};var f,$={addDecorator:"Instead, use `export const decorators = [];` in your `preview.js`.",addParameters:"Instead, use `export const parameters = {};` in your `preview.js`.",addLoaders:"Instead, use `export const loaders = [];` in your `preview.js`."},I=o=>j(()=>{},b`
  \`${o}\` is deprecated, and will be removed in Storybook 7.0.

  ${$[o]}

  Read more at https://github.com/storybookjs/storybook/blob/next/MIGRATION.md#deprecated-addparameters-and-adddecorator).`),H={addDecorator:I("addDecorator"),addParameters:I("addParameters"),addLoaders:I("addLoaders")},h=(o,r)=>{if(Q.FEATURES?.storyStoreV7)throw new Error(b`You cannot use \`${o}\` with the new Story Store.

      ${$[o]}`);if(!f)throw new Error(`Singleton client API not yet initialized, cannot call \`${o}\`.`);r&&H[o]()},J=(o,r=!0)=>{h("addDecorator",r),f.addDecorator(o)},q=(o,r=!0)=>{h("addParameters",r),f.addParameters(o)},X=(o,r=!0)=>{h("addLoader",r),f.addLoader(o)},Z=o=>{h("addArgs",!1),f.addArgs(o)},rr=o=>{h("addArgTypes",!1),f.addArgTypes(o)},tr=o=>{h("addArgsEnhancer",!1),f.addArgsEnhancer(o)},er=o=>{h("addArgTypesEnhancer",!1),f.addArgTypesEnhancer(o)},or=o=>{h("addStepRunner",!1),f.addStepRunner(o)};var ar=o=>{h("setGlobalRender",!1),f.facade.projectAnnotations.render=o},sr=new Set(["string","number","boolean","symbol"]),P=class{constructor({storyStore:r}={}){this.lastFileName=0;this.setAddon=j(r=>{this.addons={...this.addons,...r}},b`
      \`setAddon\` is deprecated and will be removed in Storybook 7.0.

      https://github.com/storybookjs/storybook/blob/next/MIGRATION.md#deprecated-setaddon
    `);this.addDecorator=r=>{this.facade.projectAnnotations.decorators.push(r)};this.clearDecorators=j(()=>{this.facade.projectAnnotations.decorators=[]},b`
      \`clearDecorators\` is deprecated and will be removed in Storybook 7.0.

      https://github.com/storybookjs/storybook/blob/next/MIGRATION.md#deprecated-cleardecorators
    `);this.addParameters=({globals:r,globalTypes:e,...c})=>{this.facade.projectAnnotations.parameters=v(this.facade.projectAnnotations.parameters,c),r&&(this.facade.projectAnnotations.globals={...this.facade.projectAnnotations.globals,...r}),e&&(this.facade.projectAnnotations.globalTypes={...this.facade.projectAnnotations.globalTypes,...C(e)})};this.addStepRunner=r=>{this.facade.projectAnnotations.runStep=B([this.facade.projectAnnotations.runStep,r].filter(Boolean))};this.addLoader=r=>{this.facade.projectAnnotations.loaders.push(r)};this.addArgs=r=>{this.facade.projectAnnotations.args={...this.facade.projectAnnotations.args,...r}};this.addArgTypes=r=>{this.facade.projectAnnotations.argTypes={...this.facade.projectAnnotations.argTypes,...C(r)}};this.addArgsEnhancer=r=>{this.facade.projectAnnotations.argsEnhancers.push(r)};this.addArgTypesEnhancer=r=>{this.facade.projectAnnotations.argTypesEnhancers.push(r)};this.storiesOf=(r,e)=>{if(!r&&typeof r!="string")throw new Error("Invalid or missing kind provided for stories, should be a string");if(e||G.warn(`Missing 'module' parameter for story with a kind of '${r}'. It will break your HMR`),e){let a=Object.getPrototypeOf(e);a.exports&&a.exports.default&&G.error(`Illegal mix of CSF default export and storiesOf calls in a single file: ${a.i}`)}let c=e&&e.id?`${e.id}`:(this.lastFileName++).toString(),d=c,l=1;for(;this.facade.csfExports[d]&&Object.keys(this.facade.csfExports[d]).length>0;)l+=1,d=`${c}-${l}`;e&&e.hot&&e.hot.accept&&(e.hot.accept(),e.hot.dispose(()=>{this.facade.clearFilenameExports(d),setTimeout(()=>{this.onImportFnChanged?.({importFn:this.importFn.bind(this)})},0)}));let m=!1,t={kind:r.toString(),add:()=>t,addDecorator:()=>t,addLoader:()=>t,addParameters:()=>t};Object.keys(this.addons).forEach(a=>{let i=this.addons[a];t[a]=(...n)=>(i.apply(t,n),t)});let s={id:W(r),title:r,decorators:[],loaders:[],parameters:{}};this.facade.csfExports[d]={default:s};let y=0;return t.add=(a,i,n={})=>{if(m=!0,typeof a!="string")throw new Error(`Invalid or missing storyName provided for a "${r}" story.`);if(!i||Array.isArray(i)||sr.has(typeof i))throw new Error(`Cannot load story "${a}" in "${r}" due to invalid format. Storybook expected a function/object but received ${typeof i} instead.`);let{decorators:p,loaders:u,component:g,args:F,argTypes:S,...A}=n,x=n.__id||U(r,a),R=this.facade.csfExports[d];return R[`story${y}`]={name:a,parameters:{fileName:d,__id:x,...A},decorators:p,loaders:u,args:F,argTypes:S,component:g,render:i},y+=1,this.facade.entries[x]={id:x,title:R.default.title,name:a,importPath:d,type:"story"},t},t.addDecorator=a=>{if(m)throw new Error(`You cannot add a decorator after the first story for a kind.
Read more here: https://github.com/storybookjs/storybook/blob/master/MIGRATION.md#can-no-longer-add-decoratorsparameters-after-stories`);return s.decorators.push(a),t},t.addLoader=a=>{if(m)throw new Error("You cannot add a loader after the first story for a kind.");return s.loaders.push(a),t},t.addParameters=({component:a,args:i,argTypes:n,...p})=>{if(m)throw new Error(`You cannot add parameters after the first story for a kind.
Read more here: https://github.com/storybookjs/storybook/blob/master/MIGRATION.md#can-no-longer-add-decoratorsparameters-after-stories`);return s.parameters=v(s.parameters,p),a&&(s.component=a),i&&(s.args={...s.args,...i}),n&&(s.argTypes={...s.argTypes,...n}),t},t};this.getStorybook=()=>{let{entries:r}=this.storyStore.storyIndex,e={};return Object.entries(r).forEach(([c,{title:d,name:l,importPath:m,type:t}])=>{if(t&&t!=="story")return;e[d]||(e[d]={kind:d,fileName:m,stories:[]});let{storyFn:s}=this.storyStore.fromId(c);e[d].stories.push({name:l,render:s})}),Object.values(e)};this.raw=()=>this.storyStore.raw();this.facade=new w,this.addons={},this.storyStore=r,f=this}importFn(r){return this.facade.importFn(r)}getStoryIndex(){if(!this.storyStore)throw new Error("Cannot get story index before setting storyStore");return this.facade.getStoryIndex(this.storyStore)}get _storyStore(){return this.storyStore}};import nr from"global";import{parse as ir}from"qs";var{document:k}=nr,dr=()=>k&&k.location&&k.location.search?ir(k.location.search,{ignoreQueryPrefix:!0}):{},Gr=o=>dr()[o];export*from"@storybook/store";export{P as ClientApi,rr as addArgTypes,er as addArgTypesEnhancer,Z as addArgs,tr as addArgsEnhancer,J as addDecorator,X as addLoader,q as addParameters,or as addStepRunner,Gr as getQueryParam,dr as getQueryParams,ar as setGlobalRender};
