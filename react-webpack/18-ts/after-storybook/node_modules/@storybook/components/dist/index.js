var __create = Object.create;
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __getProtoOf = Object.getPrototypeOf;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __esm = (fn2, res) => function __init() {
  return fn2 && (res = (0, fn2[__getOwnPropNames(fn2)[0]])(fn2 = 0)), res;
};
var __commonJS = (cb, mod) => function __require() {
  return mod || (0, cb[__getOwnPropNames(cb)[0]])((mod = { exports: {} }).exports, mod), mod.exports;
};
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __copyProps = (to, from, except, desc) => {
  if (from && typeof from === "object" || typeof from === "function") {
    for (let key of __getOwnPropNames(from))
      if (!__hasOwnProp.call(to, key) && key !== except)
        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  }
  return to;
};
var __toESM = (mod, isNodeMode, target) => (target = mod != null ? __create(__getProtoOf(mod)) : {}, __copyProps(
  isNodeMode || !mod || !mod.__esModule ? __defProp(target, "default", { value: mod, enumerable: true }) : target,
  mod
));
var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);

// ../../node_modules/@babel/runtime/helpers/esm/extends.js
function _extends() {
  _extends = Object.assign ? Object.assign.bind() : function(target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends.apply(this, arguments);
}
var init_extends = __esm({
  "../../node_modules/@babel/runtime/helpers/esm/extends.js"() {
  }
});

// ../../node_modules/@babel/runtime/helpers/esm/setPrototypeOf.js
function _setPrototypeOf(o, p) {
  _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf2(o2, p2) {
    o2.__proto__ = p2;
    return o2;
  };
  return _setPrototypeOf(o, p);
}
var init_setPrototypeOf = __esm({
  "../../node_modules/@babel/runtime/helpers/esm/setPrototypeOf.js"() {
  }
});

// ../../node_modules/@babel/runtime/helpers/esm/inheritsLoose.js
function _inheritsLoose(subClass, superClass) {
  subClass.prototype = Object.create(superClass.prototype);
  subClass.prototype.constructor = subClass;
  _setPrototypeOf(subClass, superClass);
}
var init_inheritsLoose = __esm({
  "../../node_modules/@babel/runtime/helpers/esm/inheritsLoose.js"() {
    init_setPrototypeOf();
  }
});

// ../../node_modules/global/window.js
var require_window = __commonJS({
  "../../node_modules/global/window.js"(exports, module2) {
    var win;
    if (typeof window !== "undefined") {
      win = window;
    } else if (typeof global !== "undefined") {
      win = global;
    } else if (typeof self !== "undefined") {
      win = self;
    } else {
      win = {};
    }
    module2.exports = win;
  }
});

// ../../node_modules/refractor/lang/jsx.js
var require_jsx = __commonJS({
  "../../node_modules/refractor/lang/jsx.js"(exports, module2) {
    "use strict";
    module2.exports = jsx2;
    jsx2.displayName = "jsx";
    jsx2.aliases = [];
    function jsx2(Prism) {
      ;
      (function(Prism2) {
        var javascript = Prism2.util.clone(Prism2.languages.javascript);
        var space = /(?:\s|\/\/.*(?!.)|\/\*(?:[^*]|\*(?!\/))\*\/)/.source;
        var braces = /(?:\{(?:\{(?:\{[^{}]*\}|[^{}])*\}|[^{}])*\})/.source;
        var spread = /(?:\{<S>*\.{3}(?:[^{}]|<BRACES>)*\})/.source;
        function re(source, flags) {
          source = source.replace(/<S>/g, function() {
            return space;
          }).replace(/<BRACES>/g, function() {
            return braces;
          }).replace(/<SPREAD>/g, function() {
            return spread;
          });
          return RegExp(source, flags);
        }
        spread = re(spread).source;
        Prism2.languages.jsx = Prism2.languages.extend("markup", javascript);
        Prism2.languages.jsx.tag.pattern = re(
          /<\/?(?:[\w.:-]+(?:<S>+(?:[\w.:$-]+(?:=(?:"(?:\\[\s\S]|[^\\"])*"|'(?:\\[\s\S]|[^\\'])*'|[^\s{'"/>=]+|<BRACES>))?|<SPREAD>))*<S>*\/?)?>/.source
        );
        Prism2.languages.jsx.tag.inside["tag"].pattern = /^<\/?[^\s>\/]*/;
        Prism2.languages.jsx.tag.inside["attr-value"].pattern = /=(?!\{)(?:"(?:\\[\s\S]|[^\\"])*"|'(?:\\[\s\S]|[^\\'])*'|[^\s'">]+)/;
        Prism2.languages.jsx.tag.inside["tag"].inside["class-name"] = /^[A-Z]\w*(?:\.[A-Z]\w*)*$/;
        Prism2.languages.jsx.tag.inside["comment"] = javascript["comment"];
        Prism2.languages.insertBefore(
          "inside",
          "attr-name",
          {
            spread: {
              pattern: re(/<SPREAD>/.source),
              inside: Prism2.languages.jsx
            }
          },
          Prism2.languages.jsx.tag
        );
        Prism2.languages.insertBefore(
          "inside",
          "special-attr",
          {
            script: {
              pattern: re(/=<BRACES>/.source),
              alias: "language-javascript",
              inside: {
                "script-punctuation": {
                  pattern: /^=(?=\{)/,
                  alias: "punctuation"
                },
                rest: Prism2.languages.jsx
              }
            }
          },
          Prism2.languages.jsx.tag
        );
        var stringifyToken = function(token) {
          if (!token) {
            return "";
          }
          if (typeof token === "string") {
            return token;
          }
          if (typeof token.content === "string") {
            return token.content;
          }
          return token.content.map(stringifyToken).join("");
        };
        var walkTokens = function(tokens) {
          var openedTags = [];
          for (var i = 0; i < tokens.length; i++) {
            var token = tokens[i];
            var notTagNorBrace = false;
            if (typeof token !== "string") {
              if (token.type === "tag" && token.content[0] && token.content[0].type === "tag") {
                if (token.content[0].content[0].content === "</") {
                  if (openedTags.length > 0 && openedTags[openedTags.length - 1].tagName === stringifyToken(token.content[0].content[1])) {
                    openedTags.pop();
                  }
                } else {
                  if (token.content[token.content.length - 1].content === "/>") {
                  } else {
                    openedTags.push({
                      tagName: stringifyToken(token.content[0].content[1]),
                      openedBraces: 0
                    });
                  }
                }
              } else if (openedTags.length > 0 && token.type === "punctuation" && token.content === "{") {
                openedTags[openedTags.length - 1].openedBraces++;
              } else if (openedTags.length > 0 && openedTags[openedTags.length - 1].openedBraces > 0 && token.type === "punctuation" && token.content === "}") {
                openedTags[openedTags.length - 1].openedBraces--;
              } else {
                notTagNorBrace = true;
              }
            }
            if (notTagNorBrace || typeof token === "string") {
              if (openedTags.length > 0 && openedTags[openedTags.length - 1].openedBraces === 0) {
                var plainText = stringifyToken(token);
                if (i < tokens.length - 1 && (typeof tokens[i + 1] === "string" || tokens[i + 1].type === "plain-text")) {
                  plainText += stringifyToken(tokens[i + 1]);
                  tokens.splice(i + 1, 1);
                }
                if (i > 0 && (typeof tokens[i - 1] === "string" || tokens[i - 1].type === "plain-text")) {
                  plainText = stringifyToken(tokens[i - 1]) + plainText;
                  tokens.splice(i - 1, 1);
                  i--;
                }
                tokens[i] = new Prism2.Token(
                  "plain-text",
                  plainText,
                  null,
                  plainText
                );
              }
            }
            if (token.content && typeof token.content !== "string") {
              walkTokens(token.content);
            }
          }
        };
        Prism2.hooks.add("after-tokenize", function(env) {
          if (env.language !== "jsx" && env.language !== "tsx") {
            return;
          }
          walkTokens(env.tokens);
        });
      })(Prism);
    }
  }
});

// ../../node_modules/react-syntax-highlighter/dist/esm/languages/prism/jsx.js
var import_jsx, jsx_default;
var init_jsx = __esm({
  "../../node_modules/react-syntax-highlighter/dist/esm/languages/prism/jsx.js"() {
    import_jsx = __toESM(require_jsx());
    jsx_default = import_jsx.default;
  }
});

// ../../node_modules/refractor/lang/bash.js
var require_bash = __commonJS({
  "../../node_modules/refractor/lang/bash.js"(exports, module2) {
    "use strict";
    module2.exports = bash2;
    bash2.displayName = "bash";
    bash2.aliases = ["shell"];
    function bash2(Prism) {
      ;
      (function(Prism2) {
        var envVars = "\\b(?:BASH|BASHOPTS|BASH_ALIASES|BASH_ARGC|BASH_ARGV|BASH_CMDS|BASH_COMPLETION_COMPAT_DIR|BASH_LINENO|BASH_REMATCH|BASH_SOURCE|BASH_VERSINFO|BASH_VERSION|COLORTERM|COLUMNS|COMP_WORDBREAKS|DBUS_SESSION_BUS_ADDRESS|DEFAULTS_PATH|DESKTOP_SESSION|DIRSTACK|DISPLAY|EUID|GDMSESSION|GDM_LANG|GNOME_KEYRING_CONTROL|GNOME_KEYRING_PID|GPG_AGENT_INFO|GROUPS|HISTCONTROL|HISTFILE|HISTFILESIZE|HISTSIZE|HOME|HOSTNAME|HOSTTYPE|IFS|INSTANCE|JOB|LANG|LANGUAGE|LC_ADDRESS|LC_ALL|LC_IDENTIFICATION|LC_MEASUREMENT|LC_MONETARY|LC_NAME|LC_NUMERIC|LC_PAPER|LC_TELEPHONE|LC_TIME|LESSCLOSE|LESSOPEN|LINES|LOGNAME|LS_COLORS|MACHTYPE|MAILCHECK|MANDATORY_PATH|NO_AT_BRIDGE|OLDPWD|OPTERR|OPTIND|ORBIT_SOCKETDIR|OSTYPE|PAPERSIZE|PATH|PIPESTATUS|PPID|PS1|PS2|PS3|PS4|PWD|RANDOM|REPLY|SECONDS|SELINUX_INIT|SESSION|SESSIONTYPE|SESSION_MANAGER|SHELL|SHELLOPTS|SHLVL|SSH_AUTH_SOCK|TERM|UID|UPSTART_EVENTS|UPSTART_INSTANCE|UPSTART_JOB|UPSTART_SESSION|USER|WINDOWID|XAUTHORITY|XDG_CONFIG_DIRS|XDG_CURRENT_DESKTOP|XDG_DATA_DIRS|XDG_GREETER_DATA_DIR|XDG_MENU_PREFIX|XDG_RUNTIME_DIR|XDG_SEAT|XDG_SEAT_PATH|XDG_SESSION_DESKTOP|XDG_SESSION_ID|XDG_SESSION_PATH|XDG_SESSION_TYPE|XDG_VTNR|XMODIFIERS)\\b";
        var commandAfterHeredoc = {
          pattern: /(^(["']?)\w+\2)[ \t]+\S.*/,
          lookbehind: true,
          alias: "punctuation",
          inside: null
        };
        var insideString = {
          bash: commandAfterHeredoc,
          environment: {
            pattern: RegExp("\\$" + envVars),
            alias: "constant"
          },
          variable: [
            {
              pattern: /\$?\(\([\s\S]+?\)\)/,
              greedy: true,
              inside: {
                variable: [
                  {
                    pattern: /(^\$\(\([\s\S]+)\)\)/,
                    lookbehind: true
                  },
                  /^\$\(\(/
                ],
                number: /\b0x[\dA-Fa-f]+\b|(?:\b\d+(?:\.\d*)?|\B\.\d+)(?:[Ee]-?\d+)?/,
                operator: /--|\+\+|\*\*=?|<<=?|>>=?|&&|\|\||[=!+\-*/%<>^&|]=?|[?~:]/,
                punctuation: /\(\(?|\)\)?|,|;/
              }
            },
            {
              pattern: /\$\((?:\([^)]+\)|[^()])+\)|`[^`]+`/,
              greedy: true,
              inside: {
                variable: /^\$\(|^`|\)$|`$/
              }
            },
            {
              pattern: /\$\{[^}]+\}/,
              greedy: true,
              inside: {
                operator: /:[-=?+]?|[!\/]|##?|%%?|\^\^?|,,?/,
                punctuation: /[\[\]]/,
                environment: {
                  pattern: RegExp("(\\{)" + envVars),
                  lookbehind: true,
                  alias: "constant"
                }
              }
            },
            /\$(?:\w+|[#?*!@$])/
          ],
          entity: /\\(?:[abceEfnrtv\\"]|O?[0-7]{1,3}|U[0-9a-fA-F]{8}|u[0-9a-fA-F]{4}|x[0-9a-fA-F]{1,2})/
        };
        Prism2.languages.bash = {
          shebang: {
            pattern: /^#!\s*\/.*/,
            alias: "important"
          },
          comment: {
            pattern: /(^|[^"{\\$])#.*/,
            lookbehind: true
          },
          "function-name": [
            {
              pattern: /(\bfunction\s+)[\w-]+(?=(?:\s*\(?:\s*\))?\s*\{)/,
              lookbehind: true,
              alias: "function"
            },
            {
              pattern: /\b[\w-]+(?=\s*\(\s*\)\s*\{)/,
              alias: "function"
            }
          ],
          "for-or-select": {
            pattern: /(\b(?:for|select)\s+)\w+(?=\s+in\s)/,
            alias: "variable",
            lookbehind: true
          },
          "assign-left": {
            pattern: /(^|[\s;|&]|[<>]\()\w+(?=\+?=)/,
            inside: {
              environment: {
                pattern: RegExp("(^|[\\s;|&]|[<>]\\()" + envVars),
                lookbehind: true,
                alias: "constant"
              }
            },
            alias: "variable",
            lookbehind: true
          },
          string: [
            {
              pattern: /((?:^|[^<])<<-?\s*)(\w+)\s[\s\S]*?(?:\r?\n|\r)\2/,
              lookbehind: true,
              greedy: true,
              inside: insideString
            },
            {
              pattern: /((?:^|[^<])<<-?\s*)(["'])(\w+)\2\s[\s\S]*?(?:\r?\n|\r)\3/,
              lookbehind: true,
              greedy: true,
              inside: {
                bash: commandAfterHeredoc
              }
            },
            {
              pattern: /(^|[^\\](?:\\\\)*)"(?:\\[\s\S]|\$\([^)]+\)|\$(?!\()|`[^`]+`|[^"\\`$])*"/,
              lookbehind: true,
              greedy: true,
              inside: insideString
            },
            {
              pattern: /(^|[^$\\])'[^']*'/,
              lookbehind: true,
              greedy: true
            },
            {
              pattern: /\$'(?:[^'\\]|\\[\s\S])*'/,
              greedy: true,
              inside: {
                entity: insideString.entity
              }
            }
          ],
          environment: {
            pattern: RegExp("\\$?" + envVars),
            alias: "constant"
          },
          variable: insideString.variable,
          function: {
            pattern: /(^|[\s;|&]|[<>]\()(?:add|apropos|apt|apt-cache|apt-get|aptitude|aspell|automysqlbackup|awk|basename|bash|bc|bconsole|bg|bzip2|cal|cat|cfdisk|chgrp|chkconfig|chmod|chown|chroot|cksum|clear|cmp|column|comm|composer|cp|cron|crontab|csplit|curl|cut|date|dc|dd|ddrescue|debootstrap|df|diff|diff3|dig|dir|dircolors|dirname|dirs|dmesg|docker|docker-compose|du|egrep|eject|env|ethtool|expand|expect|expr|fdformat|fdisk|fg|fgrep|file|find|fmt|fold|format|free|fsck|ftp|fuser|gawk|git|gparted|grep|groupadd|groupdel|groupmod|groups|grub-mkconfig|gzip|halt|head|hg|history|host|hostname|htop|iconv|id|ifconfig|ifdown|ifup|import|install|ip|jobs|join|kill|killall|less|link|ln|locate|logname|logrotate|look|lpc|lpr|lprint|lprintd|lprintq|lprm|ls|lsof|lynx|make|man|mc|mdadm|mkconfig|mkdir|mke2fs|mkfifo|mkfs|mkisofs|mknod|mkswap|mmv|more|most|mount|mtools|mtr|mutt|mv|nano|nc|netstat|nice|nl|node|nohup|notify-send|npm|nslookup|op|open|parted|passwd|paste|pathchk|ping|pkill|pnpm|podman|podman-compose|popd|pr|printcap|printenv|ps|pushd|pv|quota|quotacheck|quotactl|ram|rar|rcp|reboot|remsync|rename|renice|rev|rm|rmdir|rpm|rsync|scp|screen|sdiff|sed|sendmail|seq|service|sftp|sh|shellcheck|shuf|shutdown|sleep|slocate|sort|split|ssh|stat|strace|su|sudo|sum|suspend|swapon|sync|tac|tail|tar|tee|time|timeout|top|touch|tr|traceroute|tsort|tty|umount|uname|unexpand|uniq|units|unrar|unshar|unzip|update-grub|uptime|useradd|userdel|usermod|users|uudecode|uuencode|v|vcpkg|vdir|vi|vim|virsh|vmstat|wait|watch|wc|wget|whereis|which|who|whoami|write|xargs|xdg-open|yarn|yes|zenity|zip|zsh|zypper)(?=$|[)\s;|&])/,
            lookbehind: true
          },
          keyword: {
            pattern: /(^|[\s;|&]|[<>]\()(?:case|do|done|elif|else|esac|fi|for|function|if|in|select|then|until|while)(?=$|[)\s;|&])/,
            lookbehind: true
          },
          builtin: {
            pattern: /(^|[\s;|&]|[<>]\()(?:\.|:|alias|bind|break|builtin|caller|cd|command|continue|declare|echo|enable|eval|exec|exit|export|getopts|hash|help|let|local|logout|mapfile|printf|pwd|read|readarray|readonly|return|set|shift|shopt|source|test|times|trap|type|typeset|ulimit|umask|unalias|unset)(?=$|[)\s;|&])/,
            lookbehind: true,
            alias: "class-name"
          },
          boolean: {
            pattern: /(^|[\s;|&]|[<>]\()(?:false|true)(?=$|[)\s;|&])/,
            lookbehind: true
          },
          "file-descriptor": {
            pattern: /\B&\d\b/,
            alias: "important"
          },
          operator: {
            pattern: /\d?<>|>\||\+=|=[=~]?|!=?|<<[<-]?|[&\d]?>>|\d[<>]&?|[<>][&=]?|&[>&]?|\|[&|]?/,
            inside: {
              "file-descriptor": {
                pattern: /^\d/,
                alias: "important"
              }
            }
          },
          punctuation: /\$?\(\(?|\)\)?|\.\.|[{}[\];\\]/,
          number: {
            pattern: /(^|\s)(?:[1-9]\d*|0)(?:[.,]\d+)?\b/,
            lookbehind: true
          }
        };
        commandAfterHeredoc.inside = Prism2.languages.bash;
        var toBeCopied = [
          "comment",
          "function-name",
          "for-or-select",
          "assign-left",
          "string",
          "environment",
          "function",
          "keyword",
          "builtin",
          "boolean",
          "file-descriptor",
          "operator",
          "punctuation",
          "number"
        ];
        var inside = insideString.variable[1].inside;
        for (var i = 0; i < toBeCopied.length; i++) {
          inside[toBeCopied[i]] = Prism2.languages.bash[toBeCopied[i]];
        }
        Prism2.languages.shell = Prism2.languages.bash;
      })(Prism);
    }
  }
});

// ../../node_modules/react-syntax-highlighter/dist/esm/languages/prism/bash.js
var import_bash, bash_default;
var init_bash = __esm({
  "../../node_modules/react-syntax-highlighter/dist/esm/languages/prism/bash.js"() {
    import_bash = __toESM(require_bash());
    bash_default = import_bash.default;
  }
});

// ../../node_modules/refractor/lang/css.js
var require_css = __commonJS({
  "../../node_modules/refractor/lang/css.js"(exports, module2) {
    "use strict";
    module2.exports = css2;
    css2.displayName = "css";
    css2.aliases = [];
    function css2(Prism) {
      ;
      (function(Prism2) {
        var string = /(?:"(?:\\(?:\r\n|[\s\S])|[^"\\\r\n])*"|'(?:\\(?:\r\n|[\s\S])|[^'\\\r\n])*')/;
        Prism2.languages.css = {
          comment: /\/\*[\s\S]*?\*\//,
          atrule: {
            pattern: /@[\w-](?:[^;{\s]|\s+(?![\s{]))*(?:;|(?=\s*\{))/,
            inside: {
              rule: /^@[\w-]+/,
              "selector-function-argument": {
                pattern: /(\bselector\s*\(\s*(?![\s)]))(?:[^()\s]|\s+(?![\s)])|\((?:[^()]|\([^()]*\))*\))+(?=\s*\))/,
                lookbehind: true,
                alias: "selector"
              },
              keyword: {
                pattern: /(^|[^\w-])(?:and|not|only|or)(?![\w-])/,
                lookbehind: true
              }
            }
          },
          url: {
            pattern: RegExp(
              "\\burl\\((?:" + string.source + "|" + /(?:[^\\\r\n()"']|\\[\s\S])*/.source + ")\\)",
              "i"
            ),
            greedy: true,
            inside: {
              function: /^url/i,
              punctuation: /^\(|\)$/,
              string: {
                pattern: RegExp("^" + string.source + "$"),
                alias: "url"
              }
            }
          },
          selector: {
            pattern: RegExp(
              `(^|[{}\\s])[^{}\\s](?:[^{};"'\\s]|\\s+(?![\\s{])|` + string.source + ")*(?=\\s*\\{)"
            ),
            lookbehind: true
          },
          string: {
            pattern: string,
            greedy: true
          },
          property: {
            pattern: /(^|[^-\w\xA0-\uFFFF])(?!\s)[-_a-z\xA0-\uFFFF](?:(?!\s)[-\w\xA0-\uFFFF])*(?=\s*:)/i,
            lookbehind: true
          },
          important: /!important\b/i,
          function: {
            pattern: /(^|[^-a-z0-9])[-a-z0-9]+(?=\()/i,
            lookbehind: true
          },
          punctuation: /[(){};:,]/
        };
        Prism2.languages.css["atrule"].inside.rest = Prism2.languages.css;
        var markup2 = Prism2.languages.markup;
        if (markup2) {
          markup2.tag.addInlined("style", "css");
          markup2.tag.addAttribute("style", "css");
        }
      })(Prism);
    }
  }
});

// ../../node_modules/react-syntax-highlighter/dist/esm/languages/prism/css.js
var import_css, css_default;
var init_css = __esm({
  "../../node_modules/react-syntax-highlighter/dist/esm/languages/prism/css.js"() {
    import_css = __toESM(require_css());
    css_default = import_css.default;
  }
});

// ../../node_modules/refractor/lang/js-extras.js
var require_js_extras = __commonJS({
  "../../node_modules/refractor/lang/js-extras.js"(exports, module2) {
    "use strict";
    module2.exports = jsExtras2;
    jsExtras2.displayName = "jsExtras";
    jsExtras2.aliases = [];
    function jsExtras2(Prism) {
      ;
      (function(Prism2) {
        Prism2.languages.insertBefore("javascript", "function-variable", {
          "method-variable": {
            pattern: RegExp(
              "(\\.\\s*)" + Prism2.languages.javascript["function-variable"].pattern.source
            ),
            lookbehind: true,
            alias: ["function-variable", "method", "function", "property-access"]
          }
        });
        Prism2.languages.insertBefore("javascript", "function", {
          method: {
            pattern: RegExp(
              "(\\.\\s*)" + Prism2.languages.javascript["function"].source
            ),
            lookbehind: true,
            alias: ["function", "property-access"]
          }
        });
        Prism2.languages.insertBefore("javascript", "constant", {
          "known-class-name": [
            {
              pattern: /\b(?:(?:Float(?:32|64)|(?:Int|Uint)(?:8|16|32)|Uint8Clamped)?Array|ArrayBuffer|BigInt|Boolean|DataView|Date|Error|Function|Intl|JSON|(?:Weak)?(?:Map|Set)|Math|Number|Object|Promise|Proxy|Reflect|RegExp|String|Symbol|WebAssembly)\b/,
              alias: "class-name"
            },
            {
              pattern: /\b(?:[A-Z]\w*)Error\b/,
              alias: "class-name"
            }
          ]
        });
        function withId(source, flags) {
          return RegExp(
            source.replace(/<ID>/g, function() {
              return /(?!\s)[_$a-zA-Z\xA0-\uFFFF](?:(?!\s)[$\w\xA0-\uFFFF])*/.source;
            }),
            flags
          );
        }
        Prism2.languages.insertBefore("javascript", "keyword", {
          imports: {
            pattern: withId(
              /(\bimport\b\s*)(?:<ID>(?:\s*,\s*(?:\*\s*as\s+<ID>|\{[^{}]*\}))?|\*\s*as\s+<ID>|\{[^{}]*\})(?=\s*\bfrom\b)/.source
            ),
            lookbehind: true,
            inside: Prism2.languages.javascript
          },
          exports: {
            pattern: withId(
              /(\bexport\b\s*)(?:\*(?:\s*as\s+<ID>)?(?=\s*\bfrom\b)|\{[^{}]*\})/.source
            ),
            lookbehind: true,
            inside: Prism2.languages.javascript
          }
        });
        Prism2.languages.javascript["keyword"].unshift(
          {
            pattern: /\b(?:as|default|export|from|import)\b/,
            alias: "module"
          },
          {
            pattern: /\b(?:await|break|catch|continue|do|else|finally|for|if|return|switch|throw|try|while|yield)\b/,
            alias: "control-flow"
          },
          {
            pattern: /\bnull\b/,
            alias: ["null", "nil"]
          },
          {
            pattern: /\bundefined\b/,
            alias: "nil"
          }
        );
        Prism2.languages.insertBefore("javascript", "operator", {
          spread: {
            pattern: /\.{3}/,
            alias: "operator"
          },
          arrow: {
            pattern: /=>/,
            alias: "operator"
          }
        });
        Prism2.languages.insertBefore("javascript", "punctuation", {
          "property-access": {
            pattern: withId(/(\.\s*)#?<ID>/.source),
            lookbehind: true
          },
          "maybe-class-name": {
            pattern: /(^|[^$\w\xA0-\uFFFF])[A-Z][$\w\xA0-\uFFFF]+/,
            lookbehind: true
          },
          dom: {
            pattern: /\b(?:document|(?:local|session)Storage|location|navigator|performance|window)\b/,
            alias: "variable"
          },
          console: {
            pattern: /\bconsole(?=\s*\.)/,
            alias: "class-name"
          }
        });
        var maybeClassNameTokens = [
          "function",
          "function-variable",
          "method",
          "method-variable",
          "property-access"
        ];
        for (var i = 0; i < maybeClassNameTokens.length; i++) {
          var token = maybeClassNameTokens[i];
          var value = Prism2.languages.javascript[token];
          if (Prism2.util.type(value) === "RegExp") {
            value = Prism2.languages.javascript[token] = {
              pattern: value
            };
          }
          var inside = value.inside || {};
          value.inside = inside;
          inside["maybe-class-name"] = /^[A-Z][\s\S]*/;
        }
      })(Prism);
    }
  }
});

// ../../node_modules/react-syntax-highlighter/dist/esm/languages/prism/js-extras.js
var import_js_extras, js_extras_default;
var init_js_extras = __esm({
  "../../node_modules/react-syntax-highlighter/dist/esm/languages/prism/js-extras.js"() {
    import_js_extras = __toESM(require_js_extras());
    js_extras_default = import_js_extras.default;
  }
});

// ../../node_modules/refractor/lang/json.js
var require_json = __commonJS({
  "../../node_modules/refractor/lang/json.js"(exports, module2) {
    "use strict";
    module2.exports = json2;
    json2.displayName = "json";
    json2.aliases = ["webmanifest"];
    function json2(Prism) {
      Prism.languages.json = {
        property: {
          pattern: /(^|[^\\])"(?:\\.|[^\\"\r\n])*"(?=\s*:)/,
          lookbehind: true,
          greedy: true
        },
        string: {
          pattern: /(^|[^\\])"(?:\\.|[^\\"\r\n])*"(?!\s*:)/,
          lookbehind: true,
          greedy: true
        },
        comment: {
          pattern: /\/\/.*|\/\*[\s\S]*?(?:\*\/|$)/,
          greedy: true
        },
        number: /-?\b\d+(?:\.\d+)?(?:e[+-]?\d+)?\b/i,
        punctuation: /[{}[\],]/,
        operator: /:/,
        boolean: /\b(?:false|true)\b/,
        null: {
          pattern: /\bnull\b/,
          alias: "keyword"
        }
      };
      Prism.languages.webmanifest = Prism.languages.json;
    }
  }
});

// ../../node_modules/react-syntax-highlighter/dist/esm/languages/prism/json.js
var import_json, json_default;
var init_json = __esm({
  "../../node_modules/react-syntax-highlighter/dist/esm/languages/prism/json.js"() {
    import_json = __toESM(require_json());
    json_default = import_json.default;
  }
});

// ../../node_modules/refractor/lang/graphql.js
var require_graphql = __commonJS({
  "../../node_modules/refractor/lang/graphql.js"(exports, module2) {
    "use strict";
    module2.exports = graphql2;
    graphql2.displayName = "graphql";
    graphql2.aliases = [];
    function graphql2(Prism) {
      Prism.languages.graphql = {
        comment: /#.*/,
        description: {
          pattern: /(?:"""(?:[^"]|(?!""")")*"""|"(?:\\.|[^\\"\r\n])*")(?=\s*[a-z_])/i,
          greedy: true,
          alias: "string",
          inside: {
            "language-markdown": {
              pattern: /(^"(?:"")?)(?!\1)[\s\S]+(?=\1$)/,
              lookbehind: true,
              inside: Prism.languages.markdown
            }
          }
        },
        string: {
          pattern: /"""(?:[^"]|(?!""")")*"""|"(?:\\.|[^\\"\r\n])*"/,
          greedy: true
        },
        number: /(?:\B-|\b)\d+(?:\.\d+)?(?:e[+-]?\d+)?\b/i,
        boolean: /\b(?:false|true)\b/,
        variable: /\$[a-z_]\w*/i,
        directive: {
          pattern: /@[a-z_]\w*/i,
          alias: "function"
        },
        "attr-name": {
          pattern: /\b[a-z_]\w*(?=\s*(?:\((?:[^()"]|"(?:\\.|[^\\"\r\n])*")*\))?:)/i,
          greedy: true
        },
        "atom-input": {
          pattern: /\b[A-Z]\w*Input\b/,
          alias: "class-name"
        },
        scalar: /\b(?:Boolean|Float|ID|Int|String)\b/,
        constant: /\b[A-Z][A-Z_\d]*\b/,
        "class-name": {
          pattern: /(\b(?:enum|implements|interface|on|scalar|type|union)\s+|&\s*|:\s*|\[)[A-Z_]\w*/,
          lookbehind: true
        },
        fragment: {
          pattern: /(\bfragment\s+|\.{3}\s*(?!on\b))[a-zA-Z_]\w*/,
          lookbehind: true,
          alias: "function"
        },
        "definition-mutation": {
          pattern: /(\bmutation\s+)[a-zA-Z_]\w*/,
          lookbehind: true,
          alias: "function"
        },
        "definition-query": {
          pattern: /(\bquery\s+)[a-zA-Z_]\w*/,
          lookbehind: true,
          alias: "function"
        },
        keyword: /\b(?:directive|enum|extend|fragment|implements|input|interface|mutation|on|query|repeatable|scalar|schema|subscription|type|union)\b/,
        operator: /[!=|&]|\.{3}/,
        "property-query": /\w+(?=\s*\()/,
        object: /\w+(?=\s*\{)/,
        punctuation: /[!(){}\[\]:=,]/,
        property: /\w+/
      };
      Prism.hooks.add("after-tokenize", function afterTokenizeGraphql(env) {
        if (env.language !== "graphql") {
          return;
        }
        var validTokens = env.tokens.filter(function(token) {
          return typeof token !== "string" && token.type !== "comment" && token.type !== "scalar";
        });
        var currentIndex = 0;
        function getToken(offset2) {
          return validTokens[currentIndex + offset2];
        }
        function isTokenType(types, offset2) {
          offset2 = offset2 || 0;
          for (var i2 = 0; i2 < types.length; i2++) {
            var token = getToken(i2 + offset2);
            if (!token || token.type !== types[i2]) {
              return false;
            }
          }
          return true;
        }
        function findClosingBracket(open, close) {
          var stackHeight = 1;
          for (var i2 = currentIndex; i2 < validTokens.length; i2++) {
            var token = validTokens[i2];
            var content = token.content;
            if (token.type === "punctuation" && typeof content === "string") {
              if (open.test(content)) {
                stackHeight++;
              } else if (close.test(content)) {
                stackHeight--;
                if (stackHeight === 0) {
                  return i2;
                }
              }
            }
          }
          return -1;
        }
        function addAlias(token, alias) {
          var aliases = token.alias;
          if (!aliases) {
            token.alias = aliases = [];
          } else if (!Array.isArray(aliases)) {
            token.alias = aliases = [aliases];
          }
          aliases.push(alias);
        }
        for (; currentIndex < validTokens.length; ) {
          var startToken = validTokens[currentIndex++];
          if (startToken.type === "keyword" && startToken.content === "mutation") {
            var inputVariables = [];
            if (isTokenType(["definition-mutation", "punctuation"]) && getToken(1).content === "(") {
              currentIndex += 2;
              var definitionEnd = findClosingBracket(/^\($/, /^\)$/);
              if (definitionEnd === -1) {
                continue;
              }
              for (; currentIndex < definitionEnd; currentIndex++) {
                var t = getToken(0);
                if (t.type === "variable") {
                  addAlias(t, "variable-input");
                  inputVariables.push(t.content);
                }
              }
              currentIndex = definitionEnd + 1;
            }
            if (isTokenType(["punctuation", "property-query"]) && getToken(0).content === "{") {
              currentIndex++;
              addAlias(getToken(0), "property-mutation");
              if (inputVariables.length > 0) {
                var mutationEnd = findClosingBracket(/^\{$/, /^\}$/);
                if (mutationEnd === -1) {
                  continue;
                }
                for (var i = currentIndex; i < mutationEnd; i++) {
                  var varToken = validTokens[i];
                  if (varToken.type === "variable" && inputVariables.indexOf(varToken.content) >= 0) {
                    addAlias(varToken, "variable-input");
                  }
                }
              }
            }
          }
        }
      });
    }
  }
});

// ../../node_modules/react-syntax-highlighter/dist/esm/languages/prism/graphql.js
var import_graphql, graphql_default;
var init_graphql = __esm({
  "../../node_modules/react-syntax-highlighter/dist/esm/languages/prism/graphql.js"() {
    import_graphql = __toESM(require_graphql());
    graphql_default = import_graphql.default;
  }
});

// ../../node_modules/refractor/lang/markup.js
var require_markup = __commonJS({
  "../../node_modules/refractor/lang/markup.js"(exports, module2) {
    "use strict";
    module2.exports = markup2;
    markup2.displayName = "markup";
    markup2.aliases = ["html", "mathml", "svg", "xml", "ssml", "atom", "rss"];
    function markup2(Prism) {
      Prism.languages.markup = {
        comment: {
          pattern: /<!--(?:(?!<!--)[\s\S])*?-->/,
          greedy: true
        },
        prolog: {
          pattern: /<\?[\s\S]+?\?>/,
          greedy: true
        },
        doctype: {
          pattern: /<!DOCTYPE(?:[^>"'[\]]|"[^"]*"|'[^']*')+(?:\[(?:[^<"'\]]|"[^"]*"|'[^']*'|<(?!!--)|<!--(?:[^-]|-(?!->))*-->)*\]\s*)?>/i,
          greedy: true,
          inside: {
            "internal-subset": {
              pattern: /(^[^\[]*\[)[\s\S]+(?=\]>$)/,
              lookbehind: true,
              greedy: true,
              inside: null
            },
            string: {
              pattern: /"[^"]*"|'[^']*'/,
              greedy: true
            },
            punctuation: /^<!|>$|[[\]]/,
            "doctype-tag": /^DOCTYPE/i,
            name: /[^\s<>'"]+/
          }
        },
        cdata: {
          pattern: /<!\[CDATA\[[\s\S]*?\]\]>/i,
          greedy: true
        },
        tag: {
          pattern: /<\/?(?!\d)[^\s>\/=$<%]+(?:\s(?:\s*[^\s>\/=]+(?:\s*=\s*(?:"[^"]*"|'[^']*'|[^\s'">=]+(?=[\s>]))|(?=[\s/>])))+)?\s*\/?>/,
          greedy: true,
          inside: {
            tag: {
              pattern: /^<\/?[^\s>\/]+/,
              inside: {
                punctuation: /^<\/?/,
                namespace: /^[^\s>\/:]+:/
              }
            },
            "special-attr": [],
            "attr-value": {
              pattern: /=\s*(?:"[^"]*"|'[^']*'|[^\s'">=]+)/,
              inside: {
                punctuation: [
                  {
                    pattern: /^=/,
                    alias: "attr-equals"
                  },
                  /"|'/
                ]
              }
            },
            punctuation: /\/?>/,
            "attr-name": {
              pattern: /[^\s>\/]+/,
              inside: {
                namespace: /^[^\s>\/:]+:/
              }
            }
          }
        },
        entity: [
          {
            pattern: /&[\da-z]{1,8};/i,
            alias: "named-entity"
          },
          /&#x?[\da-f]{1,8};/i
        ]
      };
      Prism.languages.markup["tag"].inside["attr-value"].inside["entity"] = Prism.languages.markup["entity"];
      Prism.languages.markup["doctype"].inside["internal-subset"].inside = Prism.languages.markup;
      Prism.hooks.add("wrap", function(env) {
        if (env.type === "entity") {
          env.attributes["title"] = env.content.value.replace(/&amp;/, "&");
        }
      });
      Object.defineProperty(Prism.languages.markup.tag, "addInlined", {
        value: function addInlined(tagName, lang) {
          var includedCdataInside = {};
          includedCdataInside["language-" + lang] = {
            pattern: /(^<!\[CDATA\[)[\s\S]+?(?=\]\]>$)/i,
            lookbehind: true,
            inside: Prism.languages[lang]
          };
          includedCdataInside["cdata"] = /^<!\[CDATA\[|\]\]>$/i;
          var inside = {
            "included-cdata": {
              pattern: /<!\[CDATA\[[\s\S]*?\]\]>/i,
              inside: includedCdataInside
            }
          };
          inside["language-" + lang] = {
            pattern: /[\s\S]+/,
            inside: Prism.languages[lang]
          };
          var def = {};
          def[tagName] = {
            pattern: RegExp(
              /(<__[^>]*>)(?:<!\[CDATA\[(?:[^\]]|\](?!\]>))*\]\]>|(?!<!\[CDATA\[)[\s\S])*?(?=<\/__>)/.source.replace(
                /__/g,
                function() {
                  return tagName;
                }
              ),
              "i"
            ),
            lookbehind: true,
            greedy: true,
            inside
          };
          Prism.languages.insertBefore("markup", "cdata", def);
        }
      });
      Object.defineProperty(Prism.languages.markup.tag, "addAttribute", {
        value: function(attrName, lang) {
          Prism.languages.markup.tag.inside["special-attr"].push({
            pattern: RegExp(
              /(^|["'\s])/.source + "(?:" + attrName + ")" + /\s*=\s*(?:"[^"]*"|'[^']*'|[^\s'">=]+(?=[\s>]))/.source,
              "i"
            ),
            lookbehind: true,
            inside: {
              "attr-name": /^[^\s=]+/,
              "attr-value": {
                pattern: /=[\s\S]+/,
                inside: {
                  value: {
                    pattern: /(^=\s*(["']|(?!["'])))\S[\s\S]*(?=\2$)/,
                    lookbehind: true,
                    alias: [lang, "language-" + lang],
                    inside: Prism.languages[lang]
                  },
                  punctuation: [
                    {
                      pattern: /^=/,
                      alias: "attr-equals"
                    },
                    /"|'/
                  ]
                }
              }
            }
          });
        }
      });
      Prism.languages.html = Prism.languages.markup;
      Prism.languages.mathml = Prism.languages.markup;
      Prism.languages.svg = Prism.languages.markup;
      Prism.languages.xml = Prism.languages.extend("markup", {});
      Prism.languages.ssml = Prism.languages.xml;
      Prism.languages.atom = Prism.languages.xml;
      Prism.languages.rss = Prism.languages.xml;
    }
  }
});

// ../../node_modules/react-syntax-highlighter/dist/esm/languages/prism/markup.js
var import_markup, markup_default;
var init_markup = __esm({
  "../../node_modules/react-syntax-highlighter/dist/esm/languages/prism/markup.js"() {
    import_markup = __toESM(require_markup());
    markup_default = import_markup.default;
  }
});

// ../../node_modules/refractor/lang/markdown.js
var require_markdown = __commonJS({
  "../../node_modules/refractor/lang/markdown.js"(exports, module2) {
    "use strict";
    module2.exports = markdown2;
    markdown2.displayName = "markdown";
    markdown2.aliases = ["md"];
    function markdown2(Prism) {
      ;
      (function(Prism2) {
        var inner = /(?:\\.|[^\\\n\r]|(?:\n|\r\n?)(?![\r\n]))/.source;
        function createInline(pattern) {
          pattern = pattern.replace(/<inner>/g, function() {
            return inner;
          });
          return RegExp(/((?:^|[^\\])(?:\\{2})*)/.source + "(?:" + pattern + ")");
        }
        var tableCell = /(?:\\.|``(?:[^`\r\n]|`(?!`))+``|`[^`\r\n]+`|[^\\|\r\n`])+/.source;
        var tableRow = /\|?__(?:\|__)+\|?(?:(?:\n|\r\n?)|(?![\s\S]))/.source.replace(
          /__/g,
          function() {
            return tableCell;
          }
        );
        var tableLine = /\|?[ \t]*:?-{3,}:?[ \t]*(?:\|[ \t]*:?-{3,}:?[ \t]*)+\|?(?:\n|\r\n?)/.source;
        Prism2.languages.markdown = Prism2.languages.extend("markup", {});
        Prism2.languages.insertBefore("markdown", "prolog", {
          "front-matter-block": {
            pattern: /(^(?:\s*[\r\n])?)---(?!.)[\s\S]*?[\r\n]---(?!.)/,
            lookbehind: true,
            greedy: true,
            inside: {
              punctuation: /^---|---$/,
              "front-matter": {
                pattern: /\S+(?:\s+\S+)*/,
                alias: ["yaml", "language-yaml"],
                inside: Prism2.languages.yaml
              }
            }
          },
          blockquote: {
            pattern: /^>(?:[\t ]*>)*/m,
            alias: "punctuation"
          },
          table: {
            pattern: RegExp(
              "^" + tableRow + tableLine + "(?:" + tableRow + ")*",
              "m"
            ),
            inside: {
              "table-data-rows": {
                pattern: RegExp(
                  "^(" + tableRow + tableLine + ")(?:" + tableRow + ")*$"
                ),
                lookbehind: true,
                inside: {
                  "table-data": {
                    pattern: RegExp(tableCell),
                    inside: Prism2.languages.markdown
                  },
                  punctuation: /\|/
                }
              },
              "table-line": {
                pattern: RegExp("^(" + tableRow + ")" + tableLine + "$"),
                lookbehind: true,
                inside: {
                  punctuation: /\||:?-{3,}:?/
                }
              },
              "table-header-row": {
                pattern: RegExp("^" + tableRow + "$"),
                inside: {
                  "table-header": {
                    pattern: RegExp(tableCell),
                    alias: "important",
                    inside: Prism2.languages.markdown
                  },
                  punctuation: /\|/
                }
              }
            }
          },
          code: [
            {
              pattern: /((?:^|\n)[ \t]*\n|(?:^|\r\n?)[ \t]*\r\n?)(?: {4}|\t).+(?:(?:\n|\r\n?)(?: {4}|\t).+)*/,
              lookbehind: true,
              alias: "keyword"
            },
            {
              pattern: /^```[\s\S]*?^```$/m,
              greedy: true,
              inside: {
                "code-block": {
                  pattern: /^(```.*(?:\n|\r\n?))[\s\S]+?(?=(?:\n|\r\n?)^```$)/m,
                  lookbehind: true
                },
                "code-language": {
                  pattern: /^(```).+/,
                  lookbehind: true
                },
                punctuation: /```/
              }
            }
          ],
          title: [
            {
              pattern: /\S.*(?:\n|\r\n?)(?:==+|--+)(?=[ \t]*$)/m,
              alias: "important",
              inside: {
                punctuation: /==+$|--+$/
              }
            },
            {
              pattern: /(^\s*)#.+/m,
              lookbehind: true,
              alias: "important",
              inside: {
                punctuation: /^#+|#+$/
              }
            }
          ],
          hr: {
            pattern: /(^\s*)([*-])(?:[\t ]*\2){2,}(?=\s*$)/m,
            lookbehind: true,
            alias: "punctuation"
          },
          list: {
            pattern: /(^\s*)(?:[*+-]|\d+\.)(?=[\t ].)/m,
            lookbehind: true,
            alias: "punctuation"
          },
          "url-reference": {
            pattern: /!?\[[^\]]+\]:[\t ]+(?:\S+|<(?:\\.|[^>\\])+>)(?:[\t ]+(?:"(?:\\.|[^"\\])*"|'(?:\\.|[^'\\])*'|\((?:\\.|[^)\\])*\)))?/,
            inside: {
              variable: {
                pattern: /^(!?\[)[^\]]+/,
                lookbehind: true
              },
              string: /(?:"(?:\\.|[^"\\])*"|'(?:\\.|[^'\\])*'|\((?:\\.|[^)\\])*\))$/,
              punctuation: /^[\[\]!:]|[<>]/
            },
            alias: "url"
          },
          bold: {
            pattern: createInline(
              /\b__(?:(?!_)<inner>|_(?:(?!_)<inner>)+_)+__\b|\*\*(?:(?!\*)<inner>|\*(?:(?!\*)<inner>)+\*)+\*\*/.source
            ),
            lookbehind: true,
            greedy: true,
            inside: {
              content: {
                pattern: /(^..)[\s\S]+(?=..$)/,
                lookbehind: true,
                inside: {}
              },
              punctuation: /\*\*|__/
            }
          },
          italic: {
            pattern: createInline(
              /\b_(?:(?!_)<inner>|__(?:(?!_)<inner>)+__)+_\b|\*(?:(?!\*)<inner>|\*\*(?:(?!\*)<inner>)+\*\*)+\*/.source
            ),
            lookbehind: true,
            greedy: true,
            inside: {
              content: {
                pattern: /(^.)[\s\S]+(?=.$)/,
                lookbehind: true,
                inside: {}
              },
              punctuation: /[*_]/
            }
          },
          strike: {
            pattern: createInline(/(~~?)(?:(?!~)<inner>)+\2/.source),
            lookbehind: true,
            greedy: true,
            inside: {
              content: {
                pattern: /(^~~?)[\s\S]+(?=\1$)/,
                lookbehind: true,
                inside: {}
              },
              punctuation: /~~?/
            }
          },
          "code-snippet": {
            pattern: /(^|[^\\`])(?:``[^`\r\n]+(?:`[^`\r\n]+)*``(?!`)|`[^`\r\n]+`(?!`))/,
            lookbehind: true,
            greedy: true,
            alias: ["code", "keyword"]
          },
          url: {
            pattern: createInline(
              /!?\[(?:(?!\])<inner>)+\](?:\([^\s)]+(?:[\t ]+"(?:\\.|[^"\\])*")?\)|[ \t]?\[(?:(?!\])<inner>)+\])/.source
            ),
            lookbehind: true,
            greedy: true,
            inside: {
              operator: /^!/,
              content: {
                pattern: /(^\[)[^\]]+(?=\])/,
                lookbehind: true,
                inside: {}
              },
              variable: {
                pattern: /(^\][ \t]?\[)[^\]]+(?=\]$)/,
                lookbehind: true
              },
              url: {
                pattern: /(^\]\()[^\s)]+/,
                lookbehind: true
              },
              string: {
                pattern: /(^[ \t]+)"(?:\\.|[^"\\])*"(?=\)$)/,
                lookbehind: true
              }
            }
          }
        });
        ["url", "bold", "italic", "strike"].forEach(function(token) {
          ;
          ["url", "bold", "italic", "strike", "code-snippet"].forEach(function(inside) {
            if (token !== inside) {
              Prism2.languages.markdown[token].inside.content.inside[inside] = Prism2.languages.markdown[inside];
            }
          });
        });
        Prism2.hooks.add("after-tokenize", function(env) {
          if (env.language !== "markdown" && env.language !== "md") {
            return;
          }
          function walkTokens(tokens) {
            if (!tokens || typeof tokens === "string") {
              return;
            }
            for (var i = 0, l = tokens.length; i < l; i++) {
              var token = tokens[i];
              if (token.type !== "code") {
                walkTokens(token.content);
                continue;
              }
              var codeLang = token.content[1];
              var codeBlock = token.content[3];
              if (codeLang && codeBlock && codeLang.type === "code-language" && codeBlock.type === "code-block" && typeof codeLang.content === "string") {
                var lang = codeLang.content.replace(/\b#/g, "sharp").replace(/\b\+\+/g, "pp");
                lang = (/[a-z][\w-]*/i.exec(lang) || [""])[0].toLowerCase();
                var alias = "language-" + lang;
                if (!codeBlock.alias) {
                  codeBlock.alias = [alias];
                } else if (typeof codeBlock.alias === "string") {
                  codeBlock.alias = [codeBlock.alias, alias];
                } else {
                  codeBlock.alias.push(alias);
                }
              }
            }
          }
          walkTokens(env.tokens);
        });
        Prism2.hooks.add("wrap", function(env) {
          if (env.type !== "code-block") {
            return;
          }
          var codeLang = "";
          for (var i = 0, l = env.classes.length; i < l; i++) {
            var cls = env.classes[i];
            var match2 = /language-(.+)/.exec(cls);
            if (match2) {
              codeLang = match2[1];
              break;
            }
          }
          var grammar = Prism2.languages[codeLang];
          if (!grammar) {
            if (codeLang && codeLang !== "none" && Prism2.plugins.autoloader) {
              var id = "md-" + new Date().valueOf() + "-" + Math.floor(Math.random() * 1e16);
              env.attributes["id"] = id;
              Prism2.plugins.autoloader.loadLanguages(codeLang, function() {
                var ele = document.getElementById(id);
                if (ele) {
                  ele.innerHTML = Prism2.highlight(
                    ele.textContent,
                    Prism2.languages[codeLang],
                    codeLang
                  );
                }
              });
            }
          } else {
            env.content = Prism2.highlight(
              textContent(env.content.value),
              grammar,
              codeLang
            );
          }
        });
        var tagPattern = RegExp(Prism2.languages.markup.tag.pattern.source, "gi");
        var KNOWN_ENTITY_NAMES = {
          amp: "&",
          lt: "<",
          gt: ">",
          quot: '"'
        };
        var fromCodePoint = String.fromCodePoint || String.fromCharCode;
        function textContent(html) {
          var text = html.replace(tagPattern, "");
          text = text.replace(/&(\w{1,8}|#x?[\da-f]{1,8});/gi, function(m, code) {
            code = code.toLowerCase();
            if (code[0] === "#") {
              var value;
              if (code[1] === "x") {
                value = parseInt(code.slice(2), 16);
              } else {
                value = Number(code.slice(1));
              }
              return fromCodePoint(value);
            } else {
              var known = KNOWN_ENTITY_NAMES[code];
              if (known) {
                return known;
              }
              return m;
            }
          });
          return text;
        }
        Prism2.languages.md = Prism2.languages.markdown;
      })(Prism);
    }
  }
});

// ../../node_modules/react-syntax-highlighter/dist/esm/languages/prism/markdown.js
var import_markdown, markdown_default;
var init_markdown = __esm({
  "../../node_modules/react-syntax-highlighter/dist/esm/languages/prism/markdown.js"() {
    import_markdown = __toESM(require_markdown());
    markdown_default = import_markdown.default;
  }
});

// ../../node_modules/refractor/lang/yaml.js
var require_yaml = __commonJS({
  "../../node_modules/refractor/lang/yaml.js"(exports, module2) {
    "use strict";
    module2.exports = yaml2;
    yaml2.displayName = "yaml";
    yaml2.aliases = ["yml"];
    function yaml2(Prism) {
      ;
      (function(Prism2) {
        var anchorOrAlias = /[*&][^\s[\]{},]+/;
        var tag = /!(?:<[\w\-%#;/?:@&=+$,.!~*'()[\]]+>|(?:[a-zA-Z\d-]*!)?[\w\-%#;/?:@&=+$.~*'()]+)?/;
        var properties = "(?:" + tag.source + "(?:[ 	]+" + anchorOrAlias.source + ")?|" + anchorOrAlias.source + "(?:[ 	]+" + tag.source + ")?)";
        var plainKey = /(?:[^\s\x00-\x08\x0e-\x1f!"#%&'*,\-:>?@[\]`{|}\x7f-\x84\x86-\x9f\ud800-\udfff\ufffe\uffff]|[?:-]<PLAIN>)(?:[ \t]*(?:(?![#:])<PLAIN>|:<PLAIN>))*/.source.replace(
          /<PLAIN>/g,
          function() {
            return /[^\s\x00-\x08\x0e-\x1f,[\]{}\x7f-\x84\x86-\x9f\ud800-\udfff\ufffe\uffff]/.source;
          }
        );
        var string = /"(?:[^"\\\r\n]|\\.)*"|'(?:[^'\\\r\n]|\\.)*'/.source;
        function createValuePattern(value, flags) {
          flags = (flags || "").replace(/m/g, "") + "m";
          var pattern = /([:\-,[{]\s*(?:\s<<prop>>[ \t]+)?)(?:<<value>>)(?=[ \t]*(?:$|,|\]|\}|(?:[\r\n]\s*)?#))/.source.replace(/<<prop>>/g, function() {
            return properties;
          }).replace(/<<value>>/g, function() {
            return value;
          });
          return RegExp(pattern, flags);
        }
        Prism2.languages.yaml = {
          scalar: {
            pattern: RegExp(
              /([\-:]\s*(?:\s<<prop>>[ \t]+)?[|>])[ \t]*(?:((?:\r?\n|\r)[ \t]+)\S[^\r\n]*(?:\2[^\r\n]+)*)/.source.replace(
                /<<prop>>/g,
                function() {
                  return properties;
                }
              )
            ),
            lookbehind: true,
            alias: "string"
          },
          comment: /#.*/,
          key: {
            pattern: RegExp(
              /((?:^|[:\-,[{\r\n?])[ \t]*(?:<<prop>>[ \t]+)?)<<key>>(?=\s*:\s)/.source.replace(/<<prop>>/g, function() {
                return properties;
              }).replace(/<<key>>/g, function() {
                return "(?:" + plainKey + "|" + string + ")";
              })
            ),
            lookbehind: true,
            greedy: true,
            alias: "atrule"
          },
          directive: {
            pattern: /(^[ \t]*)%.+/m,
            lookbehind: true,
            alias: "important"
          },
          datetime: {
            pattern: createValuePattern(
              /\d{4}-\d\d?-\d\d?(?:[tT]|[ \t]+)\d\d?:\d{2}:\d{2}(?:\.\d*)?(?:[ \t]*(?:Z|[-+]\d\d?(?::\d{2})?))?|\d{4}-\d{2}-\d{2}|\d\d?:\d{2}(?::\d{2}(?:\.\d*)?)?/.source
            ),
            lookbehind: true,
            alias: "number"
          },
          boolean: {
            pattern: createValuePattern(/false|true/.source, "i"),
            lookbehind: true,
            alias: "important"
          },
          null: {
            pattern: createValuePattern(/null|~/.source, "i"),
            lookbehind: true,
            alias: "important"
          },
          string: {
            pattern: createValuePattern(string),
            lookbehind: true,
            greedy: true
          },
          number: {
            pattern: createValuePattern(
              /[+-]?(?:0x[\da-f]+|0o[0-7]+|(?:\d+(?:\.\d*)?|\.\d+)(?:e[+-]?\d+)?|\.inf|\.nan)/.source,
              "i"
            ),
            lookbehind: true
          },
          tag,
          important: anchorOrAlias,
          punctuation: /---|[:[\]{}\-,|>?]|\.\.\./
        };
        Prism2.languages.yml = Prism2.languages.yaml;
      })(Prism);
    }
  }
});

// ../../node_modules/react-syntax-highlighter/dist/esm/languages/prism/yaml.js
var import_yaml, yaml_default;
var init_yaml = __esm({
  "../../node_modules/react-syntax-highlighter/dist/esm/languages/prism/yaml.js"() {
    import_yaml = __toESM(require_yaml());
    yaml_default = import_yaml.default;
  }
});

// ../../node_modules/refractor/lang/typescript.js
var require_typescript = __commonJS({
  "../../node_modules/refractor/lang/typescript.js"(exports, module2) {
    "use strict";
    module2.exports = typescript2;
    typescript2.displayName = "typescript";
    typescript2.aliases = ["ts"];
    function typescript2(Prism) {
      ;
      (function(Prism2) {
        Prism2.languages.typescript = Prism2.languages.extend("javascript", {
          "class-name": {
            pattern: /(\b(?:class|extends|implements|instanceof|interface|new|type)\s+)(?!keyof\b)(?!\s)[_$a-zA-Z\xA0-\uFFFF](?:(?!\s)[$\w\xA0-\uFFFF])*(?:\s*<(?:[^<>]|<(?:[^<>]|<[^<>]*>)*>)*>)?/,
            lookbehind: true,
            greedy: true,
            inside: null
          },
          builtin: /\b(?:Array|Function|Promise|any|boolean|console|never|number|string|symbol|unknown)\b/
        });
        Prism2.languages.typescript.keyword.push(
          /\b(?:abstract|declare|is|keyof|readonly|require)\b/,
          /\b(?:asserts|infer|interface|module|namespace|type)\b(?=\s*(?:[{_$a-zA-Z\xA0-\uFFFF]|$))/,
          /\btype\b(?=\s*(?:[\{*]|$))/
        );
        delete Prism2.languages.typescript["parameter"];
        delete Prism2.languages.typescript["literal-property"];
        var typeInside = Prism2.languages.extend("typescript", {});
        delete typeInside["class-name"];
        Prism2.languages.typescript["class-name"].inside = typeInside;
        Prism2.languages.insertBefore("typescript", "function", {
          decorator: {
            pattern: /@[$\w\xA0-\uFFFF]+/,
            inside: {
              at: {
                pattern: /^@/,
                alias: "operator"
              },
              function: /^[\s\S]+/
            }
          },
          "generic-function": {
            pattern: /#?(?!\s)[_$a-zA-Z\xA0-\uFFFF](?:(?!\s)[$\w\xA0-\uFFFF])*\s*<(?:[^<>]|<(?:[^<>]|<[^<>]*>)*>)*>(?=\s*\()/,
            greedy: true,
            inside: {
              function: /^#?(?!\s)[_$a-zA-Z\xA0-\uFFFF](?:(?!\s)[$\w\xA0-\uFFFF])*/,
              generic: {
                pattern: /<[\s\S]+/,
                alias: "class-name",
                inside: typeInside
              }
            }
          }
        });
        Prism2.languages.ts = Prism2.languages.typescript;
      })(Prism);
    }
  }
});

// ../../node_modules/refractor/lang/tsx.js
var require_tsx = __commonJS({
  "../../node_modules/refractor/lang/tsx.js"(exports, module2) {
    "use strict";
    var refractorJsx = require_jsx();
    var refractorTypescript = require_typescript();
    module2.exports = tsx2;
    tsx2.displayName = "tsx";
    tsx2.aliases = [];
    function tsx2(Prism) {
      Prism.register(refractorJsx);
      Prism.register(refractorTypescript);
      (function(Prism2) {
        var typescript2 = Prism2.util.clone(Prism2.languages.typescript);
        Prism2.languages.tsx = Prism2.languages.extend("jsx", typescript2);
        delete Prism2.languages.tsx["parameter"];
        delete Prism2.languages.tsx["literal-property"];
        var tag = Prism2.languages.tsx.tag;
        tag.pattern = RegExp(
          /(^|[^\w$]|(?=<\/))/.source + "(?:" + tag.pattern.source + ")",
          tag.pattern.flags
        );
        tag.lookbehind = true;
      })(Prism);
    }
  }
});

// ../../node_modules/react-syntax-highlighter/dist/esm/languages/prism/tsx.js
var import_tsx, tsx_default;
var init_tsx = __esm({
  "../../node_modules/react-syntax-highlighter/dist/esm/languages/prism/tsx.js"() {
    import_tsx = __toESM(require_tsx());
    tsx_default = import_tsx.default;
  }
});

// ../../node_modules/react-syntax-highlighter/dist/esm/languages/prism/typescript.js
var import_typescript, typescript_default;
var init_typescript = __esm({
  "../../node_modules/react-syntax-highlighter/dist/esm/languages/prism/typescript.js"() {
    import_typescript = __toESM(require_typescript());
    typescript_default = import_typescript.default;
  }
});

// ../../node_modules/@babel/runtime/helpers/objectWithoutPropertiesLoose.js
var require_objectWithoutPropertiesLoose = __commonJS({
  "../../node_modules/@babel/runtime/helpers/objectWithoutPropertiesLoose.js"(exports, module2) {
    function _objectWithoutPropertiesLoose2(source, excluded) {
      if (source == null)
        return {};
      var target = {};
      var sourceKeys = Object.keys(source);
      var key, i;
      for (i = 0; i < sourceKeys.length; i++) {
        key = sourceKeys[i];
        if (excluded.indexOf(key) >= 0)
          continue;
        target[key] = source[key];
      }
      return target;
    }
    module2.exports = _objectWithoutPropertiesLoose2, module2.exports.__esModule = true, module2.exports["default"] = module2.exports;
  }
});

// ../../node_modules/@babel/runtime/helpers/objectWithoutProperties.js
var require_objectWithoutProperties = __commonJS({
  "../../node_modules/@babel/runtime/helpers/objectWithoutProperties.js"(exports, module2) {
    var objectWithoutPropertiesLoose = require_objectWithoutPropertiesLoose();
    function _objectWithoutProperties2(source, excluded) {
      if (source == null)
        return {};
      var target = objectWithoutPropertiesLoose(source, excluded);
      var key, i;
      if (Object.getOwnPropertySymbols) {
        var sourceSymbolKeys = Object.getOwnPropertySymbols(source);
        for (i = 0; i < sourceSymbolKeys.length; i++) {
          key = sourceSymbolKeys[i];
          if (excluded.indexOf(key) >= 0)
            continue;
          if (!Object.prototype.propertyIsEnumerable.call(source, key))
            continue;
          target[key] = source[key];
        }
      }
      return target;
    }
    module2.exports = _objectWithoutProperties2, module2.exports.__esModule = true, module2.exports["default"] = module2.exports;
  }
});

// ../../node_modules/@babel/runtime/helpers/arrayLikeToArray.js
var require_arrayLikeToArray = __commonJS({
  "../../node_modules/@babel/runtime/helpers/arrayLikeToArray.js"(exports, module2) {
    function _arrayLikeToArray(arr, len) {
      if (len == null || len > arr.length)
        len = arr.length;
      for (var i = 0, arr2 = new Array(len); i < len; i++) {
        arr2[i] = arr[i];
      }
      return arr2;
    }
    module2.exports = _arrayLikeToArray, module2.exports.__esModule = true, module2.exports["default"] = module2.exports;
  }
});

// ../../node_modules/@babel/runtime/helpers/arrayWithoutHoles.js
var require_arrayWithoutHoles = __commonJS({
  "../../node_modules/@babel/runtime/helpers/arrayWithoutHoles.js"(exports, module2) {
    var arrayLikeToArray = require_arrayLikeToArray();
    function _arrayWithoutHoles(arr) {
      if (Array.isArray(arr))
        return arrayLikeToArray(arr);
    }
    module2.exports = _arrayWithoutHoles, module2.exports.__esModule = true, module2.exports["default"] = module2.exports;
  }
});

// ../../node_modules/@babel/runtime/helpers/iterableToArray.js
var require_iterableToArray = __commonJS({
  "../../node_modules/@babel/runtime/helpers/iterableToArray.js"(exports, module2) {
    function _iterableToArray(iter) {
      if (typeof Symbol !== "undefined" && iter[Symbol.iterator] != null || iter["@@iterator"] != null)
        return Array.from(iter);
    }
    module2.exports = _iterableToArray, module2.exports.__esModule = true, module2.exports["default"] = module2.exports;
  }
});

// ../../node_modules/@babel/runtime/helpers/unsupportedIterableToArray.js
var require_unsupportedIterableToArray = __commonJS({
  "../../node_modules/@babel/runtime/helpers/unsupportedIterableToArray.js"(exports, module2) {
    var arrayLikeToArray = require_arrayLikeToArray();
    function _unsupportedIterableToArray(o, minLen) {
      if (!o)
        return;
      if (typeof o === "string")
        return arrayLikeToArray(o, minLen);
      var n = Object.prototype.toString.call(o).slice(8, -1);
      if (n === "Object" && o.constructor)
        n = o.constructor.name;
      if (n === "Map" || n === "Set")
        return Array.from(o);
      if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))
        return arrayLikeToArray(o, minLen);
    }
    module2.exports = _unsupportedIterableToArray, module2.exports.__esModule = true, module2.exports["default"] = module2.exports;
  }
});

// ../../node_modules/@babel/runtime/helpers/nonIterableSpread.js
var require_nonIterableSpread = __commonJS({
  "../../node_modules/@babel/runtime/helpers/nonIterableSpread.js"(exports, module2) {
    function _nonIterableSpread() {
      throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
    }
    module2.exports = _nonIterableSpread, module2.exports.__esModule = true, module2.exports["default"] = module2.exports;
  }
});

// ../../node_modules/@babel/runtime/helpers/toConsumableArray.js
var require_toConsumableArray = __commonJS({
  "../../node_modules/@babel/runtime/helpers/toConsumableArray.js"(exports, module2) {
    var arrayWithoutHoles = require_arrayWithoutHoles();
    var iterableToArray = require_iterableToArray();
    var unsupportedIterableToArray = require_unsupportedIterableToArray();
    var nonIterableSpread = require_nonIterableSpread();
    function _toConsumableArray2(arr) {
      return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();
    }
    module2.exports = _toConsumableArray2, module2.exports.__esModule = true, module2.exports["default"] = module2.exports;
  }
});

// ../../node_modules/@babel/runtime/helpers/defineProperty.js
var require_defineProperty = __commonJS({
  "../../node_modules/@babel/runtime/helpers/defineProperty.js"(exports, module2) {
    function _defineProperty3(obj, key, value) {
      if (key in obj) {
        Object.defineProperty(obj, key, {
          value,
          enumerable: true,
          configurable: true,
          writable: true
        });
      } else {
        obj[key] = value;
      }
      return obj;
    }
    module2.exports = _defineProperty3, module2.exports.__esModule = true, module2.exports["default"] = module2.exports;
  }
});

// ../../node_modules/@babel/runtime/helpers/extends.js
var require_extends = __commonJS({
  "../../node_modules/@babel/runtime/helpers/extends.js"(exports, module2) {
    function _extends3() {
      module2.exports = _extends3 = Object.assign ? Object.assign.bind() : function(target) {
        for (var i = 1; i < arguments.length; i++) {
          var source = arguments[i];
          for (var key in source) {
            if (Object.prototype.hasOwnProperty.call(source, key)) {
              target[key] = source[key];
            }
          }
        }
        return target;
      }, module2.exports.__esModule = true, module2.exports["default"] = module2.exports;
      return _extends3.apply(this, arguments);
    }
    module2.exports = _extends3, module2.exports.__esModule = true, module2.exports["default"] = module2.exports;
  }
});

// ../../node_modules/react-syntax-highlighter/dist/esm/create-element.js
function ownKeys(object, enumerableOnly) {
  var keys = Object.keys(object);
  if (Object.getOwnPropertySymbols) {
    var symbols = Object.getOwnPropertySymbols(object);
    enumerableOnly && (symbols = symbols.filter(function(sym) {
      return Object.getOwnPropertyDescriptor(object, sym).enumerable;
    })), keys.push.apply(keys, symbols);
  }
  return keys;
}
function _objectSpread(target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = null != arguments[i] ? arguments[i] : {};
    i % 2 ? ownKeys(Object(source), true).forEach(function(key) {
      (0, import_defineProperty.default)(target, key, source[key]);
    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function(key) {
      Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
    });
  }
  return target;
}
function powerSetPermutations(arr) {
  var arrLength = arr.length;
  if (arrLength === 0 || arrLength === 1)
    return arr;
  if (arrLength === 2) {
    return [arr[0], arr[1], "".concat(arr[0], ".").concat(arr[1]), "".concat(arr[1], ".").concat(arr[0])];
  }
  if (arrLength === 3) {
    return [arr[0], arr[1], arr[2], "".concat(arr[0], ".").concat(arr[1]), "".concat(arr[0], ".").concat(arr[2]), "".concat(arr[1], ".").concat(arr[0]), "".concat(arr[1], ".").concat(arr[2]), "".concat(arr[2], ".").concat(arr[0]), "".concat(arr[2], ".").concat(arr[1]), "".concat(arr[0], ".").concat(arr[1], ".").concat(arr[2]), "".concat(arr[0], ".").concat(arr[2], ".").concat(arr[1]), "".concat(arr[1], ".").concat(arr[0], ".").concat(arr[2]), "".concat(arr[1], ".").concat(arr[2], ".").concat(arr[0]), "".concat(arr[2], ".").concat(arr[0], ".").concat(arr[1]), "".concat(arr[2], ".").concat(arr[1], ".").concat(arr[0])];
  }
  if (arrLength >= 4) {
    return [arr[0], arr[1], arr[2], arr[3], "".concat(arr[0], ".").concat(arr[1]), "".concat(arr[0], ".").concat(arr[2]), "".concat(arr[0], ".").concat(arr[3]), "".concat(arr[1], ".").concat(arr[0]), "".concat(arr[1], ".").concat(arr[2]), "".concat(arr[1], ".").concat(arr[3]), "".concat(arr[2], ".").concat(arr[0]), "".concat(arr[2], ".").concat(arr[1]), "".concat(arr[2], ".").concat(arr[3]), "".concat(arr[3], ".").concat(arr[0]), "".concat(arr[3], ".").concat(arr[1]), "".concat(arr[3], ".").concat(arr[2]), "".concat(arr[0], ".").concat(arr[1], ".").concat(arr[2]), "".concat(arr[0], ".").concat(arr[1], ".").concat(arr[3]), "".concat(arr[0], ".").concat(arr[2], ".").concat(arr[1]), "".concat(arr[0], ".").concat(arr[2], ".").concat(arr[3]), "".concat(arr[0], ".").concat(arr[3], ".").concat(arr[1]), "".concat(arr[0], ".").concat(arr[3], ".").concat(arr[2]), "".concat(arr[1], ".").concat(arr[0], ".").concat(arr[2]), "".concat(arr[1], ".").concat(arr[0], ".").concat(arr[3]), "".concat(arr[1], ".").concat(arr[2], ".").concat(arr[0]), "".concat(arr[1], ".").concat(arr[2], ".").concat(arr[3]), "".concat(arr[1], ".").concat(arr[3], ".").concat(arr[0]), "".concat(arr[1], ".").concat(arr[3], ".").concat(arr[2]), "".concat(arr[2], ".").concat(arr[0], ".").concat(arr[1]), "".concat(arr[2], ".").concat(arr[0], ".").concat(arr[3]), "".concat(arr[2], ".").concat(arr[1], ".").concat(arr[0]), "".concat(arr[2], ".").concat(arr[1], ".").concat(arr[3]), "".concat(arr[2], ".").concat(arr[3], ".").concat(arr[0]), "".concat(arr[2], ".").concat(arr[3], ".").concat(arr[1]), "".concat(arr[3], ".").concat(arr[0], ".").concat(arr[1]), "".concat(arr[3], ".").concat(arr[0], ".").concat(arr[2]), "".concat(arr[3], ".").concat(arr[1], ".").concat(arr[0]), "".concat(arr[3], ".").concat(arr[1], ".").concat(arr[2]), "".concat(arr[3], ".").concat(arr[2], ".").concat(arr[0]), "".concat(arr[3], ".").concat(arr[2], ".").concat(arr[1]), "".concat(arr[0], ".").concat(arr[1], ".").concat(arr[2], ".").concat(arr[3]), "".concat(arr[0], ".").concat(arr[1], ".").concat(arr[3], ".").concat(arr[2]), "".concat(arr[0], ".").concat(arr[2], ".").concat(arr[1], ".").concat(arr[3]), "".concat(arr[0], ".").concat(arr[2], ".").concat(arr[3], ".").concat(arr[1]), "".concat(arr[0], ".").concat(arr[3], ".").concat(arr[1], ".").concat(arr[2]), "".concat(arr[0], ".").concat(arr[3], ".").concat(arr[2], ".").concat(arr[1]), "".concat(arr[1], ".").concat(arr[0], ".").concat(arr[2], ".").concat(arr[3]), "".concat(arr[1], ".").concat(arr[0], ".").concat(arr[3], ".").concat(arr[2]), "".concat(arr[1], ".").concat(arr[2], ".").concat(arr[0], ".").concat(arr[3]), "".concat(arr[1], ".").concat(arr[2], ".").concat(arr[3], ".").concat(arr[0]), "".concat(arr[1], ".").concat(arr[3], ".").concat(arr[0], ".").concat(arr[2]), "".concat(arr[1], ".").concat(arr[3], ".").concat(arr[2], ".").concat(arr[0]), "".concat(arr[2], ".").concat(arr[0], ".").concat(arr[1], ".").concat(arr[3]), "".concat(arr[2], ".").concat(arr[0], ".").concat(arr[3], ".").concat(arr[1]), "".concat(arr[2], ".").concat(arr[1], ".").concat(arr[0], ".").concat(arr[3]), "".concat(arr[2], ".").concat(arr[1], ".").concat(arr[3], ".").concat(arr[0]), "".concat(arr[2], ".").concat(arr[3], ".").concat(arr[0], ".").concat(arr[1]), "".concat(arr[2], ".").concat(arr[3], ".").concat(arr[1], ".").concat(arr[0]), "".concat(arr[3], ".").concat(arr[0], ".").concat(arr[1], ".").concat(arr[2]), "".concat(arr[3], ".").concat(arr[0], ".").concat(arr[2], ".").concat(arr[1]), "".concat(arr[3], ".").concat(arr[1], ".").concat(arr[0], ".").concat(arr[2]), "".concat(arr[3], ".").concat(arr[1], ".").concat(arr[2], ".").concat(arr[0]), "".concat(arr[3], ".").concat(arr[2], ".").concat(arr[0], ".").concat(arr[1]), "".concat(arr[3], ".").concat(arr[2], ".").concat(arr[1], ".").concat(arr[0])];
  }
}
function getClassNameCombinations(classNames) {
  if (classNames.length === 0 || classNames.length === 1)
    return classNames;
  var key = classNames.join(".");
  if (!classNameCombinations[key]) {
    classNameCombinations[key] = powerSetPermutations(classNames);
  }
  return classNameCombinations[key];
}
function createStyleObject(classNames) {
  var elementStyle = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};
  var stylesheet = arguments.length > 2 ? arguments[2] : void 0;
  var nonTokenClassNames = classNames.filter(function(className) {
    return className !== "token";
  });
  var classNamesCombinations = getClassNameCombinations(nonTokenClassNames);
  return classNamesCombinations.reduce(function(styleObject, className) {
    return _objectSpread(_objectSpread({}, styleObject), stylesheet[className]);
  }, elementStyle);
}
function createClassNameString(classNames) {
  return classNames.join(" ");
}
function createChildren(stylesheet, useInlineStyles) {
  var childrenCount = 0;
  return function(children) {
    childrenCount += 1;
    return children.map(function(child, i) {
      return createElement({
        node: child,
        stylesheet,
        useInlineStyles,
        key: "code-segment-".concat(childrenCount, "-").concat(i)
      });
    });
  };
}
function createElement(_ref) {
  var node = _ref.node, stylesheet = _ref.stylesheet, _ref$style = _ref.style, style = _ref$style === void 0 ? {} : _ref$style, useInlineStyles = _ref.useInlineStyles, key = _ref.key;
  var properties = node.properties, type = node.type, TagName = node.tagName, value = node.value;
  if (type === "text") {
    return value;
  } else if (TagName) {
    var childrenCreator = createChildren(stylesheet, useInlineStyles);
    var props;
    if (!useInlineStyles) {
      props = _objectSpread(_objectSpread({}, properties), {}, {
        className: createClassNameString(properties.className)
      });
    } else {
      var allStylesheetSelectors = Object.keys(stylesheet).reduce(function(classes, selector) {
        selector.split(".").forEach(function(className2) {
          if (!classes.includes(className2))
            classes.push(className2);
        });
        return classes;
      }, []);
      var startingClassName = properties.className && properties.className.includes("token") ? ["token"] : [];
      var className = properties.className && startingClassName.concat(properties.className.filter(function(className2) {
        return !allStylesheetSelectors.includes(className2);
      }));
      props = _objectSpread(_objectSpread({}, properties), {}, {
        className: createClassNameString(className) || void 0,
        style: createStyleObject(properties.className, Object.assign({}, properties.style, style), stylesheet)
      });
    }
    var children = childrenCreator(node.children);
    return /* @__PURE__ */ import_react2.default.createElement(TagName, (0, import_extends2.default)({
      key
    }, props), children);
  }
}
var import_extends2, import_defineProperty, import_react2, classNameCombinations;
var init_create_element = __esm({
  "../../node_modules/react-syntax-highlighter/dist/esm/create-element.js"() {
    import_extends2 = __toESM(require_extends());
    import_defineProperty = __toESM(require_defineProperty());
    import_react2 = __toESM(require("react"));
    classNameCombinations = {};
  }
});

// ../../node_modules/react-syntax-highlighter/dist/esm/checkForListedLanguage.js
var checkForListedLanguage_default;
var init_checkForListedLanguage = __esm({
  "../../node_modules/react-syntax-highlighter/dist/esm/checkForListedLanguage.js"() {
    checkForListedLanguage_default = function(astGenerator, language) {
      var langs = astGenerator.listLanguages();
      return langs.indexOf(language) !== -1;
    };
  }
});

// ../../node_modules/react-syntax-highlighter/dist/esm/highlight.js
function ownKeys2(object, enumerableOnly) {
  var keys = Object.keys(object);
  if (Object.getOwnPropertySymbols) {
    var symbols = Object.getOwnPropertySymbols(object);
    enumerableOnly && (symbols = symbols.filter(function(sym) {
      return Object.getOwnPropertyDescriptor(object, sym).enumerable;
    })), keys.push.apply(keys, symbols);
  }
  return keys;
}
function _objectSpread2(target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = null != arguments[i] ? arguments[i] : {};
    i % 2 ? ownKeys2(Object(source), true).forEach(function(key) {
      (0, import_defineProperty2.default)(target, key, source[key]);
    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys2(Object(source)).forEach(function(key) {
      Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
    });
  }
  return target;
}
function getNewLines(str) {
  return str.match(newLineRegex);
}
function getAllLineNumbers(_ref) {
  var lines = _ref.lines, startingLineNumber = _ref.startingLineNumber, style = _ref.style;
  return lines.map(function(_, i) {
    var number = i + startingLineNumber;
    return /* @__PURE__ */ import_react3.default.createElement("span", {
      key: "line-".concat(i),
      className: "react-syntax-highlighter-line-number",
      style: typeof style === "function" ? style(number) : style
    }, "".concat(number, "\n"));
  });
}
function AllLineNumbers(_ref2) {
  var codeString = _ref2.codeString, codeStyle = _ref2.codeStyle, _ref2$containerStyle = _ref2.containerStyle, containerStyle = _ref2$containerStyle === void 0 ? {
    "float": "left",
    paddingRight: "10px"
  } : _ref2$containerStyle, _ref2$numberStyle = _ref2.numberStyle, numberStyle = _ref2$numberStyle === void 0 ? {} : _ref2$numberStyle, startingLineNumber = _ref2.startingLineNumber;
  return /* @__PURE__ */ import_react3.default.createElement("code", {
    style: Object.assign({}, codeStyle, containerStyle)
  }, getAllLineNumbers({
    lines: codeString.replace(/\n$/, "").split("\n"),
    style: numberStyle,
    startingLineNumber
  }));
}
function getEmWidthOfNumber(num) {
  return "".concat(num.toString().length, ".25em");
}
function getInlineLineNumber(lineNumber, inlineLineNumberStyle) {
  return {
    type: "element",
    tagName: "span",
    properties: {
      key: "line-number--".concat(lineNumber),
      className: ["comment", "linenumber", "react-syntax-highlighter-line-number"],
      style: inlineLineNumberStyle
    },
    children: [{
      type: "text",
      value: lineNumber
    }]
  };
}
function assembleLineNumberStyles(lineNumberStyle, lineNumber, largestLineNumber) {
  var defaultLineNumberStyle = {
    display: "inline-block",
    minWidth: getEmWidthOfNumber(largestLineNumber),
    paddingRight: "1em",
    textAlign: "right",
    userSelect: "none"
  };
  var customLineNumberStyle = typeof lineNumberStyle === "function" ? lineNumberStyle(lineNumber) : lineNumberStyle;
  var assembledStyle = _objectSpread2(_objectSpread2({}, defaultLineNumberStyle), customLineNumberStyle);
  return assembledStyle;
}
function createLineElement(_ref3) {
  var children = _ref3.children, lineNumber = _ref3.lineNumber, lineNumberStyle = _ref3.lineNumberStyle, largestLineNumber = _ref3.largestLineNumber, showInlineLineNumbers = _ref3.showInlineLineNumbers, _ref3$lineProps = _ref3.lineProps, lineProps = _ref3$lineProps === void 0 ? {} : _ref3$lineProps, _ref3$className = _ref3.className, className = _ref3$className === void 0 ? [] : _ref3$className, showLineNumbers = _ref3.showLineNumbers, wrapLongLines = _ref3.wrapLongLines;
  var properties = typeof lineProps === "function" ? lineProps(lineNumber) : lineProps;
  properties["className"] = className;
  if (lineNumber && showInlineLineNumbers) {
    var inlineLineNumberStyle = assembleLineNumberStyles(lineNumberStyle, lineNumber, largestLineNumber);
    children.unshift(getInlineLineNumber(lineNumber, inlineLineNumberStyle));
  }
  if (wrapLongLines & showLineNumbers) {
    properties.style = _objectSpread2(_objectSpread2({}, properties.style), {}, {
      display: "flex"
    });
  }
  return {
    type: "element",
    tagName: "span",
    properties,
    children
  };
}
function flattenCodeTree(tree) {
  var className = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : [];
  var newTree = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : [];
  for (var i = 0; i < tree.length; i++) {
    var node = tree[i];
    if (node.type === "text") {
      newTree.push(createLineElement({
        children: [node],
        className: (0, import_toConsumableArray.default)(new Set(className))
      }));
    } else if (node.children) {
      var classNames = className.concat(node.properties.className);
      flattenCodeTree(node.children, classNames).forEach(function(i2) {
        return newTree.push(i2);
      });
    }
  }
  return newTree;
}
function processLines(codeTree, wrapLines, lineProps, showLineNumbers, showInlineLineNumbers, startingLineNumber, largestLineNumber, lineNumberStyle, wrapLongLines) {
  var _ref4;
  var tree = flattenCodeTree(codeTree.value);
  var newTree = [];
  var lastLineBreakIndex = -1;
  var index3 = 0;
  function createWrappedLine(children2, lineNumber2) {
    var className = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : [];
    return createLineElement({
      children: children2,
      lineNumber: lineNumber2,
      lineNumberStyle,
      largestLineNumber,
      showInlineLineNumbers,
      lineProps,
      className,
      showLineNumbers,
      wrapLongLines
    });
  }
  function createUnwrappedLine(children2, lineNumber2) {
    if (showLineNumbers && lineNumber2 && showInlineLineNumbers) {
      var inlineLineNumberStyle = assembleLineNumberStyles(lineNumberStyle, lineNumber2, largestLineNumber);
      children2.unshift(getInlineLineNumber(lineNumber2, inlineLineNumberStyle));
    }
    return children2;
  }
  function createLine(children2, lineNumber2) {
    var className = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : [];
    return wrapLines || className.length > 0 ? createWrappedLine(children2, lineNumber2, className) : createUnwrappedLine(children2, lineNumber2);
  }
  var _loop = function _loop2() {
    var node = tree[index3];
    var value = node.children[0].value;
    var newLines = getNewLines(value);
    if (newLines) {
      var splitValue = value.split("\n");
      splitValue.forEach(function(text, i) {
        var lineNumber2 = showLineNumbers && newTree.length + startingLineNumber;
        var newChild = {
          type: "text",
          value: "".concat(text, "\n")
        };
        if (i === 0) {
          var _children = tree.slice(lastLineBreakIndex + 1, index3).concat(createLineElement({
            children: [newChild],
            className: node.properties.className
          }));
          var _line = createLine(_children, lineNumber2);
          newTree.push(_line);
        } else if (i === splitValue.length - 1) {
          var stringChild = tree[index3 + 1] && tree[index3 + 1].children && tree[index3 + 1].children[0];
          var lastLineInPreviousSpan = {
            type: "text",
            value: "".concat(text)
          };
          if (stringChild) {
            var newElem = createLineElement({
              children: [lastLineInPreviousSpan],
              className: node.properties.className
            });
            tree.splice(index3 + 1, 0, newElem);
          } else {
            var _children2 = [lastLineInPreviousSpan];
            var _line2 = createLine(_children2, lineNumber2, node.properties.className);
            newTree.push(_line2);
          }
        } else {
          var _children3 = [newChild];
          var _line3 = createLine(_children3, lineNumber2, node.properties.className);
          newTree.push(_line3);
        }
      });
      lastLineBreakIndex = index3;
    }
    index3++;
  };
  while (index3 < tree.length) {
    _loop();
  }
  if (lastLineBreakIndex !== tree.length - 1) {
    var children = tree.slice(lastLineBreakIndex + 1, tree.length);
    if (children && children.length) {
      var lineNumber = showLineNumbers && newTree.length + startingLineNumber;
      var line = createLine(children, lineNumber);
      newTree.push(line);
    }
  }
  return wrapLines ? newTree : (_ref4 = []).concat.apply(_ref4, newTree);
}
function defaultRenderer(_ref5) {
  var rows = _ref5.rows, stylesheet = _ref5.stylesheet, useInlineStyles = _ref5.useInlineStyles;
  return rows.map(function(node, i) {
    return createElement({
      node,
      stylesheet,
      useInlineStyles,
      key: "code-segement".concat(i)
    });
  });
}
function isHighlightJs(astGenerator) {
  return astGenerator && typeof astGenerator.highlightAuto !== "undefined";
}
function getCodeTree(_ref6) {
  var astGenerator = _ref6.astGenerator, language = _ref6.language, code = _ref6.code, defaultCodeValue = _ref6.defaultCodeValue;
  if (isHighlightJs(astGenerator)) {
    var hasLanguage = checkForListedLanguage_default(astGenerator, language);
    if (language === "text") {
      return {
        value: defaultCodeValue,
        language: "text"
      };
    } else if (hasLanguage) {
      return astGenerator.highlight(language, code);
    } else {
      return astGenerator.highlightAuto(code);
    }
  }
  try {
    return language && language !== "text" ? {
      value: astGenerator.highlight(code, language)
    } : {
      value: defaultCodeValue
    };
  } catch (e) {
    return {
      value: defaultCodeValue
    };
  }
}
function highlight_default(defaultAstGenerator, defaultStyle) {
  return function SyntaxHighlighter4(_ref7) {
    var language = _ref7.language, children = _ref7.children, _ref7$style = _ref7.style, style = _ref7$style === void 0 ? defaultStyle : _ref7$style, _ref7$customStyle = _ref7.customStyle, customStyle = _ref7$customStyle === void 0 ? {} : _ref7$customStyle, _ref7$codeTagProps = _ref7.codeTagProps, codeTagProps = _ref7$codeTagProps === void 0 ? {
      className: language ? "language-".concat(language) : void 0,
      style: _objectSpread2(_objectSpread2({}, style['code[class*="language-"]']), style['code[class*="language-'.concat(language, '"]')])
    } : _ref7$codeTagProps, _ref7$useInlineStyles = _ref7.useInlineStyles, useInlineStyles = _ref7$useInlineStyles === void 0 ? true : _ref7$useInlineStyles, _ref7$showLineNumbers = _ref7.showLineNumbers, showLineNumbers = _ref7$showLineNumbers === void 0 ? false : _ref7$showLineNumbers, _ref7$showInlineLineN = _ref7.showInlineLineNumbers, showInlineLineNumbers = _ref7$showInlineLineN === void 0 ? true : _ref7$showInlineLineN, _ref7$startingLineNum = _ref7.startingLineNumber, startingLineNumber = _ref7$startingLineNum === void 0 ? 1 : _ref7$startingLineNum, lineNumberContainerStyle = _ref7.lineNumberContainerStyle, _ref7$lineNumberStyle = _ref7.lineNumberStyle, lineNumberStyle = _ref7$lineNumberStyle === void 0 ? {} : _ref7$lineNumberStyle, wrapLines = _ref7.wrapLines, _ref7$wrapLongLines = _ref7.wrapLongLines, wrapLongLines = _ref7$wrapLongLines === void 0 ? false : _ref7$wrapLongLines, _ref7$lineProps = _ref7.lineProps, lineProps = _ref7$lineProps === void 0 ? {} : _ref7$lineProps, renderer = _ref7.renderer, _ref7$PreTag = _ref7.PreTag, PreTag = _ref7$PreTag === void 0 ? "pre" : _ref7$PreTag, _ref7$CodeTag = _ref7.CodeTag, CodeTag = _ref7$CodeTag === void 0 ? "code" : _ref7$CodeTag, _ref7$code = _ref7.code, code = _ref7$code === void 0 ? (Array.isArray(children) ? children[0] : children) || "" : _ref7$code, astGenerator = _ref7.astGenerator, rest = (0, import_objectWithoutProperties.default)(_ref7, _excluded);
    astGenerator = astGenerator || defaultAstGenerator;
    var allLineNumbers = showLineNumbers ? /* @__PURE__ */ import_react3.default.createElement(AllLineNumbers, {
      containerStyle: lineNumberContainerStyle,
      codeStyle: codeTagProps.style || {},
      numberStyle: lineNumberStyle,
      startingLineNumber,
      codeString: code
    }) : null;
    var defaultPreStyle = style.hljs || style['pre[class*="language-"]'] || {
      backgroundColor: "#fff"
    };
    var generatorClassName = isHighlightJs(astGenerator) ? "hljs" : "prismjs";
    var preProps = useInlineStyles ? Object.assign({}, rest, {
      style: Object.assign({}, defaultPreStyle, customStyle)
    }) : Object.assign({}, rest, {
      className: rest.className ? "".concat(generatorClassName, " ").concat(rest.className) : generatorClassName,
      style: Object.assign({}, customStyle)
    });
    if (wrapLongLines) {
      codeTagProps.style = _objectSpread2(_objectSpread2({}, codeTagProps.style), {}, {
        whiteSpace: "pre-wrap"
      });
    } else {
      codeTagProps.style = _objectSpread2(_objectSpread2({}, codeTagProps.style), {}, {
        whiteSpace: "pre"
      });
    }
    if (!astGenerator) {
      return /* @__PURE__ */ import_react3.default.createElement(PreTag, preProps, allLineNumbers, /* @__PURE__ */ import_react3.default.createElement(CodeTag, codeTagProps, code));
    }
    if (wrapLines === void 0 && renderer || wrapLongLines)
      wrapLines = true;
    renderer = renderer || defaultRenderer;
    var defaultCodeValue = [{
      type: "text",
      value: code
    }];
    var codeTree = getCodeTree({
      astGenerator,
      language,
      code,
      defaultCodeValue
    });
    if (codeTree.language === null) {
      codeTree.value = defaultCodeValue;
    }
    var largestLineNumber = codeTree.value.length + startingLineNumber;
    var rows = processLines(codeTree, wrapLines, lineProps, showLineNumbers, showInlineLineNumbers, startingLineNumber, largestLineNumber, lineNumberStyle, wrapLongLines);
    return /* @__PURE__ */ import_react3.default.createElement(PreTag, preProps, /* @__PURE__ */ import_react3.default.createElement(CodeTag, codeTagProps, !showInlineLineNumbers && allLineNumbers, renderer({
      rows,
      stylesheet: style,
      useInlineStyles
    })));
  };
}
var import_objectWithoutProperties, import_toConsumableArray, import_defineProperty2, import_react3, _excluded, newLineRegex;
var init_highlight = __esm({
  "../../node_modules/react-syntax-highlighter/dist/esm/highlight.js"() {
    import_objectWithoutProperties = __toESM(require_objectWithoutProperties());
    import_toConsumableArray = __toESM(require_toConsumableArray());
    import_defineProperty2 = __toESM(require_defineProperty());
    import_react3 = __toESM(require("react"));
    init_create_element();
    init_checkForListedLanguage();
    _excluded = ["language", "children", "style", "customStyle", "codeTagProps", "useInlineStyles", "showLineNumbers", "showInlineLineNumbers", "startingLineNumber", "lineNumberContainerStyle", "lineNumberStyle", "wrapLines", "wrapLongLines", "lineProps", "renderer", "PreTag", "CodeTag", "code", "astGenerator"];
    newLineRegex = /\n/g;
  }
});

// ../../node_modules/xtend/immutable.js
var require_immutable = __commonJS({
  "../../node_modules/xtend/immutable.js"(exports, module2) {
    module2.exports = extend;
    var hasOwnProperty = Object.prototype.hasOwnProperty;
    function extend() {
      var target = {};
      for (var i = 0; i < arguments.length; i++) {
        var source = arguments[i];
        for (var key in source) {
          if (hasOwnProperty.call(source, key)) {
            target[key] = source[key];
          }
        }
      }
      return target;
    }
  }
});

// ../../node_modules/property-information/lib/util/schema.js
var require_schema = __commonJS({
  "../../node_modules/property-information/lib/util/schema.js"(exports, module2) {
    "use strict";
    module2.exports = Schema;
    var proto = Schema.prototype;
    proto.space = null;
    proto.normal = {};
    proto.property = {};
    function Schema(property, normal, space) {
      this.property = property;
      this.normal = normal;
      if (space) {
        this.space = space;
      }
    }
  }
});

// ../../node_modules/property-information/lib/util/merge.js
var require_merge = __commonJS({
  "../../node_modules/property-information/lib/util/merge.js"(exports, module2) {
    "use strict";
    var xtend = require_immutable();
    var Schema = require_schema();
    module2.exports = merge;
    function merge(definitions) {
      var length2 = definitions.length;
      var property = [];
      var normal = [];
      var index3 = -1;
      var info;
      var space;
      while (++index3 < length2) {
        info = definitions[index3];
        property.push(info.property);
        normal.push(info.normal);
        space = info.space;
      }
      return new Schema(
        xtend.apply(null, property),
        xtend.apply(null, normal),
        space
      );
    }
  }
});

// ../../node_modules/property-information/normalize.js
var require_normalize = __commonJS({
  "../../node_modules/property-information/normalize.js"(exports, module2) {
    "use strict";
    module2.exports = normalize;
    function normalize(value) {
      return value.toLowerCase();
    }
  }
});

// ../../node_modules/property-information/lib/util/info.js
var require_info = __commonJS({
  "../../node_modules/property-information/lib/util/info.js"(exports, module2) {
    "use strict";
    module2.exports = Info;
    var proto = Info.prototype;
    proto.space = null;
    proto.attribute = null;
    proto.property = null;
    proto.boolean = false;
    proto.booleanish = false;
    proto.overloadedBoolean = false;
    proto.number = false;
    proto.commaSeparated = false;
    proto.spaceSeparated = false;
    proto.commaOrSpaceSeparated = false;
    proto.mustUseProperty = false;
    proto.defined = false;
    function Info(property, attribute) {
      this.property = property;
      this.attribute = attribute;
    }
  }
});

// ../../node_modules/property-information/lib/util/types.js
var require_types = __commonJS({
  "../../node_modules/property-information/lib/util/types.js"(exports) {
    "use strict";
    var powers = 0;
    exports.boolean = increment();
    exports.booleanish = increment();
    exports.overloadedBoolean = increment();
    exports.number = increment();
    exports.spaceSeparated = increment();
    exports.commaSeparated = increment();
    exports.commaOrSpaceSeparated = increment();
    function increment() {
      return Math.pow(2, ++powers);
    }
  }
});

// ../../node_modules/property-information/lib/util/defined-info.js
var require_defined_info = __commonJS({
  "../../node_modules/property-information/lib/util/defined-info.js"(exports, module2) {
    "use strict";
    var Info = require_info();
    var types = require_types();
    module2.exports = DefinedInfo;
    DefinedInfo.prototype = new Info();
    DefinedInfo.prototype.defined = true;
    var checks = [
      "boolean",
      "booleanish",
      "overloadedBoolean",
      "number",
      "commaSeparated",
      "spaceSeparated",
      "commaOrSpaceSeparated"
    ];
    var checksLength = checks.length;
    function DefinedInfo(property, attribute, mask, space) {
      var index3 = -1;
      var check;
      mark(this, "space", space);
      Info.call(this, property, attribute);
      while (++index3 < checksLength) {
        check = checks[index3];
        mark(this, check, (mask & types[check]) === types[check]);
      }
    }
    function mark(values, key, value) {
      if (value) {
        values[key] = value;
      }
    }
  }
});

// ../../node_modules/property-information/lib/util/create.js
var require_create = __commonJS({
  "../../node_modules/property-information/lib/util/create.js"(exports, module2) {
    "use strict";
    var normalize = require_normalize();
    var Schema = require_schema();
    var DefinedInfo = require_defined_info();
    module2.exports = create;
    function create(definition) {
      var space = definition.space;
      var mustUseProperty = definition.mustUseProperty || [];
      var attributes = definition.attributes || {};
      var props = definition.properties;
      var transform = definition.transform;
      var property = {};
      var normal = {};
      var prop;
      var info;
      for (prop in props) {
        info = new DefinedInfo(
          prop,
          transform(attributes, prop),
          props[prop],
          space
        );
        if (mustUseProperty.indexOf(prop) !== -1) {
          info.mustUseProperty = true;
        }
        property[prop] = info;
        normal[normalize(prop)] = prop;
        normal[normalize(info.attribute)] = prop;
      }
      return new Schema(property, normal, space);
    }
  }
});

// ../../node_modules/property-information/lib/xlink.js
var require_xlink = __commonJS({
  "../../node_modules/property-information/lib/xlink.js"(exports, module2) {
    "use strict";
    var create = require_create();
    module2.exports = create({
      space: "xlink",
      transform: xlinkTransform,
      properties: {
        xLinkActuate: null,
        xLinkArcRole: null,
        xLinkHref: null,
        xLinkRole: null,
        xLinkShow: null,
        xLinkTitle: null,
        xLinkType: null
      }
    });
    function xlinkTransform(_, prop) {
      return "xlink:" + prop.slice(5).toLowerCase();
    }
  }
});

// ../../node_modules/property-information/lib/xml.js
var require_xml = __commonJS({
  "../../node_modules/property-information/lib/xml.js"(exports, module2) {
    "use strict";
    var create = require_create();
    module2.exports = create({
      space: "xml",
      transform: xmlTransform,
      properties: {
        xmlLang: null,
        xmlBase: null,
        xmlSpace: null
      }
    });
    function xmlTransform(_, prop) {
      return "xml:" + prop.slice(3).toLowerCase();
    }
  }
});

// ../../node_modules/property-information/lib/util/case-sensitive-transform.js
var require_case_sensitive_transform = __commonJS({
  "../../node_modules/property-information/lib/util/case-sensitive-transform.js"(exports, module2) {
    "use strict";
    module2.exports = caseSensitiveTransform;
    function caseSensitiveTransform(attributes, attribute) {
      return attribute in attributes ? attributes[attribute] : attribute;
    }
  }
});

// ../../node_modules/property-information/lib/util/case-insensitive-transform.js
var require_case_insensitive_transform = __commonJS({
  "../../node_modules/property-information/lib/util/case-insensitive-transform.js"(exports, module2) {
    "use strict";
    var caseSensitiveTransform = require_case_sensitive_transform();
    module2.exports = caseInsensitiveTransform;
    function caseInsensitiveTransform(attributes, property) {
      return caseSensitiveTransform(attributes, property.toLowerCase());
    }
  }
});

// ../../node_modules/property-information/lib/xmlns.js
var require_xmlns = __commonJS({
  "../../node_modules/property-information/lib/xmlns.js"(exports, module2) {
    "use strict";
    var create = require_create();
    var caseInsensitiveTransform = require_case_insensitive_transform();
    module2.exports = create({
      space: "xmlns",
      attributes: {
        xmlnsxlink: "xmlns:xlink"
      },
      transform: caseInsensitiveTransform,
      properties: {
        xmlns: null,
        xmlnsXLink: null
      }
    });
  }
});

// ../../node_modules/property-information/lib/aria.js
var require_aria = __commonJS({
  "../../node_modules/property-information/lib/aria.js"(exports, module2) {
    "use strict";
    var types = require_types();
    var create = require_create();
    var booleanish = types.booleanish;
    var number = types.number;
    var spaceSeparated = types.spaceSeparated;
    module2.exports = create({
      transform: ariaTransform,
      properties: {
        ariaActiveDescendant: null,
        ariaAtomic: booleanish,
        ariaAutoComplete: null,
        ariaBusy: booleanish,
        ariaChecked: booleanish,
        ariaColCount: number,
        ariaColIndex: number,
        ariaColSpan: number,
        ariaControls: spaceSeparated,
        ariaCurrent: null,
        ariaDescribedBy: spaceSeparated,
        ariaDetails: null,
        ariaDisabled: booleanish,
        ariaDropEffect: spaceSeparated,
        ariaErrorMessage: null,
        ariaExpanded: booleanish,
        ariaFlowTo: spaceSeparated,
        ariaGrabbed: booleanish,
        ariaHasPopup: null,
        ariaHidden: booleanish,
        ariaInvalid: null,
        ariaKeyShortcuts: null,
        ariaLabel: null,
        ariaLabelledBy: spaceSeparated,
        ariaLevel: number,
        ariaLive: null,
        ariaModal: booleanish,
        ariaMultiLine: booleanish,
        ariaMultiSelectable: booleanish,
        ariaOrientation: null,
        ariaOwns: spaceSeparated,
        ariaPlaceholder: null,
        ariaPosInSet: number,
        ariaPressed: booleanish,
        ariaReadOnly: booleanish,
        ariaRelevant: null,
        ariaRequired: booleanish,
        ariaRoleDescription: spaceSeparated,
        ariaRowCount: number,
        ariaRowIndex: number,
        ariaRowSpan: number,
        ariaSelected: booleanish,
        ariaSetSize: number,
        ariaSort: null,
        ariaValueMax: number,
        ariaValueMin: number,
        ariaValueNow: number,
        ariaValueText: null,
        role: null
      }
    });
    function ariaTransform(_, prop) {
      return prop === "role" ? prop : "aria-" + prop.slice(4).toLowerCase();
    }
  }
});

// ../../node_modules/property-information/lib/html.js
var require_html = __commonJS({
  "../../node_modules/property-information/lib/html.js"(exports, module2) {
    "use strict";
    var types = require_types();
    var create = require_create();
    var caseInsensitiveTransform = require_case_insensitive_transform();
    var boolean = types.boolean;
    var overloadedBoolean = types.overloadedBoolean;
    var booleanish = types.booleanish;
    var number = types.number;
    var spaceSeparated = types.spaceSeparated;
    var commaSeparated = types.commaSeparated;
    module2.exports = create({
      space: "html",
      attributes: {
        acceptcharset: "accept-charset",
        classname: "class",
        htmlfor: "for",
        httpequiv: "http-equiv"
      },
      transform: caseInsensitiveTransform,
      mustUseProperty: ["checked", "multiple", "muted", "selected"],
      properties: {
        abbr: null,
        accept: commaSeparated,
        acceptCharset: spaceSeparated,
        accessKey: spaceSeparated,
        action: null,
        allow: null,
        allowFullScreen: boolean,
        allowPaymentRequest: boolean,
        allowUserMedia: boolean,
        alt: null,
        as: null,
        async: boolean,
        autoCapitalize: null,
        autoComplete: spaceSeparated,
        autoFocus: boolean,
        autoPlay: boolean,
        capture: boolean,
        charSet: null,
        checked: boolean,
        cite: null,
        className: spaceSeparated,
        cols: number,
        colSpan: null,
        content: null,
        contentEditable: booleanish,
        controls: boolean,
        controlsList: spaceSeparated,
        coords: number | commaSeparated,
        crossOrigin: null,
        data: null,
        dateTime: null,
        decoding: null,
        default: boolean,
        defer: boolean,
        dir: null,
        dirName: null,
        disabled: boolean,
        download: overloadedBoolean,
        draggable: booleanish,
        encType: null,
        enterKeyHint: null,
        form: null,
        formAction: null,
        formEncType: null,
        formMethod: null,
        formNoValidate: boolean,
        formTarget: null,
        headers: spaceSeparated,
        height: number,
        hidden: boolean,
        high: number,
        href: null,
        hrefLang: null,
        htmlFor: spaceSeparated,
        httpEquiv: spaceSeparated,
        id: null,
        imageSizes: null,
        imageSrcSet: commaSeparated,
        inputMode: null,
        integrity: null,
        is: null,
        isMap: boolean,
        itemId: null,
        itemProp: spaceSeparated,
        itemRef: spaceSeparated,
        itemScope: boolean,
        itemType: spaceSeparated,
        kind: null,
        label: null,
        lang: null,
        language: null,
        list: null,
        loading: null,
        loop: boolean,
        low: number,
        manifest: null,
        max: null,
        maxLength: number,
        media: null,
        method: null,
        min: null,
        minLength: number,
        multiple: boolean,
        muted: boolean,
        name: null,
        nonce: null,
        noModule: boolean,
        noValidate: boolean,
        onAbort: null,
        onAfterPrint: null,
        onAuxClick: null,
        onBeforePrint: null,
        onBeforeUnload: null,
        onBlur: null,
        onCancel: null,
        onCanPlay: null,
        onCanPlayThrough: null,
        onChange: null,
        onClick: null,
        onClose: null,
        onContextMenu: null,
        onCopy: null,
        onCueChange: null,
        onCut: null,
        onDblClick: null,
        onDrag: null,
        onDragEnd: null,
        onDragEnter: null,
        onDragExit: null,
        onDragLeave: null,
        onDragOver: null,
        onDragStart: null,
        onDrop: null,
        onDurationChange: null,
        onEmptied: null,
        onEnded: null,
        onError: null,
        onFocus: null,
        onFormData: null,
        onHashChange: null,
        onInput: null,
        onInvalid: null,
        onKeyDown: null,
        onKeyPress: null,
        onKeyUp: null,
        onLanguageChange: null,
        onLoad: null,
        onLoadedData: null,
        onLoadedMetadata: null,
        onLoadEnd: null,
        onLoadStart: null,
        onMessage: null,
        onMessageError: null,
        onMouseDown: null,
        onMouseEnter: null,
        onMouseLeave: null,
        onMouseMove: null,
        onMouseOut: null,
        onMouseOver: null,
        onMouseUp: null,
        onOffline: null,
        onOnline: null,
        onPageHide: null,
        onPageShow: null,
        onPaste: null,
        onPause: null,
        onPlay: null,
        onPlaying: null,
        onPopState: null,
        onProgress: null,
        onRateChange: null,
        onRejectionHandled: null,
        onReset: null,
        onResize: null,
        onScroll: null,
        onSecurityPolicyViolation: null,
        onSeeked: null,
        onSeeking: null,
        onSelect: null,
        onSlotChange: null,
        onStalled: null,
        onStorage: null,
        onSubmit: null,
        onSuspend: null,
        onTimeUpdate: null,
        onToggle: null,
        onUnhandledRejection: null,
        onUnload: null,
        onVolumeChange: null,
        onWaiting: null,
        onWheel: null,
        open: boolean,
        optimum: number,
        pattern: null,
        ping: spaceSeparated,
        placeholder: null,
        playsInline: boolean,
        poster: null,
        preload: null,
        readOnly: boolean,
        referrerPolicy: null,
        rel: spaceSeparated,
        required: boolean,
        reversed: boolean,
        rows: number,
        rowSpan: number,
        sandbox: spaceSeparated,
        scope: null,
        scoped: boolean,
        seamless: boolean,
        selected: boolean,
        shape: null,
        size: number,
        sizes: null,
        slot: null,
        span: number,
        spellCheck: booleanish,
        src: null,
        srcDoc: null,
        srcLang: null,
        srcSet: commaSeparated,
        start: number,
        step: null,
        style: null,
        tabIndex: number,
        target: null,
        title: null,
        translate: null,
        type: null,
        typeMustMatch: boolean,
        useMap: null,
        value: booleanish,
        width: number,
        wrap: null,
        align: null,
        aLink: null,
        archive: spaceSeparated,
        axis: null,
        background: null,
        bgColor: null,
        border: number,
        borderColor: null,
        bottomMargin: number,
        cellPadding: null,
        cellSpacing: null,
        char: null,
        charOff: null,
        classId: null,
        clear: null,
        code: null,
        codeBase: null,
        codeType: null,
        color: null,
        compact: boolean,
        declare: boolean,
        event: null,
        face: null,
        frame: null,
        frameBorder: null,
        hSpace: number,
        leftMargin: number,
        link: null,
        longDesc: null,
        lowSrc: null,
        marginHeight: number,
        marginWidth: number,
        noResize: boolean,
        noHref: boolean,
        noShade: boolean,
        noWrap: boolean,
        object: null,
        profile: null,
        prompt: null,
        rev: null,
        rightMargin: number,
        rules: null,
        scheme: null,
        scrolling: booleanish,
        standby: null,
        summary: null,
        text: null,
        topMargin: number,
        valueType: null,
        version: null,
        vAlign: null,
        vLink: null,
        vSpace: number,
        allowTransparency: null,
        autoCorrect: null,
        autoSave: null,
        disablePictureInPicture: boolean,
        disableRemotePlayback: boolean,
        prefix: null,
        property: null,
        results: number,
        security: null,
        unselectable: null
      }
    });
  }
});

// ../../node_modules/property-information/html.js
var require_html2 = __commonJS({
  "../../node_modules/property-information/html.js"(exports, module2) {
    "use strict";
    var merge = require_merge();
    var xlink = require_xlink();
    var xml = require_xml();
    var xmlns = require_xmlns();
    var aria = require_aria();
    var html = require_html();
    module2.exports = merge([xml, xlink, xmlns, aria, html]);
  }
});

// ../../node_modules/property-information/find.js
var require_find = __commonJS({
  "../../node_modules/property-information/find.js"(exports, module2) {
    "use strict";
    var normalize = require_normalize();
    var DefinedInfo = require_defined_info();
    var Info = require_info();
    var data = "data";
    module2.exports = find;
    var valid = /^data[-\w.:]+$/i;
    var dash = /-[a-z]/g;
    var cap = /[A-Z]/g;
    function find(schema, value) {
      var normal = normalize(value);
      var prop = value;
      var Type = Info;
      if (normal in schema.normal) {
        return schema.property[schema.normal[normal]];
      }
      if (normal.length > 4 && normal.slice(0, 4) === data && valid.test(value)) {
        if (value.charAt(4) === "-") {
          prop = datasetToProperty(value);
        } else {
          value = datasetToAttribute(value);
        }
        Type = DefinedInfo;
      }
      return new Type(prop, value);
    }
    function datasetToProperty(attribute) {
      var value = attribute.slice(5).replace(dash, camelcase);
      return data + value.charAt(0).toUpperCase() + value.slice(1);
    }
    function datasetToAttribute(property) {
      var value = property.slice(4);
      if (dash.test(value)) {
        return property;
      }
      value = value.replace(cap, kebab);
      if (value.charAt(0) !== "-") {
        value = "-" + value;
      }
      return data + value;
    }
    function kebab($0) {
      return "-" + $0.toLowerCase();
    }
    function camelcase($0) {
      return $0.charAt(1).toUpperCase();
    }
  }
});

// ../../node_modules/hast-util-parse-selector/index.js
var require_hast_util_parse_selector = __commonJS({
  "../../node_modules/hast-util-parse-selector/index.js"(exports, module2) {
    "use strict";
    module2.exports = parse;
    var search = /[#.]/g;
    function parse(selector, defaultTagName) {
      var value = selector || "";
      var name = defaultTagName || "div";
      var props = {};
      var start2 = 0;
      var subvalue;
      var previous;
      var match2;
      while (start2 < value.length) {
        search.lastIndex = start2;
        match2 = search.exec(value);
        subvalue = value.slice(start2, match2 ? match2.index : value.length);
        if (subvalue) {
          if (!previous) {
            name = subvalue;
          } else if (previous === "#") {
            props.id = subvalue;
          } else if (props.className) {
            props.className.push(subvalue);
          } else {
            props.className = [subvalue];
          }
          start2 += subvalue.length;
        }
        if (match2) {
          previous = match2[0];
          start2++;
        }
      }
      return { type: "element", tagName: name, properties: props, children: [] };
    }
  }
});

// ../../node_modules/space-separated-tokens/index.js
var require_space_separated_tokens = __commonJS({
  "../../node_modules/space-separated-tokens/index.js"(exports) {
    "use strict";
    exports.parse = parse;
    exports.stringify = stringify;
    var empty = "";
    var space = " ";
    var whiteSpace = /[ \t\n\r\f]+/g;
    function parse(value) {
      var input = String(value || empty).trim();
      return input === empty ? [] : input.split(whiteSpace);
    }
    function stringify(values) {
      return values.join(space).trim();
    }
  }
});

// ../../node_modules/comma-separated-tokens/index.js
var require_comma_separated_tokens = __commonJS({
  "../../node_modules/comma-separated-tokens/index.js"(exports) {
    "use strict";
    exports.parse = parse;
    exports.stringify = stringify;
    var comma = ",";
    var space = " ";
    var empty = "";
    function parse(value) {
      var values = [];
      var input = String(value || empty);
      var index3 = input.indexOf(comma);
      var lastIndex = 0;
      var end2 = false;
      var val;
      while (!end2) {
        if (index3 === -1) {
          index3 = input.length;
          end2 = true;
        }
        val = input.slice(lastIndex, index3).trim();
        if (val || !end2) {
          values.push(val);
        }
        lastIndex = index3 + 1;
        index3 = input.indexOf(comma, lastIndex);
      }
      return values;
    }
    function stringify(values, options) {
      var settings = options || {};
      var left2 = settings.padLeft === false ? empty : space;
      var right2 = settings.padRight ? space : empty;
      if (values[values.length - 1] === empty) {
        values = values.concat(empty);
      }
      return values.join(right2 + comma + left2).trim();
    }
  }
});

// ../../node_modules/hastscript/factory.js
var require_factory = __commonJS({
  "../../node_modules/hastscript/factory.js"(exports, module2) {
    "use strict";
    var find = require_find();
    var normalize = require_normalize();
    var parseSelector = require_hast_util_parse_selector();
    var spaces = require_space_separated_tokens().parse;
    var commas = require_comma_separated_tokens().parse;
    module2.exports = factory;
    var own = {}.hasOwnProperty;
    function factory(schema, defaultTagName, caseSensitive) {
      var adjust = caseSensitive ? createAdjustMap(caseSensitive) : null;
      return h;
      function h(selector, properties) {
        var node = parseSelector(selector, defaultTagName);
        var children = Array.prototype.slice.call(arguments, 2);
        var name = node.tagName.toLowerCase();
        var property;
        node.tagName = adjust && own.call(adjust, name) ? adjust[name] : name;
        if (properties && isChildren(properties, node)) {
          children.unshift(properties);
          properties = null;
        }
        if (properties) {
          for (property in properties) {
            addProperty(node.properties, property, properties[property]);
          }
        }
        addChild(node.children, children);
        if (node.tagName === "template") {
          node.content = { type: "root", children: node.children };
          node.children = [];
        }
        return node;
      }
      function addProperty(properties, key, value) {
        var info;
        var property;
        var result;
        if (value === null || value === void 0 || value !== value) {
          return;
        }
        info = find(schema, key);
        property = info.property;
        result = value;
        if (typeof result === "string") {
          if (info.spaceSeparated) {
            result = spaces(result);
          } else if (info.commaSeparated) {
            result = commas(result);
          } else if (info.commaOrSpaceSeparated) {
            result = spaces(commas(result).join(" "));
          }
        }
        if (property === "style" && typeof value !== "string") {
          result = style(result);
        }
        if (property === "className" && properties.className) {
          result = properties.className.concat(result);
        }
        properties[property] = parsePrimitives(info, property, result);
      }
    }
    function isChildren(value, node) {
      return typeof value === "string" || "length" in value || isNode(node.tagName, value);
    }
    function isNode(tagName, value) {
      var type = value.type;
      if (tagName === "input" || !type || typeof type !== "string") {
        return false;
      }
      if (typeof value.children === "object" && "length" in value.children) {
        return true;
      }
      type = type.toLowerCase();
      if (tagName === "button") {
        return type !== "menu" && type !== "submit" && type !== "reset" && type !== "button";
      }
      return "value" in value;
    }
    function addChild(nodes, value) {
      var index3;
      var length2;
      if (typeof value === "string" || typeof value === "number") {
        nodes.push({ type: "text", value: String(value) });
        return;
      }
      if (typeof value === "object" && "length" in value) {
        index3 = -1;
        length2 = value.length;
        while (++index3 < length2) {
          addChild(nodes, value[index3]);
        }
        return;
      }
      if (typeof value !== "object" || !("type" in value)) {
        throw new Error("Expected node, nodes, or string, got `" + value + "`");
      }
      nodes.push(value);
    }
    function parsePrimitives(info, name, value) {
      var index3;
      var length2;
      var result;
      if (typeof value !== "object" || !("length" in value)) {
        return parsePrimitive(info, name, value);
      }
      length2 = value.length;
      index3 = -1;
      result = [];
      while (++index3 < length2) {
        result[index3] = parsePrimitive(info, name, value[index3]);
      }
      return result;
    }
    function parsePrimitive(info, name, value) {
      var result = value;
      if (info.number || info.positiveNumber) {
        if (!isNaN(result) && result !== "") {
          result = Number(result);
        }
      } else if (info.boolean || info.overloadedBoolean) {
        if (typeof result === "string" && (result === "" || normalize(value) === normalize(name))) {
          result = true;
        }
      }
      return result;
    }
    function style(value) {
      var result = [];
      var key;
      for (key in value) {
        result.push([key, value[key]].join(": "));
      }
      return result.join("; ");
    }
    function createAdjustMap(values) {
      var length2 = values.length;
      var index3 = -1;
      var result = {};
      var value;
      while (++index3 < length2) {
        value = values[index3];
        result[value.toLowerCase()] = value;
      }
      return result;
    }
  }
});

// ../../node_modules/hastscript/html.js
var require_html3 = __commonJS({
  "../../node_modules/hastscript/html.js"(exports, module2) {
    "use strict";
    var schema = require_html2();
    var factory = require_factory();
    var html = factory(schema, "div");
    html.displayName = "html";
    module2.exports = html;
  }
});

// ../../node_modules/hastscript/index.js
var require_hastscript = __commonJS({
  "../../node_modules/hastscript/index.js"(exports, module2) {
    "use strict";
    module2.exports = require_html3();
  }
});

// ../../node_modules/character-entities-legacy/index.json
var require_character_entities_legacy = __commonJS({
  "../../node_modules/character-entities-legacy/index.json"(exports, module2) {
    module2.exports = {
      AElig: "\xC6",
      AMP: "&",
      Aacute: "\xC1",
      Acirc: "\xC2",
      Agrave: "\xC0",
      Aring: "\xC5",
      Atilde: "\xC3",
      Auml: "\xC4",
      COPY: "\xA9",
      Ccedil: "\xC7",
      ETH: "\xD0",
      Eacute: "\xC9",
      Ecirc: "\xCA",
      Egrave: "\xC8",
      Euml: "\xCB",
      GT: ">",
      Iacute: "\xCD",
      Icirc: "\xCE",
      Igrave: "\xCC",
      Iuml: "\xCF",
      LT: "<",
      Ntilde: "\xD1",
      Oacute: "\xD3",
      Ocirc: "\xD4",
      Ograve: "\xD2",
      Oslash: "\xD8",
      Otilde: "\xD5",
      Ouml: "\xD6",
      QUOT: '"',
      REG: "\xAE",
      THORN: "\xDE",
      Uacute: "\xDA",
      Ucirc: "\xDB",
      Ugrave: "\xD9",
      Uuml: "\xDC",
      Yacute: "\xDD",
      aacute: "\xE1",
      acirc: "\xE2",
      acute: "\xB4",
      aelig: "\xE6",
      agrave: "\xE0",
      amp: "&",
      aring: "\xE5",
      atilde: "\xE3",
      auml: "\xE4",
      brvbar: "\xA6",
      ccedil: "\xE7",
      cedil: "\xB8",
      cent: "\xA2",
      copy: "\xA9",
      curren: "\xA4",
      deg: "\xB0",
      divide: "\xF7",
      eacute: "\xE9",
      ecirc: "\xEA",
      egrave: "\xE8",
      eth: "\xF0",
      euml: "\xEB",
      frac12: "\xBD",
      frac14: "\xBC",
      frac34: "\xBE",
      gt: ">",
      iacute: "\xED",
      icirc: "\xEE",
      iexcl: "\xA1",
      igrave: "\xEC",
      iquest: "\xBF",
      iuml: "\xEF",
      laquo: "\xAB",
      lt: "<",
      macr: "\xAF",
      micro: "\xB5",
      middot: "\xB7",
      nbsp: "\xA0",
      not: "\xAC",
      ntilde: "\xF1",
      oacute: "\xF3",
      ocirc: "\xF4",
      ograve: "\xF2",
      ordf: "\xAA",
      ordm: "\xBA",
      oslash: "\xF8",
      otilde: "\xF5",
      ouml: "\xF6",
      para: "\xB6",
      plusmn: "\xB1",
      pound: "\xA3",
      quot: '"',
      raquo: "\xBB",
      reg: "\xAE",
      sect: "\xA7",
      shy: "\xAD",
      sup1: "\xB9",
      sup2: "\xB2",
      sup3: "\xB3",
      szlig: "\xDF",
      thorn: "\xFE",
      times: "\xD7",
      uacute: "\xFA",
      ucirc: "\xFB",
      ugrave: "\xF9",
      uml: "\xA8",
      uuml: "\xFC",
      yacute: "\xFD",
      yen: "\xA5",
      yuml: "\xFF"
    };
  }
});

// ../../node_modules/character-reference-invalid/index.json
var require_character_reference_invalid = __commonJS({
  "../../node_modules/character-reference-invalid/index.json"(exports, module2) {
    module2.exports = {
      "0": "\uFFFD",
      "128": "\u20AC",
      "130": "\u201A",
      "131": "\u0192",
      "132": "\u201E",
      "133": "\u2026",
      "134": "\u2020",
      "135": "\u2021",
      "136": "\u02C6",
      "137": "\u2030",
      "138": "\u0160",
      "139": "\u2039",
      "140": "\u0152",
      "142": "\u017D",
      "145": "\u2018",
      "146": "\u2019",
      "147": "\u201C",
      "148": "\u201D",
      "149": "\u2022",
      "150": "\u2013",
      "151": "\u2014",
      "152": "\u02DC",
      "153": "\u2122",
      "154": "\u0161",
      "155": "\u203A",
      "156": "\u0153",
      "158": "\u017E",
      "159": "\u0178"
    };
  }
});

// ../../node_modules/is-decimal/index.js
var require_is_decimal = __commonJS({
  "../../node_modules/is-decimal/index.js"(exports, module2) {
    "use strict";
    module2.exports = decimal;
    function decimal(character) {
      var code = typeof character === "string" ? character.charCodeAt(0) : character;
      return code >= 48 && code <= 57;
    }
  }
});

// ../../node_modules/is-hexadecimal/index.js
var require_is_hexadecimal = __commonJS({
  "../../node_modules/is-hexadecimal/index.js"(exports, module2) {
    "use strict";
    module2.exports = hexadecimal;
    function hexadecimal(character) {
      var code = typeof character === "string" ? character.charCodeAt(0) : character;
      return code >= 97 && code <= 102 || code >= 65 && code <= 70 || code >= 48 && code <= 57;
    }
  }
});

// ../../node_modules/is-alphabetical/index.js
var require_is_alphabetical = __commonJS({
  "../../node_modules/is-alphabetical/index.js"(exports, module2) {
    "use strict";
    module2.exports = alphabetical;
    function alphabetical(character) {
      var code = typeof character === "string" ? character.charCodeAt(0) : character;
      return code >= 97 && code <= 122 || code >= 65 && code <= 90;
    }
  }
});

// ../../node_modules/is-alphanumerical/index.js
var require_is_alphanumerical = __commonJS({
  "../../node_modules/is-alphanumerical/index.js"(exports, module2) {
    "use strict";
    var alphabetical = require_is_alphabetical();
    var decimal = require_is_decimal();
    module2.exports = alphanumerical;
    function alphanumerical(character) {
      return alphabetical(character) || decimal(character);
    }
  }
});

// ../../node_modules/parse-entities/node_modules/character-entities/index.json
var require_character_entities = __commonJS({
  "../../node_modules/parse-entities/node_modules/character-entities/index.json"(exports, module2) {
    module2.exports = {
      AEli: "\xC6",
      AElig: "\xC6",
      AM: "&",
      AMP: "&",
      Aacut: "\xC1",
      Aacute: "\xC1",
      Abreve: "\u0102",
      Acir: "\xC2",
      Acirc: "\xC2",
      Acy: "\u0410",
      Afr: "\u{1D504}",
      Agrav: "\xC0",
      Agrave: "\xC0",
      Alpha: "\u0391",
      Amacr: "\u0100",
      And: "\u2A53",
      Aogon: "\u0104",
      Aopf: "\u{1D538}",
      ApplyFunction: "\u2061",
      Arin: "\xC5",
      Aring: "\xC5",
      Ascr: "\u{1D49C}",
      Assign: "\u2254",
      Atild: "\xC3",
      Atilde: "\xC3",
      Aum: "\xC4",
      Auml: "\xC4",
      Backslash: "\u2216",
      Barv: "\u2AE7",
      Barwed: "\u2306",
      Bcy: "\u0411",
      Because: "\u2235",
      Bernoullis: "\u212C",
      Beta: "\u0392",
      Bfr: "\u{1D505}",
      Bopf: "\u{1D539}",
      Breve: "\u02D8",
      Bscr: "\u212C",
      Bumpeq: "\u224E",
      CHcy: "\u0427",
      COP: "\xA9",
      COPY: "\xA9",
      Cacute: "\u0106",
      Cap: "\u22D2",
      CapitalDifferentialD: "\u2145",
      Cayleys: "\u212D",
      Ccaron: "\u010C",
      Ccedi: "\xC7",
      Ccedil: "\xC7",
      Ccirc: "\u0108",
      Cconint: "\u2230",
      Cdot: "\u010A",
      Cedilla: "\xB8",
      CenterDot: "\xB7",
      Cfr: "\u212D",
      Chi: "\u03A7",
      CircleDot: "\u2299",
      CircleMinus: "\u2296",
      CirclePlus: "\u2295",
      CircleTimes: "\u2297",
      ClockwiseContourIntegral: "\u2232",
      CloseCurlyDoubleQuote: "\u201D",
      CloseCurlyQuote: "\u2019",
      Colon: "\u2237",
      Colone: "\u2A74",
      Congruent: "\u2261",
      Conint: "\u222F",
      ContourIntegral: "\u222E",
      Copf: "\u2102",
      Coproduct: "\u2210",
      CounterClockwiseContourIntegral: "\u2233",
      Cross: "\u2A2F",
      Cscr: "\u{1D49E}",
      Cup: "\u22D3",
      CupCap: "\u224D",
      DD: "\u2145",
      DDotrahd: "\u2911",
      DJcy: "\u0402",
      DScy: "\u0405",
      DZcy: "\u040F",
      Dagger: "\u2021",
      Darr: "\u21A1",
      Dashv: "\u2AE4",
      Dcaron: "\u010E",
      Dcy: "\u0414",
      Del: "\u2207",
      Delta: "\u0394",
      Dfr: "\u{1D507}",
      DiacriticalAcute: "\xB4",
      DiacriticalDot: "\u02D9",
      DiacriticalDoubleAcute: "\u02DD",
      DiacriticalGrave: "`",
      DiacriticalTilde: "\u02DC",
      Diamond: "\u22C4",
      DifferentialD: "\u2146",
      Dopf: "\u{1D53B}",
      Dot: "\xA8",
      DotDot: "\u20DC",
      DotEqual: "\u2250",
      DoubleContourIntegral: "\u222F",
      DoubleDot: "\xA8",
      DoubleDownArrow: "\u21D3",
      DoubleLeftArrow: "\u21D0",
      DoubleLeftRightArrow: "\u21D4",
      DoubleLeftTee: "\u2AE4",
      DoubleLongLeftArrow: "\u27F8",
      DoubleLongLeftRightArrow: "\u27FA",
      DoubleLongRightArrow: "\u27F9",
      DoubleRightArrow: "\u21D2",
      DoubleRightTee: "\u22A8",
      DoubleUpArrow: "\u21D1",
      DoubleUpDownArrow: "\u21D5",
      DoubleVerticalBar: "\u2225",
      DownArrow: "\u2193",
      DownArrowBar: "\u2913",
      DownArrowUpArrow: "\u21F5",
      DownBreve: "\u0311",
      DownLeftRightVector: "\u2950",
      DownLeftTeeVector: "\u295E",
      DownLeftVector: "\u21BD",
      DownLeftVectorBar: "\u2956",
      DownRightTeeVector: "\u295F",
      DownRightVector: "\u21C1",
      DownRightVectorBar: "\u2957",
      DownTee: "\u22A4",
      DownTeeArrow: "\u21A7",
      Downarrow: "\u21D3",
      Dscr: "\u{1D49F}",
      Dstrok: "\u0110",
      ENG: "\u014A",
      ET: "\xD0",
      ETH: "\xD0",
      Eacut: "\xC9",
      Eacute: "\xC9",
      Ecaron: "\u011A",
      Ecir: "\xCA",
      Ecirc: "\xCA",
      Ecy: "\u042D",
      Edot: "\u0116",
      Efr: "\u{1D508}",
      Egrav: "\xC8",
      Egrave: "\xC8",
      Element: "\u2208",
      Emacr: "\u0112",
      EmptySmallSquare: "\u25FB",
      EmptyVerySmallSquare: "\u25AB",
      Eogon: "\u0118",
      Eopf: "\u{1D53C}",
      Epsilon: "\u0395",
      Equal: "\u2A75",
      EqualTilde: "\u2242",
      Equilibrium: "\u21CC",
      Escr: "\u2130",
      Esim: "\u2A73",
      Eta: "\u0397",
      Eum: "\xCB",
      Euml: "\xCB",
      Exists: "\u2203",
      ExponentialE: "\u2147",
      Fcy: "\u0424",
      Ffr: "\u{1D509}",
      FilledSmallSquare: "\u25FC",
      FilledVerySmallSquare: "\u25AA",
      Fopf: "\u{1D53D}",
      ForAll: "\u2200",
      Fouriertrf: "\u2131",
      Fscr: "\u2131",
      GJcy: "\u0403",
      G: ">",
      GT: ">",
      Gamma: "\u0393",
      Gammad: "\u03DC",
      Gbreve: "\u011E",
      Gcedil: "\u0122",
      Gcirc: "\u011C",
      Gcy: "\u0413",
      Gdot: "\u0120",
      Gfr: "\u{1D50A}",
      Gg: "\u22D9",
      Gopf: "\u{1D53E}",
      GreaterEqual: "\u2265",
      GreaterEqualLess: "\u22DB",
      GreaterFullEqual: "\u2267",
      GreaterGreater: "\u2AA2",
      GreaterLess: "\u2277",
      GreaterSlantEqual: "\u2A7E",
      GreaterTilde: "\u2273",
      Gscr: "\u{1D4A2}",
      Gt: "\u226B",
      HARDcy: "\u042A",
      Hacek: "\u02C7",
      Hat: "^",
      Hcirc: "\u0124",
      Hfr: "\u210C",
      HilbertSpace: "\u210B",
      Hopf: "\u210D",
      HorizontalLine: "\u2500",
      Hscr: "\u210B",
      Hstrok: "\u0126",
      HumpDownHump: "\u224E",
      HumpEqual: "\u224F",
      IEcy: "\u0415",
      IJlig: "\u0132",
      IOcy: "\u0401",
      Iacut: "\xCD",
      Iacute: "\xCD",
      Icir: "\xCE",
      Icirc: "\xCE",
      Icy: "\u0418",
      Idot: "\u0130",
      Ifr: "\u2111",
      Igrav: "\xCC",
      Igrave: "\xCC",
      Im: "\u2111",
      Imacr: "\u012A",
      ImaginaryI: "\u2148",
      Implies: "\u21D2",
      Int: "\u222C",
      Integral: "\u222B",
      Intersection: "\u22C2",
      InvisibleComma: "\u2063",
      InvisibleTimes: "\u2062",
      Iogon: "\u012E",
      Iopf: "\u{1D540}",
      Iota: "\u0399",
      Iscr: "\u2110",
      Itilde: "\u0128",
      Iukcy: "\u0406",
      Ium: "\xCF",
      Iuml: "\xCF",
      Jcirc: "\u0134",
      Jcy: "\u0419",
      Jfr: "\u{1D50D}",
      Jopf: "\u{1D541}",
      Jscr: "\u{1D4A5}",
      Jsercy: "\u0408",
      Jukcy: "\u0404",
      KHcy: "\u0425",
      KJcy: "\u040C",
      Kappa: "\u039A",
      Kcedil: "\u0136",
      Kcy: "\u041A",
      Kfr: "\u{1D50E}",
      Kopf: "\u{1D542}",
      Kscr: "\u{1D4A6}",
      LJcy: "\u0409",
      L: "<",
      LT: "<",
      Lacute: "\u0139",
      Lambda: "\u039B",
      Lang: "\u27EA",
      Laplacetrf: "\u2112",
      Larr: "\u219E",
      Lcaron: "\u013D",
      Lcedil: "\u013B",
      Lcy: "\u041B",
      LeftAngleBracket: "\u27E8",
      LeftArrow: "\u2190",
      LeftArrowBar: "\u21E4",
      LeftArrowRightArrow: "\u21C6",
      LeftCeiling: "\u2308",
      LeftDoubleBracket: "\u27E6",
      LeftDownTeeVector: "\u2961",
      LeftDownVector: "\u21C3",
      LeftDownVectorBar: "\u2959",
      LeftFloor: "\u230A",
      LeftRightArrow: "\u2194",
      LeftRightVector: "\u294E",
      LeftTee: "\u22A3",
      LeftTeeArrow: "\u21A4",
      LeftTeeVector: "\u295A",
      LeftTriangle: "\u22B2",
      LeftTriangleBar: "\u29CF",
      LeftTriangleEqual: "\u22B4",
      LeftUpDownVector: "\u2951",
      LeftUpTeeVector: "\u2960",
      LeftUpVector: "\u21BF",
      LeftUpVectorBar: "\u2958",
      LeftVector: "\u21BC",
      LeftVectorBar: "\u2952",
      Leftarrow: "\u21D0",
      Leftrightarrow: "\u21D4",
      LessEqualGreater: "\u22DA",
      LessFullEqual: "\u2266",
      LessGreater: "\u2276",
      LessLess: "\u2AA1",
      LessSlantEqual: "\u2A7D",
      LessTilde: "\u2272",
      Lfr: "\u{1D50F}",
      Ll: "\u22D8",
      Lleftarrow: "\u21DA",
      Lmidot: "\u013F",
      LongLeftArrow: "\u27F5",
      LongLeftRightArrow: "\u27F7",
      LongRightArrow: "\u27F6",
      Longleftarrow: "\u27F8",
      Longleftrightarrow: "\u27FA",
      Longrightarrow: "\u27F9",
      Lopf: "\u{1D543}",
      LowerLeftArrow: "\u2199",
      LowerRightArrow: "\u2198",
      Lscr: "\u2112",
      Lsh: "\u21B0",
      Lstrok: "\u0141",
      Lt: "\u226A",
      Map: "\u2905",
      Mcy: "\u041C",
      MediumSpace: "\u205F",
      Mellintrf: "\u2133",
      Mfr: "\u{1D510}",
      MinusPlus: "\u2213",
      Mopf: "\u{1D544}",
      Mscr: "\u2133",
      Mu: "\u039C",
      NJcy: "\u040A",
      Nacute: "\u0143",
      Ncaron: "\u0147",
      Ncedil: "\u0145",
      Ncy: "\u041D",
      NegativeMediumSpace: "\u200B",
      NegativeThickSpace: "\u200B",
      NegativeThinSpace: "\u200B",
      NegativeVeryThinSpace: "\u200B",
      NestedGreaterGreater: "\u226B",
      NestedLessLess: "\u226A",
      NewLine: "\n",
      Nfr: "\u{1D511}",
      NoBreak: "\u2060",
      NonBreakingSpace: "\xA0",
      Nopf: "\u2115",
      Not: "\u2AEC",
      NotCongruent: "\u2262",
      NotCupCap: "\u226D",
      NotDoubleVerticalBar: "\u2226",
      NotElement: "\u2209",
      NotEqual: "\u2260",
      NotEqualTilde: "\u2242\u0338",
      NotExists: "\u2204",
      NotGreater: "\u226F",
      NotGreaterEqual: "\u2271",
      NotGreaterFullEqual: "\u2267\u0338",
      NotGreaterGreater: "\u226B\u0338",
      NotGreaterLess: "\u2279",
      NotGreaterSlantEqual: "\u2A7E\u0338",
      NotGreaterTilde: "\u2275",
      NotHumpDownHump: "\u224E\u0338",
      NotHumpEqual: "\u224F\u0338",
      NotLeftTriangle: "\u22EA",
      NotLeftTriangleBar: "\u29CF\u0338",
      NotLeftTriangleEqual: "\u22EC",
      NotLess: "\u226E",
      NotLessEqual: "\u2270",
      NotLessGreater: "\u2278",
      NotLessLess: "\u226A\u0338",
      NotLessSlantEqual: "\u2A7D\u0338",
      NotLessTilde: "\u2274",
      NotNestedGreaterGreater: "\u2AA2\u0338",
      NotNestedLessLess: "\u2AA1\u0338",
      NotPrecedes: "\u2280",
      NotPrecedesEqual: "\u2AAF\u0338",
      NotPrecedesSlantEqual: "\u22E0",
      NotReverseElement: "\u220C",
      NotRightTriangle: "\u22EB",
      NotRightTriangleBar: "\u29D0\u0338",
      NotRightTriangleEqual: "\u22ED",
      NotSquareSubset: "\u228F\u0338",
      NotSquareSubsetEqual: "\u22E2",
      NotSquareSuperset: "\u2290\u0338",
      NotSquareSupersetEqual: "\u22E3",
      NotSubset: "\u2282\u20D2",
      NotSubsetEqual: "\u2288",
      NotSucceeds: "\u2281",
      NotSucceedsEqual: "\u2AB0\u0338",
      NotSucceedsSlantEqual: "\u22E1",
      NotSucceedsTilde: "\u227F\u0338",
      NotSuperset: "\u2283\u20D2",
      NotSupersetEqual: "\u2289",
      NotTilde: "\u2241",
      NotTildeEqual: "\u2244",
      NotTildeFullEqual: "\u2247",
      NotTildeTilde: "\u2249",
      NotVerticalBar: "\u2224",
      Nscr: "\u{1D4A9}",
      Ntild: "\xD1",
      Ntilde: "\xD1",
      Nu: "\u039D",
      OElig: "\u0152",
      Oacut: "\xD3",
      Oacute: "\xD3",
      Ocir: "\xD4",
      Ocirc: "\xD4",
      Ocy: "\u041E",
      Odblac: "\u0150",
      Ofr: "\u{1D512}",
      Ograv: "\xD2",
      Ograve: "\xD2",
      Omacr: "\u014C",
      Omega: "\u03A9",
      Omicron: "\u039F",
      Oopf: "\u{1D546}",
      OpenCurlyDoubleQuote: "\u201C",
      OpenCurlyQuote: "\u2018",
      Or: "\u2A54",
      Oscr: "\u{1D4AA}",
      Oslas: "\xD8",
      Oslash: "\xD8",
      Otild: "\xD5",
      Otilde: "\xD5",
      Otimes: "\u2A37",
      Oum: "\xD6",
      Ouml: "\xD6",
      OverBar: "\u203E",
      OverBrace: "\u23DE",
      OverBracket: "\u23B4",
      OverParenthesis: "\u23DC",
      PartialD: "\u2202",
      Pcy: "\u041F",
      Pfr: "\u{1D513}",
      Phi: "\u03A6",
      Pi: "\u03A0",
      PlusMinus: "\xB1",
      Poincareplane: "\u210C",
      Popf: "\u2119",
      Pr: "\u2ABB",
      Precedes: "\u227A",
      PrecedesEqual: "\u2AAF",
      PrecedesSlantEqual: "\u227C",
      PrecedesTilde: "\u227E",
      Prime: "\u2033",
      Product: "\u220F",
      Proportion: "\u2237",
      Proportional: "\u221D",
      Pscr: "\u{1D4AB}",
      Psi: "\u03A8",
      QUO: '"',
      QUOT: '"',
      Qfr: "\u{1D514}",
      Qopf: "\u211A",
      Qscr: "\u{1D4AC}",
      RBarr: "\u2910",
      RE: "\xAE",
      REG: "\xAE",
      Racute: "\u0154",
      Rang: "\u27EB",
      Rarr: "\u21A0",
      Rarrtl: "\u2916",
      Rcaron: "\u0158",
      Rcedil: "\u0156",
      Rcy: "\u0420",
      Re: "\u211C",
      ReverseElement: "\u220B",
      ReverseEquilibrium: "\u21CB",
      ReverseUpEquilibrium: "\u296F",
      Rfr: "\u211C",
      Rho: "\u03A1",
      RightAngleBracket: "\u27E9",
      RightArrow: "\u2192",
      RightArrowBar: "\u21E5",
      RightArrowLeftArrow: "\u21C4",
      RightCeiling: "\u2309",
      RightDoubleBracket: "\u27E7",
      RightDownTeeVector: "\u295D",
      RightDownVector: "\u21C2",
      RightDownVectorBar: "\u2955",
      RightFloor: "\u230B",
      RightTee: "\u22A2",
      RightTeeArrow: "\u21A6",
      RightTeeVector: "\u295B",
      RightTriangle: "\u22B3",
      RightTriangleBar: "\u29D0",
      RightTriangleEqual: "\u22B5",
      RightUpDownVector: "\u294F",
      RightUpTeeVector: "\u295C",
      RightUpVector: "\u21BE",
      RightUpVectorBar: "\u2954",
      RightVector: "\u21C0",
      RightVectorBar: "\u2953",
      Rightarrow: "\u21D2",
      Ropf: "\u211D",
      RoundImplies: "\u2970",
      Rrightarrow: "\u21DB",
      Rscr: "\u211B",
      Rsh: "\u21B1",
      RuleDelayed: "\u29F4",
      SHCHcy: "\u0429",
      SHcy: "\u0428",
      SOFTcy: "\u042C",
      Sacute: "\u015A",
      Sc: "\u2ABC",
      Scaron: "\u0160",
      Scedil: "\u015E",
      Scirc: "\u015C",
      Scy: "\u0421",
      Sfr: "\u{1D516}",
      ShortDownArrow: "\u2193",
      ShortLeftArrow: "\u2190",
      ShortRightArrow: "\u2192",
      ShortUpArrow: "\u2191",
      Sigma: "\u03A3",
      SmallCircle: "\u2218",
      Sopf: "\u{1D54A}",
      Sqrt: "\u221A",
      Square: "\u25A1",
      SquareIntersection: "\u2293",
      SquareSubset: "\u228F",
      SquareSubsetEqual: "\u2291",
      SquareSuperset: "\u2290",
      SquareSupersetEqual: "\u2292",
      SquareUnion: "\u2294",
      Sscr: "\u{1D4AE}",
      Star: "\u22C6",
      Sub: "\u22D0",
      Subset: "\u22D0",
      SubsetEqual: "\u2286",
      Succeeds: "\u227B",
      SucceedsEqual: "\u2AB0",
      SucceedsSlantEqual: "\u227D",
      SucceedsTilde: "\u227F",
      SuchThat: "\u220B",
      Sum: "\u2211",
      Sup: "\u22D1",
      Superset: "\u2283",
      SupersetEqual: "\u2287",
      Supset: "\u22D1",
      THOR: "\xDE",
      THORN: "\xDE",
      TRADE: "\u2122",
      TSHcy: "\u040B",
      TScy: "\u0426",
      Tab: "	",
      Tau: "\u03A4",
      Tcaron: "\u0164",
      Tcedil: "\u0162",
      Tcy: "\u0422",
      Tfr: "\u{1D517}",
      Therefore: "\u2234",
      Theta: "\u0398",
      ThickSpace: "\u205F\u200A",
      ThinSpace: "\u2009",
      Tilde: "\u223C",
      TildeEqual: "\u2243",
      TildeFullEqual: "\u2245",
      TildeTilde: "\u2248",
      Topf: "\u{1D54B}",
      TripleDot: "\u20DB",
      Tscr: "\u{1D4AF}",
      Tstrok: "\u0166",
      Uacut: "\xDA",
      Uacute: "\xDA",
      Uarr: "\u219F",
      Uarrocir: "\u2949",
      Ubrcy: "\u040E",
      Ubreve: "\u016C",
      Ucir: "\xDB",
      Ucirc: "\xDB",
      Ucy: "\u0423",
      Udblac: "\u0170",
      Ufr: "\u{1D518}",
      Ugrav: "\xD9",
      Ugrave: "\xD9",
      Umacr: "\u016A",
      UnderBar: "_",
      UnderBrace: "\u23DF",
      UnderBracket: "\u23B5",
      UnderParenthesis: "\u23DD",
      Union: "\u22C3",
      UnionPlus: "\u228E",
      Uogon: "\u0172",
      Uopf: "\u{1D54C}",
      UpArrow: "\u2191",
      UpArrowBar: "\u2912",
      UpArrowDownArrow: "\u21C5",
      UpDownArrow: "\u2195",
      UpEquilibrium: "\u296E",
      UpTee: "\u22A5",
      UpTeeArrow: "\u21A5",
      Uparrow: "\u21D1",
      Updownarrow: "\u21D5",
      UpperLeftArrow: "\u2196",
      UpperRightArrow: "\u2197",
      Upsi: "\u03D2",
      Upsilon: "\u03A5",
      Uring: "\u016E",
      Uscr: "\u{1D4B0}",
      Utilde: "\u0168",
      Uum: "\xDC",
      Uuml: "\xDC",
      VDash: "\u22AB",
      Vbar: "\u2AEB",
      Vcy: "\u0412",
      Vdash: "\u22A9",
      Vdashl: "\u2AE6",
      Vee: "\u22C1",
      Verbar: "\u2016",
      Vert: "\u2016",
      VerticalBar: "\u2223",
      VerticalLine: "|",
      VerticalSeparator: "\u2758",
      VerticalTilde: "\u2240",
      VeryThinSpace: "\u200A",
      Vfr: "\u{1D519}",
      Vopf: "\u{1D54D}",
      Vscr: "\u{1D4B1}",
      Vvdash: "\u22AA",
      Wcirc: "\u0174",
      Wedge: "\u22C0",
      Wfr: "\u{1D51A}",
      Wopf: "\u{1D54E}",
      Wscr: "\u{1D4B2}",
      Xfr: "\u{1D51B}",
      Xi: "\u039E",
      Xopf: "\u{1D54F}",
      Xscr: "\u{1D4B3}",
      YAcy: "\u042F",
      YIcy: "\u0407",
      YUcy: "\u042E",
      Yacut: "\xDD",
      Yacute: "\xDD",
      Ycirc: "\u0176",
      Ycy: "\u042B",
      Yfr: "\u{1D51C}",
      Yopf: "\u{1D550}",
      Yscr: "\u{1D4B4}",
      Yuml: "\u0178",
      ZHcy: "\u0416",
      Zacute: "\u0179",
      Zcaron: "\u017D",
      Zcy: "\u0417",
      Zdot: "\u017B",
      ZeroWidthSpace: "\u200B",
      Zeta: "\u0396",
      Zfr: "\u2128",
      Zopf: "\u2124",
      Zscr: "\u{1D4B5}",
      aacut: "\xE1",
      aacute: "\xE1",
      abreve: "\u0103",
      ac: "\u223E",
      acE: "\u223E\u0333",
      acd: "\u223F",
      acir: "\xE2",
      acirc: "\xE2",
      acut: "\xB4",
      acute: "\xB4",
      acy: "\u0430",
      aeli: "\xE6",
      aelig: "\xE6",
      af: "\u2061",
      afr: "\u{1D51E}",
      agrav: "\xE0",
      agrave: "\xE0",
      alefsym: "\u2135",
      aleph: "\u2135",
      alpha: "\u03B1",
      amacr: "\u0101",
      amalg: "\u2A3F",
      am: "&",
      amp: "&",
      and: "\u2227",
      andand: "\u2A55",
      andd: "\u2A5C",
      andslope: "\u2A58",
      andv: "\u2A5A",
      ang: "\u2220",
      ange: "\u29A4",
      angle: "\u2220",
      angmsd: "\u2221",
      angmsdaa: "\u29A8",
      angmsdab: "\u29A9",
      angmsdac: "\u29AA",
      angmsdad: "\u29AB",
      angmsdae: "\u29AC",
      angmsdaf: "\u29AD",
      angmsdag: "\u29AE",
      angmsdah: "\u29AF",
      angrt: "\u221F",
      angrtvb: "\u22BE",
      angrtvbd: "\u299D",
      angsph: "\u2222",
      angst: "\xC5",
      angzarr: "\u237C",
      aogon: "\u0105",
      aopf: "\u{1D552}",
      ap: "\u2248",
      apE: "\u2A70",
      apacir: "\u2A6F",
      ape: "\u224A",
      apid: "\u224B",
      apos: "'",
      approx: "\u2248",
      approxeq: "\u224A",
      arin: "\xE5",
      aring: "\xE5",
      ascr: "\u{1D4B6}",
      ast: "*",
      asymp: "\u2248",
      asympeq: "\u224D",
      atild: "\xE3",
      atilde: "\xE3",
      aum: "\xE4",
      auml: "\xE4",
      awconint: "\u2233",
      awint: "\u2A11",
      bNot: "\u2AED",
      backcong: "\u224C",
      backepsilon: "\u03F6",
      backprime: "\u2035",
      backsim: "\u223D",
      backsimeq: "\u22CD",
      barvee: "\u22BD",
      barwed: "\u2305",
      barwedge: "\u2305",
      bbrk: "\u23B5",
      bbrktbrk: "\u23B6",
      bcong: "\u224C",
      bcy: "\u0431",
      bdquo: "\u201E",
      becaus: "\u2235",
      because: "\u2235",
      bemptyv: "\u29B0",
      bepsi: "\u03F6",
      bernou: "\u212C",
      beta: "\u03B2",
      beth: "\u2136",
      between: "\u226C",
      bfr: "\u{1D51F}",
      bigcap: "\u22C2",
      bigcirc: "\u25EF",
      bigcup: "\u22C3",
      bigodot: "\u2A00",
      bigoplus: "\u2A01",
      bigotimes: "\u2A02",
      bigsqcup: "\u2A06",
      bigstar: "\u2605",
      bigtriangledown: "\u25BD",
      bigtriangleup: "\u25B3",
      biguplus: "\u2A04",
      bigvee: "\u22C1",
      bigwedge: "\u22C0",
      bkarow: "\u290D",
      blacklozenge: "\u29EB",
      blacksquare: "\u25AA",
      blacktriangle: "\u25B4",
      blacktriangledown: "\u25BE",
      blacktriangleleft: "\u25C2",
      blacktriangleright: "\u25B8",
      blank: "\u2423",
      blk12: "\u2592",
      blk14: "\u2591",
      blk34: "\u2593",
      block: "\u2588",
      bne: "=\u20E5",
      bnequiv: "\u2261\u20E5",
      bnot: "\u2310",
      bopf: "\u{1D553}",
      bot: "\u22A5",
      bottom: "\u22A5",
      bowtie: "\u22C8",
      boxDL: "\u2557",
      boxDR: "\u2554",
      boxDl: "\u2556",
      boxDr: "\u2553",
      boxH: "\u2550",
      boxHD: "\u2566",
      boxHU: "\u2569",
      boxHd: "\u2564",
      boxHu: "\u2567",
      boxUL: "\u255D",
      boxUR: "\u255A",
      boxUl: "\u255C",
      boxUr: "\u2559",
      boxV: "\u2551",
      boxVH: "\u256C",
      boxVL: "\u2563",
      boxVR: "\u2560",
      boxVh: "\u256B",
      boxVl: "\u2562",
      boxVr: "\u255F",
      boxbox: "\u29C9",
      boxdL: "\u2555",
      boxdR: "\u2552",
      boxdl: "\u2510",
      boxdr: "\u250C",
      boxh: "\u2500",
      boxhD: "\u2565",
      boxhU: "\u2568",
      boxhd: "\u252C",
      boxhu: "\u2534",
      boxminus: "\u229F",
      boxplus: "\u229E",
      boxtimes: "\u22A0",
      boxuL: "\u255B",
      boxuR: "\u2558",
      boxul: "\u2518",
      boxur: "\u2514",
      boxv: "\u2502",
      boxvH: "\u256A",
      boxvL: "\u2561",
      boxvR: "\u255E",
      boxvh: "\u253C",
      boxvl: "\u2524",
      boxvr: "\u251C",
      bprime: "\u2035",
      breve: "\u02D8",
      brvba: "\xA6",
      brvbar: "\xA6",
      bscr: "\u{1D4B7}",
      bsemi: "\u204F",
      bsim: "\u223D",
      bsime: "\u22CD",
      bsol: "\\",
      bsolb: "\u29C5",
      bsolhsub: "\u27C8",
      bull: "\u2022",
      bullet: "\u2022",
      bump: "\u224E",
      bumpE: "\u2AAE",
      bumpe: "\u224F",
      bumpeq: "\u224F",
      cacute: "\u0107",
      cap: "\u2229",
      capand: "\u2A44",
      capbrcup: "\u2A49",
      capcap: "\u2A4B",
      capcup: "\u2A47",
      capdot: "\u2A40",
      caps: "\u2229\uFE00",
      caret: "\u2041",
      caron: "\u02C7",
      ccaps: "\u2A4D",
      ccaron: "\u010D",
      ccedi: "\xE7",
      ccedil: "\xE7",
      ccirc: "\u0109",
      ccups: "\u2A4C",
      ccupssm: "\u2A50",
      cdot: "\u010B",
      cedi: "\xB8",
      cedil: "\xB8",
      cemptyv: "\u29B2",
      cen: "\xA2",
      cent: "\xA2",
      centerdot: "\xB7",
      cfr: "\u{1D520}",
      chcy: "\u0447",
      check: "\u2713",
      checkmark: "\u2713",
      chi: "\u03C7",
      cir: "\u25CB",
      cirE: "\u29C3",
      circ: "\u02C6",
      circeq: "\u2257",
      circlearrowleft: "\u21BA",
      circlearrowright: "\u21BB",
      circledR: "\xAE",
      circledS: "\u24C8",
      circledast: "\u229B",
      circledcirc: "\u229A",
      circleddash: "\u229D",
      cire: "\u2257",
      cirfnint: "\u2A10",
      cirmid: "\u2AEF",
      cirscir: "\u29C2",
      clubs: "\u2663",
      clubsuit: "\u2663",
      colon: ":",
      colone: "\u2254",
      coloneq: "\u2254",
      comma: ",",
      commat: "@",
      comp: "\u2201",
      compfn: "\u2218",
      complement: "\u2201",
      complexes: "\u2102",
      cong: "\u2245",
      congdot: "\u2A6D",
      conint: "\u222E",
      copf: "\u{1D554}",
      coprod: "\u2210",
      cop: "\xA9",
      copy: "\xA9",
      copysr: "\u2117",
      crarr: "\u21B5",
      cross: "\u2717",
      cscr: "\u{1D4B8}",
      csub: "\u2ACF",
      csube: "\u2AD1",
      csup: "\u2AD0",
      csupe: "\u2AD2",
      ctdot: "\u22EF",
      cudarrl: "\u2938",
      cudarrr: "\u2935",
      cuepr: "\u22DE",
      cuesc: "\u22DF",
      cularr: "\u21B6",
      cularrp: "\u293D",
      cup: "\u222A",
      cupbrcap: "\u2A48",
      cupcap: "\u2A46",
      cupcup: "\u2A4A",
      cupdot: "\u228D",
      cupor: "\u2A45",
      cups: "\u222A\uFE00",
      curarr: "\u21B7",
      curarrm: "\u293C",
      curlyeqprec: "\u22DE",
      curlyeqsucc: "\u22DF",
      curlyvee: "\u22CE",
      curlywedge: "\u22CF",
      curre: "\xA4",
      curren: "\xA4",
      curvearrowleft: "\u21B6",
      curvearrowright: "\u21B7",
      cuvee: "\u22CE",
      cuwed: "\u22CF",
      cwconint: "\u2232",
      cwint: "\u2231",
      cylcty: "\u232D",
      dArr: "\u21D3",
      dHar: "\u2965",
      dagger: "\u2020",
      daleth: "\u2138",
      darr: "\u2193",
      dash: "\u2010",
      dashv: "\u22A3",
      dbkarow: "\u290F",
      dblac: "\u02DD",
      dcaron: "\u010F",
      dcy: "\u0434",
      dd: "\u2146",
      ddagger: "\u2021",
      ddarr: "\u21CA",
      ddotseq: "\u2A77",
      de: "\xB0",
      deg: "\xB0",
      delta: "\u03B4",
      demptyv: "\u29B1",
      dfisht: "\u297F",
      dfr: "\u{1D521}",
      dharl: "\u21C3",
      dharr: "\u21C2",
      diam: "\u22C4",
      diamond: "\u22C4",
      diamondsuit: "\u2666",
      diams: "\u2666",
      die: "\xA8",
      digamma: "\u03DD",
      disin: "\u22F2",
      div: "\xF7",
      divid: "\xF7",
      divide: "\xF7",
      divideontimes: "\u22C7",
      divonx: "\u22C7",
      djcy: "\u0452",
      dlcorn: "\u231E",
      dlcrop: "\u230D",
      dollar: "$",
      dopf: "\u{1D555}",
      dot: "\u02D9",
      doteq: "\u2250",
      doteqdot: "\u2251",
      dotminus: "\u2238",
      dotplus: "\u2214",
      dotsquare: "\u22A1",
      doublebarwedge: "\u2306",
      downarrow: "\u2193",
      downdownarrows: "\u21CA",
      downharpoonleft: "\u21C3",
      downharpoonright: "\u21C2",
      drbkarow: "\u2910",
      drcorn: "\u231F",
      drcrop: "\u230C",
      dscr: "\u{1D4B9}",
      dscy: "\u0455",
      dsol: "\u29F6",
      dstrok: "\u0111",
      dtdot: "\u22F1",
      dtri: "\u25BF",
      dtrif: "\u25BE",
      duarr: "\u21F5",
      duhar: "\u296F",
      dwangle: "\u29A6",
      dzcy: "\u045F",
      dzigrarr: "\u27FF",
      eDDot: "\u2A77",
      eDot: "\u2251",
      eacut: "\xE9",
      eacute: "\xE9",
      easter: "\u2A6E",
      ecaron: "\u011B",
      ecir: "\xEA",
      ecirc: "\xEA",
      ecolon: "\u2255",
      ecy: "\u044D",
      edot: "\u0117",
      ee: "\u2147",
      efDot: "\u2252",
      efr: "\u{1D522}",
      eg: "\u2A9A",
      egrav: "\xE8",
      egrave: "\xE8",
      egs: "\u2A96",
      egsdot: "\u2A98",
      el: "\u2A99",
      elinters: "\u23E7",
      ell: "\u2113",
      els: "\u2A95",
      elsdot: "\u2A97",
      emacr: "\u0113",
      empty: "\u2205",
      emptyset: "\u2205",
      emptyv: "\u2205",
      emsp13: "\u2004",
      emsp14: "\u2005",
      emsp: "\u2003",
      eng: "\u014B",
      ensp: "\u2002",
      eogon: "\u0119",
      eopf: "\u{1D556}",
      epar: "\u22D5",
      eparsl: "\u29E3",
      eplus: "\u2A71",
      epsi: "\u03B5",
      epsilon: "\u03B5",
      epsiv: "\u03F5",
      eqcirc: "\u2256",
      eqcolon: "\u2255",
      eqsim: "\u2242",
      eqslantgtr: "\u2A96",
      eqslantless: "\u2A95",
      equals: "=",
      equest: "\u225F",
      equiv: "\u2261",
      equivDD: "\u2A78",
      eqvparsl: "\u29E5",
      erDot: "\u2253",
      erarr: "\u2971",
      escr: "\u212F",
      esdot: "\u2250",
      esim: "\u2242",
      eta: "\u03B7",
      et: "\xF0",
      eth: "\xF0",
      eum: "\xEB",
      euml: "\xEB",
      euro: "\u20AC",
      excl: "!",
      exist: "\u2203",
      expectation: "\u2130",
      exponentiale: "\u2147",
      fallingdotseq: "\u2252",
      fcy: "\u0444",
      female: "\u2640",
      ffilig: "\uFB03",
      fflig: "\uFB00",
      ffllig: "\uFB04",
      ffr: "\u{1D523}",
      filig: "\uFB01",
      fjlig: "fj",
      flat: "\u266D",
      fllig: "\uFB02",
      fltns: "\u25B1",
      fnof: "\u0192",
      fopf: "\u{1D557}",
      forall: "\u2200",
      fork: "\u22D4",
      forkv: "\u2AD9",
      fpartint: "\u2A0D",
      frac1: "\xBC",
      frac12: "\xBD",
      frac13: "\u2153",
      frac14: "\xBC",
      frac15: "\u2155",
      frac16: "\u2159",
      frac18: "\u215B",
      frac23: "\u2154",
      frac25: "\u2156",
      frac3: "\xBE",
      frac34: "\xBE",
      frac35: "\u2157",
      frac38: "\u215C",
      frac45: "\u2158",
      frac56: "\u215A",
      frac58: "\u215D",
      frac78: "\u215E",
      frasl: "\u2044",
      frown: "\u2322",
      fscr: "\u{1D4BB}",
      gE: "\u2267",
      gEl: "\u2A8C",
      gacute: "\u01F5",
      gamma: "\u03B3",
      gammad: "\u03DD",
      gap: "\u2A86",
      gbreve: "\u011F",
      gcirc: "\u011D",
      gcy: "\u0433",
      gdot: "\u0121",
      ge: "\u2265",
      gel: "\u22DB",
      geq: "\u2265",
      geqq: "\u2267",
      geqslant: "\u2A7E",
      ges: "\u2A7E",
      gescc: "\u2AA9",
      gesdot: "\u2A80",
      gesdoto: "\u2A82",
      gesdotol: "\u2A84",
      gesl: "\u22DB\uFE00",
      gesles: "\u2A94",
      gfr: "\u{1D524}",
      gg: "\u226B",
      ggg: "\u22D9",
      gimel: "\u2137",
      gjcy: "\u0453",
      gl: "\u2277",
      glE: "\u2A92",
      gla: "\u2AA5",
      glj: "\u2AA4",
      gnE: "\u2269",
      gnap: "\u2A8A",
      gnapprox: "\u2A8A",
      gne: "\u2A88",
      gneq: "\u2A88",
      gneqq: "\u2269",
      gnsim: "\u22E7",
      gopf: "\u{1D558}",
      grave: "`",
      gscr: "\u210A",
      gsim: "\u2273",
      gsime: "\u2A8E",
      gsiml: "\u2A90",
      g: ">",
      gt: ">",
      gtcc: "\u2AA7",
      gtcir: "\u2A7A",
      gtdot: "\u22D7",
      gtlPar: "\u2995",
      gtquest: "\u2A7C",
      gtrapprox: "\u2A86",
      gtrarr: "\u2978",
      gtrdot: "\u22D7",
      gtreqless: "\u22DB",
      gtreqqless: "\u2A8C",
      gtrless: "\u2277",
      gtrsim: "\u2273",
      gvertneqq: "\u2269\uFE00",
      gvnE: "\u2269\uFE00",
      hArr: "\u21D4",
      hairsp: "\u200A",
      half: "\xBD",
      hamilt: "\u210B",
      hardcy: "\u044A",
      harr: "\u2194",
      harrcir: "\u2948",
      harrw: "\u21AD",
      hbar: "\u210F",
      hcirc: "\u0125",
      hearts: "\u2665",
      heartsuit: "\u2665",
      hellip: "\u2026",
      hercon: "\u22B9",
      hfr: "\u{1D525}",
      hksearow: "\u2925",
      hkswarow: "\u2926",
      hoarr: "\u21FF",
      homtht: "\u223B",
      hookleftarrow: "\u21A9",
      hookrightarrow: "\u21AA",
      hopf: "\u{1D559}",
      horbar: "\u2015",
      hscr: "\u{1D4BD}",
      hslash: "\u210F",
      hstrok: "\u0127",
      hybull: "\u2043",
      hyphen: "\u2010",
      iacut: "\xED",
      iacute: "\xED",
      ic: "\u2063",
      icir: "\xEE",
      icirc: "\xEE",
      icy: "\u0438",
      iecy: "\u0435",
      iexc: "\xA1",
      iexcl: "\xA1",
      iff: "\u21D4",
      ifr: "\u{1D526}",
      igrav: "\xEC",
      igrave: "\xEC",
      ii: "\u2148",
      iiiint: "\u2A0C",
      iiint: "\u222D",
      iinfin: "\u29DC",
      iiota: "\u2129",
      ijlig: "\u0133",
      imacr: "\u012B",
      image: "\u2111",
      imagline: "\u2110",
      imagpart: "\u2111",
      imath: "\u0131",
      imof: "\u22B7",
      imped: "\u01B5",
      in: "\u2208",
      incare: "\u2105",
      infin: "\u221E",
      infintie: "\u29DD",
      inodot: "\u0131",
      int: "\u222B",
      intcal: "\u22BA",
      integers: "\u2124",
      intercal: "\u22BA",
      intlarhk: "\u2A17",
      intprod: "\u2A3C",
      iocy: "\u0451",
      iogon: "\u012F",
      iopf: "\u{1D55A}",
      iota: "\u03B9",
      iprod: "\u2A3C",
      iques: "\xBF",
      iquest: "\xBF",
      iscr: "\u{1D4BE}",
      isin: "\u2208",
      isinE: "\u22F9",
      isindot: "\u22F5",
      isins: "\u22F4",
      isinsv: "\u22F3",
      isinv: "\u2208",
      it: "\u2062",
      itilde: "\u0129",
      iukcy: "\u0456",
      ium: "\xEF",
      iuml: "\xEF",
      jcirc: "\u0135",
      jcy: "\u0439",
      jfr: "\u{1D527}",
      jmath: "\u0237",
      jopf: "\u{1D55B}",
      jscr: "\u{1D4BF}",
      jsercy: "\u0458",
      jukcy: "\u0454",
      kappa: "\u03BA",
      kappav: "\u03F0",
      kcedil: "\u0137",
      kcy: "\u043A",
      kfr: "\u{1D528}",
      kgreen: "\u0138",
      khcy: "\u0445",
      kjcy: "\u045C",
      kopf: "\u{1D55C}",
      kscr: "\u{1D4C0}",
      lAarr: "\u21DA",
      lArr: "\u21D0",
      lAtail: "\u291B",
      lBarr: "\u290E",
      lE: "\u2266",
      lEg: "\u2A8B",
      lHar: "\u2962",
      lacute: "\u013A",
      laemptyv: "\u29B4",
      lagran: "\u2112",
      lambda: "\u03BB",
      lang: "\u27E8",
      langd: "\u2991",
      langle: "\u27E8",
      lap: "\u2A85",
      laqu: "\xAB",
      laquo: "\xAB",
      larr: "\u2190",
      larrb: "\u21E4",
      larrbfs: "\u291F",
      larrfs: "\u291D",
      larrhk: "\u21A9",
      larrlp: "\u21AB",
      larrpl: "\u2939",
      larrsim: "\u2973",
      larrtl: "\u21A2",
      lat: "\u2AAB",
      latail: "\u2919",
      late: "\u2AAD",
      lates: "\u2AAD\uFE00",
      lbarr: "\u290C",
      lbbrk: "\u2772",
      lbrace: "{",
      lbrack: "[",
      lbrke: "\u298B",
      lbrksld: "\u298F",
      lbrkslu: "\u298D",
      lcaron: "\u013E",
      lcedil: "\u013C",
      lceil: "\u2308",
      lcub: "{",
      lcy: "\u043B",
      ldca: "\u2936",
      ldquo: "\u201C",
      ldquor: "\u201E",
      ldrdhar: "\u2967",
      ldrushar: "\u294B",
      ldsh: "\u21B2",
      le: "\u2264",
      leftarrow: "\u2190",
      leftarrowtail: "\u21A2",
      leftharpoondown: "\u21BD",
      leftharpoonup: "\u21BC",
      leftleftarrows: "\u21C7",
      leftrightarrow: "\u2194",
      leftrightarrows: "\u21C6",
      leftrightharpoons: "\u21CB",
      leftrightsquigarrow: "\u21AD",
      leftthreetimes: "\u22CB",
      leg: "\u22DA",
      leq: "\u2264",
      leqq: "\u2266",
      leqslant: "\u2A7D",
      les: "\u2A7D",
      lescc: "\u2AA8",
      lesdot: "\u2A7F",
      lesdoto: "\u2A81",
      lesdotor: "\u2A83",
      lesg: "\u22DA\uFE00",
      lesges: "\u2A93",
      lessapprox: "\u2A85",
      lessdot: "\u22D6",
      lesseqgtr: "\u22DA",
      lesseqqgtr: "\u2A8B",
      lessgtr: "\u2276",
      lesssim: "\u2272",
      lfisht: "\u297C",
      lfloor: "\u230A",
      lfr: "\u{1D529}",
      lg: "\u2276",
      lgE: "\u2A91",
      lhard: "\u21BD",
      lharu: "\u21BC",
      lharul: "\u296A",
      lhblk: "\u2584",
      ljcy: "\u0459",
      ll: "\u226A",
      llarr: "\u21C7",
      llcorner: "\u231E",
      llhard: "\u296B",
      lltri: "\u25FA",
      lmidot: "\u0140",
      lmoust: "\u23B0",
      lmoustache: "\u23B0",
      lnE: "\u2268",
      lnap: "\u2A89",
      lnapprox: "\u2A89",
      lne: "\u2A87",
      lneq: "\u2A87",
      lneqq: "\u2268",
      lnsim: "\u22E6",
      loang: "\u27EC",
      loarr: "\u21FD",
      lobrk: "\u27E6",
      longleftarrow: "\u27F5",
      longleftrightarrow: "\u27F7",
      longmapsto: "\u27FC",
      longrightarrow: "\u27F6",
      looparrowleft: "\u21AB",
      looparrowright: "\u21AC",
      lopar: "\u2985",
      lopf: "\u{1D55D}",
      loplus: "\u2A2D",
      lotimes: "\u2A34",
      lowast: "\u2217",
      lowbar: "_",
      loz: "\u25CA",
      lozenge: "\u25CA",
      lozf: "\u29EB",
      lpar: "(",
      lparlt: "\u2993",
      lrarr: "\u21C6",
      lrcorner: "\u231F",
      lrhar: "\u21CB",
      lrhard: "\u296D",
      lrm: "\u200E",
      lrtri: "\u22BF",
      lsaquo: "\u2039",
      lscr: "\u{1D4C1}",
      lsh: "\u21B0",
      lsim: "\u2272",
      lsime: "\u2A8D",
      lsimg: "\u2A8F",
      lsqb: "[",
      lsquo: "\u2018",
      lsquor: "\u201A",
      lstrok: "\u0142",
      l: "<",
      lt: "<",
      ltcc: "\u2AA6",
      ltcir: "\u2A79",
      ltdot: "\u22D6",
      lthree: "\u22CB",
      ltimes: "\u22C9",
      ltlarr: "\u2976",
      ltquest: "\u2A7B",
      ltrPar: "\u2996",
      ltri: "\u25C3",
      ltrie: "\u22B4",
      ltrif: "\u25C2",
      lurdshar: "\u294A",
      luruhar: "\u2966",
      lvertneqq: "\u2268\uFE00",
      lvnE: "\u2268\uFE00",
      mDDot: "\u223A",
      mac: "\xAF",
      macr: "\xAF",
      male: "\u2642",
      malt: "\u2720",
      maltese: "\u2720",
      map: "\u21A6",
      mapsto: "\u21A6",
      mapstodown: "\u21A7",
      mapstoleft: "\u21A4",
      mapstoup: "\u21A5",
      marker: "\u25AE",
      mcomma: "\u2A29",
      mcy: "\u043C",
      mdash: "\u2014",
      measuredangle: "\u2221",
      mfr: "\u{1D52A}",
      mho: "\u2127",
      micr: "\xB5",
      micro: "\xB5",
      mid: "\u2223",
      midast: "*",
      midcir: "\u2AF0",
      middo: "\xB7",
      middot: "\xB7",
      minus: "\u2212",
      minusb: "\u229F",
      minusd: "\u2238",
      minusdu: "\u2A2A",
      mlcp: "\u2ADB",
      mldr: "\u2026",
      mnplus: "\u2213",
      models: "\u22A7",
      mopf: "\u{1D55E}",
      mp: "\u2213",
      mscr: "\u{1D4C2}",
      mstpos: "\u223E",
      mu: "\u03BC",
      multimap: "\u22B8",
      mumap: "\u22B8",
      nGg: "\u22D9\u0338",
      nGt: "\u226B\u20D2",
      nGtv: "\u226B\u0338",
      nLeftarrow: "\u21CD",
      nLeftrightarrow: "\u21CE",
      nLl: "\u22D8\u0338",
      nLt: "\u226A\u20D2",
      nLtv: "\u226A\u0338",
      nRightarrow: "\u21CF",
      nVDash: "\u22AF",
      nVdash: "\u22AE",
      nabla: "\u2207",
      nacute: "\u0144",
      nang: "\u2220\u20D2",
      nap: "\u2249",
      napE: "\u2A70\u0338",
      napid: "\u224B\u0338",
      napos: "\u0149",
      napprox: "\u2249",
      natur: "\u266E",
      natural: "\u266E",
      naturals: "\u2115",
      nbs: "\xA0",
      nbsp: "\xA0",
      nbump: "\u224E\u0338",
      nbumpe: "\u224F\u0338",
      ncap: "\u2A43",
      ncaron: "\u0148",
      ncedil: "\u0146",
      ncong: "\u2247",
      ncongdot: "\u2A6D\u0338",
      ncup: "\u2A42",
      ncy: "\u043D",
      ndash: "\u2013",
      ne: "\u2260",
      neArr: "\u21D7",
      nearhk: "\u2924",
      nearr: "\u2197",
      nearrow: "\u2197",
      nedot: "\u2250\u0338",
      nequiv: "\u2262",
      nesear: "\u2928",
      nesim: "\u2242\u0338",
      nexist: "\u2204",
      nexists: "\u2204",
      nfr: "\u{1D52B}",
      ngE: "\u2267\u0338",
      nge: "\u2271",
      ngeq: "\u2271",
      ngeqq: "\u2267\u0338",
      ngeqslant: "\u2A7E\u0338",
      nges: "\u2A7E\u0338",
      ngsim: "\u2275",
      ngt: "\u226F",
      ngtr: "\u226F",
      nhArr: "\u21CE",
      nharr: "\u21AE",
      nhpar: "\u2AF2",
      ni: "\u220B",
      nis: "\u22FC",
      nisd: "\u22FA",
      niv: "\u220B",
      njcy: "\u045A",
      nlArr: "\u21CD",
      nlE: "\u2266\u0338",
      nlarr: "\u219A",
      nldr: "\u2025",
      nle: "\u2270",
      nleftarrow: "\u219A",
      nleftrightarrow: "\u21AE",
      nleq: "\u2270",
      nleqq: "\u2266\u0338",
      nleqslant: "\u2A7D\u0338",
      nles: "\u2A7D\u0338",
      nless: "\u226E",
      nlsim: "\u2274",
      nlt: "\u226E",
      nltri: "\u22EA",
      nltrie: "\u22EC",
      nmid: "\u2224",
      nopf: "\u{1D55F}",
      no: "\xAC",
      not: "\xAC",
      notin: "\u2209",
      notinE: "\u22F9\u0338",
      notindot: "\u22F5\u0338",
      notinva: "\u2209",
      notinvb: "\u22F7",
      notinvc: "\u22F6",
      notni: "\u220C",
      notniva: "\u220C",
      notnivb: "\u22FE",
      notnivc: "\u22FD",
      npar: "\u2226",
      nparallel: "\u2226",
      nparsl: "\u2AFD\u20E5",
      npart: "\u2202\u0338",
      npolint: "\u2A14",
      npr: "\u2280",
      nprcue: "\u22E0",
      npre: "\u2AAF\u0338",
      nprec: "\u2280",
      npreceq: "\u2AAF\u0338",
      nrArr: "\u21CF",
      nrarr: "\u219B",
      nrarrc: "\u2933\u0338",
      nrarrw: "\u219D\u0338",
      nrightarrow: "\u219B",
      nrtri: "\u22EB",
      nrtrie: "\u22ED",
      nsc: "\u2281",
      nsccue: "\u22E1",
      nsce: "\u2AB0\u0338",
      nscr: "\u{1D4C3}",
      nshortmid: "\u2224",
      nshortparallel: "\u2226",
      nsim: "\u2241",
      nsime: "\u2244",
      nsimeq: "\u2244",
      nsmid: "\u2224",
      nspar: "\u2226",
      nsqsube: "\u22E2",
      nsqsupe: "\u22E3",
      nsub: "\u2284",
      nsubE: "\u2AC5\u0338",
      nsube: "\u2288",
      nsubset: "\u2282\u20D2",
      nsubseteq: "\u2288",
      nsubseteqq: "\u2AC5\u0338",
      nsucc: "\u2281",
      nsucceq: "\u2AB0\u0338",
      nsup: "\u2285",
      nsupE: "\u2AC6\u0338",
      nsupe: "\u2289",
      nsupset: "\u2283\u20D2",
      nsupseteq: "\u2289",
      nsupseteqq: "\u2AC6\u0338",
      ntgl: "\u2279",
      ntild: "\xF1",
      ntilde: "\xF1",
      ntlg: "\u2278",
      ntriangleleft: "\u22EA",
      ntrianglelefteq: "\u22EC",
      ntriangleright: "\u22EB",
      ntrianglerighteq: "\u22ED",
      nu: "\u03BD",
      num: "#",
      numero: "\u2116",
      numsp: "\u2007",
      nvDash: "\u22AD",
      nvHarr: "\u2904",
      nvap: "\u224D\u20D2",
      nvdash: "\u22AC",
      nvge: "\u2265\u20D2",
      nvgt: ">\u20D2",
      nvinfin: "\u29DE",
      nvlArr: "\u2902",
      nvle: "\u2264\u20D2",
      nvlt: "<\u20D2",
      nvltrie: "\u22B4\u20D2",
      nvrArr: "\u2903",
      nvrtrie: "\u22B5\u20D2",
      nvsim: "\u223C\u20D2",
      nwArr: "\u21D6",
      nwarhk: "\u2923",
      nwarr: "\u2196",
      nwarrow: "\u2196",
      nwnear: "\u2927",
      oS: "\u24C8",
      oacut: "\xF3",
      oacute: "\xF3",
      oast: "\u229B",
      ocir: "\xF4",
      ocirc: "\xF4",
      ocy: "\u043E",
      odash: "\u229D",
      odblac: "\u0151",
      odiv: "\u2A38",
      odot: "\u2299",
      odsold: "\u29BC",
      oelig: "\u0153",
      ofcir: "\u29BF",
      ofr: "\u{1D52C}",
      ogon: "\u02DB",
      ograv: "\xF2",
      ograve: "\xF2",
      ogt: "\u29C1",
      ohbar: "\u29B5",
      ohm: "\u03A9",
      oint: "\u222E",
      olarr: "\u21BA",
      olcir: "\u29BE",
      olcross: "\u29BB",
      oline: "\u203E",
      olt: "\u29C0",
      omacr: "\u014D",
      omega: "\u03C9",
      omicron: "\u03BF",
      omid: "\u29B6",
      ominus: "\u2296",
      oopf: "\u{1D560}",
      opar: "\u29B7",
      operp: "\u29B9",
      oplus: "\u2295",
      or: "\u2228",
      orarr: "\u21BB",
      ord: "\xBA",
      order: "\u2134",
      orderof: "\u2134",
      ordf: "\xAA",
      ordm: "\xBA",
      origof: "\u22B6",
      oror: "\u2A56",
      orslope: "\u2A57",
      orv: "\u2A5B",
      oscr: "\u2134",
      oslas: "\xF8",
      oslash: "\xF8",
      osol: "\u2298",
      otild: "\xF5",
      otilde: "\xF5",
      otimes: "\u2297",
      otimesas: "\u2A36",
      oum: "\xF6",
      ouml: "\xF6",
      ovbar: "\u233D",
      par: "\xB6",
      para: "\xB6",
      parallel: "\u2225",
      parsim: "\u2AF3",
      parsl: "\u2AFD",
      part: "\u2202",
      pcy: "\u043F",
      percnt: "%",
      period: ".",
      permil: "\u2030",
      perp: "\u22A5",
      pertenk: "\u2031",
      pfr: "\u{1D52D}",
      phi: "\u03C6",
      phiv: "\u03D5",
      phmmat: "\u2133",
      phone: "\u260E",
      pi: "\u03C0",
      pitchfork: "\u22D4",
      piv: "\u03D6",
      planck: "\u210F",
      planckh: "\u210E",
      plankv: "\u210F",
      plus: "+",
      plusacir: "\u2A23",
      plusb: "\u229E",
      pluscir: "\u2A22",
      plusdo: "\u2214",
      plusdu: "\u2A25",
      pluse: "\u2A72",
      plusm: "\xB1",
      plusmn: "\xB1",
      plussim: "\u2A26",
      plustwo: "\u2A27",
      pm: "\xB1",
      pointint: "\u2A15",
      popf: "\u{1D561}",
      poun: "\xA3",
      pound: "\xA3",
      pr: "\u227A",
      prE: "\u2AB3",
      prap: "\u2AB7",
      prcue: "\u227C",
      pre: "\u2AAF",
      prec: "\u227A",
      precapprox: "\u2AB7",
      preccurlyeq: "\u227C",
      preceq: "\u2AAF",
      precnapprox: "\u2AB9",
      precneqq: "\u2AB5",
      precnsim: "\u22E8",
      precsim: "\u227E",
      prime: "\u2032",
      primes: "\u2119",
      prnE: "\u2AB5",
      prnap: "\u2AB9",
      prnsim: "\u22E8",
      prod: "\u220F",
      profalar: "\u232E",
      profline: "\u2312",
      profsurf: "\u2313",
      prop: "\u221D",
      propto: "\u221D",
      prsim: "\u227E",
      prurel: "\u22B0",
      pscr: "\u{1D4C5}",
      psi: "\u03C8",
      puncsp: "\u2008",
      qfr: "\u{1D52E}",
      qint: "\u2A0C",
      qopf: "\u{1D562}",
      qprime: "\u2057",
      qscr: "\u{1D4C6}",
      quaternions: "\u210D",
      quatint: "\u2A16",
      quest: "?",
      questeq: "\u225F",
      quo: '"',
      quot: '"',
      rAarr: "\u21DB",
      rArr: "\u21D2",
      rAtail: "\u291C",
      rBarr: "\u290F",
      rHar: "\u2964",
      race: "\u223D\u0331",
      racute: "\u0155",
      radic: "\u221A",
      raemptyv: "\u29B3",
      rang: "\u27E9",
      rangd: "\u2992",
      range: "\u29A5",
      rangle: "\u27E9",
      raqu: "\xBB",
      raquo: "\xBB",
      rarr: "\u2192",
      rarrap: "\u2975",
      rarrb: "\u21E5",
      rarrbfs: "\u2920",
      rarrc: "\u2933",
      rarrfs: "\u291E",
      rarrhk: "\u21AA",
      rarrlp: "\u21AC",
      rarrpl: "\u2945",
      rarrsim: "\u2974",
      rarrtl: "\u21A3",
      rarrw: "\u219D",
      ratail: "\u291A",
      ratio: "\u2236",
      rationals: "\u211A",
      rbarr: "\u290D",
      rbbrk: "\u2773",
      rbrace: "}",
      rbrack: "]",
      rbrke: "\u298C",
      rbrksld: "\u298E",
      rbrkslu: "\u2990",
      rcaron: "\u0159",
      rcedil: "\u0157",
      rceil: "\u2309",
      rcub: "}",
      rcy: "\u0440",
      rdca: "\u2937",
      rdldhar: "\u2969",
      rdquo: "\u201D",
      rdquor: "\u201D",
      rdsh: "\u21B3",
      real: "\u211C",
      realine: "\u211B",
      realpart: "\u211C",
      reals: "\u211D",
      rect: "\u25AD",
      re: "\xAE",
      reg: "\xAE",
      rfisht: "\u297D",
      rfloor: "\u230B",
      rfr: "\u{1D52F}",
      rhard: "\u21C1",
      rharu: "\u21C0",
      rharul: "\u296C",
      rho: "\u03C1",
      rhov: "\u03F1",
      rightarrow: "\u2192",
      rightarrowtail: "\u21A3",
      rightharpoondown: "\u21C1",
      rightharpoonup: "\u21C0",
      rightleftarrows: "\u21C4",
      rightleftharpoons: "\u21CC",
      rightrightarrows: "\u21C9",
      rightsquigarrow: "\u219D",
      rightthreetimes: "\u22CC",
      ring: "\u02DA",
      risingdotseq: "\u2253",
      rlarr: "\u21C4",
      rlhar: "\u21CC",
      rlm: "\u200F",
      rmoust: "\u23B1",
      rmoustache: "\u23B1",
      rnmid: "\u2AEE",
      roang: "\u27ED",
      roarr: "\u21FE",
      robrk: "\u27E7",
      ropar: "\u2986",
      ropf: "\u{1D563}",
      roplus: "\u2A2E",
      rotimes: "\u2A35",
      rpar: ")",
      rpargt: "\u2994",
      rppolint: "\u2A12",
      rrarr: "\u21C9",
      rsaquo: "\u203A",
      rscr: "\u{1D4C7}",
      rsh: "\u21B1",
      rsqb: "]",
      rsquo: "\u2019",
      rsquor: "\u2019",
      rthree: "\u22CC",
      rtimes: "\u22CA",
      rtri: "\u25B9",
      rtrie: "\u22B5",
      rtrif: "\u25B8",
      rtriltri: "\u29CE",
      ruluhar: "\u2968",
      rx: "\u211E",
      sacute: "\u015B",
      sbquo: "\u201A",
      sc: "\u227B",
      scE: "\u2AB4",
      scap: "\u2AB8",
      scaron: "\u0161",
      sccue: "\u227D",
      sce: "\u2AB0",
      scedil: "\u015F",
      scirc: "\u015D",
      scnE: "\u2AB6",
      scnap: "\u2ABA",
      scnsim: "\u22E9",
      scpolint: "\u2A13",
      scsim: "\u227F",
      scy: "\u0441",
      sdot: "\u22C5",
      sdotb: "\u22A1",
      sdote: "\u2A66",
      seArr: "\u21D8",
      searhk: "\u2925",
      searr: "\u2198",
      searrow: "\u2198",
      sec: "\xA7",
      sect: "\xA7",
      semi: ";",
      seswar: "\u2929",
      setminus: "\u2216",
      setmn: "\u2216",
      sext: "\u2736",
      sfr: "\u{1D530}",
      sfrown: "\u2322",
      sharp: "\u266F",
      shchcy: "\u0449",
      shcy: "\u0448",
      shortmid: "\u2223",
      shortparallel: "\u2225",
      sh: "\xAD",
      shy: "\xAD",
      sigma: "\u03C3",
      sigmaf: "\u03C2",
      sigmav: "\u03C2",
      sim: "\u223C",
      simdot: "\u2A6A",
      sime: "\u2243",
      simeq: "\u2243",
      simg: "\u2A9E",
      simgE: "\u2AA0",
      siml: "\u2A9D",
      simlE: "\u2A9F",
      simne: "\u2246",
      simplus: "\u2A24",
      simrarr: "\u2972",
      slarr: "\u2190",
      smallsetminus: "\u2216",
      smashp: "\u2A33",
      smeparsl: "\u29E4",
      smid: "\u2223",
      smile: "\u2323",
      smt: "\u2AAA",
      smte: "\u2AAC",
      smtes: "\u2AAC\uFE00",
      softcy: "\u044C",
      sol: "/",
      solb: "\u29C4",
      solbar: "\u233F",
      sopf: "\u{1D564}",
      spades: "\u2660",
      spadesuit: "\u2660",
      spar: "\u2225",
      sqcap: "\u2293",
      sqcaps: "\u2293\uFE00",
      sqcup: "\u2294",
      sqcups: "\u2294\uFE00",
      sqsub: "\u228F",
      sqsube: "\u2291",
      sqsubset: "\u228F",
      sqsubseteq: "\u2291",
      sqsup: "\u2290",
      sqsupe: "\u2292",
      sqsupset: "\u2290",
      sqsupseteq: "\u2292",
      squ: "\u25A1",
      square: "\u25A1",
      squarf: "\u25AA",
      squf: "\u25AA",
      srarr: "\u2192",
      sscr: "\u{1D4C8}",
      ssetmn: "\u2216",
      ssmile: "\u2323",
      sstarf: "\u22C6",
      star: "\u2606",
      starf: "\u2605",
      straightepsilon: "\u03F5",
      straightphi: "\u03D5",
      strns: "\xAF",
      sub: "\u2282",
      subE: "\u2AC5",
      subdot: "\u2ABD",
      sube: "\u2286",
      subedot: "\u2AC3",
      submult: "\u2AC1",
      subnE: "\u2ACB",
      subne: "\u228A",
      subplus: "\u2ABF",
      subrarr: "\u2979",
      subset: "\u2282",
      subseteq: "\u2286",
      subseteqq: "\u2AC5",
      subsetneq: "\u228A",
      subsetneqq: "\u2ACB",
      subsim: "\u2AC7",
      subsub: "\u2AD5",
      subsup: "\u2AD3",
      succ: "\u227B",
      succapprox: "\u2AB8",
      succcurlyeq: "\u227D",
      succeq: "\u2AB0",
      succnapprox: "\u2ABA",
      succneqq: "\u2AB6",
      succnsim: "\u22E9",
      succsim: "\u227F",
      sum: "\u2211",
      sung: "\u266A",
      sup: "\u2283",
      sup1: "\xB9",
      sup2: "\xB2",
      sup3: "\xB3",
      supE: "\u2AC6",
      supdot: "\u2ABE",
      supdsub: "\u2AD8",
      supe: "\u2287",
      supedot: "\u2AC4",
      suphsol: "\u27C9",
      suphsub: "\u2AD7",
      suplarr: "\u297B",
      supmult: "\u2AC2",
      supnE: "\u2ACC",
      supne: "\u228B",
      supplus: "\u2AC0",
      supset: "\u2283",
      supseteq: "\u2287",
      supseteqq: "\u2AC6",
      supsetneq: "\u228B",
      supsetneqq: "\u2ACC",
      supsim: "\u2AC8",
      supsub: "\u2AD4",
      supsup: "\u2AD6",
      swArr: "\u21D9",
      swarhk: "\u2926",
      swarr: "\u2199",
      swarrow: "\u2199",
      swnwar: "\u292A",
      szli: "\xDF",
      szlig: "\xDF",
      target: "\u2316",
      tau: "\u03C4",
      tbrk: "\u23B4",
      tcaron: "\u0165",
      tcedil: "\u0163",
      tcy: "\u0442",
      tdot: "\u20DB",
      telrec: "\u2315",
      tfr: "\u{1D531}",
      there4: "\u2234",
      therefore: "\u2234",
      theta: "\u03B8",
      thetasym: "\u03D1",
      thetav: "\u03D1",
      thickapprox: "\u2248",
      thicksim: "\u223C",
      thinsp: "\u2009",
      thkap: "\u2248",
      thksim: "\u223C",
      thor: "\xFE",
      thorn: "\xFE",
      tilde: "\u02DC",
      time: "\xD7",
      times: "\xD7",
      timesb: "\u22A0",
      timesbar: "\u2A31",
      timesd: "\u2A30",
      tint: "\u222D",
      toea: "\u2928",
      top: "\u22A4",
      topbot: "\u2336",
      topcir: "\u2AF1",
      topf: "\u{1D565}",
      topfork: "\u2ADA",
      tosa: "\u2929",
      tprime: "\u2034",
      trade: "\u2122",
      triangle: "\u25B5",
      triangledown: "\u25BF",
      triangleleft: "\u25C3",
      trianglelefteq: "\u22B4",
      triangleq: "\u225C",
      triangleright: "\u25B9",
      trianglerighteq: "\u22B5",
      tridot: "\u25EC",
      trie: "\u225C",
      triminus: "\u2A3A",
      triplus: "\u2A39",
      trisb: "\u29CD",
      tritime: "\u2A3B",
      trpezium: "\u23E2",
      tscr: "\u{1D4C9}",
      tscy: "\u0446",
      tshcy: "\u045B",
      tstrok: "\u0167",
      twixt: "\u226C",
      twoheadleftarrow: "\u219E",
      twoheadrightarrow: "\u21A0",
      uArr: "\u21D1",
      uHar: "\u2963",
      uacut: "\xFA",
      uacute: "\xFA",
      uarr: "\u2191",
      ubrcy: "\u045E",
      ubreve: "\u016D",
      ucir: "\xFB",
      ucirc: "\xFB",
      ucy: "\u0443",
      udarr: "\u21C5",
      udblac: "\u0171",
      udhar: "\u296E",
      ufisht: "\u297E",
      ufr: "\u{1D532}",
      ugrav: "\xF9",
      ugrave: "\xF9",
      uharl: "\u21BF",
      uharr: "\u21BE",
      uhblk: "\u2580",
      ulcorn: "\u231C",
      ulcorner: "\u231C",
      ulcrop: "\u230F",
      ultri: "\u25F8",
      umacr: "\u016B",
      um: "\xA8",
      uml: "\xA8",
      uogon: "\u0173",
      uopf: "\u{1D566}",
      uparrow: "\u2191",
      updownarrow: "\u2195",
      upharpoonleft: "\u21BF",
      upharpoonright: "\u21BE",
      uplus: "\u228E",
      upsi: "\u03C5",
      upsih: "\u03D2",
      upsilon: "\u03C5",
      upuparrows: "\u21C8",
      urcorn: "\u231D",
      urcorner: "\u231D",
      urcrop: "\u230E",
      uring: "\u016F",
      urtri: "\u25F9",
      uscr: "\u{1D4CA}",
      utdot: "\u22F0",
      utilde: "\u0169",
      utri: "\u25B5",
      utrif: "\u25B4",
      uuarr: "\u21C8",
      uum: "\xFC",
      uuml: "\xFC",
      uwangle: "\u29A7",
      vArr: "\u21D5",
      vBar: "\u2AE8",
      vBarv: "\u2AE9",
      vDash: "\u22A8",
      vangrt: "\u299C",
      varepsilon: "\u03F5",
      varkappa: "\u03F0",
      varnothing: "\u2205",
      varphi: "\u03D5",
      varpi: "\u03D6",
      varpropto: "\u221D",
      varr: "\u2195",
      varrho: "\u03F1",
      varsigma: "\u03C2",
      varsubsetneq: "\u228A\uFE00",
      varsubsetneqq: "\u2ACB\uFE00",
      varsupsetneq: "\u228B\uFE00",
      varsupsetneqq: "\u2ACC\uFE00",
      vartheta: "\u03D1",
      vartriangleleft: "\u22B2",
      vartriangleright: "\u22B3",
      vcy: "\u0432",
      vdash: "\u22A2",
      vee: "\u2228",
      veebar: "\u22BB",
      veeeq: "\u225A",
      vellip: "\u22EE",
      verbar: "|",
      vert: "|",
      vfr: "\u{1D533}",
      vltri: "\u22B2",
      vnsub: "\u2282\u20D2",
      vnsup: "\u2283\u20D2",
      vopf: "\u{1D567}",
      vprop: "\u221D",
      vrtri: "\u22B3",
      vscr: "\u{1D4CB}",
      vsubnE: "\u2ACB\uFE00",
      vsubne: "\u228A\uFE00",
      vsupnE: "\u2ACC\uFE00",
      vsupne: "\u228B\uFE00",
      vzigzag: "\u299A",
      wcirc: "\u0175",
      wedbar: "\u2A5F",
      wedge: "\u2227",
      wedgeq: "\u2259",
      weierp: "\u2118",
      wfr: "\u{1D534}",
      wopf: "\u{1D568}",
      wp: "\u2118",
      wr: "\u2240",
      wreath: "\u2240",
      wscr: "\u{1D4CC}",
      xcap: "\u22C2",
      xcirc: "\u25EF",
      xcup: "\u22C3",
      xdtri: "\u25BD",
      xfr: "\u{1D535}",
      xhArr: "\u27FA",
      xharr: "\u27F7",
      xi: "\u03BE",
      xlArr: "\u27F8",
      xlarr: "\u27F5",
      xmap: "\u27FC",
      xnis: "\u22FB",
      xodot: "\u2A00",
      xopf: "\u{1D569}",
      xoplus: "\u2A01",
      xotime: "\u2A02",
      xrArr: "\u27F9",
      xrarr: "\u27F6",
      xscr: "\u{1D4CD}",
      xsqcup: "\u2A06",
      xuplus: "\u2A04",
      xutri: "\u25B3",
      xvee: "\u22C1",
      xwedge: "\u22C0",
      yacut: "\xFD",
      yacute: "\xFD",
      yacy: "\u044F",
      ycirc: "\u0177",
      ycy: "\u044B",
      ye: "\xA5",
      yen: "\xA5",
      yfr: "\u{1D536}",
      yicy: "\u0457",
      yopf: "\u{1D56A}",
      yscr: "\u{1D4CE}",
      yucy: "\u044E",
      yum: "\xFF",
      yuml: "\xFF",
      zacute: "\u017A",
      zcaron: "\u017E",
      zcy: "\u0437",
      zdot: "\u017C",
      zeetrf: "\u2128",
      zeta: "\u03B6",
      zfr: "\u{1D537}",
      zhcy: "\u0436",
      zigrarr: "\u21DD",
      zopf: "\u{1D56B}",
      zscr: "\u{1D4CF}",
      zwj: "\u200D",
      zwnj: "\u200C"
    };
  }
});

// ../../node_modules/parse-entities/decode-entity.js
var require_decode_entity = __commonJS({
  "../../node_modules/parse-entities/decode-entity.js"(exports, module2) {
    "use strict";
    var characterEntities = require_character_entities();
    module2.exports = decodeEntity;
    var own = {}.hasOwnProperty;
    function decodeEntity(characters) {
      return own.call(characterEntities, characters) ? characterEntities[characters] : false;
    }
  }
});

// ../../node_modules/parse-entities/index.js
var require_parse_entities = __commonJS({
  "../../node_modules/parse-entities/index.js"(exports, module2) {
    "use strict";
    var legacy = require_character_entities_legacy();
    var invalid = require_character_reference_invalid();
    var decimal = require_is_decimal();
    var hexadecimal = require_is_hexadecimal();
    var alphanumerical = require_is_alphanumerical();
    var decodeEntity = require_decode_entity();
    module2.exports = parseEntities;
    var own = {}.hasOwnProperty;
    var fromCharCode = String.fromCharCode;
    var noop5 = Function.prototype;
    var defaults = {
      warning: null,
      reference: null,
      text: null,
      warningContext: null,
      referenceContext: null,
      textContext: null,
      position: {},
      additional: null,
      attribute: false,
      nonTerminated: true
    };
    var tab = 9;
    var lineFeed = 10;
    var formFeed = 12;
    var space = 32;
    var ampersand = 38;
    var semicolon = 59;
    var lessThan = 60;
    var equalsTo = 61;
    var numberSign = 35;
    var uppercaseX = 88;
    var lowercaseX = 120;
    var replacementCharacter = 65533;
    var name = "named";
    var hexa = "hexadecimal";
    var deci = "decimal";
    var bases = {};
    bases[hexa] = 16;
    bases[deci] = 10;
    var tests = {};
    tests[name] = alphanumerical;
    tests[deci] = decimal;
    tests[hexa] = hexadecimal;
    var namedNotTerminated = 1;
    var numericNotTerminated = 2;
    var namedEmpty = 3;
    var numericEmpty = 4;
    var namedUnknown = 5;
    var numericDisallowed = 6;
    var numericProhibited = 7;
    var messages = {};
    messages[namedNotTerminated] = "Named character references must be terminated by a semicolon";
    messages[numericNotTerminated] = "Numeric character references must be terminated by a semicolon";
    messages[namedEmpty] = "Named character references cannot be empty";
    messages[numericEmpty] = "Numeric character references cannot be empty";
    messages[namedUnknown] = "Named character references must be known";
    messages[numericDisallowed] = "Numeric character references cannot be disallowed";
    messages[numericProhibited] = "Numeric character references cannot be outside the permissible Unicode range";
    function parseEntities(value, options) {
      var settings = {};
      var option;
      var key;
      if (!options) {
        options = {};
      }
      for (key in defaults) {
        option = options[key];
        settings[key] = option === null || option === void 0 ? defaults[key] : option;
      }
      if (settings.position.indent || settings.position.start) {
        settings.indent = settings.position.indent || [];
        settings.position = settings.position.start;
      }
      return parse(value, settings);
    }
    function parse(value, settings) {
      var additional = settings.additional;
      var nonTerminated = settings.nonTerminated;
      var handleText = settings.text;
      var handleReference = settings.reference;
      var handleWarning = settings.warning;
      var textContext = settings.textContext;
      var referenceContext = settings.referenceContext;
      var warningContext = settings.warningContext;
      var pos = settings.position;
      var indent = settings.indent || [];
      var length2 = value.length;
      var index3 = 0;
      var lines = -1;
      var column = pos.column || 1;
      var line = pos.line || 1;
      var queue = "";
      var result = [];
      var entityCharacters;
      var namedEntity;
      var terminated;
      var characters;
      var character;
      var reference2;
      var following;
      var warning2;
      var reason;
      var output;
      var entity;
      var begin;
      var start2;
      var type;
      var test;
      var prev;
      var next;
      var diff;
      var end2;
      if (typeof additional === "string") {
        additional = additional.charCodeAt(0);
      }
      prev = now();
      warning2 = handleWarning ? parseError : noop5;
      index3--;
      length2++;
      while (++index3 < length2) {
        if (character === lineFeed) {
          column = indent[lines] || 1;
        }
        character = value.charCodeAt(index3);
        if (character === ampersand) {
          following = value.charCodeAt(index3 + 1);
          if (following === tab || following === lineFeed || following === formFeed || following === space || following === ampersand || following === lessThan || following !== following || additional && following === additional) {
            queue += fromCharCode(character);
            column++;
            continue;
          }
          start2 = index3 + 1;
          begin = start2;
          end2 = start2;
          if (following === numberSign) {
            end2 = ++begin;
            following = value.charCodeAt(end2);
            if (following === uppercaseX || following === lowercaseX) {
              type = hexa;
              end2 = ++begin;
            } else {
              type = deci;
            }
          } else {
            type = name;
          }
          entityCharacters = "";
          entity = "";
          characters = "";
          test = tests[type];
          end2--;
          while (++end2 < length2) {
            following = value.charCodeAt(end2);
            if (!test(following)) {
              break;
            }
            characters += fromCharCode(following);
            if (type === name && own.call(legacy, characters)) {
              entityCharacters = characters;
              entity = legacy[characters];
            }
          }
          terminated = value.charCodeAt(end2) === semicolon;
          if (terminated) {
            end2++;
            namedEntity = type === name ? decodeEntity(characters) : false;
            if (namedEntity) {
              entityCharacters = characters;
              entity = namedEntity;
            }
          }
          diff = 1 + end2 - start2;
          if (!terminated && !nonTerminated) {
          } else if (!characters) {
            if (type !== name) {
              warning2(numericEmpty, diff);
            }
          } else if (type === name) {
            if (terminated && !entity) {
              warning2(namedUnknown, 1);
            } else {
              if (entityCharacters !== characters) {
                end2 = begin + entityCharacters.length;
                diff = 1 + end2 - begin;
                terminated = false;
              }
              if (!terminated) {
                reason = entityCharacters ? namedNotTerminated : namedEmpty;
                if (settings.attribute) {
                  following = value.charCodeAt(end2);
                  if (following === equalsTo) {
                    warning2(reason, diff);
                    entity = null;
                  } else if (alphanumerical(following)) {
                    entity = null;
                  } else {
                    warning2(reason, diff);
                  }
                } else {
                  warning2(reason, diff);
                }
              }
            }
            reference2 = entity;
          } else {
            if (!terminated) {
              warning2(numericNotTerminated, diff);
            }
            reference2 = parseInt(characters, bases[type]);
            if (prohibited(reference2)) {
              warning2(numericProhibited, diff);
              reference2 = fromCharCode(replacementCharacter);
            } else if (reference2 in invalid) {
              warning2(numericDisallowed, diff);
              reference2 = invalid[reference2];
            } else {
              output = "";
              if (disallowed(reference2)) {
                warning2(numericDisallowed, diff);
              }
              if (reference2 > 65535) {
                reference2 -= 65536;
                output += fromCharCode(reference2 >>> (10 & 1023) | 55296);
                reference2 = 56320 | reference2 & 1023;
              }
              reference2 = output + fromCharCode(reference2);
            }
          }
          if (reference2) {
            flush();
            prev = now();
            index3 = end2 - 1;
            column += end2 - start2 + 1;
            result.push(reference2);
            next = now();
            next.offset++;
            if (handleReference) {
              handleReference.call(
                referenceContext,
                reference2,
                { start: prev, end: next },
                value.slice(start2 - 1, end2)
              );
            }
            prev = next;
          } else {
            characters = value.slice(start2 - 1, end2);
            queue += characters;
            column += characters.length;
            index3 = end2 - 1;
          }
        } else {
          if (character === 10) {
            line++;
            lines++;
            column = 0;
          }
          if (character === character) {
            queue += fromCharCode(character);
            column++;
          } else {
            flush();
          }
        }
      }
      return result.join("");
      function now() {
        return {
          line,
          column,
          offset: index3 + (pos.offset || 0)
        };
      }
      function parseError(code, offset2) {
        var position = now();
        position.column += offset2;
        position.offset += offset2;
        handleWarning.call(warningContext, messages[code], position, code);
      }
      function flush() {
        if (queue) {
          result.push(queue);
          if (handleText) {
            handleText.call(textContext, queue, { start: prev, end: now() });
          }
          queue = "";
        }
      }
    }
    function prohibited(code) {
      return code >= 55296 && code <= 57343 || code > 1114111;
    }
    function disallowed(code) {
      return code >= 1 && code <= 8 || code === 11 || code >= 13 && code <= 31 || code >= 127 && code <= 159 || code >= 64976 && code <= 65007 || (code & 65535) === 65535 || (code & 65535) === 65534;
    }
  }
});

// ../../node_modules/refractor/node_modules/prismjs/components/prism-core.js
var require_prism_core = __commonJS({
  "../../node_modules/refractor/node_modules/prismjs/components/prism-core.js"(exports, module2) {
    var _self = typeof window !== "undefined" ? window : typeof WorkerGlobalScope !== "undefined" && self instanceof WorkerGlobalScope ? self : {};
    var Prism = function(_self2) {
      var lang = /(?:^|\s)lang(?:uage)?-([\w-]+)(?=\s|$)/i;
      var uniqueId = 0;
      var plainTextGrammar = {};
      var _ = {
        manual: _self2.Prism && _self2.Prism.manual,
        disableWorkerMessageHandler: _self2.Prism && _self2.Prism.disableWorkerMessageHandler,
        util: {
          encode: function encode(tokens) {
            if (tokens instanceof Token) {
              return new Token(tokens.type, encode(tokens.content), tokens.alias);
            } else if (Array.isArray(tokens)) {
              return tokens.map(encode);
            } else {
              return tokens.replace(/&/g, "&amp;").replace(/</g, "&lt;").replace(/\u00a0/g, " ");
            }
          },
          type: function(o) {
            return Object.prototype.toString.call(o).slice(8, -1);
          },
          objId: function(obj) {
            if (!obj["__id"]) {
              Object.defineProperty(obj, "__id", { value: ++uniqueId });
            }
            return obj["__id"];
          },
          clone: function deepClone(o, visited) {
            visited = visited || {};
            var clone;
            var id;
            switch (_.util.type(o)) {
              case "Object":
                id = _.util.objId(o);
                if (visited[id]) {
                  return visited[id];
                }
                clone = {};
                visited[id] = clone;
                for (var key in o) {
                  if (o.hasOwnProperty(key)) {
                    clone[key] = deepClone(o[key], visited);
                  }
                }
                return clone;
              case "Array":
                id = _.util.objId(o);
                if (visited[id]) {
                  return visited[id];
                }
                clone = [];
                visited[id] = clone;
                o.forEach(function(v, i) {
                  clone[i] = deepClone(v, visited);
                });
                return clone;
              default:
                return o;
            }
          },
          getLanguage: function(element) {
            while (element) {
              var m = lang.exec(element.className);
              if (m) {
                return m[1].toLowerCase();
              }
              element = element.parentElement;
            }
            return "none";
          },
          setLanguage: function(element, language) {
            element.className = element.className.replace(RegExp(lang, "gi"), "");
            element.classList.add("language-" + language);
          },
          currentScript: function() {
            if (typeof document === "undefined") {
              return null;
            }
            if ("currentScript" in document && 1 < 2) {
              return document.currentScript;
            }
            try {
              throw new Error();
            } catch (err) {
              var src = (/at [^(\r\n]*\((.*):[^:]+:[^:]+\)$/i.exec(err.stack) || [])[1];
              if (src) {
                var scripts = document.getElementsByTagName("script");
                for (var i in scripts) {
                  if (scripts[i].src == src) {
                    return scripts[i];
                  }
                }
              }
              return null;
            }
          },
          isActive: function(element, className, defaultActivation) {
            var no = "no-" + className;
            while (element) {
              var classList = element.classList;
              if (classList.contains(className)) {
                return true;
              }
              if (classList.contains(no)) {
                return false;
              }
              element = element.parentElement;
            }
            return !!defaultActivation;
          }
        },
        languages: {
          plain: plainTextGrammar,
          plaintext: plainTextGrammar,
          text: plainTextGrammar,
          txt: plainTextGrammar,
          extend: function(id, redef) {
            var lang2 = _.util.clone(_.languages[id]);
            for (var key in redef) {
              lang2[key] = redef[key];
            }
            return lang2;
          },
          insertBefore: function(inside, before, insert, root) {
            root = root || _.languages;
            var grammar = root[inside];
            var ret = {};
            for (var token in grammar) {
              if (grammar.hasOwnProperty(token)) {
                if (token == before) {
                  for (var newToken in insert) {
                    if (insert.hasOwnProperty(newToken)) {
                      ret[newToken] = insert[newToken];
                    }
                  }
                }
                if (!insert.hasOwnProperty(token)) {
                  ret[token] = grammar[token];
                }
              }
            }
            var old = root[inside];
            root[inside] = ret;
            _.languages.DFS(_.languages, function(key, value) {
              if (value === old && key != inside) {
                this[key] = ret;
              }
            });
            return ret;
          },
          DFS: function DFS(o, callback, type, visited) {
            visited = visited || {};
            var objId = _.util.objId;
            for (var i in o) {
              if (o.hasOwnProperty(i)) {
                callback.call(o, i, o[i], type || i);
                var property = o[i];
                var propertyType = _.util.type(property);
                if (propertyType === "Object" && !visited[objId(property)]) {
                  visited[objId(property)] = true;
                  DFS(property, callback, null, visited);
                } else if (propertyType === "Array" && !visited[objId(property)]) {
                  visited[objId(property)] = true;
                  DFS(property, callback, i, visited);
                }
              }
            }
          }
        },
        plugins: {},
        highlightAll: function(async, callback) {
          _.highlightAllUnder(document, async, callback);
        },
        highlightAllUnder: function(container, async, callback) {
          var env = {
            callback,
            container,
            selector: 'code[class*="language-"], [class*="language-"] code, code[class*="lang-"], [class*="lang-"] code'
          };
          _.hooks.run("before-highlightall", env);
          env.elements = Array.prototype.slice.apply(env.container.querySelectorAll(env.selector));
          _.hooks.run("before-all-elements-highlight", env);
          for (var i = 0, element; element = env.elements[i++]; ) {
            _.highlightElement(element, async === true, env.callback);
          }
        },
        highlightElement: function(element, async, callback) {
          var language = _.util.getLanguage(element);
          var grammar = _.languages[language];
          _.util.setLanguage(element, language);
          var parent = element.parentElement;
          if (parent && parent.nodeName.toLowerCase() === "pre") {
            _.util.setLanguage(parent, language);
          }
          var code = element.textContent;
          var env = {
            element,
            language,
            grammar,
            code
          };
          function insertHighlightedCode(highlightedCode) {
            env.highlightedCode = highlightedCode;
            _.hooks.run("before-insert", env);
            env.element.innerHTML = env.highlightedCode;
            _.hooks.run("after-highlight", env);
            _.hooks.run("complete", env);
            callback && callback.call(env.element);
          }
          _.hooks.run("before-sanity-check", env);
          parent = env.element.parentElement;
          if (parent && parent.nodeName.toLowerCase() === "pre" && !parent.hasAttribute("tabindex")) {
            parent.setAttribute("tabindex", "0");
          }
          if (!env.code) {
            _.hooks.run("complete", env);
            callback && callback.call(env.element);
            return;
          }
          _.hooks.run("before-highlight", env);
          if (!env.grammar) {
            insertHighlightedCode(_.util.encode(env.code));
            return;
          }
          if (async && _self2.Worker) {
            var worker = new Worker(_.filename);
            worker.onmessage = function(evt) {
              insertHighlightedCode(evt.data);
            };
            worker.postMessage(JSON.stringify({
              language: env.language,
              code: env.code,
              immediateClose: true
            }));
          } else {
            insertHighlightedCode(_.highlight(env.code, env.grammar, env.language));
          }
        },
        highlight: function(text, grammar, language) {
          var env = {
            code: text,
            grammar,
            language
          };
          _.hooks.run("before-tokenize", env);
          if (!env.grammar) {
            throw new Error('The language "' + env.language + '" has no grammar.');
          }
          env.tokens = _.tokenize(env.code, env.grammar);
          _.hooks.run("after-tokenize", env);
          return Token.stringify(_.util.encode(env.tokens), env.language);
        },
        tokenize: function(text, grammar) {
          var rest = grammar.rest;
          if (rest) {
            for (var token in rest) {
              grammar[token] = rest[token];
            }
            delete grammar.rest;
          }
          var tokenList = new LinkedList();
          addAfter(tokenList, tokenList.head, text);
          matchGrammar(text, tokenList, grammar, tokenList.head, 0);
          return toArray(tokenList);
        },
        hooks: {
          all: {},
          add: function(name, callback) {
            var hooks = _.hooks.all;
            hooks[name] = hooks[name] || [];
            hooks[name].push(callback);
          },
          run: function(name, env) {
            var callbacks = _.hooks.all[name];
            if (!callbacks || !callbacks.length) {
              return;
            }
            for (var i = 0, callback; callback = callbacks[i++]; ) {
              callback(env);
            }
          }
        },
        Token
      };
      _self2.Prism = _;
      function Token(type, content, alias, matchedStr) {
        this.type = type;
        this.content = content;
        this.alias = alias;
        this.length = (matchedStr || "").length | 0;
      }
      Token.stringify = function stringify(o, language) {
        if (typeof o == "string") {
          return o;
        }
        if (Array.isArray(o)) {
          var s = "";
          o.forEach(function(e) {
            s += stringify(e, language);
          });
          return s;
        }
        var env = {
          type: o.type,
          content: stringify(o.content, language),
          tag: "span",
          classes: ["token", o.type],
          attributes: {},
          language
        };
        var aliases = o.alias;
        if (aliases) {
          if (Array.isArray(aliases)) {
            Array.prototype.push.apply(env.classes, aliases);
          } else {
            env.classes.push(aliases);
          }
        }
        _.hooks.run("wrap", env);
        var attributes = "";
        for (var name in env.attributes) {
          attributes += " " + name + '="' + (env.attributes[name] || "").replace(/"/g, "&quot;") + '"';
        }
        return "<" + env.tag + ' class="' + env.classes.join(" ") + '"' + attributes + ">" + env.content + "</" + env.tag + ">";
      };
      function matchPattern(pattern, pos, text, lookbehind) {
        pattern.lastIndex = pos;
        var match2 = pattern.exec(text);
        if (match2 && lookbehind && match2[1]) {
          var lookbehindLength = match2[1].length;
          match2.index += lookbehindLength;
          match2[0] = match2[0].slice(lookbehindLength);
        }
        return match2;
      }
      function matchGrammar(text, tokenList, grammar, startNode, startPos, rematch) {
        for (var token in grammar) {
          if (!grammar.hasOwnProperty(token) || !grammar[token]) {
            continue;
          }
          var patterns = grammar[token];
          patterns = Array.isArray(patterns) ? patterns : [patterns];
          for (var j = 0; j < patterns.length; ++j) {
            if (rematch && rematch.cause == token + "," + j) {
              return;
            }
            var patternObj = patterns[j];
            var inside = patternObj.inside;
            var lookbehind = !!patternObj.lookbehind;
            var greedy = !!patternObj.greedy;
            var alias = patternObj.alias;
            if (greedy && !patternObj.pattern.global) {
              var flags = patternObj.pattern.toString().match(/[imsuy]*$/)[0];
              patternObj.pattern = RegExp(patternObj.pattern.source, flags + "g");
            }
            var pattern = patternObj.pattern || patternObj;
            for (var currentNode = startNode.next, pos = startPos; currentNode !== tokenList.tail; pos += currentNode.value.length, currentNode = currentNode.next) {
              if (rematch && pos >= rematch.reach) {
                break;
              }
              var str = currentNode.value;
              if (tokenList.length > text.length) {
                return;
              }
              if (str instanceof Token) {
                continue;
              }
              var removeCount = 1;
              var match2;
              if (greedy) {
                match2 = matchPattern(pattern, pos, text, lookbehind);
                if (!match2 || match2.index >= text.length) {
                  break;
                }
                var from = match2.index;
                var to = match2.index + match2[0].length;
                var p = pos;
                p += currentNode.value.length;
                while (from >= p) {
                  currentNode = currentNode.next;
                  p += currentNode.value.length;
                }
                p -= currentNode.value.length;
                pos = p;
                if (currentNode.value instanceof Token) {
                  continue;
                }
                for (var k = currentNode; k !== tokenList.tail && (p < to || typeof k.value === "string"); k = k.next) {
                  removeCount++;
                  p += k.value.length;
                }
                removeCount--;
                str = text.slice(pos, p);
                match2.index -= pos;
              } else {
                match2 = matchPattern(pattern, 0, str, lookbehind);
                if (!match2) {
                  continue;
                }
              }
              var from = match2.index;
              var matchStr = match2[0];
              var before = str.slice(0, from);
              var after = str.slice(from + matchStr.length);
              var reach = pos + str.length;
              if (rematch && reach > rematch.reach) {
                rematch.reach = reach;
              }
              var removeFrom = currentNode.prev;
              if (before) {
                removeFrom = addAfter(tokenList, removeFrom, before);
                pos += before.length;
              }
              removeRange(tokenList, removeFrom, removeCount);
              var wrapped = new Token(token, inside ? _.tokenize(matchStr, inside) : matchStr, alias, matchStr);
              currentNode = addAfter(tokenList, removeFrom, wrapped);
              if (after) {
                addAfter(tokenList, currentNode, after);
              }
              if (removeCount > 1) {
                var nestedRematch = {
                  cause: token + "," + j,
                  reach
                };
                matchGrammar(text, tokenList, grammar, currentNode.prev, pos, nestedRematch);
                if (rematch && nestedRematch.reach > rematch.reach) {
                  rematch.reach = nestedRematch.reach;
                }
              }
            }
          }
        }
      }
      function LinkedList() {
        var head = { value: null, prev: null, next: null };
        var tail = { value: null, prev: head, next: null };
        head.next = tail;
        this.head = head;
        this.tail = tail;
        this.length = 0;
      }
      function addAfter(list, node, value) {
        var next = node.next;
        var newNode = { value, prev: node, next };
        node.next = newNode;
        next.prev = newNode;
        list.length++;
        return newNode;
      }
      function removeRange(list, node, count) {
        var next = node.next;
        for (var i = 0; i < count && next !== list.tail; i++) {
          next = next.next;
        }
        node.next = next;
        next.prev = node;
        list.length -= i;
      }
      function toArray(list) {
        var array = [];
        var node = list.head.next;
        while (node !== list.tail) {
          array.push(node.value);
          node = node.next;
        }
        return array;
      }
      if (!_self2.document) {
        if (!_self2.addEventListener) {
          return _;
        }
        if (!_.disableWorkerMessageHandler) {
          _self2.addEventListener("message", function(evt) {
            var message = JSON.parse(evt.data);
            var lang2 = message.language;
            var code = message.code;
            var immediateClose = message.immediateClose;
            _self2.postMessage(_.highlight(code, _.languages[lang2], lang2));
            if (immediateClose) {
              _self2.close();
            }
          }, false);
        }
        return _;
      }
      var script = _.util.currentScript();
      if (script) {
        _.filename = script.src;
        if (script.hasAttribute("data-manual")) {
          _.manual = true;
        }
      }
      function highlightAutomaticallyCallback() {
        if (!_.manual) {
          _.highlightAll();
        }
      }
      if (!_.manual) {
        var readyState = document.readyState;
        if (readyState === "loading" || readyState === "interactive" && script && script.defer) {
          document.addEventListener("DOMContentLoaded", highlightAutomaticallyCallback);
        } else {
          if (window.requestAnimationFrame) {
            window.requestAnimationFrame(highlightAutomaticallyCallback);
          } else {
            window.setTimeout(highlightAutomaticallyCallback, 16);
          }
        }
      }
      return _;
    }(_self);
    if (typeof module2 !== "undefined" && module2.exports) {
      module2.exports = Prism;
    }
    if (typeof global !== "undefined") {
      global.Prism = Prism;
    }
  }
});

// ../../node_modules/refractor/lang/clike.js
var require_clike = __commonJS({
  "../../node_modules/refractor/lang/clike.js"(exports, module2) {
    "use strict";
    module2.exports = clike;
    clike.displayName = "clike";
    clike.aliases = [];
    function clike(Prism) {
      Prism.languages.clike = {
        comment: [
          {
            pattern: /(^|[^\\])\/\*[\s\S]*?(?:\*\/|$)/,
            lookbehind: true,
            greedy: true
          },
          {
            pattern: /(^|[^\\:])\/\/.*/,
            lookbehind: true,
            greedy: true
          }
        ],
        string: {
          pattern: /(["'])(?:\\(?:\r\n|[\s\S])|(?!\1)[^\\\r\n])*\1/,
          greedy: true
        },
        "class-name": {
          pattern: /(\b(?:class|extends|implements|instanceof|interface|new|trait)\s+|\bcatch\s+\()[\w.\\]+/i,
          lookbehind: true,
          inside: {
            punctuation: /[.\\]/
          }
        },
        keyword: /\b(?:break|catch|continue|do|else|finally|for|function|if|in|instanceof|new|null|return|throw|try|while)\b/,
        boolean: /\b(?:false|true)\b/,
        function: /\b\w+(?=\()/,
        number: /\b0x[\da-f]+\b|(?:\b\d+(?:\.\d*)?|\B\.\d+)(?:e[+-]?\d+)?/i,
        operator: /[<>]=?|[!=]=?=?|--?|\+\+?|&&?|\|\|?|[?*/~^%]/,
        punctuation: /[{}[\];(),.:]/
      };
    }
  }
});

// ../../node_modules/refractor/lang/javascript.js
var require_javascript = __commonJS({
  "../../node_modules/refractor/lang/javascript.js"(exports, module2) {
    "use strict";
    module2.exports = javascript;
    javascript.displayName = "javascript";
    javascript.aliases = ["js"];
    function javascript(Prism) {
      Prism.languages.javascript = Prism.languages.extend("clike", {
        "class-name": [
          Prism.languages.clike["class-name"],
          {
            pattern: /(^|[^$\w\xA0-\uFFFF])(?!\s)[_$A-Z\xA0-\uFFFF](?:(?!\s)[$\w\xA0-\uFFFF])*(?=\.(?:constructor|prototype))/,
            lookbehind: true
          }
        ],
        keyword: [
          {
            pattern: /((?:^|\})\s*)catch\b/,
            lookbehind: true
          },
          {
            pattern: /(^|[^.]|\.\.\.\s*)\b(?:as|assert(?=\s*\{)|async(?=\s*(?:function\b|\(|[$\w\xA0-\uFFFF]|$))|await|break|case|class|const|continue|debugger|default|delete|do|else|enum|export|extends|finally(?=\s*(?:\{|$))|for|from(?=\s*(?:['"]|$))|function|(?:get|set)(?=\s*(?:[#\[$\w\xA0-\uFFFF]|$))|if|implements|import|in|instanceof|interface|let|new|null|of|package|private|protected|public|return|static|super|switch|this|throw|try|typeof|undefined|var|void|while|with|yield)\b/,
            lookbehind: true
          }
        ],
        function: /#?(?!\s)[_$a-zA-Z\xA0-\uFFFF](?:(?!\s)[$\w\xA0-\uFFFF])*(?=\s*(?:\.\s*(?:apply|bind|call)\s*)?\()/,
        number: {
          pattern: RegExp(
            /(^|[^\w$])/.source + "(?:" + (/NaN|Infinity/.source + "|" + /0[bB][01]+(?:_[01]+)*n?/.source + "|" + /0[oO][0-7]+(?:_[0-7]+)*n?/.source + "|" + /0[xX][\dA-Fa-f]+(?:_[\dA-Fa-f]+)*n?/.source + "|" + /\d+(?:_\d+)*n/.source + "|" + /(?:\d+(?:_\d+)*(?:\.(?:\d+(?:_\d+)*)?)?|\.\d+(?:_\d+)*)(?:[Ee][+-]?\d+(?:_\d+)*)?/.source) + ")" + /(?![\w$])/.source
          ),
          lookbehind: true
        },
        operator: /--|\+\+|\*\*=?|=>|&&=?|\|\|=?|[!=]==|<<=?|>>>?=?|[-+*/%&|^!=<>]=?|\.{3}|\?\?=?|\?\.?|[~:]/
      });
      Prism.languages.javascript["class-name"][0].pattern = /(\b(?:class|extends|implements|instanceof|interface|new)\s+)[\w.\\]+/;
      Prism.languages.insertBefore("javascript", "keyword", {
        regex: {
          pattern: /((?:^|[^$\w\xA0-\uFFFF."'\])\s]|\b(?:return|yield))\s*)\/(?:\[(?:[^\]\\\r\n]|\\.)*\]|\\.|[^/\\\[\r\n])+\/[dgimyus]{0,7}(?=(?:\s|\/\*(?:[^*]|\*(?!\/))*\*\/)*(?:$|[\r\n,.;:})\]]|\/\/))/,
          lookbehind: true,
          greedy: true,
          inside: {
            "regex-source": {
              pattern: /^(\/)[\s\S]+(?=\/[a-z]*$)/,
              lookbehind: true,
              alias: "language-regex",
              inside: Prism.languages.regex
            },
            "regex-delimiter": /^\/|\/$/,
            "regex-flags": /^[a-z]+$/
          }
        },
        "function-variable": {
          pattern: /#?(?!\s)[_$a-zA-Z\xA0-\uFFFF](?:(?!\s)[$\w\xA0-\uFFFF])*(?=\s*[=:]\s*(?:async\s*)?(?:\bfunction\b|(?:\((?:[^()]|\([^()]*\))*\)|(?!\s)[_$a-zA-Z\xA0-\uFFFF](?:(?!\s)[$\w\xA0-\uFFFF])*)\s*=>))/,
          alias: "function"
        },
        parameter: [
          {
            pattern: /(function(?:\s+(?!\s)[_$a-zA-Z\xA0-\uFFFF](?:(?!\s)[$\w\xA0-\uFFFF])*)?\s*\(\s*)(?!\s)(?:[^()\s]|\s+(?![\s)])|\([^()]*\))+(?=\s*\))/,
            lookbehind: true,
            inside: Prism.languages.javascript
          },
          {
            pattern: /(^|[^$\w\xA0-\uFFFF])(?!\s)[_$a-z\xA0-\uFFFF](?:(?!\s)[$\w\xA0-\uFFFF])*(?=\s*=>)/i,
            lookbehind: true,
            inside: Prism.languages.javascript
          },
          {
            pattern: /(\(\s*)(?!\s)(?:[^()\s]|\s+(?![\s)])|\([^()]*\))+(?=\s*\)\s*=>)/,
            lookbehind: true,
            inside: Prism.languages.javascript
          },
          {
            pattern: /((?:\b|\s|^)(?!(?:as|async|await|break|case|catch|class|const|continue|debugger|default|delete|do|else|enum|export|extends|finally|for|from|function|get|if|implements|import|in|instanceof|interface|let|new|null|of|package|private|protected|public|return|set|static|super|switch|this|throw|try|typeof|undefined|var|void|while|with|yield)(?![$\w\xA0-\uFFFF]))(?:(?!\s)[_$a-zA-Z\xA0-\uFFFF](?:(?!\s)[$\w\xA0-\uFFFF])*\s*)\(\s*|\]\s*\(\s*)(?!\s)(?:[^()\s]|\s+(?![\s)])|\([^()]*\))+(?=\s*\)\s*\{)/,
            lookbehind: true,
            inside: Prism.languages.javascript
          }
        ],
        constant: /\b[A-Z](?:[A-Z_]|\dx?)*\b/
      });
      Prism.languages.insertBefore("javascript", "string", {
        hashbang: {
          pattern: /^#!.*/,
          greedy: true,
          alias: "comment"
        },
        "template-string": {
          pattern: /`(?:\\[\s\S]|\$\{(?:[^{}]|\{(?:[^{}]|\{[^}]*\})*\})+\}|(?!\$\{)[^\\`])*`/,
          greedy: true,
          inside: {
            "template-punctuation": {
              pattern: /^`|`$/,
              alias: "string"
            },
            interpolation: {
              pattern: /((?:^|[^\\])(?:\\{2})*)\$\{(?:[^{}]|\{(?:[^{}]|\{[^}]*\})*\})+\}/,
              lookbehind: true,
              inside: {
                "interpolation-punctuation": {
                  pattern: /^\$\{|\}$/,
                  alias: "punctuation"
                },
                rest: Prism.languages.javascript
              }
            },
            string: /[\s\S]+/
          }
        },
        "string-property": {
          pattern: /((?:^|[,{])[ \t]*)(["'])(?:\\(?:\r\n|[\s\S])|(?!\2)[^\\\r\n])*\2(?=\s*:)/m,
          lookbehind: true,
          greedy: true,
          alias: "property"
        }
      });
      Prism.languages.insertBefore("javascript", "operator", {
        "literal-property": {
          pattern: /((?:^|[,{])[ \t]*)(?!\s)[_$a-zA-Z\xA0-\uFFFF](?:(?!\s)[$\w\xA0-\uFFFF])*(?=\s*:)/m,
          lookbehind: true,
          alias: "property"
        }
      });
      if (Prism.languages.markup) {
        Prism.languages.markup.tag.addInlined("script", "javascript");
        Prism.languages.markup.tag.addAttribute(
          /on(?:abort|blur|change|click|composition(?:end|start|update)|dblclick|error|focus(?:in|out)?|key(?:down|up)|load|mouse(?:down|enter|leave|move|out|over|up)|reset|resize|scroll|select|slotchange|submit|unload|wheel)/.source,
          "javascript"
        );
      }
      Prism.languages.js = Prism.languages.javascript;
    }
  }
});

// ../../node_modules/refractor/core.js
var require_core = __commonJS({
  "../../node_modules/refractor/core.js"(exports, module2) {
    "use strict";
    var ctx = typeof globalThis === "object" ? globalThis : typeof self === "object" ? self : typeof window === "object" ? window : typeof global === "object" ? global : {};
    var restore = capture();
    ctx.Prism = { manual: true, disableWorkerMessageHandler: true };
    var h = require_hastscript();
    var decode = require_parse_entities();
    var Prism = require_prism_core();
    var markup2 = require_markup();
    var css2 = require_css();
    var clike = require_clike();
    var js = require_javascript();
    restore();
    var own = {}.hasOwnProperty;
    function Refractor() {
    }
    Refractor.prototype = Prism;
    var refract = new Refractor();
    module2.exports = refract;
    refract.highlight = highlight;
    refract.register = register;
    refract.alias = alias;
    refract.registered = registered;
    refract.listLanguages = listLanguages;
    register(markup2);
    register(css2);
    register(clike);
    register(js);
    refract.util.encode = encode;
    refract.Token.stringify = stringify;
    function register(grammar) {
      if (typeof grammar !== "function" || !grammar.displayName) {
        throw new Error("Expected `function` for `grammar`, got `" + grammar + "`");
      }
      if (refract.languages[grammar.displayName] === void 0) {
        grammar(refract);
      }
    }
    function alias(name, alias2) {
      var languages = refract.languages;
      var map = name;
      var key;
      var list;
      var length2;
      var index3;
      if (alias2) {
        map = {};
        map[name] = alias2;
      }
      for (key in map) {
        list = map[key];
        list = typeof list === "string" ? [list] : list;
        length2 = list.length;
        index3 = -1;
        while (++index3 < length2) {
          languages[list[index3]] = languages[key];
        }
      }
    }
    function highlight(value, name) {
      var sup = Prism.highlight;
      var grammar;
      if (typeof value !== "string") {
        throw new Error("Expected `string` for `value`, got `" + value + "`");
      }
      if (refract.util.type(name) === "Object") {
        grammar = name;
        name = null;
      } else {
        if (typeof name !== "string") {
          throw new Error("Expected `string` for `name`, got `" + name + "`");
        }
        if (own.call(refract.languages, name)) {
          grammar = refract.languages[name];
        } else {
          throw new Error("Unknown language: `" + name + "` is not registered");
        }
      }
      return sup.call(this, value, grammar, name);
    }
    function registered(language) {
      if (typeof language !== "string") {
        throw new Error("Expected `string` for `language`, got `" + language + "`");
      }
      return own.call(refract.languages, language);
    }
    function listLanguages() {
      var languages = refract.languages;
      var list = [];
      var language;
      for (language in languages) {
        if (own.call(languages, language) && typeof languages[language] === "object") {
          list.push(language);
        }
      }
      return list;
    }
    function stringify(value, language, parent) {
      var env;
      if (typeof value === "string") {
        return { type: "text", value };
      }
      if (refract.util.type(value) === "Array") {
        return stringifyAll(value, language);
      }
      env = {
        type: value.type,
        content: refract.Token.stringify(value.content, language, parent),
        tag: "span",
        classes: ["token", value.type],
        attributes: {},
        language,
        parent
      };
      if (value.alias) {
        env.classes = env.classes.concat(value.alias);
      }
      refract.hooks.run("wrap", env);
      return h(
        env.tag + "." + env.classes.join("."),
        attributes(env.attributes),
        env.content
      );
    }
    function stringifyAll(values, language) {
      var result = [];
      var length2 = values.length;
      var index3 = -1;
      var value;
      while (++index3 < length2) {
        value = values[index3];
        if (value !== "" && value !== null && value !== void 0) {
          result.push(value);
        }
      }
      index3 = -1;
      length2 = result.length;
      while (++index3 < length2) {
        value = result[index3];
        result[index3] = refract.Token.stringify(value, language, result);
      }
      return result;
    }
    function encode(tokens) {
      return tokens;
    }
    function attributes(attrs) {
      var key;
      for (key in attrs) {
        attrs[key] = decode(attrs[key]);
      }
      return attrs;
    }
    function capture() {
      var defined = "Prism" in ctx;
      var current = defined ? ctx.Prism : void 0;
      return restore2;
      function restore2() {
        if (defined) {
          ctx.Prism = current;
        } else {
          delete ctx.Prism;
        }
        defined = void 0;
        current = void 0;
      }
    }
  }
});

// ../../node_modules/react-syntax-highlighter/dist/esm/prism-light.js
var import_core, SyntaxHighlighter, prism_light_default;
var init_prism_light = __esm({
  "../../node_modules/react-syntax-highlighter/dist/esm/prism-light.js"() {
    init_highlight();
    import_core = __toESM(require_core());
    SyntaxHighlighter = highlight_default(import_core.default, {});
    SyntaxHighlighter.registerLanguage = function(_, language) {
      return import_core.default.register(language);
    };
    SyntaxHighlighter.alias = function(name, aliases) {
      return import_core.default.alias(name, aliases);
    };
    prism_light_default = SyntaxHighlighter;
  }
});

// ../../node_modules/react-syntax-highlighter/dist/esm/index.js
var init_esm = __esm({
  "../../node_modules/react-syntax-highlighter/dist/esm/index.js"() {
    init_create_element();
  }
});

// src/ActionBar/ActionBar.tsx
var import_react4, import_theming3, Container, ActionButton, ActionBar;
var init_ActionBar = __esm({
  "src/ActionBar/ActionBar.tsx"() {
    import_react4 = __toESM(require("react"));
    import_theming3 = require("@storybook/theming");
    Container = import_theming3.styled.div(({ theme }) => ({
      position: "absolute",
      bottom: 0,
      right: 0,
      maxWidth: "100%",
      display: "flex",
      background: theme.background.content,
      zIndex: 1
    }));
    ActionButton = import_theming3.styled.button(
      ({ theme }) => ({
        margin: 0,
        border: "0 none",
        padding: "4px 10px",
        cursor: "pointer",
        display: "flex",
        alignItems: "center",
        color: theme.color.defaultText,
        background: theme.background.content,
        fontSize: 12,
        lineHeight: "16px",
        fontFamily: theme.typography.fonts.base,
        fontWeight: theme.typography.weight.bold,
        borderTop: `1px solid ${theme.appBorderColor}`,
        borderLeft: `1px solid ${theme.appBorderColor}`,
        marginLeft: -1,
        borderRadius: `4px 0 0 0`,
        "&:not(:last-child)": { borderRight: `1px solid ${theme.appBorderColor}` },
        "& + *": {
          borderLeft: `1px solid ${theme.appBorderColor}`,
          borderRadius: 0
        },
        "&:focus": {
          boxShadow: `${theme.color.secondary} 0 -3px 0 0 inset`,
          outline: "0 none"
        }
      }),
      ({ disabled }) => disabled && {
        cursor: "not-allowed",
        opacity: 0.5
      }
    );
    ActionButton.displayName = "ActionButton";
    ActionBar = ({ actionItems, ...props }) => /* @__PURE__ */ import_react4.default.createElement(Container, {
      ...props
    }, actionItems.map(({ title, className, onClick, disabled }, index3) => /* @__PURE__ */ import_react4.default.createElement(ActionButton, {
      key: index3,
      className,
      onClick,
      disabled
    }, title)));
  }
});

// src/ScrollArea/GlobalScrollAreaStyles.tsx
var GlobalScrollAreaStyles_exports = {};
__export(GlobalScrollAreaStyles_exports, {
  default: () => GlobalScrollAreaStyles_default,
  getScrollAreaStyles: () => getScrollAreaStyles
});
var import_react5, import_theming4, hsResizeObserverDummyAnimation, getScrollAreaStyles, GlobalScrollAreaStyles, GlobalScrollAreaStyles_default;
var init_GlobalScrollAreaStyles = __esm({
  "src/ScrollArea/GlobalScrollAreaStyles.tsx"() {
    import_react5 = __toESM(require("react"));
    import_theming4 = require("@storybook/theming");
    hsResizeObserverDummyAnimation = import_theming4.keyframes`0%{z-index:0}to{z-index:-1}`;
    getScrollAreaStyles = (theme) => ({
      "html.os-html, html.os-html>.os-host": {
        display: "block",
        overflow: "hidden",
        boxSizing: "border-box",
        height: "100%!important",
        width: "100%!important",
        minWidth: "100%!important",
        minHeight: "100%!important",
        margin: "0!important",
        position: "absolute!important"
      },
      "html.os-html>.os-host>.os-padding": {
        position: "absolute"
      },
      "body.os-dragging, body.os-dragging *": {
        cursor: "default"
      },
      ".os-host, .os-host-textarea": {
        position: "relative",
        overflow: "visible!important",
        flexDirection: "column",
        flexWrap: "nowrap",
        justifyContent: "flex-start",
        alignContent: "flex-start",
        alignItems: "flex-start"
      },
      ".os-host-flexbox": {
        overflow: "hidden!important",
        display: "flex"
      },
      ".os-host-flexbox>.os-size-auto-observer": {
        height: "inherit!important"
      },
      ".os-host-flexbox>.os-content-glue": {
        flexGrow: 1,
        flexShrink: 0
      },
      ".os-host-flexbox>.os-size-auto-observer, .os-host-flexbox>.os-content-glue": {
        minHeight: 0,
        minWidth: 0,
        flexGrow: 0,
        flexShrink: 1,
        flexBasis: "auto"
      },
      "#os-dummy-scrollbar-size": {
        position: "fixed",
        opacity: 0,
        visibility: "hidden",
        overflow: "scroll",
        height: 500,
        width: 500
      },
      "#os-dummy-scrollbar-size>div": {
        width: "200%",
        height: "200%",
        margin: 10
      },
      "#os-dummy-scrollbar-size, .os-viewport": {},
      ".os-viewport-native-scrollbars-invisible#os-dummy-scrollbar-size, .os-viewport-native-scrollbars-invisible.os-viewport": {
        scrollbarWidth: "none!important"
      },
      ".os-viewport-native-scrollbars-invisible#os-dummy-scrollbar-size::-webkit-scrollbar, .os-viewport-native-scrollbars-invisible.os-viewport::-webkit-scrollbar, .os-viewport-native-scrollbars-invisible#os-dummy-scrollbar-size::-webkit-scrollbar-corner, .os-viewport-native-scrollbars-invisible.os-viewport::-webkit-scrollbar-corner": {
        display: "none!important",
        width: "0!important",
        height: "0!important",
        visibility: "hidden!important",
        background: "0 0!important"
      },
      ".os-content-glue": {
        boxSizing: "inherit",
        maxHeight: "100%",
        maxWidth: "100%",
        width: "100%",
        pointerEvents: "none"
      },
      ".os-padding": {
        boxSizing: "inherit",
        direction: "inherit",
        position: "absolute",
        overflow: "visible",
        padding: 0,
        margin: 0,
        left: 0,
        top: 0,
        bottom: 0,
        right: 0,
        width: "auto!important",
        height: "auto!important",
        zIndex: 1
      },
      ".os-host-overflow>.os-padding": {
        overflow: "hidden"
      },
      ".os-viewport": {
        direction: "inherit!important",
        boxSizing: "inherit!important",
        resize: "none!important",
        outline: "0!important",
        position: "absolute",
        overflow: "hidden",
        top: 0,
        left: 0,
        bottom: 0,
        right: 0,
        padding: 0,
        margin: 0
      },
      ".os-content-arrange": {
        position: "absolute",
        zIndex: -1,
        minHeight: 1,
        minWidth: 1,
        pointerEvents: "none"
      },
      ".os-content": {
        direction: "inherit",
        boxSizing: "border-box!important",
        position: "relative",
        display: "block",
        height: "100%",
        width: "100%",
        visibility: "visible"
      },
      ".os-content:before, .os-content:after": {
        content: "''",
        display: "table",
        width: 0,
        height: 0,
        lineHeight: 0,
        fontSize: 0
      },
      ".os-content>.os-textarea": {
        boxSizing: "border-box!important",
        direction: "inherit!important",
        background: "0 0!important",
        outline: "0 transparent!important",
        overflow: "hidden!important",
        position: "absolute!important",
        display: "block!important",
        top: "0!important",
        left: "0!important",
        margin: "0!important",
        borderRadius: "0!important",
        float: "none!important",
        filter: "none!important",
        border: "0!important",
        resize: "none!important",
        transform: "none!important",
        maxWidth: "none!important",
        maxHeight: "none!important",
        boxShadow: "none!important",
        perspective: "none!important",
        opacity: "1!important",
        zIndex: "1!important",
        clip: "auto!important",
        verticalAlign: "baseline!important",
        padding: 0
      },
      ".os-host-rtl>.os-padding>.os-viewport>.os-content>.os-textarea": {
        right: "0!important"
      },
      ".os-content>.os-textarea-cover": {
        zIndex: -1,
        pointerEvents: "none"
      },
      ".os-content>.os-textarea[wrap=off]": {
        whiteSpace: "pre!important",
        margin: "0!important"
      },
      ".os-text-inherit": {
        fontFamily: "inherit",
        fontSize: "inherit",
        fontWeight: "inherit",
        fontStyle: "inherit",
        fontVariant: "inherit",
        textTransform: "inherit",
        textDecoration: "inherit",
        textIndent: "inherit",
        textAlign: "inherit",
        textShadow: "inherit",
        textOverflow: "inherit",
        letterSpacing: "inherit",
        wordSpacing: "inherit",
        lineHeight: "inherit",
        unicodeBidi: "inherit",
        direction: "inherit",
        color: "inherit",
        cursor: "text"
      },
      ".os-resize-observer, .os-resize-observer-host": {
        boxSizing: "inherit",
        display: "block",
        opacity: 0,
        position: "absolute",
        top: 0,
        left: 0,
        height: "100%",
        width: "100%",
        overflow: "hidden",
        pointerEvents: "none",
        zIndex: -1
      },
      ".os-resize-observer-host": {
        padding: "inherit",
        border: "inherit",
        borderColor: "transparent",
        borderStyle: "solid",
        boxSizing: "border-box"
      },
      ".os-resize-observer-host:after": {
        content: "''"
      },
      ".os-resize-observer-host>.os-resize-observer, .os-resize-observer-host:after": {
        height: "200%",
        width: "200%",
        padding: "inherit",
        border: "inherit",
        margin: 0,
        display: "block",
        boxSizing: "content-box"
      },
      ".os-resize-observer.observed, object.os-resize-observer": {
        boxSizing: "border-box!important"
      },
      ".os-size-auto-observer": {
        boxSizing: "inherit!important",
        height: "100%",
        width: "inherit",
        maxWidth: 1,
        position: "relative",
        float: "left",
        maxHeight: 1,
        overflow: "hidden",
        zIndex: -1,
        padding: 0,
        margin: 0,
        pointerEvents: "none",
        flexGrow: "inherit",
        flexShrink: 0,
        flexBasis: 0
      },
      ".os-size-auto-observer>.os-resize-observer": {
        width: "1000%",
        height: "1000%",
        minHeight: 1,
        minWidth: 1
      },
      ".os-resize-observer-item": {
        position: "absolute",
        top: 0,
        right: 0,
        bottom: 0,
        left: 0,
        overflow: "hidden",
        zIndex: -1,
        opacity: 0,
        direction: "ltr!important",
        flex: "none!important"
      },
      ".os-resize-observer-item-final": {
        position: "absolute",
        left: 0,
        top: 0,
        transition: "none!important",
        flex: "none!important"
      },
      ".os-resize-observer": {
        animationDuration: ".001s",
        animationName: `${hsResizeObserverDummyAnimation}`
      },
      ".os-host-transition>.os-scrollbar, .os-host-transition>.os-scrollbar-corner": {
        transition: "opacity .3s,visibility .3s,top .3s,right .3s,bottom .3s,left .3s"
      },
      "html.os-html>.os-host>.os-scrollbar": {
        position: "absolute",
        zIndex: 999999
      },
      ".os-scrollbar, .os-scrollbar-corner": {
        position: "absolute",
        opacity: 1,
        zIndex: 1
      },
      ".os-scrollbar-corner": {
        bottom: 0,
        right: 0,
        height: 10,
        width: 10,
        backgroundColor: "transparent"
      },
      ".os-scrollbar": {
        pointerEvents: "none",
        padding: 2,
        boxSizing: "border-box",
        background: 0
      },
      ".os-scrollbar-track": {
        pointerEvents: "auto",
        position: "relative",
        height: "100%",
        width: "100%",
        padding: "0!important",
        border: "0!important"
      },
      ".os-scrollbar-handle": {
        pointerEvents: "auto",
        position: "absolute",
        width: "100%",
        height: "100%"
      },
      ".os-scrollbar-handle-off, .os-scrollbar-track-off": {
        pointerEvents: "none"
      },
      ".os-scrollbar.os-scrollbar-unusable, .os-scrollbar.os-scrollbar-unusable *": {
        pointerEvents: "none!important"
      },
      ".os-scrollbar.os-scrollbar-unusable .os-scrollbar-handle": {
        opacity: "0!important"
      },
      ".os-scrollbar-horizontal": {
        bottom: 0,
        left: 0,
        right: 10,
        height: 10
      },
      ".os-scrollbar-vertical": {
        top: 0,
        right: 0,
        bottom: 10,
        width: 10
      },
      ".os-host-rtl>.os-scrollbar-horizontal": {
        right: 0
      },
      ".os-host-rtl>.os-scrollbar-vertical": {
        right: "auto",
        left: 0
      },
      ".os-host-rtl>.os-scrollbar-corner": {
        right: "auto",
        left: 0
      },
      ".os-scrollbar-auto-hidden, .os-padding+.os-scrollbar-corner, .os-host-resize-disabled.os-host-scrollbar-horizontal-hidden>.os-scrollbar-corner, .os-host-scrollbar-horizontal-hidden>.os-scrollbar-horizontal, .os-host-resize-disabled.os-host-scrollbar-vertical-hidden>.os-scrollbar-corner, .os-host-scrollbar-vertical-hidden>.os-scrollbar-vertical, .os-scrollbar-horizontal.os-scrollbar-auto-hidden+.os-scrollbar-vertical+.os-scrollbar-corner, .os-scrollbar-horizontal+.os-scrollbar-vertical.os-scrollbar-auto-hidden+.os-scrollbar-corner, .os-scrollbar-horizontal.os-scrollbar-auto-hidden+.os-scrollbar-vertical.os-scrollbar-auto-hidden+.os-scrollbar-corner": {
        opacity: 0,
        visibility: "hidden",
        pointerEvents: "none"
      },
      ".os-scrollbar-corner-resize-both": {
        cursor: "nwse-resize"
      },
      ".os-host-rtl>.os-scrollbar-corner-resize-both": {
        cursor: "nesw-resize"
      },
      ".os-scrollbar-corner-resize-horizontal": {
        cursor: "ew-resize"
      },
      ".os-scrollbar-corner-resize-vertical": {
        cursor: "ns-resize"
      },
      ".os-dragging .os-scrollbar-corner.os-scrollbar-corner-resize": {
        cursor: "default"
      },
      ".os-host-resize-disabled.os-host-scrollbar-horizontal-hidden>.os-scrollbar-vertical": {
        top: 0,
        bottom: 0
      },
      ".os-host-resize-disabled.os-host-scrollbar-vertical-hidden>.os-scrollbar-horizontal, .os-host-rtl.os-host-resize-disabled.os-host-scrollbar-vertical-hidden>.os-scrollbar-horizontal": {
        right: 0,
        left: 0
      },
      ".os-scrollbar:hover, .os-scrollbar-corner.os-scrollbar-corner-resize": {
        opacity: "1!important",
        visibility: "visible!important"
      },
      ".os-scrollbar-corner.os-scrollbar-corner-resize": {
        backgroundImage: "linear-gradient(135deg, rgba(0,0,0,0) 0%, rgba(0,0,0,0)  50%, rgba(0,0,0,0.4) 50%, rgba(0,0,0,0.4) 100%)",
        backgroundRepeat: "no-repeat",
        backgroundPosition: "100% 100%",
        pointerEvents: "auto!important"
      },
      ".os-host-rtl>.os-scrollbar-corner.os-scrollbar-corner-resize": {
        transform: "scale(-1,1)"
      },
      ".os-host-overflow": {
        overflow: "hidden!important"
      },
      ".os-theme-dark.os-host-rtl>.os-scrollbar-horizontal": {
        left: 10,
        right: 0
      },
      ".os-scrollbar.os-scrollbar-unusable": {
        background: 0
      },
      ".os-scrollbar>.os-scrollbar-track": {
        background: 0
      },
      ".os-scrollbar-horizontal>.os-scrollbar-track>.os-scrollbar-handle": {
        minWidth: 30
      },
      ".os-scrollbar-vertical>.os-scrollbar-track>.os-scrollbar-handle": {
        minHeight: 30
      },
      ".os-theme-dark.os-host-transition>.os-scrollbar>.os-scrollbar-track>.os-scrollbar-handle": {
        transition: "background-color .3s"
      },
      ".os-scrollbar>.os-scrollbar-track>.os-scrollbar-handle, .os-scrollbar>.os-scrollbar-track": {
        borderRadius: 10
      },
      ".os-scrollbar>.os-scrollbar-track>.os-scrollbar-handle": {
        background: theme.textMutedColor,
        opacity: 0.5
      },
      ".os-scrollbar:hover>.os-scrollbar-track>.os-scrollbar-handle": {
        opacity: 0.6
      },
      ".os-scrollbar-horizontal .os-scrollbar-handle:before, .os-scrollbar-vertical .os-scrollbar-handle:before": {
        content: "''",
        position: "absolute",
        left: 0,
        right: 0,
        top: 0,
        bottom: 0,
        display: "block"
      },
      ".os-theme-dark.os-host-scrollbar-horizontal-hidden>.os-scrollbar-horizontal .os-scrollbar-handle:before, .os-theme-dark.os-host-scrollbar-vertical-hidden>.os-scrollbar-vertical .os-scrollbar-handle:before": {
        display: "none"
      },
      ".os-scrollbar-horizontal .os-scrollbar-handle:before": {
        top: -6,
        bottom: -2
      },
      ".os-scrollbar-vertical .os-scrollbar-handle:before": {
        left: -6,
        right: -2
      },
      ".os-host-rtl.os-scrollbar-vertical .os-scrollbar-handle:before": {
        right: -6,
        left: -2
      }
    });
    GlobalScrollAreaStyles = () => /* @__PURE__ */ import_react5.default.createElement(import_theming4.Global, {
      styles: getScrollAreaStyles
    });
    GlobalScrollAreaStyles_default = GlobalScrollAreaStyles;
  }
});

// ../../node_modules/overlayscrollbars/js/OverlayScrollbars.js
var require_OverlayScrollbars = __commonJS({
  "../../node_modules/overlayscrollbars/js/OverlayScrollbars.js"(exports, module2) {
    (function(global6, factory) {
      if (typeof define === "function" && define.amd)
        define(function() {
          return factory(global6, global6.document, void 0);
        });
      else if (typeof module2 === "object" && typeof module2.exports === "object")
        module2.exports = factory(global6, global6.document, void 0);
      else
        factory(global6, global6.document, void 0);
    })(
      typeof window !== "undefined" ? window : exports,
      function(window2, document4, undefined2) {
        "use strict";
        var PLUGINNAME = "OverlayScrollbars";
        var TYPES = {
          o: "object",
          f: "function",
          a: "array",
          s: "string",
          b: "boolean",
          n: "number",
          u: "undefined",
          z: "null"
        };
        var LEXICON = {
          c: "class",
          s: "style",
          i: "id",
          l: "length",
          p: "prototype",
          ti: "tabindex",
          oH: "offsetHeight",
          cH: "clientHeight",
          sH: "scrollHeight",
          oW: "offsetWidth",
          cW: "clientWidth",
          sW: "scrollWidth",
          hOP: "hasOwnProperty",
          bCR: "getBoundingClientRect"
        };
        var VENDORS = function() {
          var jsCache = {};
          var cssCache = {};
          var cssPrefixes = ["-webkit-", "-moz-", "-o-", "-ms-"];
          var jsPrefixes = ["WebKit", "Moz", "O", "MS"];
          function firstLetterToUpper(str) {
            return str.charAt(0).toUpperCase() + str.slice(1);
          }
          return {
            _cssPrefixes: cssPrefixes,
            _jsPrefixes: jsPrefixes,
            _cssProperty: function(name) {
              var result = cssCache[name];
              if (cssCache[LEXICON.hOP](name))
                return result;
              var uppercasedName = firstLetterToUpper(name);
              var elmStyle = document4.createElement("div")[LEXICON.s];
              var resultPossibilities;
              var i = 0;
              var v;
              var currVendorWithoutDashes;
              for (; i < cssPrefixes.length; i++) {
                currVendorWithoutDashes = cssPrefixes[i].replace(/-/g, "");
                resultPossibilities = [
                  name,
                  cssPrefixes[i] + name,
                  currVendorWithoutDashes + uppercasedName,
                  firstLetterToUpper(currVendorWithoutDashes) + uppercasedName
                ];
                for (v = 0; v < resultPossibilities[LEXICON.l]; v++) {
                  if (elmStyle[resultPossibilities[v]] !== undefined2) {
                    result = resultPossibilities[v];
                    break;
                  }
                }
              }
              cssCache[name] = result;
              return result;
            },
            _cssPropertyValue: function(property, values, suffix) {
              var name = property + " " + values;
              var result = cssCache[name];
              if (cssCache[LEXICON.hOP](name))
                return result;
              var dummyStyle = document4.createElement("div")[LEXICON.s];
              var possbleValues = values.split(" ");
              var preparedSuffix = suffix || "";
              var i = 0;
              var v = -1;
              var prop;
              for (; i < possbleValues[LEXICON.l]; i++) {
                for (; v < VENDORS._cssPrefixes[LEXICON.l]; v++) {
                  prop = v < 0 ? possbleValues[i] : VENDORS._cssPrefixes[v] + possbleValues[i];
                  dummyStyle.cssText = property + ":" + prop + preparedSuffix;
                  if (dummyStyle[LEXICON.l]) {
                    result = prop;
                    break;
                  }
                }
              }
              cssCache[name] = result;
              return result;
            },
            _jsAPI: function(name, isInterface, fallback) {
              var i = 0;
              var result = jsCache[name];
              if (!jsCache[LEXICON.hOP](name)) {
                result = window2[name];
                for (; i < jsPrefixes[LEXICON.l]; i++)
                  result = result || window2[(isInterface ? jsPrefixes[i] : jsPrefixes[i].toLowerCase()) + firstLetterToUpper(name)];
                jsCache[name] = result;
              }
              return result || fallback;
            }
          };
        }();
        var COMPATIBILITY = function() {
          function windowSize(x) {
            return x ? window2.innerWidth || document4.documentElement[LEXICON.cW] || document4.body[LEXICON.cW] : window2.innerHeight || document4.documentElement[LEXICON.cH] || document4.body[LEXICON.cH];
          }
          function bind(func, thisObj) {
            if (typeof func != TYPES.f) {
              throw "Can't bind function!";
            }
            var proto = LEXICON.p;
            var aArgs = Array[proto].slice.call(arguments, 2);
            var fNOP = function() {
            };
            var fBound = function() {
              return func.apply(this instanceof fNOP ? this : thisObj, aArgs.concat(Array[proto].slice.call(arguments)));
            };
            if (func[proto])
              fNOP[proto] = func[proto];
            fBound[proto] = new fNOP();
            return fBound;
          }
          return {
            wW: bind(windowSize, 0, true),
            wH: bind(windowSize, 0),
            mO: bind(VENDORS._jsAPI, 0, "MutationObserver", true),
            rO: bind(VENDORS._jsAPI, 0, "ResizeObserver", true),
            rAF: bind(VENDORS._jsAPI, 0, "requestAnimationFrame", false, function(func) {
              return window2.setTimeout(func, 1e3 / 60);
            }),
            cAF: bind(VENDORS._jsAPI, 0, "cancelAnimationFrame", false, function(id) {
              return window2.clearTimeout(id);
            }),
            now: function() {
              return Date.now && Date.now() || new Date().getTime();
            },
            stpP: function(event) {
              if (event.stopPropagation)
                event.stopPropagation();
              else
                event.cancelBubble = true;
            },
            prvD: function(event) {
              if (event.preventDefault && event.cancelable)
                event.preventDefault();
              else
                event.returnValue = false;
            },
            page: function(event) {
              event = event.originalEvent || event;
              var strPage = "page";
              var strClient = "client";
              var strX = "X";
              var strY = "Y";
              var target = event.target || event.srcElement || document4;
              var eventDoc = target.ownerDocument || document4;
              var doc = eventDoc.documentElement;
              var body = eventDoc.body;
              if (event.touches !== undefined2) {
                var touch = event.touches[0];
                return {
                  x: touch[strPage + strX],
                  y: touch[strPage + strY]
                };
              }
              if (!event[strPage + strX] && event[strClient + strX] && event[strClient + strX] != null) {
                return {
                  x: event[strClient + strX] + (doc && doc.scrollLeft || body && body.scrollLeft || 0) - (doc && doc.clientLeft || body && body.clientLeft || 0),
                  y: event[strClient + strY] + (doc && doc.scrollTop || body && body.scrollTop || 0) - (doc && doc.clientTop || body && body.clientTop || 0)
                };
              }
              return {
                x: event[strPage + strX],
                y: event[strPage + strY]
              };
            },
            mBtn: function(event) {
              var button = event.button;
              if (!event.which && button !== undefined2)
                return button & 1 ? 1 : button & 2 ? 3 : button & 4 ? 2 : 0;
              else
                return event.which;
            },
            inA: function(item, arr) {
              for (var i = 0; i < arr[LEXICON.l]; i++)
                try {
                  if (arr[i] === item)
                    return i;
                } catch (e) {
                }
              return -1;
            },
            isA: function(arr) {
              var def = Array.isArray;
              return def ? def(arr) : this.type(arr) == TYPES.a;
            },
            type: function(obj) {
              if (obj === undefined2)
                return obj + "";
              if (obj === null)
                return obj + "";
              return Object[LEXICON.p].toString.call(obj).replace(/^\[object (.+)\]$/, "$1").toLowerCase();
            },
            bind
          };
        }();
        var MATH = Math;
        var JQUERY = window2.jQuery;
        var EASING = function() {
          var _easingsMath = {
            p: MATH.PI,
            c: MATH.cos,
            s: MATH.sin,
            w: MATH.pow,
            t: MATH.sqrt,
            n: MATH.asin,
            a: MATH.abs,
            o: 1.70158
          };
          return {
            swing: function(x, t, b, c, d) {
              return 0.5 - _easingsMath.c(x * _easingsMath.p) / 2;
            },
            linear: function(x, t, b, c, d) {
              return x;
            },
            easeInQuad: function(x, t, b, c, d) {
              return c * (t /= d) * t + b;
            },
            easeOutQuad: function(x, t, b, c, d) {
              return -c * (t /= d) * (t - 2) + b;
            },
            easeInOutQuad: function(x, t, b, c, d) {
              return (t /= d / 2) < 1 ? c / 2 * t * t + b : -c / 2 * (--t * (t - 2) - 1) + b;
            },
            easeInCubic: function(x, t, b, c, d) {
              return c * (t /= d) * t * t + b;
            },
            easeOutCubic: function(x, t, b, c, d) {
              return c * ((t = t / d - 1) * t * t + 1) + b;
            },
            easeInOutCubic: function(x, t, b, c, d) {
              return (t /= d / 2) < 1 ? c / 2 * t * t * t + b : c / 2 * ((t -= 2) * t * t + 2) + b;
            },
            easeInQuart: function(x, t, b, c, d) {
              return c * (t /= d) * t * t * t + b;
            },
            easeOutQuart: function(x, t, b, c, d) {
              return -c * ((t = t / d - 1) * t * t * t - 1) + b;
            },
            easeInOutQuart: function(x, t, b, c, d) {
              return (t /= d / 2) < 1 ? c / 2 * t * t * t * t + b : -c / 2 * ((t -= 2) * t * t * t - 2) + b;
            },
            easeInQuint: function(x, t, b, c, d) {
              return c * (t /= d) * t * t * t * t + b;
            },
            easeOutQuint: function(x, t, b, c, d) {
              return c * ((t = t / d - 1) * t * t * t * t + 1) + b;
            },
            easeInOutQuint: function(x, t, b, c, d) {
              return (t /= d / 2) < 1 ? c / 2 * t * t * t * t * t + b : c / 2 * ((t -= 2) * t * t * t * t + 2) + b;
            },
            easeInSine: function(x, t, b, c, d) {
              return -c * _easingsMath.c(t / d * (_easingsMath.p / 2)) + c + b;
            },
            easeOutSine: function(x, t, b, c, d) {
              return c * _easingsMath.s(t / d * (_easingsMath.p / 2)) + b;
            },
            easeInOutSine: function(x, t, b, c, d) {
              return -c / 2 * (_easingsMath.c(_easingsMath.p * t / d) - 1) + b;
            },
            easeInExpo: function(x, t, b, c, d) {
              return t == 0 ? b : c * _easingsMath.w(2, 10 * (t / d - 1)) + b;
            },
            easeOutExpo: function(x, t, b, c, d) {
              return t == d ? b + c : c * (-_easingsMath.w(2, -10 * t / d) + 1) + b;
            },
            easeInOutExpo: function(x, t, b, c, d) {
              if (t == 0)
                return b;
              if (t == d)
                return b + c;
              if ((t /= d / 2) < 1)
                return c / 2 * _easingsMath.w(2, 10 * (t - 1)) + b;
              return c / 2 * (-_easingsMath.w(2, -10 * --t) + 2) + b;
            },
            easeInCirc: function(x, t, b, c, d) {
              return -c * (_easingsMath.t(1 - (t /= d) * t) - 1) + b;
            },
            easeOutCirc: function(x, t, b, c, d) {
              return c * _easingsMath.t(1 - (t = t / d - 1) * t) + b;
            },
            easeInOutCirc: function(x, t, b, c, d) {
              return (t /= d / 2) < 1 ? -c / 2 * (_easingsMath.t(1 - t * t) - 1) + b : c / 2 * (_easingsMath.t(1 - (t -= 2) * t) + 1) + b;
            },
            easeInElastic: function(x, t, b, c, d) {
              var s = _easingsMath.o;
              var p = 0;
              var a = c;
              if (t == 0)
                return b;
              if ((t /= d) == 1)
                return b + c;
              if (!p)
                p = d * 0.3;
              if (a < _easingsMath.a(c)) {
                a = c;
                s = p / 4;
              } else
                s = p / (2 * _easingsMath.p) * _easingsMath.n(c / a);
              return -(a * _easingsMath.w(2, 10 * (t -= 1)) * _easingsMath.s((t * d - s) * (2 * _easingsMath.p) / p)) + b;
            },
            easeOutElastic: function(x, t, b, c, d) {
              var s = _easingsMath.o;
              var p = 0;
              var a = c;
              if (t == 0)
                return b;
              if ((t /= d) == 1)
                return b + c;
              if (!p)
                p = d * 0.3;
              if (a < _easingsMath.a(c)) {
                a = c;
                s = p / 4;
              } else
                s = p / (2 * _easingsMath.p) * _easingsMath.n(c / a);
              return a * _easingsMath.w(2, -10 * t) * _easingsMath.s((t * d - s) * (2 * _easingsMath.p) / p) + c + b;
            },
            easeInOutElastic: function(x, t, b, c, d) {
              var s = _easingsMath.o;
              var p = 0;
              var a = c;
              if (t == 0)
                return b;
              if ((t /= d / 2) == 2)
                return b + c;
              if (!p)
                p = d * (0.3 * 1.5);
              if (a < _easingsMath.a(c)) {
                a = c;
                s = p / 4;
              } else
                s = p / (2 * _easingsMath.p) * _easingsMath.n(c / a);
              if (t < 1)
                return -0.5 * (a * _easingsMath.w(2, 10 * (t -= 1)) * _easingsMath.s((t * d - s) * (2 * _easingsMath.p) / p)) + b;
              return a * _easingsMath.w(2, -10 * (t -= 1)) * _easingsMath.s((t * d - s) * (2 * _easingsMath.p) / p) * 0.5 + c + b;
            },
            easeInBack: function(x, t, b, c, d, s) {
              s = s || _easingsMath.o;
              return c * (t /= d) * t * ((s + 1) * t - s) + b;
            },
            easeOutBack: function(x, t, b, c, d, s) {
              s = s || _easingsMath.o;
              return c * ((t = t / d - 1) * t * ((s + 1) * t + s) + 1) + b;
            },
            easeInOutBack: function(x, t, b, c, d, s) {
              s = s || _easingsMath.o;
              return (t /= d / 2) < 1 ? c / 2 * (t * t * (((s *= 1.525) + 1) * t - s)) + b : c / 2 * ((t -= 2) * t * (((s *= 1.525) + 1) * t + s) + 2) + b;
            },
            easeInBounce: function(x, t, b, c, d) {
              return c - this.easeOutBounce(x, d - t, 0, c, d) + b;
            },
            easeOutBounce: function(x, t, b, c, d) {
              var o = 7.5625;
              if ((t /= d) < 1 / 2.75) {
                return c * (o * t * t) + b;
              } else if (t < 2 / 2.75) {
                return c * (o * (t -= 1.5 / 2.75) * t + 0.75) + b;
              } else if (t < 2.5 / 2.75) {
                return c * (o * (t -= 2.25 / 2.75) * t + 0.9375) + b;
              } else {
                return c * (o * (t -= 2.625 / 2.75) * t + 0.984375) + b;
              }
            },
            easeInOutBounce: function(x, t, b, c, d) {
              return t < d / 2 ? this.easeInBounce(x, t * 2, 0, c, d) * 0.5 + b : this.easeOutBounce(x, t * 2 - d, 0, c, d) * 0.5 + c * 0.5 + b;
            }
          };
        }();
        var FRAMEWORK = function() {
          var _rnothtmlwhite = /[^\x20\t\r\n\f]+/g;
          var _strSpace = " ";
          var _strEmpty = "";
          var _strScrollLeft = "scrollLeft";
          var _strScrollTop = "scrollTop";
          var _animations = [];
          var _type = COMPATIBILITY.type;
          var _cssNumber = {
            animationIterationCount: true,
            columnCount: true,
            fillOpacity: true,
            flexGrow: true,
            flexShrink: true,
            fontWeight: true,
            lineHeight: true,
            opacity: true,
            order: true,
            orphans: true,
            widows: true,
            zIndex: true,
            zoom: true
          };
          function extend() {
            var src, copyIsArray, copy, name, options, clone, target = arguments[0] || {}, i = 1, length2 = arguments[LEXICON.l], deep = false;
            if (_type(target) == TYPES.b) {
              deep = target;
              target = arguments[1] || {};
              i = 2;
            }
            if (_type(target) != TYPES.o && !_type(target) == TYPES.f) {
              target = {};
            }
            if (length2 === i) {
              target = FakejQuery;
              --i;
            }
            for (; i < length2; i++) {
              if ((options = arguments[i]) != null) {
                for (name in options) {
                  src = target[name];
                  copy = options[name];
                  if (target === copy) {
                    continue;
                  }
                  if (deep && copy && (isPlainObject(copy) || (copyIsArray = COMPATIBILITY.isA(copy)))) {
                    if (copyIsArray) {
                      copyIsArray = false;
                      clone = src && COMPATIBILITY.isA(src) ? src : [];
                    } else {
                      clone = src && isPlainObject(src) ? src : {};
                    }
                    target[name] = extend(deep, clone, copy);
                  } else if (copy !== undefined2) {
                    target[name] = copy;
                  }
                }
              }
            }
            return target;
          }
          ;
          function inArray(item, arr, fromIndex) {
            for (var i = fromIndex || 0; i < arr[LEXICON.l]; i++)
              if (arr[i] === item)
                return i;
            return -1;
          }
          function isFunction(obj) {
            return _type(obj) == TYPES.f;
          }
          ;
          function isEmptyObject(obj) {
            for (var name in obj)
              return false;
            return true;
          }
          ;
          function isPlainObject(obj) {
            if (!obj || _type(obj) != TYPES.o)
              return false;
            var key;
            var proto = LEXICON.p;
            var hasOwnProperty = Object[proto].hasOwnProperty;
            var hasOwnConstructor = hasOwnProperty.call(obj, "constructor");
            var hasIsPrototypeOf = obj.constructor && obj.constructor[proto] && hasOwnProperty.call(obj.constructor[proto], "isPrototypeOf");
            if (obj.constructor && !hasOwnConstructor && !hasIsPrototypeOf) {
              return false;
            }
            for (key in obj) {
            }
            return _type(key) == TYPES.u || hasOwnProperty.call(obj, key);
          }
          ;
          function each(obj, callback) {
            var i = 0;
            if (isArrayLike(obj)) {
              for (; i < obj[LEXICON.l]; i++) {
                if (callback.call(obj[i], i, obj[i]) === false)
                  break;
              }
            } else {
              for (i in obj) {
                if (callback.call(obj[i], i, obj[i]) === false)
                  break;
              }
            }
            return obj;
          }
          ;
          function isArrayLike(obj) {
            var length2 = !!obj && [LEXICON.l] in obj && obj[LEXICON.l];
            var t = _type(obj);
            return isFunction(t) ? false : t == TYPES.a || length2 === 0 || _type(length2) == TYPES.n && length2 > 0 && length2 - 1 in obj;
          }
          function stripAndCollapse(value) {
            var tokens = value.match(_rnothtmlwhite) || [];
            return tokens.join(_strSpace);
          }
          function matches(elem, selector) {
            var nodeList = (elem.parentNode || document4).querySelectorAll(selector) || [];
            var i = nodeList[LEXICON.l];
            while (i--)
              if (nodeList[i] == elem)
                return true;
            return false;
          }
          function insertAdjacentElement(el, strategy, child) {
            if (COMPATIBILITY.isA(child)) {
              for (var i = 0; i < child[LEXICON.l]; i++)
                insertAdjacentElement(el, strategy, child[i]);
            } else if (_type(child) == TYPES.s)
              el.insertAdjacentHTML(strategy, child);
            else
              el.insertAdjacentElement(strategy, child.nodeType ? child : child[0]);
          }
          function setCSSVal(el, prop, val) {
            try {
              if (el[LEXICON.s][prop] !== undefined2)
                el[LEXICON.s][prop] = parseCSSVal(prop, val);
            } catch (e) {
            }
          }
          function parseCSSVal(prop, val) {
            if (!_cssNumber[prop.toLowerCase()] && _type(val) == TYPES.n)
              val += "px";
            return val;
          }
          function startNextAnimationInQ(animObj, removeFromQ) {
            var index3;
            var nextAnim;
            if (removeFromQ !== false)
              animObj.q.splice(0, 1);
            if (animObj.q[LEXICON.l] > 0) {
              nextAnim = animObj.q[0];
              animate(animObj.el, nextAnim.props, nextAnim.duration, nextAnim.easing, nextAnim.complete, true);
            } else {
              index3 = inArray(animObj, _animations);
              if (index3 > -1)
                _animations.splice(index3, 1);
            }
          }
          function setAnimationValue(el, prop, value) {
            if (prop === _strScrollLeft || prop === _strScrollTop)
              el[prop] = value;
            else
              setCSSVal(el, prop, value);
          }
          function animate(el, props, options, easing, complete, guaranteedNext) {
            var hasOptions = isPlainObject(options);
            var from = {};
            var to = {};
            var i = 0;
            var key;
            var animObj;
            var start2;
            var progress;
            var step;
            var specialEasing;
            var duration;
            if (hasOptions) {
              easing = options.easing;
              start2 = options.start;
              progress = options.progress;
              step = options.step;
              specialEasing = options.specialEasing;
              complete = options.complete;
              duration = options.duration;
            } else
              duration = options;
            specialEasing = specialEasing || {};
            duration = duration || 400;
            easing = easing || "swing";
            guaranteedNext = guaranteedNext || false;
            for (; i < _animations[LEXICON.l]; i++) {
              if (_animations[i].el === el) {
                animObj = _animations[i];
                break;
              }
            }
            if (!animObj) {
              animObj = {
                el,
                q: []
              };
              _animations.push(animObj);
            }
            for (key in props) {
              if (key === _strScrollLeft || key === _strScrollTop)
                from[key] = el[key];
              else
                from[key] = FakejQuery(el).css(key);
            }
            for (key in from) {
              if (from[key] !== props[key] && props[key] !== undefined2)
                to[key] = props[key];
            }
            if (!isEmptyObject(to)) {
              var timeNow;
              var end2;
              var percent;
              var fromVal;
              var toVal;
              var easedVal;
              var timeStart;
              var frame;
              var elapsed;
              var qPos = guaranteedNext ? 0 : inArray(qObj, animObj.q);
              var qObj = {
                props: to,
                duration: hasOptions ? options : duration,
                easing,
                complete
              };
              if (qPos === -1) {
                qPos = animObj.q[LEXICON.l];
                animObj.q.push(qObj);
              }
              if (qPos === 0) {
                if (duration > 0) {
                  timeStart = COMPATIBILITY.now();
                  frame = function() {
                    timeNow = COMPATIBILITY.now();
                    elapsed = timeNow - timeStart;
                    end2 = qObj.stop || elapsed >= duration;
                    percent = 1 - (MATH.max(0, timeStart + duration - timeNow) / duration || 0);
                    for (key in to) {
                      fromVal = parseFloat(from[key]);
                      toVal = parseFloat(to[key]);
                      easedVal = (toVal - fromVal) * EASING[specialEasing[key] || easing](percent, percent * duration, 0, 1, duration) + fromVal;
                      setAnimationValue(el, key, easedVal);
                      if (isFunction(step)) {
                        step(easedVal, {
                          elem: el,
                          prop: key,
                          start: fromVal,
                          now: easedVal,
                          end: toVal,
                          pos: percent,
                          options: {
                            easing,
                            speacialEasing: specialEasing,
                            duration,
                            complete,
                            step
                          },
                          startTime: timeStart
                        });
                      }
                    }
                    if (isFunction(progress))
                      progress({}, percent, MATH.max(0, duration - elapsed));
                    if (end2) {
                      startNextAnimationInQ(animObj);
                      if (isFunction(complete))
                        complete();
                    } else
                      qObj.frame = COMPATIBILITY.rAF()(frame);
                  };
                  qObj.frame = COMPATIBILITY.rAF()(frame);
                } else {
                  for (key in to)
                    setAnimationValue(el, key, to[key]);
                  startNextAnimationInQ(animObj);
                }
              }
            } else if (guaranteedNext)
              startNextAnimationInQ(animObj);
          }
          function stop(el, clearQ, jumpToEnd) {
            var animObj;
            var qObj;
            var key;
            var i = 0;
            for (; i < _animations[LEXICON.l]; i++) {
              animObj = _animations[i];
              if (animObj.el === el) {
                if (animObj.q[LEXICON.l] > 0) {
                  qObj = animObj.q[0];
                  qObj.stop = true;
                  COMPATIBILITY.cAF()(qObj.frame);
                  animObj.q.splice(0, 1);
                  if (jumpToEnd)
                    for (key in qObj.props)
                      setAnimationValue(el, key, qObj.props[key]);
                  if (clearQ)
                    animObj.q = [];
                  else
                    startNextAnimationInQ(animObj, false);
                }
                break;
              }
            }
          }
          function elementIsVisible(el) {
            return !!(el[LEXICON.oW] || el[LEXICON.oH] || el.getClientRects()[LEXICON.l]);
          }
          function FakejQuery(selector) {
            if (arguments[LEXICON.l] === 0)
              return this;
            var base = new FakejQuery();
            var elements = selector;
            var i = 0;
            var elms;
            var el;
            if (_type(selector) == TYPES.s) {
              elements = [];
              if (selector.charAt(0) === "<") {
                el = document4.createElement("div");
                el.innerHTML = selector;
                elms = el.children;
              } else {
                elms = document4.querySelectorAll(selector);
              }
              for (; i < elms[LEXICON.l]; i++)
                elements.push(elms[i]);
            }
            if (elements) {
              if (_type(elements) != TYPES.s && (!isArrayLike(elements) || elements === window2 || elements === elements.self))
                elements = [elements];
              for (i = 0; i < elements[LEXICON.l]; i++)
                base[i] = elements[i];
              base[LEXICON.l] = elements[LEXICON.l];
            }
            return base;
          }
          ;
          FakejQuery[LEXICON.p] = {
            on: function(eventName, handler) {
              eventName = (eventName || _strEmpty).match(_rnothtmlwhite) || [_strEmpty];
              var eventNameLength = eventName[LEXICON.l];
              var i = 0;
              var el;
              return this.each(function() {
                el = this;
                try {
                  if (el.addEventListener) {
                    for (; i < eventNameLength; i++)
                      el.addEventListener(eventName[i], handler);
                  } else if (el.detachEvent) {
                    for (; i < eventNameLength; i++)
                      el.attachEvent("on" + eventName[i], handler);
                  }
                } catch (e) {
                }
              });
            },
            off: function(eventName, handler) {
              eventName = (eventName || _strEmpty).match(_rnothtmlwhite) || [_strEmpty];
              var eventNameLength = eventName[LEXICON.l];
              var i = 0;
              var el;
              return this.each(function() {
                el = this;
                try {
                  if (el.removeEventListener) {
                    for (; i < eventNameLength; i++)
                      el.removeEventListener(eventName[i], handler);
                  } else if (el.detachEvent) {
                    for (; i < eventNameLength; i++)
                      el.detachEvent("on" + eventName[i], handler);
                  }
                } catch (e) {
                }
              });
            },
            one: function(eventName, handler) {
              eventName = (eventName || _strEmpty).match(_rnothtmlwhite) || [_strEmpty];
              return this.each(function() {
                var el = FakejQuery(this);
                FakejQuery.each(eventName, function(i, oneEventName) {
                  var oneHandler = function(e) {
                    handler.call(this, e);
                    el.off(oneEventName, oneHandler);
                  };
                  el.on(oneEventName, oneHandler);
                });
              });
            },
            trigger: function(eventName) {
              var el;
              var event;
              return this.each(function() {
                el = this;
                if (document4.createEvent) {
                  event = document4.createEvent("HTMLEvents");
                  event.initEvent(eventName, true, false);
                  el.dispatchEvent(event);
                } else {
                  el.fireEvent("on" + eventName);
                }
              });
            },
            append: function(child) {
              return this.each(function() {
                insertAdjacentElement(this, "beforeend", child);
              });
            },
            prepend: function(child) {
              return this.each(function() {
                insertAdjacentElement(this, "afterbegin", child);
              });
            },
            before: function(child) {
              return this.each(function() {
                insertAdjacentElement(this, "beforebegin", child);
              });
            },
            after: function(child) {
              return this.each(function() {
                insertAdjacentElement(this, "afterend", child);
              });
            },
            remove: function() {
              return this.each(function() {
                var el = this;
                var parentNode = el.parentNode;
                if (parentNode != null)
                  parentNode.removeChild(el);
              });
            },
            unwrap: function() {
              var parents = [];
              var i;
              var el;
              var parent;
              this.each(function() {
                parent = this.parentNode;
                if (inArray(parent, parents) === -1)
                  parents.push(parent);
              });
              for (i = 0; i < parents[LEXICON.l]; i++) {
                el = parents[i];
                parent = el.parentNode;
                while (el.firstChild)
                  parent.insertBefore(el.firstChild, el);
                parent.removeChild(el);
              }
              return this;
            },
            wrapAll: function(wrapperHTML) {
              var i;
              var nodes = this;
              var wrapper = FakejQuery(wrapperHTML)[0];
              var deepest = wrapper;
              var parent = nodes[0].parentNode;
              var previousSibling = nodes[0].previousSibling;
              while (deepest.childNodes[LEXICON.l] > 0)
                deepest = deepest.childNodes[0];
              for (i = 0; nodes[LEXICON.l] - i; deepest.firstChild === nodes[0] && i++)
                deepest.appendChild(nodes[i]);
              var nextSibling = previousSibling ? previousSibling.nextSibling : parent.firstChild;
              parent.insertBefore(wrapper, nextSibling);
              return this;
            },
            wrapInner: function(wrapperHTML) {
              return this.each(function() {
                var el = FakejQuery(this);
                var contents = el.contents();
                if (contents[LEXICON.l])
                  contents.wrapAll(wrapperHTML);
                else
                  el.append(wrapperHTML);
              });
            },
            wrap: function(wrapperHTML) {
              return this.each(function() {
                FakejQuery(this).wrapAll(wrapperHTML);
              });
            },
            css: function(styles2, val) {
              var el;
              var key;
              var cptStyle;
              var getCptStyle = window2.getComputedStyle;
              if (_type(styles2) == TYPES.s) {
                if (val === undefined2) {
                  el = this[0];
                  cptStyle = getCptStyle ? getCptStyle(el, null) : el.currentStyle[styles2];
                  return getCptStyle ? cptStyle != null ? cptStyle.getPropertyValue(styles2) : el[LEXICON.s][styles2] : cptStyle;
                } else {
                  return this.each(function() {
                    setCSSVal(this, styles2, val);
                  });
                }
              } else {
                return this.each(function() {
                  for (key in styles2)
                    setCSSVal(this, key, styles2[key]);
                });
              }
            },
            hasClass: function(className) {
              var elem, i = 0;
              var classNamePrepared = _strSpace + className + _strSpace;
              var classList;
              while (elem = this[i++]) {
                classList = elem.classList;
                if (classList && classList.contains(className))
                  return true;
                else if (elem.nodeType === 1 && (_strSpace + stripAndCollapse(elem.className + _strEmpty) + _strSpace).indexOf(classNamePrepared) > -1)
                  return true;
              }
              return false;
            },
            addClass: function(className) {
              var classes;
              var elem;
              var cur;
              var curValue;
              var clazz;
              var finalValue;
              var supportClassList;
              var elmClassList;
              var i = 0;
              var v = 0;
              if (className) {
                classes = className.match(_rnothtmlwhite) || [];
                while (elem = this[i++]) {
                  elmClassList = elem.classList;
                  if (supportClassList === undefined2)
                    supportClassList = elmClassList !== undefined2;
                  if (supportClassList) {
                    while (clazz = classes[v++])
                      elmClassList.add(clazz);
                  } else {
                    curValue = elem.className + _strEmpty;
                    cur = elem.nodeType === 1 && _strSpace + stripAndCollapse(curValue) + _strSpace;
                    if (cur) {
                      while (clazz = classes[v++])
                        if (cur.indexOf(_strSpace + clazz + _strSpace) < 0)
                          cur += clazz + _strSpace;
                      finalValue = stripAndCollapse(cur);
                      if (curValue !== finalValue)
                        elem.className = finalValue;
                    }
                  }
                }
              }
              return this;
            },
            removeClass: function(className) {
              var classes;
              var elem;
              var cur;
              var curValue;
              var clazz;
              var finalValue;
              var supportClassList;
              var elmClassList;
              var i = 0;
              var v = 0;
              if (className) {
                classes = className.match(_rnothtmlwhite) || [];
                while (elem = this[i++]) {
                  elmClassList = elem.classList;
                  if (supportClassList === undefined2)
                    supportClassList = elmClassList !== undefined2;
                  if (supportClassList) {
                    while (clazz = classes[v++])
                      elmClassList.remove(clazz);
                  } else {
                    curValue = elem.className + _strEmpty;
                    cur = elem.nodeType === 1 && _strSpace + stripAndCollapse(curValue) + _strSpace;
                    if (cur) {
                      while (clazz = classes[v++])
                        while (cur.indexOf(_strSpace + clazz + _strSpace) > -1)
                          cur = cur.replace(_strSpace + clazz + _strSpace, _strSpace);
                      finalValue = stripAndCollapse(cur);
                      if (curValue !== finalValue)
                        elem.className = finalValue;
                    }
                  }
                }
              }
              return this;
            },
            hide: function() {
              return this.each(function() {
                this[LEXICON.s].display = "none";
              });
            },
            show: function() {
              return this.each(function() {
                this[LEXICON.s].display = "block";
              });
            },
            attr: function(attrName, value) {
              var i = 0;
              var el;
              while (el = this[i++]) {
                if (value === undefined2)
                  return el.getAttribute(attrName);
                el.setAttribute(attrName, value);
              }
              return this;
            },
            removeAttr: function(attrName) {
              return this.each(function() {
                this.removeAttribute(attrName);
              });
            },
            offset: function() {
              var el = this[0];
              var rect = el[LEXICON.bCR]();
              var scrollLeft = window2.pageXOffset || document4.documentElement[_strScrollLeft];
              var scrollTop = window2.pageYOffset || document4.documentElement[_strScrollTop];
              return {
                top: rect.top + scrollTop,
                left: rect.left + scrollLeft
              };
            },
            position: function() {
              var el = this[0];
              return {
                top: el.offsetTop,
                left: el.offsetLeft
              };
            },
            scrollLeft: function(value) {
              var i = 0;
              var el;
              while (el = this[i++]) {
                if (value === undefined2)
                  return el[_strScrollLeft];
                el[_strScrollLeft] = value;
              }
              return this;
            },
            scrollTop: function(value) {
              var i = 0;
              var el;
              while (el = this[i++]) {
                if (value === undefined2)
                  return el[_strScrollTop];
                el[_strScrollTop] = value;
              }
              return this;
            },
            val: function(value) {
              var el = this[0];
              if (!value)
                return el.value;
              el.value = value;
              return this;
            },
            first: function() {
              return this.eq(0);
            },
            last: function() {
              return this.eq(-1);
            },
            eq: function(index3) {
              return FakejQuery(this[index3 >= 0 ? index3 : this[LEXICON.l] + index3]);
            },
            find: function(selector) {
              var children = [];
              var i;
              this.each(function() {
                var el = this;
                var ch = el.querySelectorAll(selector);
                for (i = 0; i < ch[LEXICON.l]; i++)
                  children.push(ch[i]);
              });
              return FakejQuery(children);
            },
            children: function(selector) {
              var children = [];
              var el;
              var ch;
              var i;
              this.each(function() {
                ch = this.children;
                for (i = 0; i < ch[LEXICON.l]; i++) {
                  el = ch[i];
                  if (selector) {
                    if (el.matches && el.matches(selector) || matches(el, selector))
                      children.push(el);
                  } else
                    children.push(el);
                }
              });
              return FakejQuery(children);
            },
            parent: function(selector) {
              var parents = [];
              var parent;
              this.each(function() {
                parent = this.parentNode;
                if (selector ? FakejQuery(parent).is(selector) : true)
                  parents.push(parent);
              });
              return FakejQuery(parents);
            },
            is: function(selector) {
              var el;
              var i;
              for (i = 0; i < this[LEXICON.l]; i++) {
                el = this[i];
                if (selector === ":visible")
                  return elementIsVisible(el);
                if (selector === ":hidden")
                  return !elementIsVisible(el);
                if (el.matches && el.matches(selector) || matches(el, selector))
                  return true;
              }
              return false;
            },
            contents: function() {
              var contents = [];
              var childs;
              var i;
              this.each(function() {
                childs = this.childNodes;
                for (i = 0; i < childs[LEXICON.l]; i++)
                  contents.push(childs[i]);
              });
              return FakejQuery(contents);
            },
            each: function(callback) {
              return each(this, callback);
            },
            animate: function(props, duration, easing, complete) {
              return this.each(function() {
                animate(this, props, duration, easing, complete);
              });
            },
            stop: function(clearQ, jump) {
              return this.each(function() {
                stop(this, clearQ, jump);
              });
            }
          };
          extend(FakejQuery, {
            extend,
            inArray,
            isEmptyObject,
            isPlainObject,
            each
          });
          return FakejQuery;
        }();
        var INSTANCES = function() {
          var _targets = [];
          var _instancePropertyString = "__overlayScrollbars__";
          return function(target, instance) {
            var argLen = arguments[LEXICON.l];
            if (argLen < 1) {
              return _targets;
            } else {
              if (instance) {
                target[_instancePropertyString] = instance;
                _targets.push(target);
              } else {
                var index3 = COMPATIBILITY.inA(target, _targets);
                if (index3 > -1) {
                  if (argLen > 1) {
                    delete target[_instancePropertyString];
                    _targets.splice(index3, 1);
                  } else {
                    return _targets[index3][_instancePropertyString];
                  }
                }
              }
            }
          };
        }();
        var PLUGIN = function() {
          var _plugin;
          var _pluginsGlobals;
          var _pluginsAutoUpdateLoop;
          var _pluginsExtensions = [];
          var _pluginsOptions = function() {
            var type = COMPATIBILITY.type;
            var possibleTemplateTypes = [
              TYPES.b,
              TYPES.n,
              TYPES.s,
              TYPES.a,
              TYPES.o,
              TYPES.f,
              TYPES.z
            ];
            var restrictedStringsSplit = " ";
            var restrictedStringsPossibilitiesSplit = ":";
            var classNameAllowedValues = [TYPES.z, TYPES.s];
            var numberAllowedValues = TYPES.n;
            var booleanNullAllowedValues = [TYPES.z, TYPES.b];
            var booleanTrueTemplate = [true, TYPES.b];
            var booleanFalseTemplate = [false, TYPES.b];
            var callbackTemplate = [null, [TYPES.z, TYPES.f]];
            var updateOnLoadTemplate = [["img"], [TYPES.s, TYPES.a, TYPES.z]];
            var inheritedAttrsTemplate = [["style", "class"], [TYPES.s, TYPES.a, TYPES.z]];
            var resizeAllowedValues = "n:none b:both h:horizontal v:vertical";
            var overflowBehaviorAllowedValues = "v-h:visible-hidden v-s:visible-scroll s:scroll h:hidden";
            var scrollbarsVisibilityAllowedValues = "v:visible h:hidden a:auto";
            var scrollbarsAutoHideAllowedValues = "n:never s:scroll l:leave m:move";
            var optionsDefaultsAndTemplate = {
              className: ["os-theme-dark", classNameAllowedValues],
              resize: ["none", resizeAllowedValues],
              sizeAutoCapable: booleanTrueTemplate,
              clipAlways: booleanTrueTemplate,
              normalizeRTL: booleanTrueTemplate,
              paddingAbsolute: booleanFalseTemplate,
              autoUpdate: [null, booleanNullAllowedValues],
              autoUpdateInterval: [33, numberAllowedValues],
              updateOnLoad: updateOnLoadTemplate,
              nativeScrollbarsOverlaid: {
                showNativeScrollbars: booleanFalseTemplate,
                initialize: booleanTrueTemplate
              },
              overflowBehavior: {
                x: ["scroll", overflowBehaviorAllowedValues],
                y: ["scroll", overflowBehaviorAllowedValues]
              },
              scrollbars: {
                visibility: ["auto", scrollbarsVisibilityAllowedValues],
                autoHide: ["never", scrollbarsAutoHideAllowedValues],
                autoHideDelay: [800, numberAllowedValues],
                dragScrolling: booleanTrueTemplate,
                clickScrolling: booleanFalseTemplate,
                touchSupport: booleanTrueTemplate,
                snapHandle: booleanFalseTemplate
              },
              textarea: {
                dynWidth: booleanFalseTemplate,
                dynHeight: booleanFalseTemplate,
                inheritedAttrs: inheritedAttrsTemplate
              },
              callbacks: {
                onInitialized: callbackTemplate,
                onInitializationWithdrawn: callbackTemplate,
                onDestroyed: callbackTemplate,
                onScrollStart: callbackTemplate,
                onScroll: callbackTemplate,
                onScrollStop: callbackTemplate,
                onOverflowChanged: callbackTemplate,
                onOverflowAmountChanged: callbackTemplate,
                onDirectionChanged: callbackTemplate,
                onContentSizeChanged: callbackTemplate,
                onHostSizeChanged: callbackTemplate,
                onUpdated: callbackTemplate
              }
            };
            var convert = function(template) {
              var recursive = function(obj) {
                var key;
                var val;
                var valType;
                for (key in obj) {
                  if (!obj[LEXICON.hOP](key))
                    continue;
                  val = obj[key];
                  valType = type(val);
                  if (valType == TYPES.a)
                    obj[key] = val[template ? 1 : 0];
                  else if (valType == TYPES.o)
                    obj[key] = recursive(val);
                }
                return obj;
              };
              return recursive(FRAMEWORK.extend(true, {}, optionsDefaultsAndTemplate));
            };
            return {
              _defaults: convert(),
              _template: convert(true),
              _validate: function(obj, template, writeErrors, diffObj) {
                var validatedOptions = {};
                var validatedOptionsPrepared = {};
                var objectCopy = FRAMEWORK.extend(true, {}, obj);
                var inArray = FRAMEWORK.inArray;
                var isEmptyObj = FRAMEWORK.isEmptyObject;
                var checkObjectProps = function(data, template2, diffData, validatedOptions2, validatedOptionsPrepared2, prevPropName) {
                  for (var prop in template2) {
                    if (template2[LEXICON.hOP](prop) && data[LEXICON.hOP](prop)) {
                      var isValid = false;
                      var isDiff = false;
                      var templateValue = template2[prop];
                      var templateValueType = type(templateValue);
                      var templateIsComplex = templateValueType == TYPES.o;
                      var templateTypes = !COMPATIBILITY.isA(templateValue) ? [templateValue] : templateValue;
                      var dataDiffValue = diffData[prop];
                      var dataValue = data[prop];
                      var dataValueType = type(dataValue);
                      var propPrefix = prevPropName ? prevPropName + "." : "";
                      var error = 'The option "' + propPrefix + prop + `" wasn't set, because`;
                      var errorPossibleTypes = [];
                      var errorRestrictedStrings = [];
                      var restrictedStringValuesSplit;
                      var restrictedStringValuesPossibilitiesSplit;
                      var isRestrictedValue;
                      var mainPossibility;
                      var currType;
                      var i;
                      var v;
                      var j;
                      dataDiffValue = dataDiffValue === undefined2 ? {} : dataDiffValue;
                      if (templateIsComplex && dataValueType == TYPES.o) {
                        validatedOptions2[prop] = {};
                        validatedOptionsPrepared2[prop] = {};
                        checkObjectProps(dataValue, templateValue, dataDiffValue, validatedOptions2[prop], validatedOptionsPrepared2[prop], propPrefix + prop);
                        FRAMEWORK.each([data, validatedOptions2, validatedOptionsPrepared2], function(index3, value) {
                          if (isEmptyObj(value[prop])) {
                            delete value[prop];
                          }
                        });
                      } else if (!templateIsComplex) {
                        for (i = 0; i < templateTypes[LEXICON.l]; i++) {
                          currType = templateTypes[i];
                          templateValueType = type(currType);
                          isRestrictedValue = templateValueType == TYPES.s && inArray(currType, possibleTemplateTypes) === -1;
                          if (isRestrictedValue) {
                            errorPossibleTypes.push(TYPES.s);
                            restrictedStringValuesSplit = currType.split(restrictedStringsSplit);
                            errorRestrictedStrings = errorRestrictedStrings.concat(restrictedStringValuesSplit);
                            for (v = 0; v < restrictedStringValuesSplit[LEXICON.l]; v++) {
                              restrictedStringValuesPossibilitiesSplit = restrictedStringValuesSplit[v].split(restrictedStringsPossibilitiesSplit);
                              mainPossibility = restrictedStringValuesPossibilitiesSplit[0];
                              for (j = 0; j < restrictedStringValuesPossibilitiesSplit[LEXICON.l]; j++) {
                                if (dataValue === restrictedStringValuesPossibilitiesSplit[j]) {
                                  isValid = true;
                                  break;
                                }
                              }
                              if (isValid)
                                break;
                            }
                          } else {
                            errorPossibleTypes.push(currType);
                            if (dataValueType === currType) {
                              isValid = true;
                              break;
                            }
                          }
                        }
                        if (isValid) {
                          isDiff = dataValue !== dataDiffValue;
                          if (isDiff)
                            validatedOptions2[prop] = dataValue;
                          if (isRestrictedValue ? inArray(dataDiffValue, restrictedStringValuesPossibilitiesSplit) < 0 : isDiff)
                            validatedOptionsPrepared2[prop] = isRestrictedValue ? mainPossibility : dataValue;
                        } else if (writeErrors) {
                          console.warn(error + " it doesn't accept the type [ " + dataValueType.toUpperCase() + ' ] with the value of "' + dataValue + '".\r\nAccepted types are: [ ' + errorPossibleTypes.join(", ").toUpperCase() + " ]." + (errorRestrictedStrings[length] > 0 ? "\r\nValid strings are: [ " + errorRestrictedStrings.join(", ").split(restrictedStringsPossibilitiesSplit).join(", ") + " ]." : ""));
                        }
                        delete data[prop];
                      }
                    }
                  }
                };
                checkObjectProps(objectCopy, template, diffObj || {}, validatedOptions, validatedOptionsPrepared);
                if (!isEmptyObj(objectCopy) && writeErrors)
                  console.warn("The following options are discarded due to invalidity:\r\n" + window2.JSON.stringify(objectCopy, null, 2));
                return {
                  _default: validatedOptions,
                  _prepared: validatedOptionsPrepared
                };
              }
            };
          }();
          function initOverlayScrollbarsStatics() {
            if (!_pluginsGlobals)
              _pluginsGlobals = new OverlayScrollbarsGlobals(_pluginsOptions._defaults);
            if (!_pluginsAutoUpdateLoop)
              _pluginsAutoUpdateLoop = new OverlayScrollbarsAutoUpdateLoop(_pluginsGlobals);
          }
          function OverlayScrollbarsGlobals(defaultOptions) {
            var _base = this;
            var strOverflow = "overflow";
            var strHidden = "hidden";
            var strScroll = "scroll";
            var bodyElement = FRAMEWORK("body");
            var scrollbarDummyElement = FRAMEWORK('<div id="os-dummy-scrollbar-size"><div></div></div>');
            var scrollbarDummyElement0 = scrollbarDummyElement[0];
            var dummyContainerChild = FRAMEWORK(scrollbarDummyElement.children("div").eq(0));
            bodyElement.append(scrollbarDummyElement);
            scrollbarDummyElement.hide().show();
            var nativeScrollbarSize = calcNativeScrollbarSize(scrollbarDummyElement0);
            var nativeScrollbarIsOverlaid = {
              x: nativeScrollbarSize.x === 0,
              y: nativeScrollbarSize.y === 0
            };
            var msie = function() {
              var ua = window2.navigator.userAgent;
              var strIndexOf = "indexOf";
              var strSubString = "substring";
              var msie2 = ua[strIndexOf]("MSIE ");
              var trident = ua[strIndexOf]("Trident/");
              var edge = ua[strIndexOf]("Edge/");
              var rv = ua[strIndexOf]("rv:");
              var result;
              var parseIntFunc = parseInt;
              if (msie2 > 0)
                result = parseIntFunc(ua[strSubString](msie2 + 5, ua[strIndexOf](".", msie2)), 10);
              else if (trident > 0)
                result = parseIntFunc(ua[strSubString](rv + 3, ua[strIndexOf](".", rv)), 10);
              else if (edge > 0)
                result = parseIntFunc(ua[strSubString](edge + 5, ua[strIndexOf](".", edge)), 10);
              return result;
            }();
            FRAMEWORK.extend(_base, {
              defaultOptions,
              msie,
              autoUpdateLoop: false,
              autoUpdateRecommended: !COMPATIBILITY.mO(),
              nativeScrollbarSize,
              nativeScrollbarIsOverlaid,
              nativeScrollbarStyling: function() {
                var result = false;
                scrollbarDummyElement.addClass("os-viewport-native-scrollbars-invisible");
                try {
                  result = scrollbarDummyElement.css("scrollbar-width") === "none" && (msie > 9 || !msie) || window2.getComputedStyle(scrollbarDummyElement0, "::-webkit-scrollbar").getPropertyValue("display") === "none";
                } catch (ex) {
                }
                return result;
              }(),
              overlayScrollbarDummySize: { x: 30, y: 30 },
              cssCalc: VENDORS._cssPropertyValue("width", "calc", "(1px)") || null,
              restrictedMeasuring: function() {
                scrollbarDummyElement.css(strOverflow, strHidden);
                var scrollSize = {
                  w: scrollbarDummyElement0[LEXICON.sW],
                  h: scrollbarDummyElement0[LEXICON.sH]
                };
                scrollbarDummyElement.css(strOverflow, "visible");
                var scrollSize2 = {
                  w: scrollbarDummyElement0[LEXICON.sW],
                  h: scrollbarDummyElement0[LEXICON.sH]
                };
                return scrollSize.w - scrollSize2.w !== 0 || scrollSize.h - scrollSize2.h !== 0;
              }(),
              rtlScrollBehavior: function() {
                scrollbarDummyElement.css({ "overflow-y": strHidden, "overflow-x": strScroll, "direction": "rtl" }).scrollLeft(0);
                var dummyContainerOffset = scrollbarDummyElement.offset();
                var dummyContainerChildOffset = dummyContainerChild.offset();
                scrollbarDummyElement.scrollLeft(-999);
                var dummyContainerChildOffsetAfterScroll = dummyContainerChild.offset();
                return {
                  i: dummyContainerOffset.left === dummyContainerChildOffset.left,
                  n: dummyContainerChildOffset.left !== dummyContainerChildOffsetAfterScroll.left
                };
              }(),
              supportTransform: !!VENDORS._cssProperty("transform"),
              supportTransition: !!VENDORS._cssProperty("transition"),
              supportPassiveEvents: function() {
                var supportsPassive = false;
                try {
                  window2.addEventListener("test", null, Object.defineProperty({}, "passive", {
                    get: function() {
                      supportsPassive = true;
                    }
                  }));
                } catch (e) {
                }
                return supportsPassive;
              }(),
              supportResizeObserver: !!COMPATIBILITY.rO(),
              supportMutationObserver: !!COMPATIBILITY.mO()
            });
            scrollbarDummyElement.removeAttr(LEXICON.s).remove();
            (function() {
              if (nativeScrollbarIsOverlaid.x && nativeScrollbarIsOverlaid.y)
                return;
              var abs = MATH.abs;
              var windowWidth = COMPATIBILITY.wW();
              var windowHeight = COMPATIBILITY.wH();
              var windowDpr = getWindowDPR();
              var onResize = function() {
                if (INSTANCES().length > 0) {
                  var newW = COMPATIBILITY.wW();
                  var newH = COMPATIBILITY.wH();
                  var deltaW = newW - windowWidth;
                  var deltaH = newH - windowHeight;
                  if (deltaW === 0 && deltaH === 0)
                    return;
                  var deltaWRatio = MATH.round(newW / (windowWidth / 100));
                  var deltaHRatio = MATH.round(newH / (windowHeight / 100));
                  var absDeltaW = abs(deltaW);
                  var absDeltaH = abs(deltaH);
                  var absDeltaWRatio = abs(deltaWRatio);
                  var absDeltaHRatio = abs(deltaHRatio);
                  var newDPR = getWindowDPR();
                  var deltaIsBigger = absDeltaW > 2 && absDeltaH > 2;
                  var difference = !differenceIsBiggerThanOne(absDeltaWRatio, absDeltaHRatio);
                  var dprChanged = newDPR !== windowDpr && windowDpr > 0;
                  var isZoom = deltaIsBigger && difference && dprChanged;
                  var oldScrollbarSize = _base.nativeScrollbarSize;
                  var newScrollbarSize;
                  if (isZoom) {
                    bodyElement.append(scrollbarDummyElement);
                    newScrollbarSize = _base.nativeScrollbarSize = calcNativeScrollbarSize(scrollbarDummyElement[0]);
                    scrollbarDummyElement.remove();
                    if (oldScrollbarSize.x !== newScrollbarSize.x || oldScrollbarSize.y !== newScrollbarSize.y) {
                      FRAMEWORK.each(INSTANCES(), function() {
                        if (INSTANCES(this))
                          INSTANCES(this).update("zoom");
                      });
                    }
                  }
                  windowWidth = newW;
                  windowHeight = newH;
                  windowDpr = newDPR;
                }
              };
              function differenceIsBiggerThanOne(valOne, valTwo) {
                var absValOne = abs(valOne);
                var absValTwo = abs(valTwo);
                return !(absValOne === absValTwo || absValOne + 1 === absValTwo || absValOne - 1 === absValTwo);
              }
              function getWindowDPR() {
                var dDPI = window2.screen.deviceXDPI || 0;
                var sDPI = window2.screen.logicalXDPI || 1;
                return window2.devicePixelRatio || dDPI / sDPI;
              }
              FRAMEWORK(window2).on("resize", onResize);
            })();
            function calcNativeScrollbarSize(measureElement) {
              return {
                x: measureElement[LEXICON.oH] - measureElement[LEXICON.cH],
                y: measureElement[LEXICON.oW] - measureElement[LEXICON.cW]
              };
            }
          }
          function OverlayScrollbarsAutoUpdateLoop(globals) {
            var _base = this;
            var _inArray = FRAMEWORK.inArray;
            var _getNow = COMPATIBILITY.now;
            var _strAutoUpdate = "autoUpdate";
            var _strAutoUpdateInterval = _strAutoUpdate + "Interval";
            var _strLength = LEXICON.l;
            var _loopingInstances = [];
            var _loopingInstancesIntervalCache = [];
            var _loopIsActive = false;
            var _loopIntervalDefault = 33;
            var _loopInterval = _loopIntervalDefault;
            var _loopTimeOld = _getNow();
            var _loopID;
            var loop = function() {
              if (_loopingInstances[_strLength] > 0 && _loopIsActive) {
                _loopID = COMPATIBILITY.rAF()(function() {
                  loop();
                });
                var timeNew = _getNow();
                var timeDelta = timeNew - _loopTimeOld;
                var lowestInterval;
                var instance;
                var instanceOptions;
                var instanceAutoUpdateAllowed;
                var instanceAutoUpdateInterval;
                var now;
                if (timeDelta > _loopInterval) {
                  _loopTimeOld = timeNew - timeDelta % _loopInterval;
                  lowestInterval = _loopIntervalDefault;
                  for (var i = 0; i < _loopingInstances[_strLength]; i++) {
                    instance = _loopingInstances[i];
                    if (instance !== undefined2) {
                      instanceOptions = instance.options();
                      instanceAutoUpdateAllowed = instanceOptions[_strAutoUpdate];
                      instanceAutoUpdateInterval = MATH.max(1, instanceOptions[_strAutoUpdateInterval]);
                      now = _getNow();
                      if ((instanceAutoUpdateAllowed === true || instanceAutoUpdateAllowed === null) && now - _loopingInstancesIntervalCache[i] > instanceAutoUpdateInterval) {
                        instance.update("auto");
                        _loopingInstancesIntervalCache[i] = new Date(now += instanceAutoUpdateInterval);
                      }
                      lowestInterval = MATH.max(1, MATH.min(lowestInterval, instanceAutoUpdateInterval));
                    }
                  }
                  _loopInterval = lowestInterval;
                }
              } else {
                _loopInterval = _loopIntervalDefault;
              }
            };
            _base.add = function(instance) {
              if (_inArray(instance, _loopingInstances) === -1) {
                _loopingInstances.push(instance);
                _loopingInstancesIntervalCache.push(_getNow());
                if (_loopingInstances[_strLength] > 0 && !_loopIsActive) {
                  _loopIsActive = true;
                  globals.autoUpdateLoop = _loopIsActive;
                  loop();
                }
              }
            };
            _base.remove = function(instance) {
              var index3 = _inArray(instance, _loopingInstances);
              if (index3 > -1) {
                _loopingInstancesIntervalCache.splice(index3, 1);
                _loopingInstances.splice(index3, 1);
                if (_loopingInstances[_strLength] === 0 && _loopIsActive) {
                  _loopIsActive = false;
                  globals.autoUpdateLoop = _loopIsActive;
                  if (_loopID !== undefined2) {
                    COMPATIBILITY.cAF()(_loopID);
                    _loopID = -1;
                  }
                }
              }
            };
          }
          function OverlayScrollbarsInstance(pluginTargetElement, options, extensions, globals, autoUpdateLoop) {
            var type = COMPATIBILITY.type;
            var inArray = FRAMEWORK.inArray;
            var each = FRAMEWORK.each;
            var _base = new _plugin();
            var _frameworkProto = FRAMEWORK[LEXICON.p];
            if (!isHTMLElement2(pluginTargetElement))
              return;
            if (INSTANCES(pluginTargetElement)) {
              var inst = INSTANCES(pluginTargetElement);
              inst.options(options);
              return inst;
            }
            var _nativeScrollbarIsOverlaid;
            var _overlayScrollbarDummySize;
            var _rtlScrollBehavior;
            var _autoUpdateRecommended;
            var _msieVersion;
            var _nativeScrollbarStyling;
            var _cssCalc;
            var _nativeScrollbarSize;
            var _supportTransition;
            var _supportTransform;
            var _supportPassiveEvents;
            var _supportResizeObserver;
            var _supportMutationObserver;
            var _restrictedMeasuring;
            var _initialized;
            var _destroyed;
            var _isTextarea;
            var _isBody;
            var _documentMixed;
            var _domExists;
            var _isBorderBox;
            var _sizeAutoObserverAdded;
            var _paddingX;
            var _paddingY;
            var _borderX;
            var _borderY;
            var _marginX;
            var _marginY;
            var _isRTL;
            var _sleeping;
            var _contentBorderSize = {};
            var _scrollHorizontalInfo = {};
            var _scrollVerticalInfo = {};
            var _viewportSize = {};
            var _nativeScrollbarMinSize = {};
            var _strMinusHidden = "-hidden";
            var _strMarginMinus = "margin-";
            var _strPaddingMinus = "padding-";
            var _strBorderMinus = "border-";
            var _strTop = "top";
            var _strRight = "right";
            var _strBottom = "bottom";
            var _strLeft = "left";
            var _strMinMinus = "min-";
            var _strMaxMinus = "max-";
            var _strWidth = "width";
            var _strHeight = "height";
            var _strFloat = "float";
            var _strEmpty = "";
            var _strAuto = "auto";
            var _strSync = "sync";
            var _strScroll = "scroll";
            var _strHundredPercent = "100%";
            var _strX = "x";
            var _strY = "y";
            var _strDot = ".";
            var _strSpace = " ";
            var _strScrollbar = "scrollbar";
            var _strMinusHorizontal = "-horizontal";
            var _strMinusVertical = "-vertical";
            var _strScrollLeft = _strScroll + "Left";
            var _strScrollTop = _strScroll + "Top";
            var _strMouseTouchDownEvent = "mousedown touchstart";
            var _strMouseTouchUpEvent = "mouseup touchend touchcancel";
            var _strMouseTouchMoveEvent = "mousemove touchmove";
            var _strMouseEnter = "mouseenter";
            var _strMouseLeave = "mouseleave";
            var _strKeyDownEvent = "keydown";
            var _strKeyUpEvent = "keyup";
            var _strSelectStartEvent = "selectstart";
            var _strTransitionEndEvent = "transitionend webkitTransitionEnd oTransitionEnd";
            var _strResizeObserverProperty = "__overlayScrollbarsRO__";
            var _cassNamesPrefix = "os-";
            var _classNameHTMLElement = _cassNamesPrefix + "html";
            var _classNameHostElement = _cassNamesPrefix + "host";
            var _classNameHostElementForeign = _classNameHostElement + "-foreign";
            var _classNameHostTextareaElement = _classNameHostElement + "-textarea";
            var _classNameHostScrollbarHorizontalHidden = _classNameHostElement + "-" + _strScrollbar + _strMinusHorizontal + _strMinusHidden;
            var _classNameHostScrollbarVerticalHidden = _classNameHostElement + "-" + _strScrollbar + _strMinusVertical + _strMinusHidden;
            var _classNameHostTransition = _classNameHostElement + "-transition";
            var _classNameHostRTL = _classNameHostElement + "-rtl";
            var _classNameHostResizeDisabled = _classNameHostElement + "-resize-disabled";
            var _classNameHostScrolling = _classNameHostElement + "-scrolling";
            var _classNameHostOverflow = _classNameHostElement + "-overflow";
            var _classNameHostOverflow = _classNameHostElement + "-overflow";
            var _classNameHostOverflowX = _classNameHostOverflow + "-x";
            var _classNameHostOverflowY = _classNameHostOverflow + "-y";
            var _classNameTextareaElement = _cassNamesPrefix + "textarea";
            var _classNameTextareaCoverElement = _classNameTextareaElement + "-cover";
            var _classNamePaddingElement = _cassNamesPrefix + "padding";
            var _classNameViewportElement = _cassNamesPrefix + "viewport";
            var _classNameViewportNativeScrollbarsInvisible = _classNameViewportElement + "-native-scrollbars-invisible";
            var _classNameViewportNativeScrollbarsOverlaid = _classNameViewportElement + "-native-scrollbars-overlaid";
            var _classNameContentElement = _cassNamesPrefix + "content";
            var _classNameContentArrangeElement = _cassNamesPrefix + "content-arrange";
            var _classNameContentGlueElement = _cassNamesPrefix + "content-glue";
            var _classNameSizeAutoObserverElement = _cassNamesPrefix + "size-auto-observer";
            var _classNameResizeObserverElement = _cassNamesPrefix + "resize-observer";
            var _classNameResizeObserverItemElement = _cassNamesPrefix + "resize-observer-item";
            var _classNameResizeObserverItemFinalElement = _classNameResizeObserverItemElement + "-final";
            var _classNameTextInherit = _cassNamesPrefix + "text-inherit";
            var _classNameScrollbar = _cassNamesPrefix + _strScrollbar;
            var _classNameScrollbarTrack = _classNameScrollbar + "-track";
            var _classNameScrollbarTrackOff = _classNameScrollbarTrack + "-off";
            var _classNameScrollbarHandle = _classNameScrollbar + "-handle";
            var _classNameScrollbarHandleOff = _classNameScrollbarHandle + "-off";
            var _classNameScrollbarUnusable = _classNameScrollbar + "-unusable";
            var _classNameScrollbarAutoHidden = _classNameScrollbar + "-" + _strAuto + _strMinusHidden;
            var _classNameScrollbarCorner = _classNameScrollbar + "-corner";
            var _classNameScrollbarCornerResize = _classNameScrollbarCorner + "-resize";
            var _classNameScrollbarCornerResizeB = _classNameScrollbarCornerResize + "-both";
            var _classNameScrollbarCornerResizeH = _classNameScrollbarCornerResize + _strMinusHorizontal;
            var _classNameScrollbarCornerResizeV = _classNameScrollbarCornerResize + _strMinusVertical;
            var _classNameScrollbarHorizontal = _classNameScrollbar + _strMinusHorizontal;
            var _classNameScrollbarVertical = _classNameScrollbar + _strMinusVertical;
            var _classNameDragging = _cassNamesPrefix + "dragging";
            var _classNameThemeNone = _cassNamesPrefix + "theme-none";
            var _classNamesDynamicDestroy = [
              _classNameViewportNativeScrollbarsInvisible,
              _classNameViewportNativeScrollbarsOverlaid,
              _classNameScrollbarTrackOff,
              _classNameScrollbarHandleOff,
              _classNameScrollbarUnusable,
              _classNameScrollbarAutoHidden,
              _classNameScrollbarCornerResize,
              _classNameScrollbarCornerResizeB,
              _classNameScrollbarCornerResizeH,
              _classNameScrollbarCornerResizeV,
              _classNameDragging
            ].join(_strSpace);
            var _callbacksInitQeueue = [];
            var _viewportAttrsFromTarget = [LEXICON.ti];
            var _defaultOptions;
            var _currentOptions;
            var _currentPreparedOptions;
            var _extensions = {};
            var _extensionsPrivateMethods = "added removed on contract";
            var _lastUpdateTime;
            var _swallowedUpdateHints = {};
            var _swallowedUpdateTimeout;
            var _swallowUpdateLag = 42;
            var _updateOnLoadEventName = "load";
            var _updateOnLoadElms = [];
            var _windowElement;
            var _documentElement;
            var _htmlElement;
            var _bodyElement;
            var _targetElement;
            var _hostElement;
            var _sizeAutoObserverElement;
            var _sizeObserverElement;
            var _paddingElement;
            var _viewportElement;
            var _contentElement;
            var _contentArrangeElement;
            var _contentGlueElement;
            var _textareaCoverElement;
            var _scrollbarCornerElement;
            var _scrollbarHorizontalElement;
            var _scrollbarHorizontalTrackElement;
            var _scrollbarHorizontalHandleElement;
            var _scrollbarVerticalElement;
            var _scrollbarVerticalTrackElement;
            var _scrollbarVerticalHandleElement;
            var _windowElementNative;
            var _documentElementNative;
            var _targetElementNative;
            var _hostElementNative;
            var _sizeAutoObserverElementNative;
            var _sizeObserverElementNative;
            var _paddingElementNative;
            var _viewportElementNative;
            var _contentElementNative;
            var _hostSizeCache;
            var _contentScrollSizeCache;
            var _arrangeContentSizeCache;
            var _hasOverflowCache;
            var _hideOverflowCache;
            var _widthAutoCache;
            var _heightAutoCache;
            var _cssBoxSizingCache;
            var _cssPaddingCache;
            var _cssBorderCache;
            var _cssMarginCache;
            var _cssDirectionCache;
            var _cssDirectionDetectedCache;
            var _paddingAbsoluteCache;
            var _clipAlwaysCache;
            var _contentGlueSizeCache;
            var _overflowBehaviorCache;
            var _overflowAmountCache;
            var _ignoreOverlayScrollbarHidingCache;
            var _autoUpdateCache;
            var _sizeAutoCapableCache;
            var _contentElementScrollSizeChangeDetectedCache;
            var _hostElementSizeChangeDetectedCache;
            var _scrollbarsVisibilityCache;
            var _scrollbarsAutoHideCache;
            var _scrollbarsClickScrollingCache;
            var _scrollbarsDragScrollingCache;
            var _resizeCache;
            var _normalizeRTLCache;
            var _classNameCache;
            var _oldClassName;
            var _textareaAutoWrappingCache;
            var _textareaInfoCache;
            var _textareaSizeCache;
            var _textareaDynHeightCache;
            var _textareaDynWidthCache;
            var _bodyMinSizeCache;
            var _updateAutoCache = {};
            var _mutationObserverHost;
            var _mutationObserverContent;
            var _mutationObserverHostCallback;
            var _mutationObserverContentCallback;
            var _mutationObserversConnected;
            var _mutationObserverAttrsTextarea = ["wrap", "cols", "rows"];
            var _mutationObserverAttrsHost = [LEXICON.i, LEXICON.c, LEXICON.s, "open"].concat(_viewportAttrsFromTarget);
            var _destroyEvents = [];
            var _textareaHasFocus;
            var _scrollbarsAutoHideTimeoutId;
            var _scrollbarsAutoHideMoveTimeoutId;
            var _scrollbarsAutoHideDelay;
            var _scrollbarsAutoHideNever;
            var _scrollbarsAutoHideScroll;
            var _scrollbarsAutoHideMove;
            var _scrollbarsAutoHideLeave;
            var _scrollbarsHandleHovered;
            var _scrollbarsHandlesDefineScrollPos;
            var _resizeNone;
            var _resizeBoth;
            var _resizeHorizontal;
            var _resizeVertical;
            function setupResponsiveEventListener(element, eventNames, listener, remove2, passiveOrOptions) {
              var collected = COMPATIBILITY.isA(eventNames) && COMPATIBILITY.isA(listener);
              var method = remove2 ? "removeEventListener" : "addEventListener";
              var onOff = remove2 ? "off" : "on";
              var events = collected ? false : eventNames.split(_strSpace);
              var i = 0;
              var passiveOrOptionsIsObj = FRAMEWORK.isPlainObject(passiveOrOptions);
              var passive2 = _supportPassiveEvents && (passiveOrOptionsIsObj ? passiveOrOptions._passive : passiveOrOptions) || false;
              var capture = passiveOrOptionsIsObj && (passiveOrOptions._capture || false);
              var nativeParam = _supportPassiveEvents ? {
                passive: passive2,
                capture
              } : capture;
              if (collected) {
                for (; i < eventNames[LEXICON.l]; i++)
                  setupResponsiveEventListener(element, eventNames[i], listener[i], remove2, passiveOrOptions);
              } else {
                for (; i < events[LEXICON.l]; i++) {
                  if (_supportPassiveEvents) {
                    element[0][method](events[i], listener, nativeParam);
                  } else {
                    element[onOff](events[i], listener);
                  }
                }
              }
            }
            function addDestroyEventListener(element, eventNames, listener, passive2) {
              setupResponsiveEventListener(element, eventNames, listener, false, passive2);
              _destroyEvents.push(COMPATIBILITY.bind(setupResponsiveEventListener, 0, element, eventNames, listener, true, passive2));
            }
            function setupResizeObserver(targetElement, onElementResizedCallback) {
              if (targetElement) {
                var resizeObserver = COMPATIBILITY.rO();
                var strAnimationStartEvent = "animationstart mozAnimationStart webkitAnimationStart MSAnimationStart";
                var strChildNodes = "childNodes";
                var constScroll = 3333333;
                var callback = function() {
                  targetElement[_strScrollTop](constScroll)[_strScrollLeft](_isRTL ? _rtlScrollBehavior.n ? -constScroll : _rtlScrollBehavior.i ? 0 : constScroll : constScroll);
                  onElementResizedCallback();
                };
                if (onElementResizedCallback) {
                  if (_supportResizeObserver) {
                    var element = targetElement.addClass("observed").append(generateDiv(_classNameResizeObserverElement)).contents()[0];
                    var observer = element[_strResizeObserverProperty] = new resizeObserver(callback);
                    observer.observe(element);
                  } else {
                    if (_msieVersion > 9 || !_autoUpdateRecommended) {
                      targetElement.prepend(
                        generateDiv(
                          _classNameResizeObserverElement,
                          generateDiv(
                            { c: _classNameResizeObserverItemElement, dir: "ltr" },
                            generateDiv(
                              _classNameResizeObserverItemElement,
                              generateDiv(_classNameResizeObserverItemFinalElement)
                            ) + generateDiv(
                              _classNameResizeObserverItemElement,
                              generateDiv({ c: _classNameResizeObserverItemFinalElement, style: "width: 200%; height: 200%" })
                            )
                          )
                        )
                      );
                      var observerElement = targetElement[0][strChildNodes][0][strChildNodes][0];
                      var shrinkElement = FRAMEWORK(observerElement[strChildNodes][1]);
                      var expandElement = FRAMEWORK(observerElement[strChildNodes][0]);
                      var expandElementChild = FRAMEWORK(expandElement[0][strChildNodes][0]);
                      var widthCache = observerElement[LEXICON.oW];
                      var heightCache = observerElement[LEXICON.oH];
                      var isDirty;
                      var rAFId;
                      var currWidth;
                      var currHeight;
                      var factor = 2;
                      var nativeScrollbarSize = globals.nativeScrollbarSize;
                      var reset = function() {
                        expandElement[_strScrollLeft](constScroll)[_strScrollTop](constScroll);
                        shrinkElement[_strScrollLeft](constScroll)[_strScrollTop](constScroll);
                      };
                      var onResized = function() {
                        rAFId = 0;
                        if (!isDirty)
                          return;
                        widthCache = currWidth;
                        heightCache = currHeight;
                        callback();
                      };
                      var onScroll = function(event) {
                        currWidth = observerElement[LEXICON.oW];
                        currHeight = observerElement[LEXICON.oH];
                        isDirty = currWidth != widthCache || currHeight != heightCache;
                        if (event && isDirty && !rAFId) {
                          COMPATIBILITY.cAF()(rAFId);
                          rAFId = COMPATIBILITY.rAF()(onResized);
                        } else if (!event)
                          onResized();
                        reset();
                        if (event) {
                          COMPATIBILITY.prvD(event);
                          COMPATIBILITY.stpP(event);
                        }
                        return false;
                      };
                      var expandChildCSS = {};
                      var observerElementCSS = {};
                      setTopRightBottomLeft(observerElementCSS, _strEmpty, [
                        -((nativeScrollbarSize.y + 1) * factor),
                        nativeScrollbarSize.x * -factor,
                        nativeScrollbarSize.y * -factor,
                        -((nativeScrollbarSize.x + 1) * factor)
                      ]);
                      FRAMEWORK(observerElement).css(observerElementCSS);
                      expandElement.on(_strScroll, onScroll);
                      shrinkElement.on(_strScroll, onScroll);
                      targetElement.on(strAnimationStartEvent, function() {
                        onScroll(false);
                      });
                      expandChildCSS[_strWidth] = constScroll;
                      expandChildCSS[_strHeight] = constScroll;
                      expandElementChild.css(expandChildCSS);
                      reset();
                    } else {
                      var attachEvent = _documentElementNative.attachEvent;
                      var isIE2 = _msieVersion !== undefined2;
                      if (attachEvent) {
                        targetElement.prepend(generateDiv(_classNameResizeObserverElement));
                        findFirst(targetElement, _strDot + _classNameResizeObserverElement)[0].attachEvent("onresize", callback);
                      } else {
                        var obj = _documentElementNative.createElement(TYPES.o);
                        obj.setAttribute(LEXICON.ti, "-1");
                        obj.setAttribute(LEXICON.c, _classNameResizeObserverElement);
                        obj.onload = function() {
                          var wnd = this.contentDocument.defaultView;
                          wnd.addEventListener("resize", callback);
                          wnd.document.documentElement.style.display = "none";
                        };
                        obj.type = "text/html";
                        if (isIE2)
                          targetElement.prepend(obj);
                        obj.data = "about:blank";
                        if (!isIE2)
                          targetElement.prepend(obj);
                        targetElement.on(strAnimationStartEvent, callback);
                      }
                    }
                  }
                  if (targetElement[0] === _sizeObserverElementNative) {
                    var directionChanged = function() {
                      var dir = _hostElement.css("direction");
                      var css2 = {};
                      var scrollLeftValue = 0;
                      var result = false;
                      if (dir !== _cssDirectionDetectedCache) {
                        if (dir === "ltr") {
                          css2[_strLeft] = 0;
                          css2[_strRight] = _strAuto;
                          scrollLeftValue = constScroll;
                        } else {
                          css2[_strLeft] = _strAuto;
                          css2[_strRight] = 0;
                          scrollLeftValue = _rtlScrollBehavior.n ? -constScroll : _rtlScrollBehavior.i ? 0 : constScroll;
                        }
                        _sizeObserverElement.children().eq(0).css(css2);
                        _sizeObserverElement[_strScrollLeft](scrollLeftValue)[_strScrollTop](constScroll);
                        _cssDirectionDetectedCache = dir;
                        result = true;
                      }
                      return result;
                    };
                    directionChanged();
                    addDestroyEventListener(targetElement, _strScroll, function(event) {
                      if (directionChanged())
                        update();
                      COMPATIBILITY.prvD(event);
                      COMPATIBILITY.stpP(event);
                      return false;
                    });
                  }
                } else {
                  if (_supportResizeObserver) {
                    var element = targetElement.contents()[0];
                    var resizeObserverObj = element[_strResizeObserverProperty];
                    if (resizeObserverObj) {
                      resizeObserverObj.disconnect();
                      delete element[_strResizeObserverProperty];
                    }
                  } else {
                    remove(targetElement.children(_strDot + _classNameResizeObserverElement).eq(0));
                  }
                }
              }
            }
            function createMutationObservers() {
              if (_supportMutationObserver) {
                var mutationObserverContentLag = 11;
                var mutationObserver = COMPATIBILITY.mO();
                var contentLastUpdate = COMPATIBILITY.now();
                var mutationTarget;
                var mutationAttrName;
                var mutationIsClass;
                var oldMutationVal;
                var newClassVal;
                var hostClassNameRegex;
                var contentTimeout;
                var now;
                var sizeAuto;
                var action;
                _mutationObserverHostCallback = function(mutations) {
                  var doUpdate = false;
                  var doUpdateForce = false;
                  var mutation;
                  var mutatedAttrs = [];
                  if (_initialized && !_sleeping) {
                    each(mutations, function() {
                      mutation = this;
                      mutationTarget = mutation.target;
                      mutationAttrName = mutation.attributeName;
                      mutationIsClass = mutationAttrName === LEXICON.c;
                      oldMutationVal = mutation.oldValue;
                      newClassVal = mutationTarget.className;
                      if (_domExists && mutationIsClass && !doUpdateForce) {
                        if (oldMutationVal.indexOf(_classNameHostElementForeign) > -1 && newClassVal.indexOf(_classNameHostElementForeign) < 0) {
                          hostClassNameRegex = createHostClassNameRegExp(true);
                          _hostElementNative.className = newClassVal.split(_strSpace).concat(oldMutationVal.split(_strSpace).filter(function(name) {
                            return name.match(hostClassNameRegex);
                          })).join(_strSpace);
                          doUpdate = doUpdateForce = true;
                        }
                      }
                      if (!doUpdate) {
                        doUpdate = mutationIsClass ? hostClassNamesChanged(oldMutationVal, newClassVal) : mutationAttrName === LEXICON.s ? oldMutationVal !== mutationTarget[LEXICON.s].cssText : true;
                      }
                      mutatedAttrs.push(mutationAttrName);
                    });
                    updateViewportAttrsFromTarget(mutatedAttrs);
                    if (doUpdate)
                      _base.update(doUpdateForce || _strAuto);
                  }
                  return doUpdate;
                };
                _mutationObserverContentCallback = function(mutations) {
                  var doUpdate = false;
                  var mutation;
                  if (_initialized && !_sleeping) {
                    each(mutations, function() {
                      mutation = this;
                      doUpdate = isUnknownMutation(mutation);
                      return !doUpdate;
                    });
                    if (doUpdate) {
                      now = COMPATIBILITY.now();
                      sizeAuto = _heightAutoCache || _widthAutoCache;
                      action = function() {
                        if (!_destroyed) {
                          contentLastUpdate = now;
                          if (_isTextarea)
                            textareaUpdate();
                          if (sizeAuto)
                            update();
                          else
                            _base.update(_strAuto);
                        }
                      };
                      clearTimeout(contentTimeout);
                      if (mutationObserverContentLag <= 0 || now - contentLastUpdate > mutationObserverContentLag || !sizeAuto)
                        action();
                      else
                        contentTimeout = setTimeout(action, mutationObserverContentLag);
                    }
                  }
                  return doUpdate;
                };
                _mutationObserverHost = new mutationObserver(_mutationObserverHostCallback);
                _mutationObserverContent = new mutationObserver(_mutationObserverContentCallback);
              }
            }
            function connectMutationObservers() {
              if (_supportMutationObserver && !_mutationObserversConnected) {
                _mutationObserverHost.observe(_hostElementNative, {
                  attributes: true,
                  attributeOldValue: true,
                  attributeFilter: _mutationObserverAttrsHost
                });
                _mutationObserverContent.observe(_isTextarea ? _targetElementNative : _contentElementNative, {
                  attributes: true,
                  attributeOldValue: true,
                  subtree: !_isTextarea,
                  childList: !_isTextarea,
                  characterData: !_isTextarea,
                  attributeFilter: _isTextarea ? _mutationObserverAttrsTextarea : _mutationObserverAttrsHost
                });
                _mutationObserversConnected = true;
              }
            }
            function disconnectMutationObservers() {
              if (_supportMutationObserver && _mutationObserversConnected) {
                _mutationObserverHost.disconnect();
                _mutationObserverContent.disconnect();
                _mutationObserversConnected = false;
              }
            }
            function hostOnResized() {
              if (!_sleeping) {
                var changed;
                var hostSize = {
                  w: _sizeObserverElementNative[LEXICON.sW],
                  h: _sizeObserverElementNative[LEXICON.sH]
                };
                changed = checkCache(hostSize, _hostElementSizeChangeDetectedCache);
                _hostElementSizeChangeDetectedCache = hostSize;
                if (changed)
                  update({ _hostSizeChanged: true });
              }
            }
            function hostOnMouseEnter() {
              if (_scrollbarsAutoHideLeave)
                refreshScrollbarsAutoHide(true);
            }
            function hostOnMouseLeave() {
              if (_scrollbarsAutoHideLeave && !_bodyElement.hasClass(_classNameDragging))
                refreshScrollbarsAutoHide(false);
            }
            function hostOnMouseMove() {
              if (_scrollbarsAutoHideMove) {
                refreshScrollbarsAutoHide(true);
                clearTimeout(_scrollbarsAutoHideMoveTimeoutId);
                _scrollbarsAutoHideMoveTimeoutId = setTimeout(function() {
                  if (_scrollbarsAutoHideMove && !_destroyed)
                    refreshScrollbarsAutoHide(false);
                }, 100);
              }
            }
            function documentOnSelectStart(event) {
              COMPATIBILITY.prvD(event);
              return false;
            }
            function updateOnLoadCallback(event) {
              if (!_destroyed) {
                var target = event.target;
                var elm = FRAMEWORK(event.target);
                var index3 = FRAMEWORK.inArray(target, _updateOnLoadElms);
                if (index3 > -1) {
                  _updateOnLoadElms.splice(index3, 1);
                }
                eachUpdateOnLoad(function(i, updateOnLoadSelector) {
                  if (elm.is(updateOnLoadSelector)) {
                    update({ _contentSizeChanged: true });
                  }
                });
              }
            }
            function setupHostMouseTouchEvents(destroy) {
              if (!destroy)
                setupHostMouseTouchEvents(true);
              setupResponsiveEventListener(
                _hostElement,
                _strMouseTouchMoveEvent.split(_strSpace)[0],
                hostOnMouseMove,
                !_scrollbarsAutoHideMove || destroy,
                true
              );
              setupResponsiveEventListener(
                _hostElement,
                [_strMouseEnter, _strMouseLeave],
                [hostOnMouseEnter, hostOnMouseLeave],
                !_scrollbarsAutoHideLeave || destroy,
                true
              );
              if (!_initialized && !destroy)
                _hostElement.one("mouseover", hostOnMouseEnter);
            }
            function bodyMinSizeChanged() {
              var bodyMinSize = {};
              if (_isBody && _contentArrangeElement) {
                bodyMinSize.w = parseToZeroOrNumber(_contentArrangeElement.css(_strMinMinus + _strWidth));
                bodyMinSize.h = parseToZeroOrNumber(_contentArrangeElement.css(_strMinMinus + _strHeight));
                bodyMinSize.c = checkCache(bodyMinSize, _bodyMinSizeCache);
                bodyMinSize.f = true;
              }
              _bodyMinSizeCache = bodyMinSize;
              return !!bodyMinSize.c;
            }
            function hostClassNamesChanged(oldClassNames, newClassNames) {
              var currClasses = typeof newClassNames == TYPES.s ? newClassNames.split(_strSpace) : [];
              var oldClasses = typeof oldClassNames == TYPES.s ? oldClassNames.split(_strSpace) : [];
              var diff = getArrayDifferences(oldClasses, currClasses);
              var idx = inArray(_classNameThemeNone, diff);
              var i;
              var regex;
              if (idx > -1)
                diff.splice(idx, 1);
              if (diff[LEXICON.l] > 0) {
                regex = createHostClassNameRegExp(true, true);
                for (i = 0; i < diff.length; i++) {
                  if (!diff[i].match(regex)) {
                    return true;
                  }
                }
              }
              return false;
            }
            function isUnknownMutation(mutation) {
              var attributeName = mutation.attributeName;
              var mutationTarget = mutation.target;
              var mutationType = mutation.type;
              var strClosest = "closest";
              if (mutationTarget === _contentElementNative)
                return attributeName === null;
              if (mutationType === "attributes" && (attributeName === LEXICON.c || attributeName === LEXICON.s) && !_isTextarea) {
                if (attributeName === LEXICON.c && FRAMEWORK(mutationTarget).hasClass(_classNameHostElement))
                  return hostClassNamesChanged(mutation.oldValue, mutationTarget.className);
                if (typeof mutationTarget[strClosest] != TYPES.f)
                  return true;
                if (mutationTarget[strClosest](_strDot + _classNameResizeObserverElement) !== null || mutationTarget[strClosest](_strDot + _classNameScrollbar) !== null || mutationTarget[strClosest](_strDot + _classNameScrollbarCorner) !== null)
                  return false;
              }
              return true;
            }
            function updateAutoContentSizeChanged() {
              if (_sleeping)
                return false;
              var contentMeasureElement = getContentMeasureElement();
              var textareaValueLength = _isTextarea && _widthAutoCache && !_textareaAutoWrappingCache ? _targetElement.val().length : 0;
              var setCSS = !_mutationObserversConnected && _widthAutoCache && !_isTextarea;
              var css2 = {};
              var float;
              var bodyMinSizeC;
              var changed;
              var contentElementScrollSize;
              if (setCSS) {
                float = _contentElement.css(_strFloat);
                css2[_strFloat] = _isRTL ? _strRight : _strLeft;
                css2[_strWidth] = _strAuto;
                _contentElement.css(css2);
              }
              contentElementScrollSize = {
                w: contentMeasureElement[LEXICON.sW] + textareaValueLength,
                h: contentMeasureElement[LEXICON.sH] + textareaValueLength
              };
              if (setCSS) {
                css2[_strFloat] = float;
                css2[_strWidth] = _strHundredPercent;
                _contentElement.css(css2);
              }
              bodyMinSizeC = bodyMinSizeChanged();
              changed = checkCache(contentElementScrollSize, _contentElementScrollSizeChangeDetectedCache);
              _contentElementScrollSizeChangeDetectedCache = contentElementScrollSize;
              return changed || bodyMinSizeC;
            }
            function meaningfulAttrsChanged() {
              if (_sleeping || _mutationObserversConnected)
                return;
              var elem;
              var curr;
              var cache;
              var changedAttrs = [];
              var checks = [
                {
                  _elem: _hostElement,
                  _attrs: _mutationObserverAttrsHost.concat(":visible")
                },
                {
                  _elem: _isTextarea ? _targetElement : undefined2,
                  _attrs: _mutationObserverAttrsTextarea
                }
              ];
              each(checks, function(index3, check) {
                elem = check._elem;
                if (elem) {
                  each(check._attrs, function(index4, attr) {
                    curr = attr.charAt(0) === ":" ? elem.is(attr) : elem.attr(attr);
                    cache = _updateAutoCache[attr];
                    if (checkCache(curr, cache)) {
                      changedAttrs.push(attr);
                    }
                    _updateAutoCache[attr] = curr;
                  });
                }
              });
              updateViewportAttrsFromTarget(changedAttrs);
              return changedAttrs[LEXICON.l] > 0;
            }
            function isSizeAffectingCSSProperty(propertyName) {
              if (!_initialized)
                return true;
              var flexGrow = "flex-grow";
              var flexShrink = "flex-shrink";
              var flexBasis = "flex-basis";
              var affectingPropsX = [
                _strWidth,
                _strMinMinus + _strWidth,
                _strMaxMinus + _strWidth,
                _strMarginMinus + _strLeft,
                _strMarginMinus + _strRight,
                _strLeft,
                _strRight,
                "font-weight",
                "word-spacing",
                flexGrow,
                flexShrink,
                flexBasis
              ];
              var affectingPropsXContentBox = [
                _strPaddingMinus + _strLeft,
                _strPaddingMinus + _strRight,
                _strBorderMinus + _strLeft + _strWidth,
                _strBorderMinus + _strRight + _strWidth
              ];
              var affectingPropsY = [
                _strHeight,
                _strMinMinus + _strHeight,
                _strMaxMinus + _strHeight,
                _strMarginMinus + _strTop,
                _strMarginMinus + _strBottom,
                _strTop,
                _strBottom,
                "line-height",
                flexGrow,
                flexShrink,
                flexBasis
              ];
              var affectingPropsYContentBox = [
                _strPaddingMinus + _strTop,
                _strPaddingMinus + _strBottom,
                _strBorderMinus + _strTop + _strWidth,
                _strBorderMinus + _strBottom + _strWidth
              ];
              var _strS = "s";
              var _strVS = "v-s";
              var checkX = _overflowBehaviorCache.x === _strS || _overflowBehaviorCache.x === _strVS;
              var checkY = _overflowBehaviorCache.y === _strS || _overflowBehaviorCache.y === _strVS;
              var sizeIsAffected = false;
              var checkPropertyName = function(arr, name) {
                for (var i = 0; i < arr[LEXICON.l]; i++) {
                  if (arr[i] === name)
                    return true;
                }
                return false;
              };
              if (checkY) {
                sizeIsAffected = checkPropertyName(affectingPropsY, propertyName);
                if (!sizeIsAffected && !_isBorderBox)
                  sizeIsAffected = checkPropertyName(affectingPropsYContentBox, propertyName);
              }
              if (checkX && !sizeIsAffected) {
                sizeIsAffected = checkPropertyName(affectingPropsX, propertyName);
                if (!sizeIsAffected && !_isBorderBox)
                  sizeIsAffected = checkPropertyName(affectingPropsXContentBox, propertyName);
              }
              return sizeIsAffected;
            }
            function updateViewportAttrsFromTarget(attrs) {
              attrs = attrs || _viewportAttrsFromTarget;
              each(attrs, function(index3, attr) {
                if (COMPATIBILITY.inA(attr, _viewportAttrsFromTarget) > -1) {
                  var targetAttr = _targetElement.attr(attr);
                  if (type(targetAttr) == TYPES.s) {
                    _viewportElement.attr(attr, targetAttr);
                  } else {
                    _viewportElement.removeAttr(attr);
                  }
                }
              });
            }
            function textareaUpdate() {
              if (!_sleeping) {
                var wrapAttrOff = !_textareaAutoWrappingCache;
                var minWidth = _viewportSize.w;
                var minHeight = _viewportSize.h;
                var css2 = {};
                var doMeasure = _widthAutoCache || wrapAttrOff;
                var origWidth;
                var width;
                var origHeight;
                var height;
                css2[_strMinMinus + _strWidth] = _strEmpty;
                css2[_strMinMinus + _strHeight] = _strEmpty;
                css2[_strWidth] = _strAuto;
                _targetElement.css(css2);
                origWidth = _targetElementNative[LEXICON.oW];
                width = doMeasure ? MATH.max(origWidth, _targetElementNative[LEXICON.sW] - 1) : 1;
                css2[_strWidth] = _widthAutoCache ? _strAuto : _strHundredPercent;
                css2[_strMinMinus + _strWidth] = _strHundredPercent;
                css2[_strHeight] = _strAuto;
                _targetElement.css(css2);
                origHeight = _targetElementNative[LEXICON.oH];
                height = MATH.max(origHeight, _targetElementNative[LEXICON.sH] - 1);
                css2[_strWidth] = width;
                css2[_strHeight] = height;
                _textareaCoverElement.css(css2);
                css2[_strMinMinus + _strWidth] = minWidth;
                css2[_strMinMinus + _strHeight] = minHeight;
                _targetElement.css(css2);
                return {
                  _originalWidth: origWidth,
                  _originalHeight: origHeight,
                  _dynamicWidth: width,
                  _dynamicHeight: height
                };
              }
            }
            function update(updateHints) {
              clearTimeout(_swallowedUpdateTimeout);
              updateHints = updateHints || {};
              _swallowedUpdateHints._hostSizeChanged |= updateHints._hostSizeChanged;
              _swallowedUpdateHints._contentSizeChanged |= updateHints._contentSizeChanged;
              _swallowedUpdateHints._force |= updateHints._force;
              var now = COMPATIBILITY.now();
              var hostSizeChanged = !!_swallowedUpdateHints._hostSizeChanged;
              var contentSizeChanged = !!_swallowedUpdateHints._contentSizeChanged;
              var force = !!_swallowedUpdateHints._force;
              var changedOptions = updateHints._changedOptions;
              var swallow = _swallowUpdateLag > 0 && _initialized && !_destroyed && !force && !changedOptions && now - _lastUpdateTime < _swallowUpdateLag && (!_heightAutoCache && !_widthAutoCache);
              var displayIsHidden;
              if (swallow)
                _swallowedUpdateTimeout = setTimeout(update, _swallowUpdateLag);
              if (_destroyed || swallow || _sleeping && !changedOptions || _initialized && !force && (displayIsHidden = _hostElement.is(":hidden")) || _hostElement.css("display") === "inline")
                return;
              _lastUpdateTime = now;
              _swallowedUpdateHints = {};
              if (_nativeScrollbarStyling && !(_nativeScrollbarIsOverlaid.x && _nativeScrollbarIsOverlaid.y)) {
                _nativeScrollbarSize.x = 0;
                _nativeScrollbarSize.y = 0;
              } else {
                _nativeScrollbarSize = extendDeep({}, globals.nativeScrollbarSize);
              }
              _nativeScrollbarMinSize = {
                x: (_nativeScrollbarSize.x + (_nativeScrollbarIsOverlaid.x ? 0 : 3)) * 3,
                y: (_nativeScrollbarSize.y + (_nativeScrollbarIsOverlaid.y ? 0 : 3)) * 3
              };
              changedOptions = changedOptions || {};
              var checkCacheAutoForce = function() {
                return checkCache.apply(this, [].slice.call(arguments).concat([force]));
              };
              var currScroll = {
                x: _viewportElement[_strScrollLeft](),
                y: _viewportElement[_strScrollTop]()
              };
              var currentPreparedOptionsScrollbars = _currentPreparedOptions.scrollbars;
              var currentPreparedOptionsTextarea = _currentPreparedOptions.textarea;
              var scrollbarsVisibility = currentPreparedOptionsScrollbars.visibility;
              var scrollbarsVisibilityChanged = checkCacheAutoForce(scrollbarsVisibility, _scrollbarsVisibilityCache);
              var scrollbarsAutoHide = currentPreparedOptionsScrollbars.autoHide;
              var scrollbarsAutoHideChanged = checkCacheAutoForce(scrollbarsAutoHide, _scrollbarsAutoHideCache);
              var scrollbarsClickScrolling = currentPreparedOptionsScrollbars.clickScrolling;
              var scrollbarsClickScrollingChanged = checkCacheAutoForce(scrollbarsClickScrolling, _scrollbarsClickScrollingCache);
              var scrollbarsDragScrolling = currentPreparedOptionsScrollbars.dragScrolling;
              var scrollbarsDragScrollingChanged = checkCacheAutoForce(scrollbarsDragScrolling, _scrollbarsDragScrollingCache);
              var className = _currentPreparedOptions.className;
              var classNameChanged = checkCacheAutoForce(className, _classNameCache);
              var resize = _currentPreparedOptions.resize;
              var resizeChanged = checkCacheAutoForce(resize, _resizeCache) && !_isBody;
              var paddingAbsolute = _currentPreparedOptions.paddingAbsolute;
              var paddingAbsoluteChanged = checkCacheAutoForce(paddingAbsolute, _paddingAbsoluteCache);
              var clipAlways = _currentPreparedOptions.clipAlways;
              var clipAlwaysChanged = checkCacheAutoForce(clipAlways, _clipAlwaysCache);
              var sizeAutoCapable = _currentPreparedOptions.sizeAutoCapable && !_isBody;
              var sizeAutoCapableChanged = checkCacheAutoForce(sizeAutoCapable, _sizeAutoCapableCache);
              var ignoreOverlayScrollbarHiding = _currentPreparedOptions.nativeScrollbarsOverlaid.showNativeScrollbars;
              var ignoreOverlayScrollbarHidingChanged = checkCacheAutoForce(ignoreOverlayScrollbarHiding, _ignoreOverlayScrollbarHidingCache);
              var autoUpdate = _currentPreparedOptions.autoUpdate;
              var autoUpdateChanged = checkCacheAutoForce(autoUpdate, _autoUpdateCache);
              var overflowBehavior = _currentPreparedOptions.overflowBehavior;
              var overflowBehaviorChanged = checkCacheAutoForce(overflowBehavior, _overflowBehaviorCache, force);
              var textareaDynWidth = currentPreparedOptionsTextarea.dynWidth;
              var textareaDynWidthChanged = checkCacheAutoForce(_textareaDynWidthCache, textareaDynWidth);
              var textareaDynHeight = currentPreparedOptionsTextarea.dynHeight;
              var textareaDynHeightChanged = checkCacheAutoForce(_textareaDynHeightCache, textareaDynHeight);
              _scrollbarsAutoHideNever = scrollbarsAutoHide === "n";
              _scrollbarsAutoHideScroll = scrollbarsAutoHide === "s";
              _scrollbarsAutoHideMove = scrollbarsAutoHide === "m";
              _scrollbarsAutoHideLeave = scrollbarsAutoHide === "l";
              _scrollbarsAutoHideDelay = currentPreparedOptionsScrollbars.autoHideDelay;
              _oldClassName = _classNameCache;
              _resizeNone = resize === "n";
              _resizeBoth = resize === "b";
              _resizeHorizontal = resize === "h";
              _resizeVertical = resize === "v";
              _normalizeRTLCache = _currentPreparedOptions.normalizeRTL;
              ignoreOverlayScrollbarHiding = ignoreOverlayScrollbarHiding && (_nativeScrollbarIsOverlaid.x && _nativeScrollbarIsOverlaid.y);
              _scrollbarsVisibilityCache = scrollbarsVisibility;
              _scrollbarsAutoHideCache = scrollbarsAutoHide;
              _scrollbarsClickScrollingCache = scrollbarsClickScrolling;
              _scrollbarsDragScrollingCache = scrollbarsDragScrolling;
              _classNameCache = className;
              _resizeCache = resize;
              _paddingAbsoluteCache = paddingAbsolute;
              _clipAlwaysCache = clipAlways;
              _sizeAutoCapableCache = sizeAutoCapable;
              _ignoreOverlayScrollbarHidingCache = ignoreOverlayScrollbarHiding;
              _autoUpdateCache = autoUpdate;
              _overflowBehaviorCache = extendDeep({}, overflowBehavior);
              _textareaDynWidthCache = textareaDynWidth;
              _textareaDynHeightCache = textareaDynHeight;
              _hasOverflowCache = _hasOverflowCache || { x: false, y: false };
              if (classNameChanged) {
                removeClass(_hostElement, _oldClassName + _strSpace + _classNameThemeNone);
                addClass(_hostElement, className !== undefined2 && className !== null && className.length > 0 ? className : _classNameThemeNone);
              }
              if (autoUpdateChanged) {
                if (autoUpdate === true || autoUpdate === null && _autoUpdateRecommended) {
                  disconnectMutationObservers();
                  autoUpdateLoop.add(_base);
                } else {
                  autoUpdateLoop.remove(_base);
                  connectMutationObservers();
                }
              }
              if (sizeAutoCapableChanged) {
                if (sizeAutoCapable) {
                  if (_contentGlueElement) {
                    _contentGlueElement.show();
                  } else {
                    _contentGlueElement = FRAMEWORK(generateDiv(_classNameContentGlueElement));
                    _paddingElement.before(_contentGlueElement);
                  }
                  if (_sizeAutoObserverAdded) {
                    _sizeAutoObserverElement.show();
                  } else {
                    _sizeAutoObserverElement = FRAMEWORK(generateDiv(_classNameSizeAutoObserverElement));
                    _sizeAutoObserverElementNative = _sizeAutoObserverElement[0];
                    _contentGlueElement.before(_sizeAutoObserverElement);
                    var oldSize = { w: -1, h: -1 };
                    setupResizeObserver(_sizeAutoObserverElement, function() {
                      var newSize = {
                        w: _sizeAutoObserverElementNative[LEXICON.oW],
                        h: _sizeAutoObserverElementNative[LEXICON.oH]
                      };
                      if (checkCache(newSize, oldSize)) {
                        if (_initialized && (_heightAutoCache && newSize.h > 0) || _widthAutoCache && newSize.w > 0) {
                          update();
                        } else if (_initialized && (!_heightAutoCache && newSize.h === 0) || !_widthAutoCache && newSize.w === 0) {
                          update();
                        }
                      }
                      oldSize = newSize;
                    });
                    _sizeAutoObserverAdded = true;
                    if (_cssCalc !== null)
                      _sizeAutoObserverElement.css(_strHeight, _cssCalc + "(100% + 1px)");
                  }
                } else {
                  if (_sizeAutoObserverAdded)
                    _sizeAutoObserverElement.hide();
                  if (_contentGlueElement)
                    _contentGlueElement.hide();
                }
              }
              if (force) {
                _sizeObserverElement.find("*").trigger(_strScroll);
                if (_sizeAutoObserverAdded)
                  _sizeAutoObserverElement.find("*").trigger(_strScroll);
              }
              displayIsHidden = displayIsHidden === undefined2 ? _hostElement.is(":hidden") : displayIsHidden;
              var textareaAutoWrapping = _isTextarea ? _targetElement.attr("wrap") !== "off" : false;
              var textareaAutoWrappingChanged = checkCacheAutoForce(textareaAutoWrapping, _textareaAutoWrappingCache);
              var cssDirection = _hostElement.css("direction");
              var cssDirectionChanged = checkCacheAutoForce(cssDirection, _cssDirectionCache);
              var boxSizing = _hostElement.css("box-sizing");
              var boxSizingChanged = checkCacheAutoForce(boxSizing, _cssBoxSizingCache);
              var padding = getTopRightBottomLeftHost(_strPaddingMinus);
              var sizeAutoObserverElementBCRect;
              try {
                sizeAutoObserverElementBCRect = _sizeAutoObserverAdded ? _sizeAutoObserverElementNative[LEXICON.bCR]() : null;
              } catch (ex) {
                return;
              }
              _isRTL = cssDirection === "rtl";
              _isBorderBox = boxSizing === "border-box";
              var isRTLLeft = _isRTL ? _strLeft : _strRight;
              var isRTLRight = _isRTL ? _strRight : _strLeft;
              var widthAutoResizeDetection = false;
              var widthAutoObserverDetection = _sizeAutoObserverAdded && _hostElement.css(_strFloat) !== "none" ? MATH.round(sizeAutoObserverElementBCRect.right - sizeAutoObserverElementBCRect.left) === 0 && (!paddingAbsolute ? _hostElementNative[LEXICON.cW] - _paddingX > 0 : true) : false;
              if (sizeAutoCapable && !widthAutoObserverDetection) {
                var tmpCurrHostWidth = _hostElementNative[LEXICON.oW];
                var tmpCurrContentGlueWidth = _contentGlueElement.css(_strWidth);
                _contentGlueElement.css(_strWidth, _strAuto);
                var tmpNewHostWidth = _hostElementNative[LEXICON.oW];
                _contentGlueElement.css(_strWidth, tmpCurrContentGlueWidth);
                widthAutoResizeDetection = tmpCurrHostWidth !== tmpNewHostWidth;
                if (!widthAutoResizeDetection) {
                  _contentGlueElement.css(_strWidth, tmpCurrHostWidth + 1);
                  tmpNewHostWidth = _hostElementNative[LEXICON.oW];
                  _contentGlueElement.css(_strWidth, tmpCurrContentGlueWidth);
                  widthAutoResizeDetection = tmpCurrHostWidth !== tmpNewHostWidth;
                }
              }
              var widthAuto = (widthAutoObserverDetection || widthAutoResizeDetection) && sizeAutoCapable && !displayIsHidden;
              var widthAutoChanged = checkCacheAutoForce(widthAuto, _widthAutoCache);
              var wasWidthAuto = !widthAuto && _widthAutoCache;
              var heightAuto = _sizeAutoObserverAdded && sizeAutoCapable && !displayIsHidden ? MATH.round(sizeAutoObserverElementBCRect.bottom - sizeAutoObserverElementBCRect.top) === 0 : false;
              var heightAutoChanged = checkCacheAutoForce(heightAuto, _heightAutoCache);
              var wasHeightAuto = !heightAuto && _heightAutoCache;
              var updateBorderX = widthAuto && _isBorderBox || !_isBorderBox;
              var updateBorderY = heightAuto && _isBorderBox || !_isBorderBox;
              var border = getTopRightBottomLeftHost(_strBorderMinus, "-" + _strWidth, !updateBorderX, !updateBorderY);
              var margin = getTopRightBottomLeftHost(_strMarginMinus);
              var contentElementCSS = {};
              var contentGlueElementCSS = {};
              var getHostSize = function() {
                return {
                  w: _hostElementNative[LEXICON.cW],
                  h: _hostElementNative[LEXICON.cH]
                };
              };
              var getViewportSize = function() {
                return {
                  w: _paddingElementNative[LEXICON.oW] + MATH.max(0, _contentElementNative[LEXICON.cW] - _contentElementNative[LEXICON.sW]),
                  h: _paddingElementNative[LEXICON.oH] + MATH.max(0, _contentElementNative[LEXICON.cH] - _contentElementNative[LEXICON.sH])
                };
              };
              var paddingAbsoluteX = _paddingX = padding.l + padding.r;
              var paddingAbsoluteY = _paddingY = padding.t + padding.b;
              paddingAbsoluteX *= paddingAbsolute ? 1 : 0;
              paddingAbsoluteY *= paddingAbsolute ? 1 : 0;
              padding.c = checkCacheAutoForce(padding, _cssPaddingCache);
              _borderX = border.l + border.r;
              _borderY = border.t + border.b;
              border.c = checkCacheAutoForce(border, _cssBorderCache);
              _marginX = margin.l + margin.r;
              _marginY = margin.t + margin.b;
              margin.c = checkCacheAutoForce(margin, _cssMarginCache);
              _textareaAutoWrappingCache = textareaAutoWrapping;
              _cssDirectionCache = cssDirection;
              _cssBoxSizingCache = boxSizing;
              _widthAutoCache = widthAuto;
              _heightAutoCache = heightAuto;
              _cssPaddingCache = padding;
              _cssBorderCache = border;
              _cssMarginCache = margin;
              if (cssDirectionChanged && _sizeAutoObserverAdded)
                _sizeAutoObserverElement.css(_strFloat, isRTLRight);
              if (padding.c || cssDirectionChanged || paddingAbsoluteChanged || widthAutoChanged || heightAutoChanged || boxSizingChanged || sizeAutoCapableChanged) {
                var paddingElementCSS = {};
                var textareaCSS = {};
                var paddingValues = [padding.t, padding.r, padding.b, padding.l];
                setTopRightBottomLeft(contentGlueElementCSS, _strMarginMinus, [-padding.t, -padding.r, -padding.b, -padding.l]);
                if (paddingAbsolute) {
                  setTopRightBottomLeft(paddingElementCSS, _strEmpty, paddingValues);
                  setTopRightBottomLeft(_isTextarea ? textareaCSS : contentElementCSS, _strPaddingMinus);
                } else {
                  setTopRightBottomLeft(paddingElementCSS, _strEmpty);
                  setTopRightBottomLeft(_isTextarea ? textareaCSS : contentElementCSS, _strPaddingMinus, paddingValues);
                }
                _paddingElement.css(paddingElementCSS);
                _targetElement.css(textareaCSS);
              }
              _viewportSize = getViewportSize();
              var textareaSize = _isTextarea ? textareaUpdate() : false;
              var textareaSizeChanged = _isTextarea && checkCacheAutoForce(textareaSize, _textareaSizeCache);
              var textareaDynOrigSize = _isTextarea && textareaSize ? {
                w: textareaDynWidth ? textareaSize._dynamicWidth : textareaSize._originalWidth,
                h: textareaDynHeight ? textareaSize._dynamicHeight : textareaSize._originalHeight
              } : {};
              _textareaSizeCache = textareaSize;
              if (heightAuto && (heightAutoChanged || paddingAbsoluteChanged || boxSizingChanged || padding.c || border.c)) {
                contentElementCSS[_strHeight] = _strAuto;
              } else if (heightAutoChanged || paddingAbsoluteChanged) {
                contentElementCSS[_strHeight] = _strHundredPercent;
              }
              if (widthAuto && (widthAutoChanged || paddingAbsoluteChanged || boxSizingChanged || padding.c || border.c || cssDirectionChanged)) {
                contentElementCSS[_strWidth] = _strAuto;
                contentGlueElementCSS[_strMaxMinus + _strWidth] = _strHundredPercent;
              } else if (widthAutoChanged || paddingAbsoluteChanged) {
                contentElementCSS[_strWidth] = _strHundredPercent;
                contentElementCSS[_strFloat] = _strEmpty;
                contentGlueElementCSS[_strMaxMinus + _strWidth] = _strEmpty;
              }
              if (widthAuto) {
                contentGlueElementCSS[_strWidth] = _strAuto;
                contentElementCSS[_strWidth] = VENDORS._cssPropertyValue(_strWidth, "max-content intrinsic") || _strAuto;
                contentElementCSS[_strFloat] = isRTLRight;
              } else {
                contentGlueElementCSS[_strWidth] = _strEmpty;
              }
              if (heightAuto) {
                contentGlueElementCSS[_strHeight] = textareaDynOrigSize.h || _contentElementNative[LEXICON.cH];
              } else {
                contentGlueElementCSS[_strHeight] = _strEmpty;
              }
              if (sizeAutoCapable)
                _contentGlueElement.css(contentGlueElementCSS);
              _contentElement.css(contentElementCSS);
              contentElementCSS = {};
              contentGlueElementCSS = {};
              if (hostSizeChanged || contentSizeChanged || textareaSizeChanged || cssDirectionChanged || boxSizingChanged || paddingAbsoluteChanged || widthAutoChanged || widthAuto || heightAutoChanged || heightAuto || ignoreOverlayScrollbarHidingChanged || overflowBehaviorChanged || clipAlwaysChanged || resizeChanged || scrollbarsVisibilityChanged || scrollbarsAutoHideChanged || scrollbarsDragScrollingChanged || scrollbarsClickScrollingChanged || textareaDynWidthChanged || textareaDynHeightChanged || textareaAutoWrappingChanged) {
                var strOverflow = "overflow";
                var strOverflowX = strOverflow + "-x";
                var strOverflowY = strOverflow + "-y";
                var strHidden = "hidden";
                var strVisible = "visible";
                if (!_nativeScrollbarStyling) {
                  var viewportElementResetCSS = {};
                  var resetXTmp = _hasOverflowCache.y && _hideOverflowCache.ys && !ignoreOverlayScrollbarHiding ? _nativeScrollbarIsOverlaid.y ? _viewportElement.css(isRTLLeft) : -_nativeScrollbarSize.y : 0;
                  var resetBottomTmp = _hasOverflowCache.x && _hideOverflowCache.xs && !ignoreOverlayScrollbarHiding ? _nativeScrollbarIsOverlaid.x ? _viewportElement.css(_strBottom) : -_nativeScrollbarSize.x : 0;
                  setTopRightBottomLeft(viewportElementResetCSS, _strEmpty);
                  _viewportElement.css(viewportElementResetCSS);
                }
                var contentMeasureElement = getContentMeasureElement();
                var contentSize = {
                  w: textareaDynOrigSize.w || contentMeasureElement[LEXICON.cW],
                  h: textareaDynOrigSize.h || contentMeasureElement[LEXICON.cH]
                };
                var scrollSize = {
                  w: contentMeasureElement[LEXICON.sW],
                  h: contentMeasureElement[LEXICON.sH]
                };
                if (!_nativeScrollbarStyling) {
                  viewportElementResetCSS[_strBottom] = wasHeightAuto ? _strEmpty : resetBottomTmp;
                  viewportElementResetCSS[isRTLLeft] = wasWidthAuto ? _strEmpty : resetXTmp;
                  _viewportElement.css(viewportElementResetCSS);
                }
                _viewportSize = getViewportSize();
                var hostSize = getHostSize();
                var hostAbsoluteRectSize = {
                  w: hostSize.w - _marginX - _borderX - (_isBorderBox ? 0 : _paddingX),
                  h: hostSize.h - _marginY - _borderY - (_isBorderBox ? 0 : _paddingY)
                };
                var contentGlueSize = {
                  w: MATH.max((widthAuto ? contentSize.w : scrollSize.w) + paddingAbsoluteX, hostAbsoluteRectSize.w),
                  h: MATH.max((heightAuto ? contentSize.h : scrollSize.h) + paddingAbsoluteY, hostAbsoluteRectSize.h)
                };
                contentGlueSize.c = checkCacheAutoForce(contentGlueSize, _contentGlueSizeCache);
                _contentGlueSizeCache = contentGlueSize;
                if (sizeAutoCapable) {
                  if (contentGlueSize.c || (heightAuto || widthAuto)) {
                    contentGlueElementCSS[_strWidth] = contentGlueSize.w;
                    contentGlueElementCSS[_strHeight] = contentGlueSize.h;
                    if (!_isTextarea) {
                      contentSize = {
                        w: contentMeasureElement[LEXICON.cW],
                        h: contentMeasureElement[LEXICON.cH]
                      };
                    }
                  }
                  var textareaCoverCSS = {};
                  var setContentGlueElementCSSfunction = function(horizontal) {
                    var scrollbarVars = getScrollbarVars(horizontal);
                    var wh = scrollbarVars._w_h;
                    var strWH = scrollbarVars._width_height;
                    var autoSize = horizontal ? widthAuto : heightAuto;
                    var borderSize = horizontal ? _borderX : _borderY;
                    var paddingSize = horizontal ? _paddingX : _paddingY;
                    var marginSize = horizontal ? _marginX : _marginY;
                    var viewportSize = _viewportSize[wh] - borderSize - marginSize - (_isBorderBox ? 0 : paddingSize);
                    if (!autoSize || !autoSize && border.c)
                      contentGlueElementCSS[strWH] = hostAbsoluteRectSize[wh] - 1;
                    if (autoSize && contentSize[wh] < viewportSize && (horizontal && _isTextarea ? !textareaAutoWrapping : true)) {
                      if (_isTextarea)
                        textareaCoverCSS[strWH] = parseToZeroOrNumber(_textareaCoverElement.css(strWH)) - 1;
                      contentGlueElementCSS[strWH] -= 1;
                    }
                    if (contentSize[wh] > 0)
                      contentGlueElementCSS[strWH] = MATH.max(1, contentGlueElementCSS[strWH]);
                  };
                  setContentGlueElementCSSfunction(true);
                  setContentGlueElementCSSfunction(false);
                  if (_isTextarea)
                    _textareaCoverElement.css(textareaCoverCSS);
                  _contentGlueElement.css(contentGlueElementCSS);
                }
                if (widthAuto)
                  contentElementCSS[_strWidth] = _strHundredPercent;
                if (widthAuto && !_isBorderBox && !_mutationObserversConnected)
                  contentElementCSS[_strFloat] = "none";
                _contentElement.css(contentElementCSS);
                contentElementCSS = {};
                var contentScrollSize = {
                  w: contentMeasureElement[LEXICON.sW],
                  h: contentMeasureElement[LEXICON.sH]
                };
                contentScrollSize.c = contentSizeChanged = checkCacheAutoForce(contentScrollSize, _contentScrollSizeCache);
                _contentScrollSizeCache = contentScrollSize;
                _viewportSize = getViewportSize();
                hostSize = getHostSize();
                hostSizeChanged = checkCacheAutoForce(hostSize, _hostSizeCache);
                _hostSizeCache = hostSize;
                var hideOverflowForceTextarea = _isTextarea && (_viewportSize.w === 0 || _viewportSize.h === 0);
                var previousOverflowAmount = _overflowAmountCache;
                var overflowBehaviorIsVS = {};
                var overflowBehaviorIsVH = {};
                var overflowBehaviorIsS = {};
                var overflowAmount = {};
                var hasOverflow = {};
                var hideOverflow = {};
                var canScroll = {};
                var viewportRect = _paddingElementNative[LEXICON.bCR]();
                var setOverflowVariables = function(horizontal) {
                  var scrollbarVars = getScrollbarVars(horizontal);
                  var scrollbarVarsInverted = getScrollbarVars(!horizontal);
                  var xyI = scrollbarVarsInverted._x_y;
                  var xy = scrollbarVars._x_y;
                  var wh = scrollbarVars._w_h;
                  var widthHeight = scrollbarVars._width_height;
                  var scrollMax = _strScroll + scrollbarVars._Left_Top + "Max";
                  var fractionalOverflowAmount = viewportRect[widthHeight] ? MATH.abs(viewportRect[widthHeight] - _viewportSize[wh]) : 0;
                  var checkFractionalOverflowAmount = previousOverflowAmount && previousOverflowAmount[xy] > 0 && _viewportElementNative[scrollMax] === 0;
                  overflowBehaviorIsVS[xy] = overflowBehavior[xy] === "v-s";
                  overflowBehaviorIsVH[xy] = overflowBehavior[xy] === "v-h";
                  overflowBehaviorIsS[xy] = overflowBehavior[xy] === "s";
                  overflowAmount[xy] = MATH.max(0, MATH.round((contentScrollSize[wh] - _viewportSize[wh]) * 100) / 100);
                  overflowAmount[xy] *= hideOverflowForceTextarea || checkFractionalOverflowAmount && fractionalOverflowAmount > 0 && fractionalOverflowAmount < 1 ? 0 : 1;
                  hasOverflow[xy] = overflowAmount[xy] > 0;
                  hideOverflow[xy] = overflowBehaviorIsVS[xy] || overflowBehaviorIsVH[xy] ? hasOverflow[xyI] && !overflowBehaviorIsVS[xyI] && !overflowBehaviorIsVH[xyI] : hasOverflow[xy];
                  hideOverflow[xy + "s"] = hideOverflow[xy] ? overflowBehaviorIsS[xy] || overflowBehaviorIsVS[xy] : false;
                  canScroll[xy] = hasOverflow[xy] && hideOverflow[xy + "s"];
                };
                setOverflowVariables(true);
                setOverflowVariables(false);
                overflowAmount.c = checkCacheAutoForce(overflowAmount, _overflowAmountCache);
                _overflowAmountCache = overflowAmount;
                hasOverflow.c = checkCacheAutoForce(hasOverflow, _hasOverflowCache);
                _hasOverflowCache = hasOverflow;
                hideOverflow.c = checkCacheAutoForce(hideOverflow, _hideOverflowCache);
                _hideOverflowCache = hideOverflow;
                if (_nativeScrollbarIsOverlaid.x || _nativeScrollbarIsOverlaid.y) {
                  var borderDesign = "px solid transparent";
                  var contentArrangeElementCSS = {};
                  var arrangeContent = {};
                  var arrangeChanged = force;
                  var setContentElementCSS;
                  if (hasOverflow.x || hasOverflow.y) {
                    arrangeContent.w = _nativeScrollbarIsOverlaid.y && hasOverflow.y ? contentScrollSize.w + _overlayScrollbarDummySize.y : _strEmpty;
                    arrangeContent.h = _nativeScrollbarIsOverlaid.x && hasOverflow.x ? contentScrollSize.h + _overlayScrollbarDummySize.x : _strEmpty;
                    arrangeChanged = checkCacheAutoForce(arrangeContent, _arrangeContentSizeCache);
                    _arrangeContentSizeCache = arrangeContent;
                  }
                  if (hasOverflow.c || hideOverflow.c || contentScrollSize.c || cssDirectionChanged || widthAutoChanged || heightAutoChanged || widthAuto || heightAuto || ignoreOverlayScrollbarHidingChanged) {
                    contentElementCSS[_strMarginMinus + isRTLRight] = contentElementCSS[_strBorderMinus + isRTLRight] = _strEmpty;
                    setContentElementCSS = function(horizontal) {
                      var scrollbarVars = getScrollbarVars(horizontal);
                      var scrollbarVarsInverted = getScrollbarVars(!horizontal);
                      var xy = scrollbarVars._x_y;
                      var strDirection = horizontal ? _strBottom : isRTLLeft;
                      var invertedAutoSize = horizontal ? heightAuto : widthAuto;
                      if (_nativeScrollbarIsOverlaid[xy] && hasOverflow[xy] && hideOverflow[xy + "s"]) {
                        contentElementCSS[_strMarginMinus + strDirection] = invertedAutoSize ? ignoreOverlayScrollbarHiding ? _strEmpty : _overlayScrollbarDummySize[xy] : _strEmpty;
                        contentElementCSS[_strBorderMinus + strDirection] = (horizontal ? !invertedAutoSize : true) && !ignoreOverlayScrollbarHiding ? _overlayScrollbarDummySize[xy] + borderDesign : _strEmpty;
                      } else {
                        arrangeContent[scrollbarVarsInverted._w_h] = contentElementCSS[_strMarginMinus + strDirection] = contentElementCSS[_strBorderMinus + strDirection] = _strEmpty;
                        arrangeChanged = true;
                      }
                    };
                    if (_nativeScrollbarStyling) {
                      addRemoveClass(_viewportElement, _classNameViewportNativeScrollbarsInvisible, !ignoreOverlayScrollbarHiding);
                    } else {
                      setContentElementCSS(true);
                      setContentElementCSS(false);
                    }
                  }
                  if (ignoreOverlayScrollbarHiding) {
                    arrangeContent.w = arrangeContent.h = _strEmpty;
                    arrangeChanged = true;
                  }
                  if (arrangeChanged && !_nativeScrollbarStyling) {
                    contentArrangeElementCSS[_strWidth] = hideOverflow.y ? arrangeContent.w : _strEmpty;
                    contentArrangeElementCSS[_strHeight] = hideOverflow.x ? arrangeContent.h : _strEmpty;
                    if (!_contentArrangeElement) {
                      _contentArrangeElement = FRAMEWORK(generateDiv(_classNameContentArrangeElement));
                      _viewportElement.prepend(_contentArrangeElement);
                    }
                    _contentArrangeElement.css(contentArrangeElementCSS);
                  }
                  _contentElement.css(contentElementCSS);
                }
                var viewportElementCSS = {};
                var paddingElementCSS = {};
                var setViewportCSS;
                if (hostSizeChanged || hasOverflow.c || hideOverflow.c || contentScrollSize.c || overflowBehaviorChanged || boxSizingChanged || ignoreOverlayScrollbarHidingChanged || cssDirectionChanged || clipAlwaysChanged || heightAutoChanged) {
                  viewportElementCSS[isRTLRight] = _strEmpty;
                  setViewportCSS = function(horizontal) {
                    var scrollbarVars = getScrollbarVars(horizontal);
                    var scrollbarVarsInverted = getScrollbarVars(!horizontal);
                    var xy = scrollbarVars._x_y;
                    var XY = scrollbarVars._X_Y;
                    var strDirection = horizontal ? _strBottom : isRTLLeft;
                    var reset = function() {
                      viewportElementCSS[strDirection] = _strEmpty;
                      _contentBorderSize[scrollbarVarsInverted._w_h] = 0;
                    };
                    if (hasOverflow[xy] && hideOverflow[xy + "s"]) {
                      viewportElementCSS[strOverflow + XY] = _strScroll;
                      if (ignoreOverlayScrollbarHiding || _nativeScrollbarStyling) {
                        reset();
                      } else {
                        viewportElementCSS[strDirection] = -(_nativeScrollbarIsOverlaid[xy] ? _overlayScrollbarDummySize[xy] : _nativeScrollbarSize[xy]);
                        _contentBorderSize[scrollbarVarsInverted._w_h] = _nativeScrollbarIsOverlaid[xy] ? _overlayScrollbarDummySize[scrollbarVarsInverted._x_y] : 0;
                      }
                    } else {
                      viewportElementCSS[strOverflow + XY] = _strEmpty;
                      reset();
                    }
                  };
                  setViewportCSS(true);
                  setViewportCSS(false);
                  if (!_nativeScrollbarStyling && (_viewportSize.h < _nativeScrollbarMinSize.x || _viewportSize.w < _nativeScrollbarMinSize.y) && (hasOverflow.x && hideOverflow.x && !_nativeScrollbarIsOverlaid.x || hasOverflow.y && hideOverflow.y && !_nativeScrollbarIsOverlaid.y)) {
                    viewportElementCSS[_strPaddingMinus + _strTop] = _nativeScrollbarMinSize.x;
                    viewportElementCSS[_strMarginMinus + _strTop] = -_nativeScrollbarMinSize.x;
                    viewportElementCSS[_strPaddingMinus + isRTLRight] = _nativeScrollbarMinSize.y;
                    viewportElementCSS[_strMarginMinus + isRTLRight] = -_nativeScrollbarMinSize.y;
                  } else {
                    viewportElementCSS[_strPaddingMinus + _strTop] = viewportElementCSS[_strMarginMinus + _strTop] = viewportElementCSS[_strPaddingMinus + isRTLRight] = viewportElementCSS[_strMarginMinus + isRTLRight] = _strEmpty;
                  }
                  viewportElementCSS[_strPaddingMinus + isRTLLeft] = viewportElementCSS[_strMarginMinus + isRTLLeft] = _strEmpty;
                  if (hasOverflow.x && hideOverflow.x || hasOverflow.y && hideOverflow.y || hideOverflowForceTextarea) {
                    if (_isTextarea && hideOverflowForceTextarea) {
                      paddingElementCSS[strOverflowX] = paddingElementCSS[strOverflowY] = strHidden;
                    }
                  } else {
                    if (!clipAlways || (overflowBehaviorIsVH.x || overflowBehaviorIsVS.x || overflowBehaviorIsVH.y || overflowBehaviorIsVS.y)) {
                      if (_isTextarea) {
                        paddingElementCSS[strOverflowX] = paddingElementCSS[strOverflowY] = _strEmpty;
                      }
                      viewportElementCSS[strOverflowX] = viewportElementCSS[strOverflowY] = strVisible;
                    }
                  }
                  _paddingElement.css(paddingElementCSS);
                  _viewportElement.css(viewportElementCSS);
                  viewportElementCSS = {};
                  if ((hasOverflow.c || boxSizingChanged || widthAutoChanged || heightAutoChanged) && !(_nativeScrollbarIsOverlaid.x && _nativeScrollbarIsOverlaid.y)) {
                    var elementStyle = _contentElementNative[LEXICON.s];
                    var dump;
                    elementStyle.webkitTransform = "scale(1)";
                    elementStyle.display = "run-in";
                    dump = _contentElementNative[LEXICON.oH];
                    elementStyle.display = _strEmpty;
                    elementStyle.webkitTransform = _strEmpty;
                  }
                }
                contentElementCSS = {};
                if (cssDirectionChanged || widthAutoChanged || heightAutoChanged) {
                  if (_isRTL && widthAuto) {
                    var floatTmp = _contentElement.css(_strFloat);
                    var posLeftWithoutFloat = MATH.round(_contentElement.css(_strFloat, _strEmpty).css(_strLeft, _strEmpty).position().left);
                    _contentElement.css(_strFloat, floatTmp);
                    var posLeftWithFloat = MATH.round(_contentElement.position().left);
                    if (posLeftWithoutFloat !== posLeftWithFloat)
                      contentElementCSS[_strLeft] = posLeftWithoutFloat;
                  } else {
                    contentElementCSS[_strLeft] = _strEmpty;
                  }
                }
                _contentElement.css(contentElementCSS);
                if (_isTextarea && contentSizeChanged) {
                  var textareaInfo = getTextareaInfo();
                  if (textareaInfo) {
                    var textareaRowsChanged = _textareaInfoCache === undefined2 ? true : textareaInfo._rows !== _textareaInfoCache._rows;
                    var cursorRow = textareaInfo._cursorRow;
                    var cursorCol = textareaInfo._cursorColumn;
                    var widestRow = textareaInfo._widestRow;
                    var lastRow = textareaInfo._rows;
                    var lastCol = textareaInfo._columns;
                    var cursorPos = textareaInfo._cursorPosition;
                    var cursorMax = textareaInfo._cursorMax;
                    var cursorIsLastPosition = cursorPos >= cursorMax && _textareaHasFocus;
                    var textareaScrollAmount = {
                      x: !textareaAutoWrapping && (cursorCol === lastCol && cursorRow === widestRow) ? _overflowAmountCache.x : -1,
                      y: (textareaAutoWrapping ? cursorIsLastPosition || textareaRowsChanged && (previousOverflowAmount ? currScroll.y === previousOverflowAmount.y : false) : (cursorIsLastPosition || textareaRowsChanged) && cursorRow === lastRow) ? _overflowAmountCache.y : -1
                    };
                    currScroll.x = textareaScrollAmount.x > -1 ? _isRTL && _normalizeRTLCache && _rtlScrollBehavior.i ? 0 : textareaScrollAmount.x : currScroll.x;
                    currScroll.y = textareaScrollAmount.y > -1 ? textareaScrollAmount.y : currScroll.y;
                  }
                  _textareaInfoCache = textareaInfo;
                }
                if (_isRTL && _rtlScrollBehavior.i && _nativeScrollbarIsOverlaid.y && hasOverflow.x && _normalizeRTLCache)
                  currScroll.x += _contentBorderSize.w || 0;
                if (widthAuto)
                  _hostElement[_strScrollLeft](0);
                if (heightAuto)
                  _hostElement[_strScrollTop](0);
                _viewportElement[_strScrollLeft](currScroll.x)[_strScrollTop](currScroll.y);
                var scrollbarsVisibilityVisible = scrollbarsVisibility === "v";
                var scrollbarsVisibilityHidden = scrollbarsVisibility === "h";
                var scrollbarsVisibilityAuto = scrollbarsVisibility === "a";
                var refreshScrollbarsVisibility = function(showX, showY) {
                  showY = showY === undefined2 ? showX : showY;
                  refreshScrollbarAppearance(true, showX, canScroll.x);
                  refreshScrollbarAppearance(false, showY, canScroll.y);
                };
                addRemoveClass(_hostElement, _classNameHostOverflow, hideOverflow.x || hideOverflow.y);
                addRemoveClass(_hostElement, _classNameHostOverflowX, hideOverflow.x);
                addRemoveClass(_hostElement, _classNameHostOverflowY, hideOverflow.y);
                if (cssDirectionChanged && !_isBody) {
                  addRemoveClass(_hostElement, _classNameHostRTL, _isRTL);
                }
                if (_isBody)
                  addClass(_hostElement, _classNameHostResizeDisabled);
                if (resizeChanged) {
                  addRemoveClass(_hostElement, _classNameHostResizeDisabled, _resizeNone);
                  addRemoveClass(_scrollbarCornerElement, _classNameScrollbarCornerResize, !_resizeNone);
                  addRemoveClass(_scrollbarCornerElement, _classNameScrollbarCornerResizeB, _resizeBoth);
                  addRemoveClass(_scrollbarCornerElement, _classNameScrollbarCornerResizeH, _resizeHorizontal);
                  addRemoveClass(_scrollbarCornerElement, _classNameScrollbarCornerResizeV, _resizeVertical);
                }
                if (scrollbarsVisibilityChanged || overflowBehaviorChanged || hideOverflow.c || hasOverflow.c || ignoreOverlayScrollbarHidingChanged) {
                  if (ignoreOverlayScrollbarHiding) {
                    if (ignoreOverlayScrollbarHidingChanged) {
                      removeClass(_hostElement, _classNameHostScrolling);
                      if (ignoreOverlayScrollbarHiding) {
                        refreshScrollbarsVisibility(false);
                      }
                    }
                  } else if (scrollbarsVisibilityAuto) {
                    refreshScrollbarsVisibility(canScroll.x, canScroll.y);
                  } else if (scrollbarsVisibilityVisible) {
                    refreshScrollbarsVisibility(true);
                  } else if (scrollbarsVisibilityHidden) {
                    refreshScrollbarsVisibility(false);
                  }
                }
                if (scrollbarsAutoHideChanged || ignoreOverlayScrollbarHidingChanged) {
                  setupHostMouseTouchEvents(!_scrollbarsAutoHideLeave && !_scrollbarsAutoHideMove);
                  refreshScrollbarsAutoHide(_scrollbarsAutoHideNever, !_scrollbarsAutoHideNever);
                }
                if (hostSizeChanged || overflowAmount.c || heightAutoChanged || widthAutoChanged || resizeChanged || boxSizingChanged || paddingAbsoluteChanged || ignoreOverlayScrollbarHidingChanged || cssDirectionChanged) {
                  refreshScrollbarHandleLength(true);
                  refreshScrollbarHandleOffset(true);
                  refreshScrollbarHandleLength(false);
                  refreshScrollbarHandleOffset(false);
                }
                if (scrollbarsClickScrollingChanged)
                  refreshScrollbarsInteractive(true, scrollbarsClickScrolling);
                if (scrollbarsDragScrollingChanged)
                  refreshScrollbarsInteractive(false, scrollbarsDragScrolling);
                dispatchCallback("onDirectionChanged", {
                  isRTL: _isRTL,
                  dir: cssDirection
                }, cssDirectionChanged);
                dispatchCallback("onHostSizeChanged", {
                  width: _hostSizeCache.w,
                  height: _hostSizeCache.h
                }, hostSizeChanged);
                dispatchCallback("onContentSizeChanged", {
                  width: _contentScrollSizeCache.w,
                  height: _contentScrollSizeCache.h
                }, contentSizeChanged);
                dispatchCallback("onOverflowChanged", {
                  x: hasOverflow.x,
                  y: hasOverflow.y,
                  xScrollable: hideOverflow.xs,
                  yScrollable: hideOverflow.ys,
                  clipped: hideOverflow.x || hideOverflow.y
                }, hasOverflow.c || hideOverflow.c);
                dispatchCallback("onOverflowAmountChanged", {
                  x: overflowAmount.x,
                  y: overflowAmount.y
                }, overflowAmount.c);
              }
              if (_isBody && _bodyMinSizeCache && (_hasOverflowCache.c || _bodyMinSizeCache.c)) {
                if (!_bodyMinSizeCache.f)
                  bodyMinSizeChanged();
                if (_nativeScrollbarIsOverlaid.y && _hasOverflowCache.x)
                  _contentElement.css(_strMinMinus + _strWidth, _bodyMinSizeCache.w + _overlayScrollbarDummySize.y);
                if (_nativeScrollbarIsOverlaid.x && _hasOverflowCache.y)
                  _contentElement.css(_strMinMinus + _strHeight, _bodyMinSizeCache.h + _overlayScrollbarDummySize.x);
                _bodyMinSizeCache.c = false;
              }
              if (_initialized && changedOptions.updateOnLoad) {
                updateElementsOnLoad();
              }
              dispatchCallback("onUpdated", { forced: force });
            }
            function updateElementsOnLoad() {
              if (!_isTextarea) {
                eachUpdateOnLoad(function(i, updateOnLoadSelector) {
                  _contentElement.find(updateOnLoadSelector).each(function(i2, el) {
                    if (COMPATIBILITY.inA(el, _updateOnLoadElms) < 0) {
                      _updateOnLoadElms.push(el);
                      FRAMEWORK(el).off(_updateOnLoadEventName, updateOnLoadCallback).on(_updateOnLoadEventName, updateOnLoadCallback);
                    }
                  });
                });
              }
            }
            function setOptions(newOptions) {
              var validatedOpts = _pluginsOptions._validate(newOptions, _pluginsOptions._template, true, _currentOptions);
              _currentOptions = extendDeep({}, _currentOptions, validatedOpts._default);
              _currentPreparedOptions = extendDeep({}, _currentPreparedOptions, validatedOpts._prepared);
              return validatedOpts._prepared;
            }
            function setupStructureDOM(destroy) {
              var strParent = "parent";
              var classNameResizeObserverHost = "os-resize-observer-host";
              var classNameTextareaElementFull = _classNameTextareaElement + _strSpace + _classNameTextInherit;
              var textareaClass = _isTextarea ? _strSpace + _classNameTextInherit : _strEmpty;
              var adoptAttrs = _currentPreparedOptions.textarea.inheritedAttrs;
              var adoptAttrsMap = {};
              var applyAdoptedAttrs = function() {
                var applyAdoptedAttrsElm = destroy ? _targetElement : _hostElement;
                each(adoptAttrsMap, function(key, value) {
                  if (type(value) == TYPES.s) {
                    if (key == LEXICON.c)
                      applyAdoptedAttrsElm.addClass(value);
                    else
                      applyAdoptedAttrsElm.attr(key, value);
                  }
                });
              };
              var hostElementClassNames = [
                _classNameHostElement,
                _classNameHostElementForeign,
                _classNameHostTextareaElement,
                _classNameHostResizeDisabled,
                _classNameHostRTL,
                _classNameHostScrollbarHorizontalHidden,
                _classNameHostScrollbarVerticalHidden,
                _classNameHostTransition,
                _classNameHostScrolling,
                _classNameHostOverflow,
                _classNameHostOverflowX,
                _classNameHostOverflowY,
                _classNameThemeNone,
                _classNameTextareaElement,
                _classNameTextInherit,
                _classNameCache
              ].join(_strSpace);
              var hostElementCSS = {};
              _hostElement = _hostElement || (_isTextarea ? _domExists ? _targetElement[strParent]()[strParent]()[strParent]()[strParent]() : FRAMEWORK(generateDiv(_classNameHostTextareaElement)) : _targetElement);
              _contentElement = _contentElement || selectOrGenerateDivByClass(_classNameContentElement + textareaClass);
              _viewportElement = _viewportElement || selectOrGenerateDivByClass(_classNameViewportElement + textareaClass);
              _paddingElement = _paddingElement || selectOrGenerateDivByClass(_classNamePaddingElement + textareaClass);
              _sizeObserverElement = _sizeObserverElement || selectOrGenerateDivByClass(classNameResizeObserverHost);
              _textareaCoverElement = _textareaCoverElement || (_isTextarea ? selectOrGenerateDivByClass(_classNameTextareaCoverElement) : undefined2);
              if (_domExists)
                addClass(_hostElement, _classNameHostElementForeign);
              if (destroy)
                removeClass(_hostElement, hostElementClassNames);
              adoptAttrs = type(adoptAttrs) == TYPES.s ? adoptAttrs.split(_strSpace) : adoptAttrs;
              if (COMPATIBILITY.isA(adoptAttrs) && _isTextarea) {
                each(adoptAttrs, function(i, v) {
                  if (type(v) == TYPES.s) {
                    adoptAttrsMap[v] = destroy ? _hostElement.attr(v) : _targetElement.attr(v);
                  }
                });
              }
              if (!destroy) {
                if (_isTextarea) {
                  if (!_currentPreparedOptions.sizeAutoCapable) {
                    hostElementCSS[_strWidth] = _targetElement.css(_strWidth);
                    hostElementCSS[_strHeight] = _targetElement.css(_strHeight);
                  }
                  if (!_domExists)
                    _targetElement.addClass(_classNameTextInherit).wrap(_hostElement);
                  _hostElement = _targetElement[strParent]().css(hostElementCSS);
                }
                if (!_domExists) {
                  addClass(_targetElement, _isTextarea ? classNameTextareaElementFull : _classNameHostElement);
                  _hostElement.wrapInner(_contentElement).wrapInner(_viewportElement).wrapInner(_paddingElement).prepend(_sizeObserverElement);
                  _contentElement = findFirst(_hostElement, _strDot + _classNameContentElement);
                  _viewportElement = findFirst(_hostElement, _strDot + _classNameViewportElement);
                  _paddingElement = findFirst(_hostElement, _strDot + _classNamePaddingElement);
                  if (_isTextarea) {
                    _contentElement.prepend(_textareaCoverElement);
                    applyAdoptedAttrs();
                  }
                }
                if (_nativeScrollbarStyling)
                  addClass(_viewportElement, _classNameViewportNativeScrollbarsInvisible);
                if (_nativeScrollbarIsOverlaid.x && _nativeScrollbarIsOverlaid.y)
                  addClass(_viewportElement, _classNameViewportNativeScrollbarsOverlaid);
                if (_isBody)
                  addClass(_htmlElement, _classNameHTMLElement);
                _sizeObserverElementNative = _sizeObserverElement[0];
                _hostElementNative = _hostElement[0];
                _paddingElementNative = _paddingElement[0];
                _viewportElementNative = _viewportElement[0];
                _contentElementNative = _contentElement[0];
                updateViewportAttrsFromTarget();
              } else {
                if (_domExists && _initialized) {
                  _sizeObserverElement.children().remove();
                  each([_paddingElement, _viewportElement, _contentElement, _textareaCoverElement], function(i, elm) {
                    if (elm) {
                      removeClass(elm.removeAttr(LEXICON.s), _classNamesDynamicDestroy);
                    }
                  });
                  addClass(_hostElement, _isTextarea ? _classNameHostTextareaElement : _classNameHostElement);
                } else {
                  remove(_sizeObserverElement);
                  _contentElement.contents().unwrap().unwrap().unwrap();
                  if (_isTextarea) {
                    _targetElement.unwrap();
                    remove(_hostElement);
                    remove(_textareaCoverElement);
                    applyAdoptedAttrs();
                  }
                }
                if (_isTextarea)
                  _targetElement.removeAttr(LEXICON.s);
                if (_isBody)
                  removeClass(_htmlElement, _classNameHTMLElement);
              }
            }
            function setupStructureEvents() {
              var textareaKeyDownRestrictedKeyCodes = [
                112,
                113,
                114,
                115,
                116,
                117,
                118,
                119,
                120,
                121,
                123,
                33,
                34,
                37,
                38,
                39,
                40,
                16,
                17,
                18,
                19,
                20,
                144
              ];
              var textareaKeyDownKeyCodesList = [];
              var textareaUpdateIntervalID;
              var scrollStopTimeoutId;
              var scrollStopDelay = 175;
              var strFocus = "focus";
              function updateTextarea(doClearInterval) {
                textareaUpdate();
                _base.update(_strAuto);
                if (doClearInterval && _autoUpdateRecommended)
                  clearInterval(textareaUpdateIntervalID);
              }
              function textareaOnScroll(event) {
                _targetElement[_strScrollLeft](_rtlScrollBehavior.i && _normalizeRTLCache ? 9999999 : 0);
                _targetElement[_strScrollTop](0);
                COMPATIBILITY.prvD(event);
                COMPATIBILITY.stpP(event);
                return false;
              }
              function textareaOnDrop(event) {
                setTimeout(function() {
                  if (!_destroyed)
                    updateTextarea();
                }, 50);
              }
              function textareaOnFocus() {
                _textareaHasFocus = true;
                addClass(_hostElement, strFocus);
              }
              function textareaOnFocusout() {
                _textareaHasFocus = false;
                textareaKeyDownKeyCodesList = [];
                removeClass(_hostElement, strFocus);
                updateTextarea(true);
              }
              function textareaOnKeyDown(event) {
                var keyCode = event.keyCode;
                if (inArray(keyCode, textareaKeyDownRestrictedKeyCodes) < 0) {
                  if (!textareaKeyDownKeyCodesList[LEXICON.l]) {
                    updateTextarea();
                    textareaUpdateIntervalID = setInterval(updateTextarea, 1e3 / 60);
                  }
                  if (inArray(keyCode, textareaKeyDownKeyCodesList) < 0)
                    textareaKeyDownKeyCodesList.push(keyCode);
                }
              }
              function textareaOnKeyUp(event) {
                var keyCode = event.keyCode;
                var index3 = inArray(keyCode, textareaKeyDownKeyCodesList);
                if (inArray(keyCode, textareaKeyDownRestrictedKeyCodes) < 0) {
                  if (index3 > -1)
                    textareaKeyDownKeyCodesList.splice(index3, 1);
                  if (!textareaKeyDownKeyCodesList[LEXICON.l])
                    updateTextarea(true);
                }
              }
              function contentOnTransitionEnd(event) {
                if (_autoUpdateCache === true)
                  return;
                event = event.originalEvent || event;
                if (isSizeAffectingCSSProperty(event.propertyName))
                  _base.update(_strAuto);
              }
              function viewportOnScroll(event) {
                if (!_sleeping) {
                  if (scrollStopTimeoutId !== undefined2)
                    clearTimeout(scrollStopTimeoutId);
                  else {
                    if (_scrollbarsAutoHideScroll || _scrollbarsAutoHideMove)
                      refreshScrollbarsAutoHide(true);
                    if (!nativeOverlayScrollbarsAreActive())
                      addClass(_hostElement, _classNameHostScrolling);
                    dispatchCallback("onScrollStart", event);
                  }
                  if (!_scrollbarsHandlesDefineScrollPos) {
                    refreshScrollbarHandleOffset(true);
                    refreshScrollbarHandleOffset(false);
                  }
                  dispatchCallback("onScroll", event);
                  scrollStopTimeoutId = setTimeout(function() {
                    if (!_destroyed) {
                      clearTimeout(scrollStopTimeoutId);
                      scrollStopTimeoutId = undefined2;
                      if (_scrollbarsAutoHideScroll || _scrollbarsAutoHideMove)
                        refreshScrollbarsAutoHide(false);
                      if (!nativeOverlayScrollbarsAreActive())
                        removeClass(_hostElement, _classNameHostScrolling);
                      dispatchCallback("onScrollStop", event);
                    }
                  }, scrollStopDelay);
                }
              }
              if (_isTextarea) {
                if (_msieVersion > 9 || !_autoUpdateRecommended) {
                  addDestroyEventListener(_targetElement, "input", updateTextarea);
                } else {
                  addDestroyEventListener(
                    _targetElement,
                    [_strKeyDownEvent, _strKeyUpEvent],
                    [textareaOnKeyDown, textareaOnKeyUp]
                  );
                }
                addDestroyEventListener(
                  _targetElement,
                  [_strScroll, "drop", strFocus, strFocus + "out"],
                  [textareaOnScroll, textareaOnDrop, textareaOnFocus, textareaOnFocusout]
                );
              } else {
                addDestroyEventListener(_contentElement, _strTransitionEndEvent, contentOnTransitionEnd);
              }
              addDestroyEventListener(_viewportElement, _strScroll, viewportOnScroll, true);
            }
            function setupScrollbarsDOM(destroy) {
              var selectOrGenerateScrollbarDOM = function(isHorizontal) {
                var scrollbarClassName = isHorizontal ? _classNameScrollbarHorizontal : _classNameScrollbarVertical;
                var scrollbar = selectOrGenerateDivByClass(_classNameScrollbar + _strSpace + scrollbarClassName, true);
                var track = selectOrGenerateDivByClass(_classNameScrollbarTrack, scrollbar);
                var handle = selectOrGenerateDivByClass(_classNameScrollbarHandle, scrollbar);
                if (!_domExists && !destroy) {
                  scrollbar.append(track);
                  track.append(handle);
                }
                return {
                  _scrollbar: scrollbar,
                  _track: track,
                  _handle: handle
                };
              };
              function resetScrollbarDOM(isHorizontal) {
                var scrollbarVars = getScrollbarVars(isHorizontal);
                var scrollbar = scrollbarVars._scrollbar;
                var track = scrollbarVars._track;
                var handle = scrollbarVars._handle;
                if (_domExists && _initialized) {
                  each([scrollbar, track, handle], function(i, elm) {
                    removeClass(elm.removeAttr(LEXICON.s), _classNamesDynamicDestroy);
                  });
                } else {
                  remove(scrollbar || selectOrGenerateScrollbarDOM(isHorizontal)._scrollbar);
                }
              }
              var horizontalElements;
              var verticalElements;
              if (!destroy) {
                horizontalElements = selectOrGenerateScrollbarDOM(true);
                verticalElements = selectOrGenerateScrollbarDOM();
                _scrollbarHorizontalElement = horizontalElements._scrollbar;
                _scrollbarHorizontalTrackElement = horizontalElements._track;
                _scrollbarHorizontalHandleElement = horizontalElements._handle;
                _scrollbarVerticalElement = verticalElements._scrollbar;
                _scrollbarVerticalTrackElement = verticalElements._track;
                _scrollbarVerticalHandleElement = verticalElements._handle;
                if (!_domExists) {
                  _paddingElement.after(_scrollbarVerticalElement);
                  _paddingElement.after(_scrollbarHorizontalElement);
                }
              } else {
                resetScrollbarDOM(true);
                resetScrollbarDOM();
              }
            }
            function setupScrollbarEvents(isHorizontal) {
              var scrollbarVars = getScrollbarVars(isHorizontal);
              var scrollbarVarsInfo = scrollbarVars._info;
              var insideIFrame = _windowElementNative.top !== _windowElementNative;
              var xy = scrollbarVars._x_y;
              var XY = scrollbarVars._X_Y;
              var scroll = _strScroll + scrollbarVars._Left_Top;
              var strActive = "active";
              var strSnapHandle = "snapHandle";
              var strClickEvent = "click";
              var scrollDurationFactor = 1;
              var increaseDecreaseScrollAmountKeyCodes = [16, 17];
              var trackTimeout;
              var mouseDownScroll;
              var mouseDownOffset;
              var mouseDownInvertedScale;
              function getPointerPosition(event) {
                return _msieVersion && insideIFrame ? event["screen" + XY] : COMPATIBILITY.page(event)[xy];
              }
              function getPreparedScrollbarsOption(name) {
                return _currentPreparedOptions.scrollbars[name];
              }
              function increaseTrackScrollAmount() {
                scrollDurationFactor = 0.5;
              }
              function decreaseTrackScrollAmount() {
                scrollDurationFactor = 1;
              }
              function stopClickEventPropagation(event) {
                COMPATIBILITY.stpP(event);
              }
              function documentKeyDown(event) {
                if (inArray(event.keyCode, increaseDecreaseScrollAmountKeyCodes) > -1)
                  increaseTrackScrollAmount();
              }
              function documentKeyUp(event) {
                if (inArray(event.keyCode, increaseDecreaseScrollAmountKeyCodes) > -1)
                  decreaseTrackScrollAmount();
              }
              function onMouseTouchDownContinue(event) {
                var originalEvent = event.originalEvent || event;
                var isTouchEvent = originalEvent.touches !== undefined2;
                return _sleeping || _destroyed || nativeOverlayScrollbarsAreActive() || !_scrollbarsDragScrollingCache || isTouchEvent && !getPreparedScrollbarsOption("touchSupport") ? false : COMPATIBILITY.mBtn(event) === 1 || isTouchEvent;
              }
              function documentDragMove(event) {
                if (onMouseTouchDownContinue(event)) {
                  var trackLength = scrollbarVarsInfo._trackLength;
                  var handleLength = scrollbarVarsInfo._handleLength;
                  var scrollRange = scrollbarVarsInfo._maxScroll;
                  var scrollRaw = (getPointerPosition(event) - mouseDownOffset) * mouseDownInvertedScale;
                  var scrollDeltaPercent = scrollRaw / (trackLength - handleLength);
                  var scrollDelta = scrollRange * scrollDeltaPercent;
                  scrollDelta = isFinite(scrollDelta) ? scrollDelta : 0;
                  if (_isRTL && isHorizontal && !_rtlScrollBehavior.i)
                    scrollDelta *= -1;
                  _viewportElement[scroll](MATH.round(mouseDownScroll + scrollDelta));
                  if (_scrollbarsHandlesDefineScrollPos)
                    refreshScrollbarHandleOffset(isHorizontal, mouseDownScroll + scrollDelta);
                  if (!_supportPassiveEvents)
                    COMPATIBILITY.prvD(event);
                } else
                  documentMouseTouchUp(event);
              }
              function documentMouseTouchUp(event) {
                event = event || event.originalEvent;
                setupResponsiveEventListener(
                  _documentElement,
                  [_strMouseTouchMoveEvent, _strMouseTouchUpEvent, _strKeyDownEvent, _strKeyUpEvent, _strSelectStartEvent],
                  [documentDragMove, documentMouseTouchUp, documentKeyDown, documentKeyUp, documentOnSelectStart],
                  true
                );
                COMPATIBILITY.rAF()(function() {
                  setupResponsiveEventListener(_documentElement, strClickEvent, stopClickEventPropagation, true, { _capture: true });
                });
                if (_scrollbarsHandlesDefineScrollPos)
                  refreshScrollbarHandleOffset(isHorizontal, true);
                _scrollbarsHandlesDefineScrollPos = false;
                removeClass(_bodyElement, _classNameDragging);
                removeClass(scrollbarVars._handle, strActive);
                removeClass(scrollbarVars._track, strActive);
                removeClass(scrollbarVars._scrollbar, strActive);
                mouseDownScroll = undefined2;
                mouseDownOffset = undefined2;
                mouseDownInvertedScale = 1;
                decreaseTrackScrollAmount();
                if (trackTimeout !== undefined2) {
                  _base.scrollStop();
                  clearTimeout(trackTimeout);
                  trackTimeout = undefined2;
                }
                if (event) {
                  var rect = _hostElementNative[LEXICON.bCR]();
                  var mouseInsideHost = event.clientX >= rect.left && event.clientX <= rect.right && event.clientY >= rect.top && event.clientY <= rect.bottom;
                  if (!mouseInsideHost)
                    hostOnMouseLeave();
                  if (_scrollbarsAutoHideScroll || _scrollbarsAutoHideMove)
                    refreshScrollbarsAutoHide(false);
                }
              }
              function onHandleMouseTouchDown(event) {
                if (onMouseTouchDownContinue(event))
                  onHandleMouseTouchDownAction(event);
              }
              function onHandleMouseTouchDownAction(event) {
                mouseDownScroll = _viewportElement[scroll]();
                mouseDownScroll = isNaN(mouseDownScroll) ? 0 : mouseDownScroll;
                if (_isRTL && isHorizontal && !_rtlScrollBehavior.n || !_isRTL)
                  mouseDownScroll = mouseDownScroll < 0 ? 0 : mouseDownScroll;
                mouseDownInvertedScale = getHostElementInvertedScale()[xy];
                mouseDownOffset = getPointerPosition(event);
                _scrollbarsHandlesDefineScrollPos = !getPreparedScrollbarsOption(strSnapHandle);
                addClass(_bodyElement, _classNameDragging);
                addClass(scrollbarVars._handle, strActive);
                addClass(scrollbarVars._scrollbar, strActive);
                setupResponsiveEventListener(
                  _documentElement,
                  [_strMouseTouchMoveEvent, _strMouseTouchUpEvent, _strSelectStartEvent],
                  [documentDragMove, documentMouseTouchUp, documentOnSelectStart]
                );
                COMPATIBILITY.rAF()(function() {
                  setupResponsiveEventListener(_documentElement, strClickEvent, stopClickEventPropagation, false, { _capture: true });
                });
                if (_msieVersion || !_documentMixed)
                  COMPATIBILITY.prvD(event);
                COMPATIBILITY.stpP(event);
              }
              function onTrackMouseTouchDown(event) {
                if (onMouseTouchDownContinue(event)) {
                  var handleToViewportRatio = scrollbarVars._info._handleLength / Math.round(MATH.min(1, _viewportSize[scrollbarVars._w_h] / _contentScrollSizeCache[scrollbarVars._w_h]) * scrollbarVars._info._trackLength);
                  var scrollDistance = MATH.round(_viewportSize[scrollbarVars._w_h] * handleToViewportRatio);
                  var scrollBaseDuration = 270 * handleToViewportRatio;
                  var scrollFirstIterationDelay = 400 * handleToViewportRatio;
                  var trackOffset = scrollbarVars._track.offset()[scrollbarVars._left_top];
                  var ctrlKey = event.ctrlKey;
                  var instantScroll = event.shiftKey;
                  var instantScrollTransition = instantScroll && ctrlKey;
                  var isFirstIteration = true;
                  var easing = "linear";
                  var decreaseScroll;
                  var finishedCondition;
                  var scrollActionFinsished = function(transition) {
                    if (_scrollbarsHandlesDefineScrollPos)
                      refreshScrollbarHandleOffset(isHorizontal, transition);
                  };
                  var scrollActionInstantFinished = function() {
                    scrollActionFinsished();
                    onHandleMouseTouchDownAction(event);
                  };
                  var scrollAction = function() {
                    if (!_destroyed) {
                      var mouseOffset = (mouseDownOffset - trackOffset) * mouseDownInvertedScale;
                      var handleOffset = scrollbarVarsInfo._handleOffset;
                      var trackLength = scrollbarVarsInfo._trackLength;
                      var handleLength = scrollbarVarsInfo._handleLength;
                      var scrollRange = scrollbarVarsInfo._maxScroll;
                      var currScroll = scrollbarVarsInfo._currentScroll;
                      var scrollDuration = scrollBaseDuration * scrollDurationFactor;
                      var timeoutDelay = isFirstIteration ? MATH.max(scrollFirstIterationDelay, scrollDuration) : scrollDuration;
                      var instantScrollPosition = scrollRange * ((mouseOffset - handleLength / 2) / (trackLength - handleLength));
                      var rtlIsNormal = _isRTL && isHorizontal && (!_rtlScrollBehavior.i && !_rtlScrollBehavior.n || _normalizeRTLCache);
                      var decreaseScrollCondition = rtlIsNormal ? handleOffset < mouseOffset : handleOffset > mouseOffset;
                      var scrollObj = {};
                      var animationObj = {
                        easing,
                        step: function(now) {
                          if (_scrollbarsHandlesDefineScrollPos) {
                            _viewportElement[scroll](now);
                            refreshScrollbarHandleOffset(isHorizontal, now);
                          }
                        }
                      };
                      instantScrollPosition = isFinite(instantScrollPosition) ? instantScrollPosition : 0;
                      instantScrollPosition = _isRTL && isHorizontal && !_rtlScrollBehavior.i ? scrollRange - instantScrollPosition : instantScrollPosition;
                      if (instantScroll) {
                        _viewportElement[scroll](instantScrollPosition);
                        if (instantScrollTransition) {
                          instantScrollPosition = _viewportElement[scroll]();
                          _viewportElement[scroll](currScroll);
                          instantScrollPosition = rtlIsNormal && _rtlScrollBehavior.i ? scrollRange - instantScrollPosition : instantScrollPosition;
                          instantScrollPosition = rtlIsNormal && _rtlScrollBehavior.n ? -instantScrollPosition : instantScrollPosition;
                          scrollObj[xy] = instantScrollPosition;
                          _base.scroll(scrollObj, extendDeep(animationObj, {
                            duration: 130,
                            complete: scrollActionInstantFinished
                          }));
                        } else
                          scrollActionInstantFinished();
                      } else {
                        decreaseScroll = isFirstIteration ? decreaseScrollCondition : decreaseScroll;
                        finishedCondition = rtlIsNormal ? decreaseScroll ? handleOffset + handleLength >= mouseOffset : handleOffset <= mouseOffset : decreaseScroll ? handleOffset <= mouseOffset : handleOffset + handleLength >= mouseOffset;
                        if (finishedCondition) {
                          clearTimeout(trackTimeout);
                          _base.scrollStop();
                          trackTimeout = undefined2;
                          scrollActionFinsished(true);
                        } else {
                          trackTimeout = setTimeout(scrollAction, timeoutDelay);
                          scrollObj[xy] = (decreaseScroll ? "-=" : "+=") + scrollDistance;
                          _base.scroll(scrollObj, extendDeep(animationObj, {
                            duration: scrollDuration
                          }));
                        }
                        isFirstIteration = false;
                      }
                    }
                  };
                  if (ctrlKey)
                    increaseTrackScrollAmount();
                  mouseDownInvertedScale = getHostElementInvertedScale()[xy];
                  mouseDownOffset = COMPATIBILITY.page(event)[xy];
                  _scrollbarsHandlesDefineScrollPos = !getPreparedScrollbarsOption(strSnapHandle);
                  addClass(_bodyElement, _classNameDragging);
                  addClass(scrollbarVars._track, strActive);
                  addClass(scrollbarVars._scrollbar, strActive);
                  setupResponsiveEventListener(
                    _documentElement,
                    [_strMouseTouchUpEvent, _strKeyDownEvent, _strKeyUpEvent, _strSelectStartEvent],
                    [documentMouseTouchUp, documentKeyDown, documentKeyUp, documentOnSelectStart]
                  );
                  scrollAction();
                  COMPATIBILITY.prvD(event);
                  COMPATIBILITY.stpP(event);
                }
              }
              function onTrackMouseTouchEnter(event) {
                _scrollbarsHandleHovered = true;
                if (_scrollbarsAutoHideScroll || _scrollbarsAutoHideMove)
                  refreshScrollbarsAutoHide(true);
              }
              function onTrackMouseTouchLeave(event) {
                _scrollbarsHandleHovered = false;
                if (_scrollbarsAutoHideScroll || _scrollbarsAutoHideMove)
                  refreshScrollbarsAutoHide(false);
              }
              function onScrollbarMouseTouchDown(event) {
                COMPATIBILITY.stpP(event);
              }
              addDestroyEventListener(
                scrollbarVars._handle,
                _strMouseTouchDownEvent,
                onHandleMouseTouchDown
              );
              addDestroyEventListener(
                scrollbarVars._track,
                [_strMouseTouchDownEvent, _strMouseEnter, _strMouseLeave],
                [onTrackMouseTouchDown, onTrackMouseTouchEnter, onTrackMouseTouchLeave]
              );
              addDestroyEventListener(
                scrollbarVars._scrollbar,
                _strMouseTouchDownEvent,
                onScrollbarMouseTouchDown
              );
              if (_supportTransition) {
                addDestroyEventListener(scrollbarVars._scrollbar, _strTransitionEndEvent, function(event) {
                  if (event.target !== scrollbarVars._scrollbar[0])
                    return;
                  refreshScrollbarHandleLength(isHorizontal);
                  refreshScrollbarHandleOffset(isHorizontal);
                });
              }
            }
            function refreshScrollbarAppearance(isHorizontal, shallBeVisible, canScroll) {
              var scrollbarHiddenClassName = isHorizontal ? _classNameHostScrollbarHorizontalHidden : _classNameHostScrollbarVerticalHidden;
              var scrollbarElement = isHorizontal ? _scrollbarHorizontalElement : _scrollbarVerticalElement;
              addRemoveClass(_hostElement, scrollbarHiddenClassName, !shallBeVisible);
              addRemoveClass(scrollbarElement, _classNameScrollbarUnusable, !canScroll);
            }
            function refreshScrollbarsAutoHide(shallBeVisible, delayfree) {
              clearTimeout(_scrollbarsAutoHideTimeoutId);
              if (shallBeVisible) {
                removeClass(_scrollbarHorizontalElement, _classNameScrollbarAutoHidden);
                removeClass(_scrollbarVerticalElement, _classNameScrollbarAutoHidden);
              } else {
                var anyActive;
                var strActive = "active";
                var hide2 = function() {
                  if (!_scrollbarsHandleHovered && !_destroyed) {
                    anyActive = _scrollbarHorizontalHandleElement.hasClass(strActive) || _scrollbarVerticalHandleElement.hasClass(strActive);
                    if (!anyActive && (_scrollbarsAutoHideScroll || _scrollbarsAutoHideMove || _scrollbarsAutoHideLeave))
                      addClass(_scrollbarHorizontalElement, _classNameScrollbarAutoHidden);
                    if (!anyActive && (_scrollbarsAutoHideScroll || _scrollbarsAutoHideMove || _scrollbarsAutoHideLeave))
                      addClass(_scrollbarVerticalElement, _classNameScrollbarAutoHidden);
                  }
                };
                if (_scrollbarsAutoHideDelay > 0 && delayfree !== true)
                  _scrollbarsAutoHideTimeoutId = setTimeout(hide2, _scrollbarsAutoHideDelay);
                else
                  hide2();
              }
            }
            function refreshScrollbarHandleLength(isHorizontal) {
              var handleCSS = {};
              var scrollbarVars = getScrollbarVars(isHorizontal);
              var scrollbarVarsInfo = scrollbarVars._info;
              var digit = 1e6;
              var handleRatio = MATH.min(1, _viewportSize[scrollbarVars._w_h] / _contentScrollSizeCache[scrollbarVars._w_h]);
              handleCSS[scrollbarVars._width_height] = MATH.floor(handleRatio * 100 * digit) / digit + "%";
              if (!nativeOverlayScrollbarsAreActive())
                scrollbarVars._handle.css(handleCSS);
              scrollbarVarsInfo._handleLength = scrollbarVars._handle[0]["offset" + scrollbarVars._Width_Height];
              scrollbarVarsInfo._handleLengthRatio = handleRatio;
            }
            function refreshScrollbarHandleOffset(isHorizontal, scrollOrTransition) {
              var transition = type(scrollOrTransition) == TYPES.b;
              var transitionDuration = 250;
              var isRTLisHorizontal = _isRTL && isHorizontal;
              var scrollbarVars = getScrollbarVars(isHorizontal);
              var scrollbarVarsInfo = scrollbarVars._info;
              var strTranslateBrace = "translate(";
              var strTransform = VENDORS._cssProperty("transform");
              var strTransition = VENDORS._cssProperty("transition");
              var nativeScroll = isHorizontal ? _viewportElement[_strScrollLeft]() : _viewportElement[_strScrollTop]();
              var currentScroll = scrollOrTransition === undefined2 || transition ? nativeScroll : scrollOrTransition;
              var handleLength = scrollbarVarsInfo._handleLength;
              var trackLength = scrollbarVars._track[0]["offset" + scrollbarVars._Width_Height];
              var handleTrackDiff = trackLength - handleLength;
              var handleCSS = {};
              var transformOffset;
              var translateValue;
              var maxScroll = (_viewportElementNative[_strScroll + scrollbarVars._Width_Height] - _viewportElementNative["client" + scrollbarVars._Width_Height]) * (_rtlScrollBehavior.n && isRTLisHorizontal ? -1 : 1);
              var getScrollRatio = function(base) {
                return isNaN(base / maxScroll) ? 0 : MATH.max(0, MATH.min(1, base / maxScroll));
              };
              var getHandleOffset = function(scrollRatio2) {
                var offset2 = handleTrackDiff * scrollRatio2;
                offset2 = isNaN(offset2) ? 0 : offset2;
                offset2 = isRTLisHorizontal && !_rtlScrollBehavior.i ? trackLength - handleLength - offset2 : offset2;
                offset2 = MATH.max(0, offset2);
                return offset2;
              };
              var scrollRatio = getScrollRatio(nativeScroll);
              var unsnappedScrollRatio = getScrollRatio(currentScroll);
              var handleOffset = getHandleOffset(unsnappedScrollRatio);
              var snappedHandleOffset = getHandleOffset(scrollRatio);
              scrollbarVarsInfo._maxScroll = maxScroll;
              scrollbarVarsInfo._currentScroll = nativeScroll;
              scrollbarVarsInfo._currentScrollRatio = scrollRatio;
              if (_supportTransform) {
                transformOffset = isRTLisHorizontal ? -(trackLength - handleLength - handleOffset) : handleOffset;
                translateValue = isHorizontal ? strTranslateBrace + transformOffset + "px, 0)" : strTranslateBrace + "0, " + transformOffset + "px)";
                handleCSS[strTransform] = translateValue;
                if (_supportTransition)
                  handleCSS[strTransition] = transition && MATH.abs(handleOffset - scrollbarVarsInfo._handleOffset) > 1 ? getCSSTransitionString(scrollbarVars._handle) + ", " + (strTransform + _strSpace + transitionDuration + "ms") : _strEmpty;
              } else
                handleCSS[scrollbarVars._left_top] = handleOffset;
              if (!nativeOverlayScrollbarsAreActive()) {
                scrollbarVars._handle.css(handleCSS);
                if (_supportTransform && _supportTransition && transition) {
                  scrollbarVars._handle.one(_strTransitionEndEvent, function() {
                    if (!_destroyed)
                      scrollbarVars._handle.css(strTransition, _strEmpty);
                  });
                }
              }
              scrollbarVarsInfo._handleOffset = handleOffset;
              scrollbarVarsInfo._snappedHandleOffset = snappedHandleOffset;
              scrollbarVarsInfo._trackLength = trackLength;
            }
            function refreshScrollbarsInteractive(isTrack, value) {
              var action = value ? "removeClass" : "addClass";
              var element1 = isTrack ? _scrollbarHorizontalTrackElement : _scrollbarHorizontalHandleElement;
              var element2 = isTrack ? _scrollbarVerticalTrackElement : _scrollbarVerticalHandleElement;
              var className = isTrack ? _classNameScrollbarTrackOff : _classNameScrollbarHandleOff;
              element1[action](className);
              element2[action](className);
            }
            function getScrollbarVars(isHorizontal) {
              return {
                _width_height: isHorizontal ? _strWidth : _strHeight,
                _Width_Height: isHorizontal ? "Width" : "Height",
                _left_top: isHorizontal ? _strLeft : _strTop,
                _Left_Top: isHorizontal ? "Left" : "Top",
                _x_y: isHorizontal ? _strX : _strY,
                _X_Y: isHorizontal ? "X" : "Y",
                _w_h: isHorizontal ? "w" : "h",
                _l_t: isHorizontal ? "l" : "t",
                _track: isHorizontal ? _scrollbarHorizontalTrackElement : _scrollbarVerticalTrackElement,
                _handle: isHorizontal ? _scrollbarHorizontalHandleElement : _scrollbarVerticalHandleElement,
                _scrollbar: isHorizontal ? _scrollbarHorizontalElement : _scrollbarVerticalElement,
                _info: isHorizontal ? _scrollHorizontalInfo : _scrollVerticalInfo
              };
            }
            function setupScrollbarCornerDOM(destroy) {
              _scrollbarCornerElement = _scrollbarCornerElement || selectOrGenerateDivByClass(_classNameScrollbarCorner, true);
              if (!destroy) {
                if (!_domExists) {
                  _hostElement.append(_scrollbarCornerElement);
                }
              } else {
                if (_domExists && _initialized) {
                  removeClass(_scrollbarCornerElement.removeAttr(LEXICON.s), _classNamesDynamicDestroy);
                } else {
                  remove(_scrollbarCornerElement);
                }
              }
            }
            function setupScrollbarCornerEvents() {
              var insideIFrame = _windowElementNative.top !== _windowElementNative;
              var mouseDownPosition = {};
              var mouseDownSize = {};
              var mouseDownInvertedScale = {};
              var reconnectMutationObserver;
              function documentDragMove(event) {
                if (onMouseTouchDownContinue(event)) {
                  var pageOffset = getCoordinates(event);
                  var hostElementCSS = {};
                  if (_resizeHorizontal || _resizeBoth)
                    hostElementCSS[_strWidth] = mouseDownSize.w + (pageOffset.x - mouseDownPosition.x) * mouseDownInvertedScale.x;
                  if (_resizeVertical || _resizeBoth)
                    hostElementCSS[_strHeight] = mouseDownSize.h + (pageOffset.y - mouseDownPosition.y) * mouseDownInvertedScale.y;
                  _hostElement.css(hostElementCSS);
                  COMPATIBILITY.stpP(event);
                } else {
                  documentMouseTouchUp(event);
                }
              }
              function documentMouseTouchUp(event) {
                var eventIsTrusted = event !== undefined2;
                setupResponsiveEventListener(
                  _documentElement,
                  [_strSelectStartEvent, _strMouseTouchMoveEvent, _strMouseTouchUpEvent],
                  [documentOnSelectStart, documentDragMove, documentMouseTouchUp],
                  true
                );
                removeClass(_bodyElement, _classNameDragging);
                if (_scrollbarCornerElement.releaseCapture)
                  _scrollbarCornerElement.releaseCapture();
                if (eventIsTrusted) {
                  if (reconnectMutationObserver)
                    connectMutationObservers();
                  _base.update(_strAuto);
                }
                reconnectMutationObserver = false;
              }
              function onMouseTouchDownContinue(event) {
                var originalEvent = event.originalEvent || event;
                var isTouchEvent = originalEvent.touches !== undefined2;
                return _sleeping || _destroyed ? false : COMPATIBILITY.mBtn(event) === 1 || isTouchEvent;
              }
              function getCoordinates(event) {
                return _msieVersion && insideIFrame ? { x: event.screenX, y: event.screenY } : COMPATIBILITY.page(event);
              }
              addDestroyEventListener(_scrollbarCornerElement, _strMouseTouchDownEvent, function(event) {
                if (onMouseTouchDownContinue(event) && !_resizeNone) {
                  if (_mutationObserversConnected) {
                    reconnectMutationObserver = true;
                    disconnectMutationObservers();
                  }
                  mouseDownPosition = getCoordinates(event);
                  mouseDownSize.w = _hostElementNative[LEXICON.oW] - (!_isBorderBox ? _paddingX : 0);
                  mouseDownSize.h = _hostElementNative[LEXICON.oH] - (!_isBorderBox ? _paddingY : 0);
                  mouseDownInvertedScale = getHostElementInvertedScale();
                  setupResponsiveEventListener(
                    _documentElement,
                    [_strSelectStartEvent, _strMouseTouchMoveEvent, _strMouseTouchUpEvent],
                    [documentOnSelectStart, documentDragMove, documentMouseTouchUp]
                  );
                  addClass(_bodyElement, _classNameDragging);
                  if (_scrollbarCornerElement.setCapture)
                    _scrollbarCornerElement.setCapture();
                  COMPATIBILITY.prvD(event);
                  COMPATIBILITY.stpP(event);
                }
              });
            }
            function dispatchCallback(name, args, dependent) {
              if (dependent === false)
                return;
              if (_initialized) {
                var callback = _currentPreparedOptions.callbacks[name];
                var extensionOnName = name;
                var ext;
                if (extensionOnName.substr(0, 2) === "on")
                  extensionOnName = extensionOnName.substr(2, 1).toLowerCase() + extensionOnName.substr(3);
                if (type(callback) == TYPES.f)
                  callback.call(_base, args);
                each(_extensions, function() {
                  ext = this;
                  if (type(ext.on) == TYPES.f)
                    ext.on(extensionOnName, args);
                });
              } else if (!_destroyed)
                _callbacksInitQeueue.push({ n: name, a: args });
            }
            function setTopRightBottomLeft(targetCSSObject, prefix, values) {
              prefix = prefix || _strEmpty;
              values = values || [_strEmpty, _strEmpty, _strEmpty, _strEmpty];
              targetCSSObject[prefix + _strTop] = values[0];
              targetCSSObject[prefix + _strRight] = values[1];
              targetCSSObject[prefix + _strBottom] = values[2];
              targetCSSObject[prefix + _strLeft] = values[3];
            }
            function getTopRightBottomLeftHost(prefix, suffix, zeroX, zeroY) {
              suffix = suffix || _strEmpty;
              prefix = prefix || _strEmpty;
              return {
                t: zeroY ? 0 : parseToZeroOrNumber(_hostElement.css(prefix + _strTop + suffix)),
                r: zeroX ? 0 : parseToZeroOrNumber(_hostElement.css(prefix + _strRight + suffix)),
                b: zeroY ? 0 : parseToZeroOrNumber(_hostElement.css(prefix + _strBottom + suffix)),
                l: zeroX ? 0 : parseToZeroOrNumber(_hostElement.css(prefix + _strLeft + suffix))
              };
            }
            function getCSSTransitionString(element) {
              var transitionStr = VENDORS._cssProperty("transition");
              var assembledValue = element.css(transitionStr);
              if (assembledValue)
                return assembledValue;
              var regExpString = "\\s*(([^,(]+(\\(.+?\\))?)+)[\\s,]*";
              var regExpMain = new RegExp(regExpString);
              var regExpValidate = new RegExp("^(" + regExpString + ")+$");
              var properties = "property duration timing-function delay".split(" ");
              var result = [];
              var strResult;
              var valueArray;
              var i = 0;
              var j;
              var splitCssStyleByComma = function(str) {
                strResult = [];
                if (!str.match(regExpValidate))
                  return str;
                while (str.match(regExpMain)) {
                  strResult.push(RegExp.$1);
                  str = str.replace(regExpMain, _strEmpty);
                }
                return strResult;
              };
              for (; i < properties[LEXICON.l]; i++) {
                valueArray = splitCssStyleByComma(element.css(transitionStr + "-" + properties[i]));
                for (j = 0; j < valueArray[LEXICON.l]; j++)
                  result[j] = (result[j] ? result[j] + _strSpace : _strEmpty) + valueArray[j];
              }
              return result.join(", ");
            }
            function createHostClassNameRegExp(withCurrClassNameOption, withOldClassNameOption) {
              var i;
              var split;
              var appendix;
              var appendClasses = function(classes, condition) {
                appendix = "";
                if (condition && typeof classes == TYPES.s) {
                  split = classes.split(_strSpace);
                  for (i = 0; i < split[LEXICON.l]; i++)
                    appendix += "|" + split[i] + "$";
                }
                return appendix;
              };
              return new RegExp(
                "(^" + _classNameHostElement + "([-_].+|)$)" + appendClasses(_classNameCache, withCurrClassNameOption) + appendClasses(_oldClassName, withOldClassNameOption),
                "g"
              );
            }
            function getHostElementInvertedScale() {
              var rect = _paddingElementNative[LEXICON.bCR]();
              return {
                x: _supportTransform ? 1 / (MATH.round(rect.width) / _paddingElementNative[LEXICON.oW]) || 1 : 1,
                y: _supportTransform ? 1 / (MATH.round(rect.height) / _paddingElementNative[LEXICON.oH]) || 1 : 1
              };
            }
            function isHTMLElement2(o) {
              var strOwnerDocument = "ownerDocument";
              var strHTMLElement = "HTMLElement";
              var wnd = o && o[strOwnerDocument] ? o[strOwnerDocument].parentWindow || window2 : window2;
              return typeof wnd[strHTMLElement] == TYPES.o ? o instanceof wnd[strHTMLElement] : o && typeof o == TYPES.o && o !== null && o.nodeType === 1 && typeof o.nodeName == TYPES.s;
            }
            function getArrayDifferences(a1, a2) {
              var a = [];
              var diff = [];
              var i;
              var k;
              for (i = 0; i < a1.length; i++)
                a[a1[i]] = true;
              for (i = 0; i < a2.length; i++) {
                if (a[a2[i]])
                  delete a[a2[i]];
                else
                  a[a2[i]] = true;
              }
              for (k in a)
                diff.push(k);
              return diff;
            }
            function parseToZeroOrNumber(value, toFloat) {
              var num = toFloat ? parseFloat(value) : parseInt(value, 10);
              return isNaN(num) ? 0 : num;
            }
            function getTextareaInfo() {
              var textareaCursorPosition = _targetElementNative.selectionStart;
              if (textareaCursorPosition === undefined2)
                return;
              var textareaValue = _targetElement.val();
              var textareaLength = textareaValue[LEXICON.l];
              var textareaRowSplit = textareaValue.split("\n");
              var textareaLastRow = textareaRowSplit[LEXICON.l];
              var textareaCurrentCursorRowSplit = textareaValue.substr(0, textareaCursorPosition).split("\n");
              var widestRow = 0;
              var textareaLastCol = 0;
              var cursorRow = textareaCurrentCursorRowSplit[LEXICON.l];
              var cursorCol = textareaCurrentCursorRowSplit[textareaCurrentCursorRowSplit[LEXICON.l] - 1][LEXICON.l];
              var rowCols;
              var i;
              for (i = 0; i < textareaRowSplit[LEXICON.l]; i++) {
                rowCols = textareaRowSplit[i][LEXICON.l];
                if (rowCols > textareaLastCol) {
                  widestRow = i + 1;
                  textareaLastCol = rowCols;
                }
              }
              return {
                _cursorRow: cursorRow,
                _cursorColumn: cursorCol,
                _rows: textareaLastRow,
                _columns: textareaLastCol,
                _widestRow: widestRow,
                _cursorPosition: textareaCursorPosition,
                _cursorMax: textareaLength
              };
            }
            function nativeOverlayScrollbarsAreActive() {
              return _ignoreOverlayScrollbarHidingCache && (_nativeScrollbarIsOverlaid.x && _nativeScrollbarIsOverlaid.y);
            }
            function getContentMeasureElement() {
              return _isTextarea ? _textareaCoverElement[0] : _contentElementNative;
            }
            function generateDiv(classesOrAttrs, content) {
              return "<div " + (classesOrAttrs ? type(classesOrAttrs) == TYPES.s ? 'class="' + classesOrAttrs + '"' : function() {
                var key;
                var attrs = _strEmpty;
                if (FRAMEWORK.isPlainObject(classesOrAttrs)) {
                  for (key in classesOrAttrs)
                    attrs += (key === "c" ? "class" : key) + '="' + classesOrAttrs[key] + '" ';
                }
                return attrs;
              }() : _strEmpty) + ">" + (content || _strEmpty) + "</div>";
            }
            function selectOrGenerateDivByClass(className, selectParentOrOnlyChildren) {
              var onlyChildren = type(selectParentOrOnlyChildren) == TYPES.b;
              var selectParent = onlyChildren ? _hostElement : selectParentOrOnlyChildren || _hostElement;
              return _domExists && !selectParent[LEXICON.l] ? null : _domExists ? selectParent[onlyChildren ? "children" : "find"](_strDot + className.replace(/\s/g, _strDot)).eq(0) : FRAMEWORK(generateDiv(className));
            }
            function getObjectPropVal(obj, path) {
              var splits = path.split(_strDot);
              var i = 0;
              var val;
              for (; i < splits.length; i++) {
                if (!obj[LEXICON.hOP](splits[i]))
                  return;
                val = obj[splits[i]];
                if (i < splits.length && type(val) == TYPES.o)
                  obj = val;
              }
              return val;
            }
            function setObjectPropVal(obj, path, val) {
              var splits = path.split(_strDot);
              var splitsLength = splits.length;
              var i = 0;
              var extendObj = {};
              var extendObjRoot = extendObj;
              for (; i < splitsLength; i++)
                extendObj = extendObj[splits[i]] = i + 1 < splitsLength ? {} : val;
              FRAMEWORK.extend(obj, extendObjRoot, true);
            }
            function eachUpdateOnLoad(action) {
              var updateOnLoad = _currentPreparedOptions.updateOnLoad;
              updateOnLoad = type(updateOnLoad) == TYPES.s ? updateOnLoad.split(_strSpace) : updateOnLoad;
              if (COMPATIBILITY.isA(updateOnLoad) && !_destroyed) {
                each(updateOnLoad, action);
              }
            }
            function checkCache(current, cache, force) {
              if (force)
                return force;
              if (type(current) == TYPES.o && type(cache) == TYPES.o) {
                for (var prop in current) {
                  if (prop !== "c") {
                    if (current[LEXICON.hOP](prop) && cache[LEXICON.hOP](prop)) {
                      if (checkCache(current[prop], cache[prop]))
                        return true;
                    } else {
                      return true;
                    }
                  }
                }
              } else {
                return current !== cache;
              }
              return false;
            }
            function extendDeep() {
              return FRAMEWORK.extend.apply(this, [true].concat([].slice.call(arguments)));
            }
            function addClass(el, classes) {
              return _frameworkProto.addClass.call(el, classes);
            }
            function removeClass(el, classes) {
              return _frameworkProto.removeClass.call(el, classes);
            }
            function addRemoveClass(el, classes, doAdd) {
              return doAdd ? addClass(el, classes) : removeClass(el, classes);
            }
            function remove(el) {
              return _frameworkProto.remove.call(el);
            }
            function findFirst(el, selector) {
              return _frameworkProto.find.call(el, selector).eq(0);
            }
            _base.sleep = function() {
              _sleeping = true;
            };
            _base.update = function(force) {
              if (_destroyed)
                return;
              var attrsChanged;
              var contentSizeC;
              var isString = type(force) == TYPES.s;
              var doUpdateAuto;
              var mutHost;
              var mutContent;
              if (isString) {
                if (force === _strAuto) {
                  attrsChanged = meaningfulAttrsChanged();
                  contentSizeC = updateAutoContentSizeChanged();
                  doUpdateAuto = attrsChanged || contentSizeC;
                  if (doUpdateAuto) {
                    update({
                      _contentSizeChanged: contentSizeC,
                      _changedOptions: _initialized ? undefined2 : _currentPreparedOptions
                    });
                  }
                } else if (force === _strSync) {
                  if (_mutationObserversConnected) {
                    mutHost = _mutationObserverHostCallback(_mutationObserverHost.takeRecords());
                    mutContent = _mutationObserverContentCallback(_mutationObserverContent.takeRecords());
                  } else {
                    mutHost = _base.update(_strAuto);
                  }
                } else if (force === "zoom") {
                  update({
                    _hostSizeChanged: true,
                    _contentSizeChanged: true
                  });
                }
              } else {
                force = _sleeping || force;
                _sleeping = false;
                if (!_base.update(_strSync) || force)
                  update({ _force: force });
              }
              updateElementsOnLoad();
              return doUpdateAuto || mutHost || mutContent;
            };
            _base.options = function(newOptions, value) {
              var option = {};
              var changedOps;
              if (FRAMEWORK.isEmptyObject(newOptions) || !FRAMEWORK.isPlainObject(newOptions)) {
                if (type(newOptions) == TYPES.s) {
                  if (arguments.length > 1) {
                    setObjectPropVal(option, newOptions, value);
                    changedOps = setOptions(option);
                  } else
                    return getObjectPropVal(_currentOptions, newOptions);
                } else
                  return _currentOptions;
              } else {
                changedOps = setOptions(newOptions);
              }
              if (!FRAMEWORK.isEmptyObject(changedOps)) {
                update({ _changedOptions: changedOps });
              }
            };
            _base.destroy = function() {
              if (_destroyed)
                return;
              autoUpdateLoop.remove(_base);
              disconnectMutationObservers();
              setupResizeObserver(_sizeObserverElement);
              setupResizeObserver(_sizeAutoObserverElement);
              for (var extName in _extensions)
                _base.removeExt(extName);
              while (_destroyEvents[LEXICON.l] > 0)
                _destroyEvents.pop()();
              setupHostMouseTouchEvents(true);
              if (_contentGlueElement)
                remove(_contentGlueElement);
              if (_contentArrangeElement)
                remove(_contentArrangeElement);
              if (_sizeAutoObserverAdded)
                remove(_sizeAutoObserverElement);
              setupScrollbarsDOM(true);
              setupScrollbarCornerDOM(true);
              setupStructureDOM(true);
              for (var i = 0; i < _updateOnLoadElms[LEXICON.l]; i++)
                FRAMEWORK(_updateOnLoadElms[i]).off(_updateOnLoadEventName, updateOnLoadCallback);
              _updateOnLoadElms = undefined2;
              _destroyed = true;
              _sleeping = true;
              INSTANCES(pluginTargetElement, 0);
              dispatchCallback("onDestroyed");
            };
            _base.scroll = function(coordinates, duration, easing, complete) {
              if (arguments.length === 0 || coordinates === undefined2) {
                var infoX = _scrollHorizontalInfo;
                var infoY = _scrollVerticalInfo;
                var normalizeInvert = _normalizeRTLCache && _isRTL && _rtlScrollBehavior.i;
                var normalizeNegate = _normalizeRTLCache && _isRTL && _rtlScrollBehavior.n;
                var scrollX = infoX._currentScroll;
                var scrollXRatio = infoX._currentScrollRatio;
                var maxScrollX = infoX._maxScroll;
                scrollXRatio = normalizeInvert ? 1 - scrollXRatio : scrollXRatio;
                scrollX = normalizeInvert ? maxScrollX - scrollX : scrollX;
                scrollX *= normalizeNegate ? -1 : 1;
                maxScrollX *= normalizeNegate ? -1 : 1;
                return {
                  position: {
                    x: scrollX,
                    y: infoY._currentScroll
                  },
                  ratio: {
                    x: scrollXRatio,
                    y: infoY._currentScrollRatio
                  },
                  max: {
                    x: maxScrollX,
                    y: infoY._maxScroll
                  },
                  handleOffset: {
                    x: infoX._handleOffset,
                    y: infoY._handleOffset
                  },
                  handleLength: {
                    x: infoX._handleLength,
                    y: infoY._handleLength
                  },
                  handleLengthRatio: {
                    x: infoX._handleLengthRatio,
                    y: infoY._handleLengthRatio
                  },
                  trackLength: {
                    x: infoX._trackLength,
                    y: infoY._trackLength
                  },
                  snappedHandleOffset: {
                    x: infoX._snappedHandleOffset,
                    y: infoY._snappedHandleOffset
                  },
                  isRTL: _isRTL,
                  isRTLNormalized: _normalizeRTLCache
                };
              }
              _base.update(_strSync);
              var normalizeRTL = _normalizeRTLCache;
              var coordinatesXAxisProps = [_strX, _strLeft, "l"];
              var coordinatesYAxisProps = [_strY, _strTop, "t"];
              var coordinatesOperators = ["+=", "-=", "*=", "/="];
              var durationIsObject = type(duration) == TYPES.o;
              var completeCallback = durationIsObject ? duration.complete : complete;
              var i;
              var finalScroll = {};
              var specialEasing = {};
              var doScrollLeft;
              var doScrollTop;
              var animationOptions;
              var strEnd = "end";
              var strBegin = "begin";
              var strCenter = "center";
              var strNearest = "nearest";
              var strAlways = "always";
              var strNever = "never";
              var strIfNeeded = "ifneeded";
              var strLength = LEXICON.l;
              var settingsAxis;
              var settingsScroll;
              var settingsBlock;
              var settingsMargin;
              var finalElement;
              var elementObjSettingsAxisValues = [_strX, _strY, "xy", "yx"];
              var elementObjSettingsBlockValues = [strBegin, strEnd, strCenter, strNearest];
              var elementObjSettingsScrollValues = [strAlways, strNever, strIfNeeded];
              var coordinatesIsElementObj = coordinates[LEXICON.hOP]("el");
              var possibleElement = coordinatesIsElementObj ? coordinates.el : coordinates;
              var possibleElementIsJQuery = possibleElement instanceof FRAMEWORK || JQUERY ? possibleElement instanceof JQUERY : false;
              var possibleElementIsHTMLElement = possibleElementIsJQuery ? false : isHTMLElement2(possibleElement);
              var updateScrollbarInfos = function() {
                if (doScrollLeft)
                  refreshScrollbarHandleOffset(true);
                if (doScrollTop)
                  refreshScrollbarHandleOffset(false);
              };
              var proxyCompleteCallback = type(completeCallback) != TYPES.f ? undefined2 : function() {
                updateScrollbarInfos();
                completeCallback();
              };
              function checkSettingsStringValue(currValue, allowedValues) {
                for (i = 0; i < allowedValues[strLength]; i++) {
                  if (currValue === allowedValues[i])
                    return true;
                }
                return false;
              }
              function getRawScroll(isX, coordinates2) {
                var coordinateProps = isX ? coordinatesXAxisProps : coordinatesYAxisProps;
                coordinates2 = type(coordinates2) == TYPES.s || type(coordinates2) == TYPES.n ? [coordinates2, coordinates2] : coordinates2;
                if (COMPATIBILITY.isA(coordinates2))
                  return isX ? coordinates2[0] : coordinates2[1];
                else if (type(coordinates2) == TYPES.o) {
                  for (i = 0; i < coordinateProps[strLength]; i++)
                    if (coordinateProps[i] in coordinates2)
                      return coordinates2[coordinateProps[i]];
                }
              }
              function getFinalScroll(isX, rawScroll) {
                var isString = type(rawScroll) == TYPES.s;
                var operator;
                var amount;
                var scrollInfo = isX ? _scrollHorizontalInfo : _scrollVerticalInfo;
                var currScroll = scrollInfo._currentScroll;
                var maxScroll = scrollInfo._maxScroll;
                var mult = " * ";
                var finalValue;
                var isRTLisX = _isRTL && isX;
                var normalizeShortcuts = isRTLisX && _rtlScrollBehavior.n && !normalizeRTL;
                var strReplace = "replace";
                var evalFunc = eval;
                var possibleOperator;
                if (isString) {
                  if (rawScroll[strLength] > 2) {
                    possibleOperator = rawScroll.substr(0, 2);
                    if (inArray(possibleOperator, coordinatesOperators) > -1)
                      operator = possibleOperator;
                  }
                  rawScroll = operator ? rawScroll.substr(2) : rawScroll;
                  rawScroll = rawScroll[strReplace](/min/g, 0)[strReplace](/</g, 0)[strReplace](/max/g, (normalizeShortcuts ? "-" : _strEmpty) + _strHundredPercent)[strReplace](/>/g, (normalizeShortcuts ? "-" : _strEmpty) + _strHundredPercent)[strReplace](/px/g, _strEmpty)[strReplace](/%/g, mult + maxScroll * (isRTLisX && _rtlScrollBehavior.n ? -1 : 1) / 100)[strReplace](/vw/g, mult + _viewportSize.w)[strReplace](/vh/g, mult + _viewportSize.h);
                  amount = parseToZeroOrNumber(isNaN(rawScroll) ? parseToZeroOrNumber(evalFunc(rawScroll), true).toFixed() : rawScroll);
                } else {
                  amount = rawScroll;
                }
                if (amount !== undefined2 && !isNaN(amount) && type(amount) == TYPES.n) {
                  var normalizeIsRTLisX = normalizeRTL && isRTLisX;
                  var operatorCurrScroll = currScroll * (normalizeIsRTLisX && _rtlScrollBehavior.n ? -1 : 1);
                  var invert = normalizeIsRTLisX && _rtlScrollBehavior.i;
                  var negate = normalizeIsRTLisX && _rtlScrollBehavior.n;
                  operatorCurrScroll = invert ? maxScroll - operatorCurrScroll : operatorCurrScroll;
                  switch (operator) {
                    case "+=":
                      finalValue = operatorCurrScroll + amount;
                      break;
                    case "-=":
                      finalValue = operatorCurrScroll - amount;
                      break;
                    case "*=":
                      finalValue = operatorCurrScroll * amount;
                      break;
                    case "/=":
                      finalValue = operatorCurrScroll / amount;
                      break;
                    default:
                      finalValue = amount;
                      break;
                  }
                  finalValue = invert ? maxScroll - finalValue : finalValue;
                  finalValue *= negate ? -1 : 1;
                  finalValue = isRTLisX && _rtlScrollBehavior.n ? MATH.min(0, MATH.max(maxScroll, finalValue)) : MATH.max(0, MATH.min(maxScroll, finalValue));
                }
                return finalValue === currScroll ? undefined2 : finalValue;
              }
              function getPerAxisValue(value, valueInternalType, defaultValue, allowedValues) {
                var resultDefault = [defaultValue, defaultValue];
                var valueType = type(value);
                var valueArrLength;
                var valueArrItem;
                if (valueType == valueInternalType) {
                  value = [value, value];
                } else if (valueType == TYPES.a) {
                  valueArrLength = value[strLength];
                  if (valueArrLength > 2 || valueArrLength < 1)
                    value = resultDefault;
                  else {
                    if (valueArrLength === 1)
                      value[1] = defaultValue;
                    for (i = 0; i < valueArrLength; i++) {
                      valueArrItem = value[i];
                      if (type(valueArrItem) != valueInternalType || !checkSettingsStringValue(valueArrItem, allowedValues)) {
                        value = resultDefault;
                        break;
                      }
                    }
                  }
                } else if (valueType == TYPES.o)
                  value = [value[_strX] || defaultValue, value[_strY] || defaultValue];
                else
                  value = resultDefault;
                return { x: value[0], y: value[1] };
              }
              function generateMargin(marginTopRightBottomLeftArray) {
                var result = [];
                var currValue;
                var currValueType;
                var valueDirections = [_strTop, _strRight, _strBottom, _strLeft];
                for (i = 0; i < marginTopRightBottomLeftArray[strLength]; i++) {
                  if (i === valueDirections[strLength])
                    break;
                  currValue = marginTopRightBottomLeftArray[i];
                  currValueType = type(currValue);
                  if (currValueType == TYPES.b)
                    result.push(currValue ? parseToZeroOrNumber(finalElement.css(_strMarginMinus + valueDirections[i])) : 0);
                  else
                    result.push(currValueType == TYPES.n ? currValue : 0);
                }
                return result;
              }
              if (possibleElementIsJQuery || possibleElementIsHTMLElement) {
                var margin = coordinatesIsElementObj ? coordinates.margin : 0;
                var axis = coordinatesIsElementObj ? coordinates.axis : 0;
                var scroll = coordinatesIsElementObj ? coordinates.scroll : 0;
                var block = coordinatesIsElementObj ? coordinates.block : 0;
                var marginDefault = [0, 0, 0, 0];
                var marginType = type(margin);
                var marginLength;
                finalElement = possibleElementIsJQuery ? possibleElement : FRAMEWORK(possibleElement);
                if (finalElement[strLength] > 0) {
                  if (marginType == TYPES.n || marginType == TYPES.b)
                    margin = generateMargin([margin, margin, margin, margin]);
                  else if (marginType == TYPES.a) {
                    marginLength = margin[strLength];
                    if (marginLength === 2)
                      margin = generateMargin([margin[0], margin[1], margin[0], margin[1]]);
                    else if (marginLength >= 4)
                      margin = generateMargin(margin);
                    else
                      margin = marginDefault;
                  } else if (marginType == TYPES.o)
                    margin = generateMargin([margin[_strTop], margin[_strRight], margin[_strBottom], margin[_strLeft]]);
                  else
                    margin = marginDefault;
                  settingsAxis = checkSettingsStringValue(axis, elementObjSettingsAxisValues) ? axis : "xy";
                  settingsScroll = getPerAxisValue(scroll, TYPES.s, strAlways, elementObjSettingsScrollValues);
                  settingsBlock = getPerAxisValue(block, TYPES.s, strBegin, elementObjSettingsBlockValues);
                  settingsMargin = margin;
                  var viewportScroll = {
                    l: _scrollHorizontalInfo._currentScroll,
                    t: _scrollVerticalInfo._currentScroll
                  };
                  var viewportOffset = _paddingElement.offset();
                  var elementOffset = finalElement.offset();
                  var doNotScroll = {
                    x: settingsScroll.x == strNever || settingsAxis == _strY,
                    y: settingsScroll.y == strNever || settingsAxis == _strX
                  };
                  elementOffset[_strTop] -= settingsMargin[0];
                  elementOffset[_strLeft] -= settingsMargin[3];
                  var elementScrollCoordinates = {
                    x: MATH.round(elementOffset[_strLeft] - viewportOffset[_strLeft] + viewportScroll.l),
                    y: MATH.round(elementOffset[_strTop] - viewportOffset[_strTop] + viewportScroll.t)
                  };
                  if (_isRTL) {
                    if (!_rtlScrollBehavior.n && !_rtlScrollBehavior.i)
                      elementScrollCoordinates.x = MATH.round(viewportOffset[_strLeft] - elementOffset[_strLeft] + viewportScroll.l);
                    if (_rtlScrollBehavior.n && normalizeRTL)
                      elementScrollCoordinates.x *= -1;
                    if (_rtlScrollBehavior.i && normalizeRTL)
                      elementScrollCoordinates.x = MATH.round(viewportOffset[_strLeft] - elementOffset[_strLeft] + (_scrollHorizontalInfo._maxScroll - viewportScroll.l));
                  }
                  if (settingsBlock.x != strBegin || settingsBlock.y != strBegin || settingsScroll.x == strIfNeeded || settingsScroll.y == strIfNeeded || _isRTL) {
                    var measuringElm = finalElement[0];
                    var rawElementSize = _supportTransform ? measuringElm[LEXICON.bCR]() : {
                      width: measuringElm[LEXICON.oW],
                      height: measuringElm[LEXICON.oH]
                    };
                    var elementSize = {
                      w: rawElementSize[_strWidth] + settingsMargin[3] + settingsMargin[1],
                      h: rawElementSize[_strHeight] + settingsMargin[0] + settingsMargin[2]
                    };
                    var finalizeBlock = function(isX) {
                      var vars = getScrollbarVars(isX);
                      var wh = vars._w_h;
                      var lt = vars._left_top;
                      var xy = vars._x_y;
                      var blockIsEnd = settingsBlock[xy] == (isX ? _isRTL ? strBegin : strEnd : strEnd);
                      var blockIsCenter = settingsBlock[xy] == strCenter;
                      var blockIsNearest = settingsBlock[xy] == strNearest;
                      var scrollNever = settingsScroll[xy] == strNever;
                      var scrollIfNeeded = settingsScroll[xy] == strIfNeeded;
                      var vpSize = _viewportSize[wh];
                      var vpOffset = viewportOffset[lt];
                      var elSize = elementSize[wh];
                      var elOffset = elementOffset[lt];
                      var divide = blockIsCenter ? 2 : 1;
                      var elementCenterOffset = elOffset + elSize / 2;
                      var viewportCenterOffset = vpOffset + vpSize / 2;
                      var isInView = elSize <= vpSize && elOffset >= vpOffset && elOffset + elSize <= vpOffset + vpSize;
                      if (scrollNever)
                        doNotScroll[xy] = true;
                      else if (!doNotScroll[xy]) {
                        if (blockIsNearest || scrollIfNeeded) {
                          doNotScroll[xy] = scrollIfNeeded ? isInView : false;
                          blockIsEnd = elSize < vpSize ? elementCenterOffset > viewportCenterOffset : elementCenterOffset < viewportCenterOffset;
                        }
                        elementScrollCoordinates[xy] -= blockIsEnd || blockIsCenter ? (vpSize / divide - elSize / divide) * (isX && _isRTL && normalizeRTL ? -1 : 1) : 0;
                      }
                    };
                    finalizeBlock(true);
                    finalizeBlock(false);
                  }
                  if (doNotScroll.y)
                    delete elementScrollCoordinates.y;
                  if (doNotScroll.x)
                    delete elementScrollCoordinates.x;
                  coordinates = elementScrollCoordinates;
                }
              }
              finalScroll[_strScrollLeft] = getFinalScroll(true, getRawScroll(true, coordinates));
              finalScroll[_strScrollTop] = getFinalScroll(false, getRawScroll(false, coordinates));
              doScrollLeft = finalScroll[_strScrollLeft] !== undefined2;
              doScrollTop = finalScroll[_strScrollTop] !== undefined2;
              if ((doScrollLeft || doScrollTop) && (duration > 0 || durationIsObject)) {
                if (durationIsObject) {
                  duration.complete = proxyCompleteCallback;
                  _viewportElement.animate(finalScroll, duration);
                } else {
                  animationOptions = {
                    duration,
                    complete: proxyCompleteCallback
                  };
                  if (COMPATIBILITY.isA(easing) || FRAMEWORK.isPlainObject(easing)) {
                    specialEasing[_strScrollLeft] = easing[0] || easing.x;
                    specialEasing[_strScrollTop] = easing[1] || easing.y;
                    animationOptions.specialEasing = specialEasing;
                  } else {
                    animationOptions.easing = easing;
                  }
                  _viewportElement.animate(finalScroll, animationOptions);
                }
              } else {
                if (doScrollLeft)
                  _viewportElement[_strScrollLeft](finalScroll[_strScrollLeft]);
                if (doScrollTop)
                  _viewportElement[_strScrollTop](finalScroll[_strScrollTop]);
                updateScrollbarInfos();
              }
            };
            _base.scrollStop = function(param1, param2, param3) {
              _viewportElement.stop(param1, param2, param3);
              return _base;
            };
            _base.getElements = function(elementName) {
              var obj = {
                target: _targetElementNative,
                host: _hostElementNative,
                padding: _paddingElementNative,
                viewport: _viewportElementNative,
                content: _contentElementNative,
                scrollbarHorizontal: {
                  scrollbar: _scrollbarHorizontalElement[0],
                  track: _scrollbarHorizontalTrackElement[0],
                  handle: _scrollbarHorizontalHandleElement[0]
                },
                scrollbarVertical: {
                  scrollbar: _scrollbarVerticalElement[0],
                  track: _scrollbarVerticalTrackElement[0],
                  handle: _scrollbarVerticalHandleElement[0]
                },
                scrollbarCorner: _scrollbarCornerElement[0]
              };
              return type(elementName) == TYPES.s ? getObjectPropVal(obj, elementName) : obj;
            };
            _base.getState = function(stateProperty) {
              function prepare(obj2) {
                if (!FRAMEWORK.isPlainObject(obj2))
                  return obj2;
                var extended = extendDeep({}, obj2);
                var changePropertyName = function(from, to) {
                  if (extended[LEXICON.hOP](from)) {
                    extended[to] = extended[from];
                    delete extended[from];
                  }
                };
                changePropertyName("w", _strWidth);
                changePropertyName("h", _strHeight);
                delete extended.c;
                return extended;
              }
              ;
              var obj = {
                destroyed: !!prepare(_destroyed),
                sleeping: !!prepare(_sleeping),
                autoUpdate: prepare(!_mutationObserversConnected),
                widthAuto: prepare(_widthAutoCache),
                heightAuto: prepare(_heightAutoCache),
                padding: prepare(_cssPaddingCache),
                overflowAmount: prepare(_overflowAmountCache),
                hideOverflow: prepare(_hideOverflowCache),
                hasOverflow: prepare(_hasOverflowCache),
                contentScrollSize: prepare(_contentScrollSizeCache),
                viewportSize: prepare(_viewportSize),
                hostSize: prepare(_hostSizeCache),
                documentMixed: prepare(_documentMixed)
              };
              return type(stateProperty) == TYPES.s ? getObjectPropVal(obj, stateProperty) : obj;
            };
            _base.ext = function(extName) {
              var result;
              var privateMethods = _extensionsPrivateMethods.split(" ");
              var i = 0;
              if (type(extName) == TYPES.s) {
                if (_extensions[LEXICON.hOP](extName)) {
                  result = extendDeep({}, _extensions[extName]);
                  for (; i < privateMethods.length; i++)
                    delete result[privateMethods[i]];
                }
              } else {
                result = {};
                for (i in _extensions)
                  result[i] = extendDeep({}, _base.ext(i));
              }
              return result;
            };
            _base.addExt = function(extName, extensionOptions) {
              var registeredExtensionObj = _plugin.extension(extName);
              var instance;
              var instanceAdded;
              var instanceContract;
              var contractResult;
              var contractFulfilled = true;
              if (registeredExtensionObj) {
                if (!_extensions[LEXICON.hOP](extName)) {
                  instance = registeredExtensionObj.extensionFactory.call(
                    _base,
                    extendDeep({}, registeredExtensionObj.defaultOptions),
                    FRAMEWORK,
                    COMPATIBILITY
                  );
                  if (instance) {
                    instanceContract = instance.contract;
                    if (type(instanceContract) == TYPES.f) {
                      contractResult = instanceContract(window2);
                      contractFulfilled = type(contractResult) == TYPES.b ? contractResult : contractFulfilled;
                    }
                    if (contractFulfilled) {
                      _extensions[extName] = instance;
                      instanceAdded = instance.added;
                      if (type(instanceAdded) == TYPES.f)
                        instanceAdded(extensionOptions);
                      return _base.ext(extName);
                    }
                  }
                } else
                  return _base.ext(extName);
              } else
                console.warn('A extension with the name "' + extName + `" isn't registered.`);
            };
            _base.removeExt = function(extName) {
              var instance = _extensions[extName];
              var instanceRemoved;
              if (instance) {
                delete _extensions[extName];
                instanceRemoved = instance.removed;
                if (type(instanceRemoved) == TYPES.f)
                  instanceRemoved();
                return true;
              }
              return false;
            };
            function construct(targetElement, options2, extensions2) {
              _defaultOptions = globals.defaultOptions;
              _nativeScrollbarStyling = globals.nativeScrollbarStyling;
              _nativeScrollbarSize = extendDeep({}, globals.nativeScrollbarSize);
              _nativeScrollbarIsOverlaid = extendDeep({}, globals.nativeScrollbarIsOverlaid);
              _overlayScrollbarDummySize = extendDeep({}, globals.overlayScrollbarDummySize);
              _rtlScrollBehavior = extendDeep({}, globals.rtlScrollBehavior);
              setOptions(extendDeep({}, _defaultOptions, options2));
              _cssCalc = globals.cssCalc;
              _msieVersion = globals.msie;
              _autoUpdateRecommended = globals.autoUpdateRecommended;
              _supportTransition = globals.supportTransition;
              _supportTransform = globals.supportTransform;
              _supportPassiveEvents = globals.supportPassiveEvents;
              _supportResizeObserver = globals.supportResizeObserver;
              _supportMutationObserver = globals.supportMutationObserver;
              _restrictedMeasuring = globals.restrictedMeasuring;
              _documentElement = FRAMEWORK(targetElement.ownerDocument);
              _documentElementNative = _documentElement[0];
              _windowElement = FRAMEWORK(_documentElementNative.defaultView || _documentElementNative.parentWindow);
              _windowElementNative = _windowElement[0];
              _htmlElement = findFirst(_documentElement, "html");
              _bodyElement = findFirst(_htmlElement, "body");
              _targetElement = FRAMEWORK(targetElement);
              _targetElementNative = _targetElement[0];
              _isTextarea = _targetElement.is("textarea");
              _isBody = _targetElement.is("body");
              _documentMixed = _documentElementNative !== document4;
              _domExists = _isTextarea ? _targetElement.hasClass(_classNameTextareaElement) && _targetElement.parent().hasClass(_classNameContentElement) : _targetElement.hasClass(_classNameHostElement) && _targetElement.children(_strDot + _classNamePaddingElement)[LEXICON.l];
              var initBodyScroll;
              var bodyMouseTouchDownListener;
              if (_nativeScrollbarIsOverlaid.x && _nativeScrollbarIsOverlaid.y && !_currentPreparedOptions.nativeScrollbarsOverlaid.initialize) {
                _initialized = true;
                dispatchCallback("onInitializationWithdrawn");
                if (_domExists) {
                  setupStructureDOM(true);
                  setupScrollbarsDOM(true);
                  setupScrollbarCornerDOM(true);
                }
                _initialized = false;
                _destroyed = true;
                _sleeping = true;
                return _base;
              }
              if (_isBody) {
                initBodyScroll = {};
                initBodyScroll.l = MATH.max(_targetElement[_strScrollLeft](), _htmlElement[_strScrollLeft](), _windowElement[_strScrollLeft]());
                initBodyScroll.t = MATH.max(_targetElement[_strScrollTop](), _htmlElement[_strScrollTop](), _windowElement[_strScrollTop]());
                bodyMouseTouchDownListener = function() {
                  _viewportElement.removeAttr(LEXICON.ti);
                  setupResponsiveEventListener(_viewportElement, _strMouseTouchDownEvent, bodyMouseTouchDownListener, true, true);
                };
              }
              setupStructureDOM();
              setupScrollbarsDOM();
              setupScrollbarCornerDOM();
              setupStructureEvents();
              setupScrollbarEvents(true);
              setupScrollbarEvents(false);
              setupScrollbarCornerEvents();
              createMutationObservers();
              setupResizeObserver(_sizeObserverElement, hostOnResized);
              if (_isBody) {
                _viewportElement[_strScrollLeft](initBodyScroll.l)[_strScrollTop](initBodyScroll.t);
                if (document4.activeElement == targetElement && _viewportElementNative.focus) {
                  _viewportElement.attr(LEXICON.ti, "-1");
                  _viewportElementNative.focus();
                  setupResponsiveEventListener(_viewportElement, _strMouseTouchDownEvent, bodyMouseTouchDownListener, false, true);
                }
              }
              _base.update(_strAuto);
              _initialized = true;
              dispatchCallback("onInitialized");
              each(_callbacksInitQeueue, function(index3, value) {
                dispatchCallback(value.n, value.a);
              });
              _callbacksInitQeueue = [];
              if (type(extensions2) == TYPES.s)
                extensions2 = [extensions2];
              if (COMPATIBILITY.isA(extensions2))
                each(extensions2, function(index3, value) {
                  _base.addExt(value);
                });
              else if (FRAMEWORK.isPlainObject(extensions2))
                each(extensions2, function(key, value) {
                  _base.addExt(key, value);
                });
              setTimeout(function() {
                if (_supportTransition && !_destroyed)
                  addClass(_hostElement, _classNameHostTransition);
              }, 333);
              return _base;
            }
            if (_plugin.valid(construct(pluginTargetElement, options, extensions))) {
              INSTANCES(pluginTargetElement, _base);
            }
            return _base;
          }
          _plugin = window2[PLUGINNAME] = function(pluginTargetElements, options, extensions) {
            if (arguments[LEXICON.l] === 0)
              return this;
            var arr = [];
            var optsIsPlainObj = FRAMEWORK.isPlainObject(options);
            var inst;
            var result;
            if (!pluginTargetElements)
              return optsIsPlainObj || !options ? result : arr;
            pluginTargetElements = pluginTargetElements[LEXICON.l] != undefined2 ? pluginTargetElements : [pluginTargetElements[0] || pluginTargetElements];
            initOverlayScrollbarsStatics();
            if (pluginTargetElements[LEXICON.l] > 0) {
              if (optsIsPlainObj) {
                FRAMEWORK.each(pluginTargetElements, function(i, v) {
                  inst = v;
                  if (inst !== undefined2)
                    arr.push(OverlayScrollbarsInstance(inst, options, extensions, _pluginsGlobals, _pluginsAutoUpdateLoop));
                });
              } else {
                FRAMEWORK.each(pluginTargetElements, function(i, v) {
                  inst = INSTANCES(v);
                  if (options === "!" && _plugin.valid(inst) || COMPATIBILITY.type(options) == TYPES.f && options(v, inst))
                    arr.push(inst);
                  else if (options === undefined2)
                    arr.push(inst);
                });
              }
              result = arr[LEXICON.l] === 1 ? arr[0] : arr;
            }
            return result;
          };
          _plugin.globals = function() {
            initOverlayScrollbarsStatics();
            var globals = FRAMEWORK.extend(true, {}, _pluginsGlobals);
            delete globals["msie"];
            return globals;
          };
          _plugin.defaultOptions = function(newDefaultOptions) {
            initOverlayScrollbarsStatics();
            var currDefaultOptions = _pluginsGlobals.defaultOptions;
            if (newDefaultOptions === undefined2)
              return FRAMEWORK.extend(true, {}, currDefaultOptions);
            _pluginsGlobals.defaultOptions = FRAMEWORK.extend(true, {}, currDefaultOptions, _pluginsOptions._validate(newDefaultOptions, _pluginsOptions._template, true, currDefaultOptions)._default);
          };
          _plugin.valid = function(osInstance) {
            return osInstance instanceof _plugin && !osInstance.getState().destroyed;
          };
          _plugin.extension = function(extensionName, extension, defaultOptions) {
            var extNameTypeString = COMPATIBILITY.type(extensionName) == TYPES.s;
            var argLen = arguments[LEXICON.l];
            var i = 0;
            if (argLen < 1 || !extNameTypeString) {
              return FRAMEWORK.extend(true, { length: _pluginsExtensions[LEXICON.l] }, _pluginsExtensions);
            } else if (extNameTypeString) {
              if (COMPATIBILITY.type(extension) == TYPES.f) {
                _pluginsExtensions.push({
                  name: extensionName,
                  extensionFactory: extension,
                  defaultOptions
                });
              } else {
                for (; i < _pluginsExtensions[LEXICON.l]; i++) {
                  if (_pluginsExtensions[i].name === extensionName) {
                    if (argLen > 1)
                      _pluginsExtensions.splice(i, 1);
                    else
                      return FRAMEWORK.extend(true, {}, _pluginsExtensions[i]);
                  }
                }
              }
            }
          };
          return _plugin;
        }();
        if (JQUERY && JQUERY.fn) {
          JQUERY.fn.overlayScrollbars = function(options, extensions) {
            var _elements = this;
            if (JQUERY.isPlainObject(options)) {
              JQUERY.each(_elements, function() {
                PLUGIN(this, options, extensions);
              });
              return _elements;
            } else
              return PLUGIN(_elements, options);
          };
        }
        return PLUGIN;
      }
    );
  }
});

// src/ScrollArea/OverlayScrollbars.tsx
var OverlayScrollbars_exports = {};
__export(OverlayScrollbars_exports, {
  OverlayScrollbarsComponent: () => OverlayScrollbarsComponent,
  default: () => OverlayScrollbars_default
});
function mergeHostClassNames(osInstance, className) {
  if (import_overlayscrollbars.default.valid(osInstance)) {
    const { host } = osInstance.getElements();
    const regex = new RegExp(
      `(^os-host([-_].+|)$)|${osInstance.options().className.replace(/\s/g, "$|")}$`,
      "g"
    );
    const osClassNames = host.className.split(" ").filter((name) => name.match(regex)).join(" ");
    host.className = `${osClassNames} ${className || ""}`;
  }
}
var import_react6, import_overlayscrollbars, OverlayScrollbarsComponent, OverlayScrollbars_default;
var init_OverlayScrollbars = __esm({
  "src/ScrollArea/OverlayScrollbars.tsx"() {
    import_react6 = __toESM(require("react"));
    import_overlayscrollbars = __toESM(require_OverlayScrollbars());
    OverlayScrollbarsComponent = ({
      options = {},
      extensions,
      className,
      children,
      ...rest
    }) => {
      const osTargetRef = (0, import_react6.useRef)();
      const osInstance = (0, import_react6.useRef)();
      (0, import_react6.useEffect)(() => {
        osInstance.current = (0, import_overlayscrollbars.default)(osTargetRef.current, options, extensions);
        mergeHostClassNames(osInstance.current, className);
        return () => {
          if (import_overlayscrollbars.default.valid(osInstance.current)) {
            osInstance.current.destroy();
            osInstance.current = null;
          }
        };
      }, []);
      (0, import_react6.useEffect)(() => {
        if (import_overlayscrollbars.default.valid(osInstance.current)) {
          osInstance.current.options(options);
        }
      }, [options]);
      (0, import_react6.useEffect)(() => {
        if (import_overlayscrollbars.default.valid(osInstance.current)) {
          mergeHostClassNames(osInstance.current, className);
        }
      }, [className]);
      return /* @__PURE__ */ import_react6.default.createElement("div", {
        className: "os-host",
        ...rest,
        ref: osTargetRef
      }, /* @__PURE__ */ import_react6.default.createElement("div", {
        className: "os-resize-observer-host"
      }), /* @__PURE__ */ import_react6.default.createElement("div", {
        className: "os-padding"
      }, /* @__PURE__ */ import_react6.default.createElement("div", {
        className: "os-viewport"
      }, /* @__PURE__ */ import_react6.default.createElement("div", {
        className: "os-content"
      }, children))), /* @__PURE__ */ import_react6.default.createElement("div", {
        className: "os-scrollbar os-scrollbar-horizontal "
      }, /* @__PURE__ */ import_react6.default.createElement("div", {
        className: "os-scrollbar-track"
      }, /* @__PURE__ */ import_react6.default.createElement("div", {
        className: "os-scrollbar-handle"
      }))), /* @__PURE__ */ import_react6.default.createElement("div", {
        className: "os-scrollbar os-scrollbar-vertical"
      }, /* @__PURE__ */ import_react6.default.createElement("div", {
        className: "os-scrollbar-track"
      }, /* @__PURE__ */ import_react6.default.createElement("div", {
        className: "os-scrollbar-handle"
      }))), /* @__PURE__ */ import_react6.default.createElement("div", {
        className: "os-scrollbar-corner"
      }));
    };
    OverlayScrollbars_default = OverlayScrollbarsComponent;
  }
});

// src/ScrollArea/ScrollArea.tsx
var import_react7, import_theming5, GlobalScrollAreaStyles2, OverlayScrollbars2, Scroller, ScrollArea;
var init_ScrollArea = __esm({
  "src/ScrollArea/ScrollArea.tsx"() {
    import_react7 = __toESM(require("react"));
    import_theming5 = require("@storybook/theming");
    GlobalScrollAreaStyles2 = (0, import_react7.lazy)(() => Promise.resolve().then(() => (init_GlobalScrollAreaStyles(), GlobalScrollAreaStyles_exports)));
    OverlayScrollbars2 = (0, import_react7.lazy)(() => Promise.resolve().then(() => (init_OverlayScrollbars(), OverlayScrollbars_exports)));
    Scroller = ({ horizontal, vertical, ...props }) => /* @__PURE__ */ import_react7.default.createElement(import_react7.Suspense, {
      fallback: /* @__PURE__ */ import_react7.default.createElement("div", {
        ...props
      })
    }, /* @__PURE__ */ import_react7.default.createElement(GlobalScrollAreaStyles2, null), /* @__PURE__ */ import_react7.default.createElement(OverlayScrollbars2, {
      options: { scrollbars: { autoHide: "leave" } },
      ...props
    }));
    ScrollArea = (0, import_theming5.styled)(Scroller)(
      ({ vertical }) => !vertical ? { overflowY: "hidden" } : { overflowY: "auto", height: "100%" },
      ({ horizontal }) => !horizontal ? { overflowX: "hidden" } : { overflowX: "auto", width: "100%" }
    );
    ScrollArea.defaultProps = {
      horizontal: false,
      vertical: false
    };
  }
});

// src/syntaxhighlighter/syntaxhighlighter.tsx
var syntaxhighlighter_exports = {};
__export(syntaxhighlighter_exports, {
  SyntaxHighlighter: () => SyntaxHighlighter2,
  createCopyToClipboardFunction: () => createCopyToClipboardFunction,
  default: () => syntaxhighlighter_default
});
function createCopyToClipboardFunction() {
  if (navigator2 == null ? void 0 : navigator2.clipboard) {
    return (text) => navigator2.clipboard.writeText(text);
  }
  return async (text) => {
    const tmp = document2.createElement("TEXTAREA");
    const focus = document2.activeElement;
    tmp.value = text;
    document2.body.appendChild(tmp);
    tmp.select();
    document2.execCommand("copy");
    document2.body.removeChild(tmp);
    focus.focus();
  };
}
var import_react8, import_client_logger, import_theming6, import_global, import_memoizerific, navigator2, document2, globalWindow, themedSyntax, copyToClipboard, Wrapper, UnstyledScroller, Scroller2, Pre, Code, processLineNumber, defaultRenderer2, wrapRenderer, SyntaxHighlighter2, syntaxhighlighter_default;
var init_syntaxhighlighter = __esm({
  "src/syntaxhighlighter/syntaxhighlighter.tsx"() {
    import_react8 = __toESM(require("react"));
    import_client_logger = require("@storybook/client-logger");
    import_theming6 = require("@storybook/theming");
    import_global = __toESM(require_window());
    import_memoizerific = __toESM(require("memoizerific"));
    init_jsx();
    init_bash();
    init_css();
    init_js_extras();
    init_json();
    init_graphql();
    init_markup();
    init_markdown();
    init_yaml();
    init_tsx();
    init_typescript();
    init_prism_light();
    init_esm();
    init_ActionBar();
    init_ScrollArea();
    ({ navigator: navigator2, document: document2, window: globalWindow } = import_global.default);
    prism_light_default.registerLanguage("jsextra", js_extras_default);
    prism_light_default.registerLanguage("jsx", jsx_default);
    prism_light_default.registerLanguage("json", json_default);
    prism_light_default.registerLanguage("yml", yaml_default);
    prism_light_default.registerLanguage("md", markdown_default);
    prism_light_default.registerLanguage("bash", bash_default);
    prism_light_default.registerLanguage("css", css_default);
    prism_light_default.registerLanguage("html", markup_default);
    prism_light_default.registerLanguage("tsx", tsx_default);
    prism_light_default.registerLanguage("typescript", typescript_default);
    prism_light_default.registerLanguage("graphql", graphql_default);
    themedSyntax = (0, import_memoizerific.default)(2)(
      (theme) => Object.entries(theme.code || {}).reduce((acc, [key, val]) => ({ ...acc, [`* .${key}`]: val }), {})
    );
    copyToClipboard = createCopyToClipboardFunction();
    Wrapper = import_theming6.styled.div(
      ({ theme }) => ({
        position: "relative",
        overflow: "hidden",
        color: theme.color.defaultText
      }),
      ({ theme, bordered }) => bordered ? {
        border: `1px solid ${theme.appBorderColor}`,
        borderRadius: theme.borderRadius,
        background: theme.background.content
      } : {},
      ({ showLineNumbers }) => showLineNumbers ? {
        ".react-syntax-highlighter-line-number::before": {
          content: "attr(data-line-number)"
        }
      } : {}
    );
    UnstyledScroller = ({
      children,
      className
    }) => /* @__PURE__ */ import_react8.default.createElement(ScrollArea, {
      horizontal: true,
      vertical: true,
      className
    }, children);
    Scroller2 = (0, import_theming6.styled)(UnstyledScroller)(
      {
        position: "relative"
      },
      ({ theme }) => themedSyntax(theme)
    );
    Pre = import_theming6.styled.pre(({ theme, padded }) => ({
      display: "flex",
      justifyContent: "flex-start",
      margin: 0,
      padding: padded ? theme.layoutMargin : 0
    }));
    Code = import_theming6.styled.div(({ theme }) => ({
      flex: 1,
      paddingLeft: 2,
      paddingRight: theme.layoutMargin,
      opacity: 1
    }));
    processLineNumber = (row) => {
      const children = [...row.children];
      const lineNumberNode = children[0];
      const lineNumber = lineNumberNode.children[0].value;
      const processedLineNumberNode = {
        ...lineNumberNode,
        children: [],
        properties: {
          ...lineNumberNode.properties,
          "data-line-number": lineNumber,
          style: { ...lineNumberNode.properties.style, userSelect: "auto" }
        }
      };
      children[0] = processedLineNumberNode;
      return { ...row, children };
    };
    defaultRenderer2 = ({ rows, stylesheet, useInlineStyles }) => {
      return rows.map((node, i) => {
        return createElement({
          node: processLineNumber(node),
          stylesheet,
          useInlineStyles,
          key: `code-segement${i}`
        });
      });
    };
    wrapRenderer = (renderer, showLineNumbers) => {
      if (!showLineNumbers) {
        return renderer;
      }
      if (renderer) {
        return ({ rows, ...rest }) => renderer({ rows: rows.map((row) => processLineNumber(row)), ...rest });
      }
      return defaultRenderer2;
    };
    SyntaxHighlighter2 = ({
      children,
      language = "jsx",
      copyable = false,
      bordered = false,
      padded = false,
      format: format3 = true,
      formatter: formatter2 = null,
      className = null,
      showLineNumbers = false,
      ...rest
    }) => {
      if (typeof children !== "string" || !children.trim()) {
        return null;
      }
      const highlightableCode = formatter2 ? formatter2(format3, children) : children.trim();
      const [copied, setCopied] = (0, import_react8.useState)(false);
      const onClick = (0, import_react8.useCallback)(
        (e) => {
          e.preventDefault();
          copyToClipboard(highlightableCode).then(() => {
            setCopied(true);
            globalWindow.setTimeout(() => setCopied(false), 1500);
          }).catch(import_client_logger.logger.error);
        },
        [highlightableCode]
      );
      const renderer = wrapRenderer(rest.renderer, showLineNumbers);
      return /* @__PURE__ */ import_react8.default.createElement(Wrapper, {
        bordered,
        padded,
        showLineNumbers,
        className
      }, /* @__PURE__ */ import_react8.default.createElement(Scroller2, null, /* @__PURE__ */ import_react8.default.createElement(prism_light_default, {
        padded: padded || bordered,
        language,
        showLineNumbers,
        showInlineLineNumbers: showLineNumbers,
        useInlineStyles: false,
        PreTag: Pre,
        CodeTag: Code,
        lineNumberContainerStyle: {},
        ...rest,
        renderer
      }, highlightableCode)), copyable ? /* @__PURE__ */ import_react8.default.createElement(ActionBar, {
        actionItems: [{ title: copied ? "Copied" : "Copy", onClick }]
      }) : null);
    };
    syntaxhighlighter_default = SyntaxHighlighter2;
  }
});

// node_modules/prettier/parser-html.js
var require_parser_html = __commonJS({
  "node_modules/prettier/parser-html.js"(exports, module2) {
    !function(e, t) {
      "object" == typeof exports && "undefined" != typeof module2 ? module2.exports = t() : "function" == typeof define && define.amd ? define(t) : ((e = "undefined" != typeof globalThis ? globalThis : e || self).prettierPlugins = e.prettierPlugins || {}, e.prettierPlugins.html = t());
    }(exports, function() {
      "use strict";
      var e = "undefined" != typeof globalThis ? globalThis : "undefined" != typeof window ? window : "undefined" != typeof global ? global : "undefined" != typeof self ? self : {};
      function t(e2) {
        var t2 = { exports: {} };
        return e2(t2, t2.exports), t2.exports;
      }
      var r = t(function(e2, t2) {
        function r2(e3) {
          return t2.$0 <= e3 && e3 <= t2.$9;
        }
        Object.defineProperty(t2, "__esModule", { value: true }), t2.$EOF = 0, t2.$BSPACE = 8, t2.$TAB = 9, t2.$LF = 10, t2.$VTAB = 11, t2.$FF = 12, t2.$CR = 13, t2.$SPACE = 32, t2.$BANG = 33, t2.$DQ = 34, t2.$HASH = 35, t2.$$ = 36, t2.$PERCENT = 37, t2.$AMPERSAND = 38, t2.$SQ = 39, t2.$LPAREN = 40, t2.$RPAREN = 41, t2.$STAR = 42, t2.$PLUS = 43, t2.$COMMA = 44, t2.$MINUS = 45, t2.$PERIOD = 46, t2.$SLASH = 47, t2.$COLON = 58, t2.$SEMICOLON = 59, t2.$LT = 60, t2.$EQ = 61, t2.$GT = 62, t2.$QUESTION = 63, t2.$0 = 48, t2.$7 = 55, t2.$9 = 57, t2.$A = 65, t2.$E = 69, t2.$F = 70, t2.$X = 88, t2.$Z = 90, t2.$LBRACKET = 91, t2.$BACKSLASH = 92, t2.$RBRACKET = 93, t2.$CARET = 94, t2.$_ = 95, t2.$a = 97, t2.$b = 98, t2.$e = 101, t2.$f = 102, t2.$n = 110, t2.$r = 114, t2.$t = 116, t2.$u = 117, t2.$v = 118, t2.$x = 120, t2.$z = 122, t2.$LBRACE = 123, t2.$BAR = 124, t2.$RBRACE = 125, t2.$NBSP = 160, t2.$PIPE = 124, t2.$TILDA = 126, t2.$AT = 64, t2.$BT = 96, t2.isWhitespace = function(e3) {
          return e3 >= t2.$TAB && e3 <= t2.$SPACE || e3 == t2.$NBSP;
        }, t2.isDigit = r2, t2.isAsciiLetter = function(e3) {
          return e3 >= t2.$a && e3 <= t2.$z || e3 >= t2.$A && e3 <= t2.$Z;
        }, t2.isAsciiHexDigit = function(e3) {
          return e3 >= t2.$a && e3 <= t2.$f || e3 >= t2.$A && e3 <= t2.$F || r2(e3);
        }, t2.isNewLine = function(e3) {
          return e3 === t2.$LF || e3 === t2.$CR;
        }, t2.isOctalDigit = function(e3) {
          return t2.$0 <= e3 && e3 <= t2.$7;
        };
      });
      class n {
        constructor(e2, t2, r2) {
          this.filePath = e2, this.name = t2, this.members = r2;
        }
        assertNoMembers() {
          if (this.members.length)
            throw new Error("Illegal state: symbol without members expected, but got ".concat(JSON.stringify(this), "."));
        }
      }
      var s = n;
      var i = class {
        constructor() {
          this.cache = /* @__PURE__ */ new Map();
        }
        get(e2, t2, r2) {
          const s2 = (r2 = r2 || []).length ? ".".concat(r2.join(".")) : "", i2 = '"'.concat(e2, '".').concat(t2).concat(s2);
          let o2 = this.cache.get(i2);
          return o2 || (o2 = new n(e2, t2, r2), this.cache.set(i2, o2)), o2;
        }
      }, o = Object.defineProperty({ StaticSymbol: s, StaticSymbolCache: i }, "__esModule", { value: true });
      const a = /-+([a-z0-9])/g;
      var u = function(e2) {
        return e2.replace(a, (...e3) => e3[1].toUpperCase());
      };
      var c = function(e2, t2) {
        return D(e2, ":", t2);
      };
      var l = function(e2, t2) {
        return D(e2, ".", t2);
      };
      function D(e2, t2, r2) {
        const n2 = e2.indexOf(t2);
        return -1 == n2 ? r2 : [e2.slice(0, n2).trim(), e2.slice(n2 + 1).trim()];
      }
      function p(e2, t2, r2) {
        return Array.isArray(e2) ? t2.visitArray(e2, r2) : "object" == typeof (n2 = e2) && null !== n2 && Object.getPrototypeOf(n2) === v ? t2.visitStringMap(e2, r2) : null == e2 || "string" == typeof e2 || "number" == typeof e2 || "boolean" == typeof e2 ? t2.visitPrimitive(e2, r2) : t2.visitOther(e2, r2);
        var n2;
      }
      var h = p;
      var d = function(e2) {
        return null != e2;
      };
      var m = function(e2) {
        return void 0 === e2 ? null : e2;
      };
      var f = class {
        visitArray(e2, t2) {
          return e2.map((e3) => p(e3, this, t2));
        }
        visitStringMap(e2, t2) {
          const r2 = {};
          return Object.keys(e2).forEach((n2) => {
            r2[n2] = p(e2[n2], this, t2);
          }), r2;
        }
        visitPrimitive(e2, t2) {
          return e2;
        }
        visitOther(e2, t2) {
          return e2;
        }
      }, g = { assertSync: (e2) => {
        if (N(e2))
          throw new Error("Illegal state: value cannot be a promise");
        return e2;
      }, then: (e2, t2) => N(e2) ? e2.then(t2) : t2(e2), all: (e2) => e2.some(N) ? Promise.all(e2) : e2 };
      var E = function(e2) {
        throw new Error("Internal Error: ".concat(e2));
      };
      var C = function(e2, t2) {
        const r2 = Error(e2);
        return r2[T] = true, t2 && (r2[_] = t2), r2;
      };
      const T = "ngSyntaxError", _ = "ngParseErrors";
      var S = function(e2) {
        return e2[T];
      };
      var y = function(e2) {
        return e2[_] || [];
      };
      var F = function(e2) {
        return e2.replace(/([.*+?^=!:${}()|[\]\/\\])/g, "\\$1");
      };
      const v = Object.getPrototypeOf({});
      var A3 = function(e2) {
        let t2 = "";
        for (let r2 = 0; r2 < e2.length; r2++) {
          let n2 = e2.charCodeAt(r2);
          if (n2 >= 55296 && n2 <= 56319 && e2.length > r2 + 1) {
            const t3 = e2.charCodeAt(r2 + 1);
            t3 >= 56320 && t3 <= 57343 && (r2++, n2 = (n2 - 55296 << 10) + t3 - 56320 + 65536);
          }
          n2 <= 127 ? t2 += String.fromCharCode(n2) : n2 <= 2047 ? t2 += String.fromCharCode(n2 >> 6 & 31 | 192, 63 & n2 | 128) : n2 <= 65535 ? t2 += String.fromCharCode(n2 >> 12 | 224, n2 >> 6 & 63 | 128, 63 & n2 | 128) : n2 <= 2097151 && (t2 += String.fromCharCode(n2 >> 18 & 7 | 240, n2 >> 12 & 63 | 128, n2 >> 6 & 63 | 128, 63 & n2 | 128));
        }
        return t2;
      };
      var b = function e2(t2) {
        if ("string" == typeof t2)
          return t2;
        if (t2 instanceof Array)
          return "[" + t2.map(e2).join(", ") + "]";
        if (null == t2)
          return "" + t2;
        if (t2.overriddenName)
          return "".concat(t2.overriddenName);
        if (t2.name)
          return "".concat(t2.name);
        if (!t2.toString)
          return "object";
        const r2 = t2.toString();
        if (null == r2)
          return "" + r2;
        const n2 = r2.indexOf("\n");
        return -1 === n2 ? r2 : r2.substring(0, n2);
      };
      var w = function(e2) {
        return "function" == typeof e2 && e2.hasOwnProperty("__forward_ref__") ? e2() : e2;
      };
      function N(e2) {
        return !!e2 && "function" == typeof e2.then;
      }
      var k = N;
      var x = class {
        constructor(e2) {
          this.full = e2;
          const t2 = e2.split(".");
          this.major = t2[0], this.minor = t2[1], this.patch = t2.slice(2).join(".");
        }
      };
      const I = "undefined" != typeof window && window, P2 = "undefined" != typeof self && "undefined" != typeof WorkerGlobalScope && self instanceof WorkerGlobalScope && self;
      var R = void 0 !== e && e || I || P2, O = Object.defineProperty({ dashCaseToCamelCase: u, splitAtColon: c, splitAtPeriod: l, visitValue: h, isDefined: d, noUndefined: m, ValueTransformer: f, SyncAsync: g, error: E, syntaxError: C, isSyntaxError: S, getParseErrors: y, escapeRegExp: F, utf8Encode: A3, stringify: b, resolveForwardRef: w, isPromise: k, Version: x, global: R }, "__esModule", { value: true }), L = t(function(e2, t2) {
        Object.defineProperty(t2, "__esModule", { value: true });
        const r2 = /^(?:(?:\[([^\]]+)\])|(?:\(([^\)]+)\)))|(\@[-\w]+)$/;
        function n2(e3) {
          return e3.replace(/\W/g, "_");
        }
        t2.sanitizeIdentifier = n2;
        let s2 = 0;
        function i2(e3) {
          if (!e3 || !e3.reference)
            return null;
          const t3 = e3.reference;
          if (t3 instanceof o.StaticSymbol)
            return t3.name;
          if (t3.__anonymousType)
            return t3.__anonymousType;
          let r3 = O.stringify(t3);
          return r3.indexOf("(") >= 0 ? (r3 = "anonymous_".concat(s2++), t3.__anonymousType = r3) : r3 = n2(r3), r3;
        }
        var a2;
        t2.identifierName = i2, t2.identifierModuleUrl = function(e3) {
          const t3 = e3.reference;
          return t3 instanceof o.StaticSymbol ? t3.filePath : "./".concat(O.stringify(t3));
        }, t2.viewClassName = function(e3, t3) {
          return "View_".concat(i2({ reference: e3 }), "_").concat(t3);
        }, t2.rendererTypeName = function(e3) {
          return "RenderType_".concat(i2({ reference: e3 }));
        }, t2.hostViewClassName = function(e3) {
          return "HostView_".concat(i2({ reference: e3 }));
        }, t2.componentFactoryName = function(e3) {
          return "".concat(i2({ reference: e3 }), "NgFactory");
        }, function(e3) {
          e3[e3.Pipe = 0] = "Pipe", e3[e3.Directive = 1] = "Directive", e3[e3.NgModule = 2] = "NgModule", e3[e3.Injectable = 3] = "Injectable";
        }(a2 = t2.CompileSummaryKind || (t2.CompileSummaryKind = {})), t2.tokenName = function(e3) {
          return null != e3.value ? n2(e3.value) : i2(e3.identifier);
        }, t2.tokenReference = function(e3) {
          return null != e3.identifier ? e3.identifier.reference : e3.value;
        };
        t2.CompileStylesheetMetadata = class {
          constructor({ moduleUrl: e3, styles: t3, styleUrls: r3 } = {}) {
            this.moduleUrl = e3 || null, this.styles = c2(t3), this.styleUrls = c2(r3);
          }
        };
        t2.CompileTemplateMetadata = class {
          constructor({ encapsulation: e3, template: t3, templateUrl: r3, htmlAst: n3, styles: s3, styleUrls: i3, externalStylesheets: o2, animations: a3, ngContentSelectors: u3, interpolation: D3, isInline: p2, preserveWhitespaces: h2 }) {
            if (this.encapsulation = e3, this.template = t3, this.templateUrl = r3, this.htmlAst = n3, this.styles = c2(s3), this.styleUrls = c2(i3), this.externalStylesheets = c2(o2), this.animations = a3 ? l2(a3) : [], this.ngContentSelectors = u3 || [], D3 && 2 != D3.length)
              throw new Error("'interpolation' should have a start and an end symbol.");
            this.interpolation = D3, this.isInline = p2, this.preserveWhitespaces = h2;
          }
          toSummary() {
            return { ngContentSelectors: this.ngContentSelectors, encapsulation: this.encapsulation, styles: this.styles, animations: this.animations };
          }
        };
        class u2 {
          static create({ isHost: e3, type: t3, isComponent: n3, selector: s3, exportAs: i3, changeDetection: o2, inputs: a3, outputs: c3, host: l3, providers: D3, viewProviders: p2, queries: h2, guards: d2, viewQueries: m2, entryComponents: f2, template: g2, componentViewType: E2, rendererType: C2, componentFactory: T2 }) {
            const _2 = {}, S2 = {}, y2 = {};
            null != l3 && Object.keys(l3).forEach((e4) => {
              const t4 = l3[e4], n4 = e4.match(r2);
              null === n4 ? y2[e4] = t4 : null != n4[1] ? S2[n4[1]] = t4 : null != n4[2] && (_2[n4[2]] = t4);
            });
            const F2 = {};
            null != a3 && a3.forEach((e4) => {
              const t4 = O.splitAtColon(e4, [e4, e4]);
              F2[t4[0]] = t4[1];
            });
            const v2 = {};
            return null != c3 && c3.forEach((e4) => {
              const t4 = O.splitAtColon(e4, [e4, e4]);
              v2[t4[0]] = t4[1];
            }), new u2({ isHost: e3, type: t3, isComponent: !!n3, selector: s3, exportAs: i3, changeDetection: o2, inputs: F2, outputs: v2, hostListeners: _2, hostProperties: S2, hostAttributes: y2, providers: D3, viewProviders: p2, queries: h2, guards: d2, viewQueries: m2, entryComponents: f2, template: g2, componentViewType: E2, rendererType: C2, componentFactory: T2 });
          }
          constructor({ isHost: e3, type: t3, isComponent: r3, selector: n3, exportAs: s3, changeDetection: i3, inputs: o2, outputs: a3, hostListeners: u3, hostProperties: l3, hostAttributes: D3, providers: p2, viewProviders: h2, queries: d2, guards: m2, viewQueries: f2, entryComponents: g2, template: E2, componentViewType: C2, rendererType: T2, componentFactory: _2 }) {
            this.isHost = !!e3, this.type = t3, this.isComponent = r3, this.selector = n3, this.exportAs = s3, this.changeDetection = i3, this.inputs = o2, this.outputs = a3, this.hostListeners = u3, this.hostProperties = l3, this.hostAttributes = D3, this.providers = c2(p2), this.viewProviders = c2(h2), this.queries = c2(d2), this.guards = m2, this.viewQueries = c2(f2), this.entryComponents = c2(g2), this.template = E2, this.componentViewType = C2, this.rendererType = T2, this.componentFactory = _2;
          }
          toSummary() {
            return { summaryKind: a2.Directive, type: this.type, isComponent: this.isComponent, selector: this.selector, exportAs: this.exportAs, inputs: this.inputs, outputs: this.outputs, hostListeners: this.hostListeners, hostProperties: this.hostProperties, hostAttributes: this.hostAttributes, providers: this.providers, viewProviders: this.viewProviders, queries: this.queries, guards: this.guards, viewQueries: this.viewQueries, entryComponents: this.entryComponents, changeDetection: this.changeDetection, template: this.template && this.template.toSummary(), componentViewType: this.componentViewType, rendererType: this.rendererType, componentFactory: this.componentFactory };
          }
        }
        t2.CompileDirectiveMetadata = u2;
        t2.CompilePipeMetadata = class {
          constructor({ type: e3, name: t3, pure: r3 }) {
            this.type = e3, this.name = t3, this.pure = !!r3;
          }
          toSummary() {
            return { summaryKind: a2.Pipe, type: this.type, name: this.name, pure: this.pure };
          }
        };
        t2.CompileShallowModuleMetadata = class {
        };
        t2.CompileNgModuleMetadata = class {
          constructor({ type: e3, providers: t3, declaredDirectives: r3, exportedDirectives: n3, declaredPipes: s3, exportedPipes: i3, entryComponents: o2, bootstrapComponents: a3, importedModules: u3, exportedModules: l3, schemas: D3, transitiveModule: p2, id: h2 }) {
            this.type = e3 || null, this.declaredDirectives = c2(r3), this.exportedDirectives = c2(n3), this.declaredPipes = c2(s3), this.exportedPipes = c2(i3), this.providers = c2(t3), this.entryComponents = c2(o2), this.bootstrapComponents = c2(a3), this.importedModules = c2(u3), this.exportedModules = c2(l3), this.schemas = c2(D3), this.id = h2 || null, this.transitiveModule = p2 || null;
          }
          toSummary() {
            const e3 = this.transitiveModule;
            return { summaryKind: a2.NgModule, type: this.type, entryComponents: e3.entryComponents, providers: e3.providers, modules: e3.modules, exportedDirectives: e3.exportedDirectives, exportedPipes: e3.exportedPipes };
          }
        };
        function c2(e3) {
          return e3 || [];
        }
        t2.TransitiveCompileNgModuleMetadata = class {
          constructor() {
            this.directivesSet = /* @__PURE__ */ new Set(), this.directives = [], this.exportedDirectivesSet = /* @__PURE__ */ new Set(), this.exportedDirectives = [], this.pipesSet = /* @__PURE__ */ new Set(), this.pipes = [], this.exportedPipesSet = /* @__PURE__ */ new Set(), this.exportedPipes = [], this.modulesSet = /* @__PURE__ */ new Set(), this.modules = [], this.entryComponentsSet = /* @__PURE__ */ new Set(), this.entryComponents = [], this.providers = [];
          }
          addProvider(e3, t3) {
            this.providers.push({ provider: e3, module: t3 });
          }
          addDirective(e3) {
            this.directivesSet.has(e3.reference) || (this.directivesSet.add(e3.reference), this.directives.push(e3));
          }
          addExportedDirective(e3) {
            this.exportedDirectivesSet.has(e3.reference) || (this.exportedDirectivesSet.add(e3.reference), this.exportedDirectives.push(e3));
          }
          addPipe(e3) {
            this.pipesSet.has(e3.reference) || (this.pipesSet.add(e3.reference), this.pipes.push(e3));
          }
          addExportedPipe(e3) {
            this.exportedPipesSet.has(e3.reference) || (this.exportedPipesSet.add(e3.reference), this.exportedPipes.push(e3));
          }
          addModule(e3) {
            this.modulesSet.has(e3.reference) || (this.modulesSet.add(e3.reference), this.modules.push(e3));
          }
          addEntryComponent(e3) {
            this.entryComponentsSet.has(e3.componentType) || (this.entryComponentsSet.add(e3.componentType), this.entryComponents.push(e3));
          }
        };
        function l2(e3) {
          return e3.reduce((e4, t3) => {
            const r3 = Array.isArray(t3) ? l2(t3) : t3;
            return e4.concat(r3);
          }, []);
        }
        function D2(e3) {
          return e3.replace(/(\w+:\/\/[\w:-]+)?(\/+)?/, "ng:///");
        }
        t2.ProviderMeta = class {
          constructor(e3, { useClass: t3, useValue: r3, useExisting: n3, useFactory: s3, deps: i3, multi: o2 }) {
            this.token = e3, this.useClass = t3 || null, this.useValue = r3, this.useExisting = n3, this.useFactory = s3 || null, this.dependencies = i3 || null, this.multi = !!o2;
          }
        }, t2.flatten = l2, t2.templateSourceUrl = function(e3, t3, r3) {
          let n3;
          return n3 = r3.isInline ? t3.type.reference instanceof o.StaticSymbol ? "".concat(t3.type.reference.filePath, ".").concat(t3.type.reference.name, ".html") : "".concat(i2(e3), "/").concat(i2(t3.type), ".html") : r3.templateUrl, t3.type.reference instanceof o.StaticSymbol ? n3 : D2(n3);
        }, t2.sharedStylesheetJitUrl = function(e3, t3) {
          const r3 = e3.moduleUrl.split(/\/\\/g), n3 = r3[r3.length - 1];
          return D2("css/".concat(t3).concat(n3, ".ngstyle.js"));
        }, t2.ngModuleJitUrl = function(e3) {
          return D2("".concat(i2(e3.type), "/module.ngfactory.js"));
        }, t2.templateJitUrl = function(e3, t3) {
          return D2("".concat(i2(e3), "/").concat(i2(t3.type), ".ngfactory.js"));
        };
      }), B = t(function(e2, t2) {
        Object.defineProperty(t2, "__esModule", { value: true });
        class n2 {
          constructor(e3, t3, r2, n3) {
            this.file = e3, this.offset = t3, this.line = r2, this.col = n3;
          }
          toString() {
            return null != this.offset ? "".concat(this.file.url, "@").concat(this.line, ":").concat(this.col) : this.file.url;
          }
          moveBy(e3) {
            const t3 = this.file.content, s3 = t3.length;
            let i3 = this.offset, o3 = this.line, a2 = this.col;
            for (; i3 > 0 && e3 < 0; ) {
              i3--, e3++;
              if (t3.charCodeAt(i3) == r.$LF) {
                o3--;
                const e4 = t3.substr(0, i3 - 1).lastIndexOf(String.fromCharCode(r.$LF));
                a2 = e4 > 0 ? i3 - e4 : i3;
              } else
                a2--;
            }
            for (; i3 < s3 && e3 > 0; ) {
              const n3 = t3.charCodeAt(i3);
              i3++, e3--, n3 == r.$LF ? (o3++, a2 = 0) : a2++;
            }
            return new n2(this.file, i3, o3, a2);
          }
          getContext(e3, t3) {
            const r2 = this.file.content;
            let n3 = this.offset;
            if (null != n3) {
              n3 > r2.length - 1 && (n3 = r2.length - 1);
              let s3 = n3, i3 = 0, o3 = 0;
              for (; i3 < e3 && n3 > 0 && (n3--, i3++, "\n" != r2[n3] || ++o3 != t3); )
                ;
              for (i3 = 0, o3 = 0; i3 < e3 && s3 < r2.length - 1 && (s3++, i3++, "\n" != r2[s3] || ++o3 != t3); )
                ;
              return { before: r2.substring(n3, this.offset), after: r2.substring(this.offset, s3 + 1) };
            }
            return null;
          }
        }
        t2.ParseLocation = n2;
        class s2 {
          constructor(e3, t3) {
            this.content = e3, this.url = t3;
          }
        }
        t2.ParseSourceFile = s2;
        class i2 {
          constructor(e3, t3, r2 = null) {
            this.start = e3, this.end = t3, this.details = r2;
          }
          toString() {
            return this.start.file.content.substring(this.start.offset, this.end.offset);
          }
        }
        var o2;
        t2.ParseSourceSpan = i2, t2.EMPTY_PARSE_LOCATION = new n2(new s2("", ""), 0, 0, 0), t2.EMPTY_SOURCE_SPAN = new i2(t2.EMPTY_PARSE_LOCATION, t2.EMPTY_PARSE_LOCATION), function(e3) {
          e3[e3.WARNING = 0] = "WARNING", e3[e3.ERROR = 1] = "ERROR";
        }(o2 = t2.ParseErrorLevel || (t2.ParseErrorLevel = {}));
        t2.ParseError = class {
          constructor(e3, t3, r2 = o2.ERROR) {
            this.span = e3, this.msg = t3, this.level = r2;
          }
          contextualMessage() {
            const e3 = this.span.start.getContext(100, 3);
            return e3 ? "".concat(this.msg, ' ("').concat(e3.before, "[").concat(o2[this.level], " ->]").concat(e3.after, '")') : this.msg;
          }
          toString() {
            const e3 = this.span.details ? ", ".concat(this.span.details) : "";
            return "".concat(this.contextualMessage(), ": ").concat(this.span.start).concat(e3);
          }
        }, t2.typeSourceSpan = function(e3, t3) {
          const r2 = L.identifierModuleUrl(t3), o3 = null != r2 ? "in ".concat(e3, " ").concat(L.identifierName(t3), " in ").concat(r2) : "in ".concat(e3, " ").concat(L.identifierName(t3)), a2 = new s2("", o3);
          return new i2(new n2(a2, -1, -1, -1), new n2(a2, -1, -1, -1));
        }, t2.r3JitTypeSourceSpan = function(e3, t3, r2) {
          const o3 = "in ".concat(e3, " ").concat(t3, " in ").concat(r2), a2 = new s2("", o3);
          return new i2(new n2(a2, -1, -1, -1), new n2(a2, -1, -1, -1));
        };
      });
      const q = new RegExp("^(?<startDelimiter>-{3}|\\+{3})(?<language>[^\\n]*)\\n(?:|(?<value>[\\S\\s]*?)\\n)(?<endDelimiter>\\k<startDelimiter>|\\.{3})[^\\S\\n]*(?:\\n|$)");
      var $ = function(e2) {
        const t2 = e2.match(q);
        if (!t2)
          return { content: e2 };
        const { startDelimiter: r2, language: n2, value: s2 = "", endDelimiter: i2 } = t2.groups;
        let o2 = n2.trim() || "yaml";
        if ("+++" === r2 && (o2 = "toml"), "yaml" !== o2 && r2 !== i2)
          return { content: e2 };
        const [a2] = t2;
        return { frontMatter: { type: "front-matter", lang: o2, value: s2, startDelimiter: r2, endDelimiter: i2, raw: a2.replace(/\n$/, "") }, content: a2.replace(/[^\n]/g, " ") + e2.slice(a2.length) };
      };
      var M = (e2) => e2[e2.length - 1];
      var U = function(e2, t2) {
        const r2 = new SyntaxError(e2 + " (" + t2.start.line + ":" + t2.start.column + ")");
        return r2.loc = t2, r2;
      }, V = (e2) => "string" == typeof e2 ? e2.replace((({ onlyFirst: e3 = false } = {}) => {
        const t2 = ["[\\u001B\\u009B][[\\]()#;?]*(?:(?:(?:[a-zA-Z\\d]*(?:;[-a-zA-Z\\d\\/#&.:=?%@~_]*)*)?\\u0007)", "(?:(?:\\d{1,4}(?:;\\d{0,4})*)?[\\dA-PR-TZcf-ntqry=><~]))"].join("|");
        return new RegExp(t2, e3 ? void 0 : "g");
      })(), "") : e2;
      const G = (e2) => !Number.isNaN(e2) && (e2 >= 4352 && (e2 <= 4447 || 9001 === e2 || 9002 === e2 || 11904 <= e2 && e2 <= 12871 && 12351 !== e2 || 12880 <= e2 && e2 <= 19903 || 19968 <= e2 && e2 <= 42182 || 43360 <= e2 && e2 <= 43388 || 44032 <= e2 && e2 <= 55203 || 63744 <= e2 && e2 <= 64255 || 65040 <= e2 && e2 <= 65049 || 65072 <= e2 && e2 <= 65131 || 65281 <= e2 && e2 <= 65376 || 65504 <= e2 && e2 <= 65510 || 110592 <= e2 && e2 <= 110593 || 127488 <= e2 && e2 <= 127569 || 131072 <= e2 && e2 <= 262141));
      var j = G, X = G;
      j.default = X;
      const H = (e2) => {
        if ("string" != typeof e2 || 0 === e2.length)
          return 0;
        if (0 === (e2 = V(e2)).length)
          return 0;
        e2 = e2.replace(/\uD83C\uDFF4\uDB40\uDC67\uDB40\uDC62(?:\uDB40\uDC65\uDB40\uDC6E\uDB40\uDC67|\uDB40\uDC73\uDB40\uDC63\uDB40\uDC74|\uDB40\uDC77\uDB40\uDC6C\uDB40\uDC73)\uDB40\uDC7F|\uD83D\uDC68(?:\uD83C\uDFFC\u200D(?:\uD83E\uDD1D\u200D\uD83D\uDC68\uD83C\uDFFB|\uD83C[\uDF3E\uDF73\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uD83E[\uDDAF-\uDDB3\uDDBC\uDDBD])|\uD83C\uDFFF\u200D(?:\uD83E\uDD1D\u200D\uD83D\uDC68(?:\uD83C[\uDFFB-\uDFFE])|\uD83C[\uDF3E\uDF73\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uD83E[\uDDAF-\uDDB3\uDDBC\uDDBD])|\uD83C\uDFFE\u200D(?:\uD83E\uDD1D\u200D\uD83D\uDC68(?:\uD83C[\uDFFB-\uDFFD])|\uD83C[\uDF3E\uDF73\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uD83E[\uDDAF-\uDDB3\uDDBC\uDDBD])|\uD83C\uDFFD\u200D(?:\uD83E\uDD1D\u200D\uD83D\uDC68(?:\uD83C[\uDFFB\uDFFC])|\uD83C[\uDF3E\uDF73\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uD83E[\uDDAF-\uDDB3\uDDBC\uDDBD])|\u200D(?:\u2764\uFE0F\u200D(?:\uD83D\uDC8B\u200D)?\uD83D\uDC68|(?:\uD83D[\uDC68\uDC69])\u200D(?:\uD83D\uDC66\u200D\uD83D\uDC66|\uD83D\uDC67\u200D(?:\uD83D[\uDC66\uDC67]))|\uD83D\uDC66\u200D\uD83D\uDC66|\uD83D\uDC67\u200D(?:\uD83D[\uDC66\uDC67])|(?:\uD83D[\uDC68\uDC69])\u200D(?:\uD83D[\uDC66\uDC67])|[\u2695\u2696\u2708]\uFE0F|\uD83D[\uDC66\uDC67]|\uD83C[\uDF3E\uDF73\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uD83E[\uDDAF-\uDDB3\uDDBC\uDDBD])|(?:\uD83C\uDFFB\u200D[\u2695\u2696\u2708]|\uD83C\uDFFF\u200D[\u2695\u2696\u2708]|\uD83C\uDFFE\u200D[\u2695\u2696\u2708]|\uD83C\uDFFD\u200D[\u2695\u2696\u2708]|\uD83C\uDFFC\u200D[\u2695\u2696\u2708])\uFE0F|\uD83C\uDFFB\u200D(?:\uD83C[\uDF3E\uDF73\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uD83E[\uDDAF-\uDDB3\uDDBC\uDDBD])|\uD83C[\uDFFB-\uDFFF])|(?:\uD83E\uDDD1\uD83C\uDFFB\u200D\uD83E\uDD1D\u200D\uD83E\uDDD1|\uD83D\uDC69\uD83C\uDFFC\u200D\uD83E\uDD1D\u200D\uD83D\uDC69)\uD83C\uDFFB|\uD83E\uDDD1(?:\uD83C\uDFFF\u200D\uD83E\uDD1D\u200D\uD83E\uDDD1(?:\uD83C[\uDFFB-\uDFFF])|\u200D\uD83E\uDD1D\u200D\uD83E\uDDD1)|(?:\uD83E\uDDD1\uD83C\uDFFE\u200D\uD83E\uDD1D\u200D\uD83E\uDDD1|\uD83D\uDC69\uD83C\uDFFF\u200D\uD83E\uDD1D\u200D(?:\uD83D[\uDC68\uDC69]))(?:\uD83C[\uDFFB-\uDFFE])|(?:\uD83E\uDDD1\uD83C\uDFFC\u200D\uD83E\uDD1D\u200D\uD83E\uDDD1|\uD83D\uDC69\uD83C\uDFFD\u200D\uD83E\uDD1D\u200D\uD83D\uDC69)(?:\uD83C[\uDFFB\uDFFC])|\uD83D\uDC69(?:\uD83C\uDFFE\u200D(?:\uD83E\uDD1D\u200D\uD83D\uDC68(?:\uD83C[\uDFFB-\uDFFD\uDFFF])|\uD83C[\uDF3E\uDF73\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uD83E[\uDDAF-\uDDB3\uDDBC\uDDBD])|\uD83C\uDFFC\u200D(?:\uD83E\uDD1D\u200D\uD83D\uDC68(?:\uD83C[\uDFFB\uDFFD-\uDFFF])|\uD83C[\uDF3E\uDF73\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uD83E[\uDDAF-\uDDB3\uDDBC\uDDBD])|\uD83C\uDFFB\u200D(?:\uD83E\uDD1D\u200D\uD83D\uDC68(?:\uD83C[\uDFFC-\uDFFF])|\uD83C[\uDF3E\uDF73\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uD83E[\uDDAF-\uDDB3\uDDBC\uDDBD])|\uD83C\uDFFD\u200D(?:\uD83E\uDD1D\u200D\uD83D\uDC68(?:\uD83C[\uDFFB\uDFFC\uDFFE\uDFFF])|\uD83C[\uDF3E\uDF73\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uD83E[\uDDAF-\uDDB3\uDDBC\uDDBD])|\u200D(?:\u2764\uFE0F\u200D(?:\uD83D\uDC8B\u200D(?:\uD83D[\uDC68\uDC69])|\uD83D[\uDC68\uDC69])|\uD83C[\uDF3E\uDF73\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uD83E[\uDDAF-\uDDB3\uDDBC\uDDBD])|\uD83C\uDFFF\u200D(?:\uD83C[\uDF3E\uDF73\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uD83E[\uDDAF-\uDDB3\uDDBC\uDDBD]))|\uD83D\uDC69\u200D\uD83D\uDC69\u200D(?:\uD83D\uDC66\u200D\uD83D\uDC66|\uD83D\uDC67\u200D(?:\uD83D[\uDC66\uDC67]))|(?:\uD83E\uDDD1\uD83C\uDFFD\u200D\uD83E\uDD1D\u200D\uD83E\uDDD1|\uD83D\uDC69\uD83C\uDFFE\u200D\uD83E\uDD1D\u200D\uD83D\uDC69)(?:\uD83C[\uDFFB-\uDFFD])|\uD83D\uDC69\u200D\uD83D\uDC66\u200D\uD83D\uDC66|\uD83D\uDC69\u200D\uD83D\uDC69\u200D(?:\uD83D[\uDC66\uDC67])|(?:\uD83D\uDC41\uFE0F\u200D\uD83D\uDDE8|\uD83D\uDC69(?:\uD83C\uDFFF\u200D[\u2695\u2696\u2708]|\uD83C\uDFFE\u200D[\u2695\u2696\u2708]|\uD83C\uDFFC\u200D[\u2695\u2696\u2708]|\uD83C\uDFFB\u200D[\u2695\u2696\u2708]|\uD83C\uDFFD\u200D[\u2695\u2696\u2708]|\u200D[\u2695\u2696\u2708])|(?:(?:\u26F9|\uD83C[\uDFCB\uDFCC]|\uD83D\uDD75)\uFE0F|\uD83D\uDC6F|\uD83E[\uDD3C\uDDDE\uDDDF])\u200D[\u2640\u2642]|(?:\u26F9|\uD83C[\uDFCB\uDFCC]|\uD83D\uDD75)(?:\uD83C[\uDFFB-\uDFFF])\u200D[\u2640\u2642]|(?:\uD83C[\uDFC3\uDFC4\uDFCA]|\uD83D[\uDC6E\uDC71\uDC73\uDC77\uDC81\uDC82\uDC86\uDC87\uDE45-\uDE47\uDE4B\uDE4D\uDE4E\uDEA3\uDEB4-\uDEB6]|\uD83E[\uDD26\uDD37-\uDD39\uDD3D\uDD3E\uDDB8\uDDB9\uDDCD-\uDDCF\uDDD6-\uDDDD])(?:(?:\uD83C[\uDFFB-\uDFFF])\u200D[\u2640\u2642]|\u200D[\u2640\u2642])|\uD83C\uDFF4\u200D\u2620)\uFE0F|\uD83D\uDC69\u200D\uD83D\uDC67\u200D(?:\uD83D[\uDC66\uDC67])|\uD83C\uDFF3\uFE0F\u200D\uD83C\uDF08|\uD83D\uDC15\u200D\uD83E\uDDBA|\uD83D\uDC69\u200D\uD83D\uDC66|\uD83D\uDC69\u200D\uD83D\uDC67|\uD83C\uDDFD\uD83C\uDDF0|\uD83C\uDDF4\uD83C\uDDF2|\uD83C\uDDF6\uD83C\uDDE6|[#\*0-9]\uFE0F\u20E3|\uD83C\uDDE7(?:\uD83C[\uDDE6\uDDE7\uDDE9-\uDDEF\uDDF1-\uDDF4\uDDF6-\uDDF9\uDDFB\uDDFC\uDDFE\uDDFF])|\uD83C\uDDF9(?:\uD83C[\uDDE6\uDDE8\uDDE9\uDDEB-\uDDED\uDDEF-\uDDF4\uDDF7\uDDF9\uDDFB\uDDFC\uDDFF])|\uD83C\uDDEA(?:\uD83C[\uDDE6\uDDE8\uDDEA\uDDEC\uDDED\uDDF7-\uDDFA])|\uD83E\uDDD1(?:\uD83C[\uDFFB-\uDFFF])|\uD83C\uDDF7(?:\uD83C[\uDDEA\uDDF4\uDDF8\uDDFA\uDDFC])|\uD83D\uDC69(?:\uD83C[\uDFFB-\uDFFF])|\uD83C\uDDF2(?:\uD83C[\uDDE6\uDDE8-\uDDED\uDDF0-\uDDFF])|\uD83C\uDDE6(?:\uD83C[\uDDE8-\uDDEC\uDDEE\uDDF1\uDDF2\uDDF4\uDDF6-\uDDFA\uDDFC\uDDFD\uDDFF])|\uD83C\uDDF0(?:\uD83C[\uDDEA\uDDEC-\uDDEE\uDDF2\uDDF3\uDDF5\uDDF7\uDDFC\uDDFE\uDDFF])|\uD83C\uDDED(?:\uD83C[\uDDF0\uDDF2\uDDF3\uDDF7\uDDF9\uDDFA])|\uD83C\uDDE9(?:\uD83C[\uDDEA\uDDEC\uDDEF\uDDF0\uDDF2\uDDF4\uDDFF])|\uD83C\uDDFE(?:\uD83C[\uDDEA\uDDF9])|\uD83C\uDDEC(?:\uD83C[\uDDE6\uDDE7\uDDE9-\uDDEE\uDDF1-\uDDF3\uDDF5-\uDDFA\uDDFC\uDDFE])|\uD83C\uDDF8(?:\uD83C[\uDDE6-\uDDEA\uDDEC-\uDDF4\uDDF7-\uDDF9\uDDFB\uDDFD-\uDDFF])|\uD83C\uDDEB(?:\uD83C[\uDDEE-\uDDF0\uDDF2\uDDF4\uDDF7])|\uD83C\uDDF5(?:\uD83C[\uDDE6\uDDEA-\uDDED\uDDF0-\uDDF3\uDDF7-\uDDF9\uDDFC\uDDFE])|\uD83C\uDDFB(?:\uD83C[\uDDE6\uDDE8\uDDEA\uDDEC\uDDEE\uDDF3\uDDFA])|\uD83C\uDDF3(?:\uD83C[\uDDE6\uDDE8\uDDEA-\uDDEC\uDDEE\uDDF1\uDDF4\uDDF5\uDDF7\uDDFA\uDDFF])|\uD83C\uDDE8(?:\uD83C[\uDDE6\uDDE8\uDDE9\uDDEB-\uDDEE\uDDF0-\uDDF5\uDDF7\uDDFA-\uDDFF])|\uD83C\uDDF1(?:\uD83C[\uDDE6-\uDDE8\uDDEE\uDDF0\uDDF7-\uDDFB\uDDFE])|\uD83C\uDDFF(?:\uD83C[\uDDE6\uDDF2\uDDFC])|\uD83C\uDDFC(?:\uD83C[\uDDEB\uDDF8])|\uD83C\uDDFA(?:\uD83C[\uDDE6\uDDEC\uDDF2\uDDF3\uDDF8\uDDFE\uDDFF])|\uD83C\uDDEE(?:\uD83C[\uDDE8-\uDDEA\uDDF1-\uDDF4\uDDF6-\uDDF9])|\uD83C\uDDEF(?:\uD83C[\uDDEA\uDDF2\uDDF4\uDDF5])|(?:\uD83C[\uDFC3\uDFC4\uDFCA]|\uD83D[\uDC6E\uDC71\uDC73\uDC77\uDC81\uDC82\uDC86\uDC87\uDE45-\uDE47\uDE4B\uDE4D\uDE4E\uDEA3\uDEB4-\uDEB6]|\uD83E[\uDD26\uDD37-\uDD39\uDD3D\uDD3E\uDDB8\uDDB9\uDDCD-\uDDCF\uDDD6-\uDDDD])(?:\uD83C[\uDFFB-\uDFFF])|(?:\u26F9|\uD83C[\uDFCB\uDFCC]|\uD83D\uDD75)(?:\uD83C[\uDFFB-\uDFFF])|(?:[\u261D\u270A-\u270D]|\uD83C[\uDF85\uDFC2\uDFC7]|\uD83D[\uDC42\uDC43\uDC46-\uDC50\uDC66\uDC67\uDC6B-\uDC6D\uDC70\uDC72\uDC74-\uDC76\uDC78\uDC7C\uDC83\uDC85\uDCAA\uDD74\uDD7A\uDD90\uDD95\uDD96\uDE4C\uDE4F\uDEC0\uDECC]|\uD83E[\uDD0F\uDD18-\uDD1C\uDD1E\uDD1F\uDD30-\uDD36\uDDB5\uDDB6\uDDBB\uDDD2-\uDDD5])(?:\uD83C[\uDFFB-\uDFFF])|(?:[\u231A\u231B\u23E9-\u23EC\u23F0\u23F3\u25FD\u25FE\u2614\u2615\u2648-\u2653\u267F\u2693\u26A1\u26AA\u26AB\u26BD\u26BE\u26C4\u26C5\u26CE\u26D4\u26EA\u26F2\u26F3\u26F5\u26FA\u26FD\u2705\u270A\u270B\u2728\u274C\u274E\u2753-\u2755\u2757\u2795-\u2797\u27B0\u27BF\u2B1B\u2B1C\u2B50\u2B55]|\uD83C[\uDC04\uDCCF\uDD8E\uDD91-\uDD9A\uDDE6-\uDDFF\uDE01\uDE1A\uDE2F\uDE32-\uDE36\uDE38-\uDE3A\uDE50\uDE51\uDF00-\uDF20\uDF2D-\uDF35\uDF37-\uDF7C\uDF7E-\uDF93\uDFA0-\uDFCA\uDFCF-\uDFD3\uDFE0-\uDFF0\uDFF4\uDFF8-\uDFFF]|\uD83D[\uDC00-\uDC3E\uDC40\uDC42-\uDCFC\uDCFF-\uDD3D\uDD4B-\uDD4E\uDD50-\uDD67\uDD7A\uDD95\uDD96\uDDA4\uDDFB-\uDE4F\uDE80-\uDEC5\uDECC\uDED0-\uDED2\uDED5\uDEEB\uDEEC\uDEF4-\uDEFA\uDFE0-\uDFEB]|\uD83E[\uDD0D-\uDD3A\uDD3C-\uDD45\uDD47-\uDD71\uDD73-\uDD76\uDD7A-\uDDA2\uDDA5-\uDDAA\uDDAE-\uDDCA\uDDCD-\uDDFF\uDE70-\uDE73\uDE78-\uDE7A\uDE80-\uDE82\uDE90-\uDE95])|(?:[#\*0-9\xA9\xAE\u203C\u2049\u2122\u2139\u2194-\u2199\u21A9\u21AA\u231A\u231B\u2328\u23CF\u23E9-\u23F3\u23F8-\u23FA\u24C2\u25AA\u25AB\u25B6\u25C0\u25FB-\u25FE\u2600-\u2604\u260E\u2611\u2614\u2615\u2618\u261D\u2620\u2622\u2623\u2626\u262A\u262E\u262F\u2638-\u263A\u2640\u2642\u2648-\u2653\u265F\u2660\u2663\u2665\u2666\u2668\u267B\u267E\u267F\u2692-\u2697\u2699\u269B\u269C\u26A0\u26A1\u26AA\u26AB\u26B0\u26B1\u26BD\u26BE\u26C4\u26C5\u26C8\u26CE\u26CF\u26D1\u26D3\u26D4\u26E9\u26EA\u26F0-\u26F5\u26F7-\u26FA\u26FD\u2702\u2705\u2708-\u270D\u270F\u2712\u2714\u2716\u271D\u2721\u2728\u2733\u2734\u2744\u2747\u274C\u274E\u2753-\u2755\u2757\u2763\u2764\u2795-\u2797\u27A1\u27B0\u27BF\u2934\u2935\u2B05-\u2B07\u2B1B\u2B1C\u2B50\u2B55\u3030\u303D\u3297\u3299]|\uD83C[\uDC04\uDCCF\uDD70\uDD71\uDD7E\uDD7F\uDD8E\uDD91-\uDD9A\uDDE6-\uDDFF\uDE01\uDE02\uDE1A\uDE2F\uDE32-\uDE3A\uDE50\uDE51\uDF00-\uDF21\uDF24-\uDF93\uDF96\uDF97\uDF99-\uDF9B\uDF9E-\uDFF0\uDFF3-\uDFF5\uDFF7-\uDFFF]|\uD83D[\uDC00-\uDCFD\uDCFF-\uDD3D\uDD49-\uDD4E\uDD50-\uDD67\uDD6F\uDD70\uDD73-\uDD7A\uDD87\uDD8A-\uDD8D\uDD90\uDD95\uDD96\uDDA4\uDDA5\uDDA8\uDDB1\uDDB2\uDDBC\uDDC2-\uDDC4\uDDD1-\uDDD3\uDDDC-\uDDDE\uDDE1\uDDE3\uDDE8\uDDEF\uDDF3\uDDFA-\uDE4F\uDE80-\uDEC5\uDECB-\uDED2\uDED5\uDEE0-\uDEE5\uDEE9\uDEEB\uDEEC\uDEF0\uDEF3-\uDEFA\uDFE0-\uDFEB]|\uD83E[\uDD0D-\uDD3A\uDD3C-\uDD45\uDD47-\uDD71\uDD73-\uDD76\uDD7A-\uDDA2\uDDA5-\uDDAA\uDDAE-\uDDCA\uDDCD-\uDDFF\uDE70-\uDE73\uDE78-\uDE7A\uDE80-\uDE82\uDE90-\uDE95])\uFE0F|(?:[\u261D\u26F9\u270A-\u270D]|\uD83C[\uDF85\uDFC2-\uDFC4\uDFC7\uDFCA-\uDFCC]|\uD83D[\uDC42\uDC43\uDC46-\uDC50\uDC66-\uDC78\uDC7C\uDC81-\uDC83\uDC85-\uDC87\uDC8F\uDC91\uDCAA\uDD74\uDD75\uDD7A\uDD90\uDD95\uDD96\uDE45-\uDE47\uDE4B-\uDE4F\uDEA3\uDEB4-\uDEB6\uDEC0\uDECC]|\uD83E[\uDD0F\uDD18-\uDD1F\uDD26\uDD30-\uDD39\uDD3C-\uDD3E\uDDB5\uDDB6\uDDB8\uDDB9\uDDBB\uDDCD-\uDDCF\uDDD1-\uDDDD])/g, "  ");
        let t2 = 0;
        for (let r2 = 0; r2 < e2.length; r2++) {
          const n2 = e2.codePointAt(r2);
          n2 <= 31 || n2 >= 127 && n2 <= 159 || (n2 >= 768 && n2 <= 879 || (n2 > 65535 && r2++, t2 += j(n2) ? 2 : 1));
        }
        return t2;
      };
      var z = H, W = H;
      z.default = W;
      var Y = (e2) => {
        if ("string" != typeof e2)
          throw new TypeError("Expected a string");
        return e2.replace(/[|\\{}()[\]^$+*?.]/g, "\\$&").replace(/-/g, "\\x2d");
      };
      function Q(e2, t2) {
        return t2 || (t2 = e2.slice(0)), Object.freeze(Object.defineProperties(e2, { raw: { value: Object.freeze(t2) } }));
      }
      var J = function(e2) {
        for (var t2 = -1, r2 = null == e2 ? 0 : e2.length, n2 = {}; ++t2 < r2; ) {
          var s2 = e2[t2];
          n2[s2[0]] = s2[1];
        }
        return n2;
      }, Z = void 0 !== Z ? Z : "undefined" != typeof self ? self : "undefined" != typeof window ? window : {};
      function K() {
        throw new Error("setTimeout has not been defined");
      }
      function ee() {
        throw new Error("clearTimeout has not been defined");
      }
      var te = K, re = ee;
      function ne(e2) {
        if (te === setTimeout)
          return setTimeout(e2, 0);
        if ((te === K || !te) && setTimeout)
          return te = setTimeout, setTimeout(e2, 0);
        try {
          return te(e2, 0);
        } catch (t2) {
          try {
            return te.call(null, e2, 0);
          } catch (t3) {
            return te.call(this, e2, 0);
          }
        }
      }
      "function" == typeof Z.setTimeout && (te = setTimeout), "function" == typeof Z.clearTimeout && (re = clearTimeout);
      var se, ie = [], oe = false, ae = -1;
      function ue() {
        oe && se && (oe = false, se.length ? ie = se.concat(ie) : ae = -1, ie.length && ce());
      }
      function ce() {
        if (!oe) {
          var e2 = ne(ue);
          oe = true;
          for (var t2 = ie.length; t2; ) {
            for (se = ie, ie = []; ++ae < t2; )
              se && se[ae].run();
            ae = -1, t2 = ie.length;
          }
          se = null, oe = false, function(e3) {
            if (re === clearTimeout)
              return clearTimeout(e3);
            if ((re === ee || !re) && clearTimeout)
              return re = clearTimeout, clearTimeout(e3);
            try {
              re(e3);
            } catch (t3) {
              try {
                return re.call(null, e3);
              } catch (t4) {
                return re.call(this, e3);
              }
            }
          }(e2);
        }
      }
      function le(e2, t2) {
        this.fun = e2, this.array = t2;
      }
      le.prototype.run = function() {
        this.fun.apply(null, this.array);
      };
      function De() {
      }
      var pe = De, he = De, de = De, me = De, fe = De, ge = De, Ee = De;
      var Ce = Z.performance || {}, Te = Ce.now || Ce.mozNow || Ce.msNow || Ce.oNow || Ce.webkitNow || function() {
        return new Date().getTime();
      };
      var _e = new Date();
      var Se = { nextTick: function(e2) {
        var t2 = new Array(arguments.length - 1);
        if (arguments.length > 1)
          for (var r2 = 1; r2 < arguments.length; r2++)
            t2[r2 - 1] = arguments[r2];
        ie.push(new le(e2, t2)), 1 !== ie.length || oe || ne(ce);
      }, title: "browser", browser: true, env: {}, argv: [], version: "", versions: {}, on: pe, addListener: he, once: de, off: me, removeListener: fe, removeAllListeners: ge, emit: Ee, binding: function(e2) {
        throw new Error("process.binding is not supported");
      }, cwd: function() {
        return "/";
      }, chdir: function(e2) {
        throw new Error("process.chdir is not supported");
      }, umask: function() {
        return 0;
      }, hrtime: function(e2) {
        var t2 = 1e-3 * Te.call(Ce), r2 = Math.floor(t2), n2 = Math.floor(t2 % 1 * 1e9);
        return e2 && (r2 -= e2[0], (n2 -= e2[1]) < 0 && (r2--, n2 += 1e9)), [r2, n2];
      }, platform: "browser", release: {}, config: {}, uptime: function() {
        return (new Date() - _e) / 1e3;
      } };
      var ye = "object" == typeof Se && Se.env && Se.env.NODE_DEBUG && /\bsemver\b/i.test(Se.env.NODE_DEBUG) ? (...e2) => console.error("SEMVER", ...e2) : () => {
      };
      var Fe = { SEMVER_SPEC_VERSION: "2.0.0", MAX_LENGTH: 256, MAX_SAFE_INTEGER: Number.MAX_SAFE_INTEGER || 9007199254740991, MAX_SAFE_COMPONENT_LENGTH: 16 }, ve = t(function(e2, t2) {
        const { MAX_SAFE_COMPONENT_LENGTH: r2 } = Fe, n2 = (t2 = e2.exports = {}).re = [], s2 = t2.src = [], i2 = t2.t = {};
        let o2 = 0;
        const a2 = (e3, t3, r3) => {
          const a3 = o2++;
          ye(a3, t3), i2[e3] = a3, s2[a3] = t3, n2[a3] = new RegExp(t3, r3 ? "g" : void 0);
        };
        a2("NUMERICIDENTIFIER", "0|[1-9]\\d*"), a2("NUMERICIDENTIFIERLOOSE", "[0-9]+"), a2("NONNUMERICIDENTIFIER", "\\d*[a-zA-Z-][a-zA-Z0-9-]*"), a2("MAINVERSION", "(".concat(s2[i2.NUMERICIDENTIFIER], ")\\.") + "(".concat(s2[i2.NUMERICIDENTIFIER], ")\\.") + "(".concat(s2[i2.NUMERICIDENTIFIER], ")")), a2("MAINVERSIONLOOSE", "(".concat(s2[i2.NUMERICIDENTIFIERLOOSE], ")\\.") + "(".concat(s2[i2.NUMERICIDENTIFIERLOOSE], ")\\.") + "(".concat(s2[i2.NUMERICIDENTIFIERLOOSE], ")")), a2("PRERELEASEIDENTIFIER", "(?:".concat(s2[i2.NUMERICIDENTIFIER], "|").concat(s2[i2.NONNUMERICIDENTIFIER], ")")), a2("PRERELEASEIDENTIFIERLOOSE", "(?:".concat(s2[i2.NUMERICIDENTIFIERLOOSE], "|").concat(s2[i2.NONNUMERICIDENTIFIER], ")")), a2("PRERELEASE", "(?:-(".concat(s2[i2.PRERELEASEIDENTIFIER], "(?:\\.").concat(s2[i2.PRERELEASEIDENTIFIER], ")*))")), a2("PRERELEASELOOSE", "(?:-?(".concat(s2[i2.PRERELEASEIDENTIFIERLOOSE], "(?:\\.").concat(s2[i2.PRERELEASEIDENTIFIERLOOSE], ")*))")), a2("BUILDIDENTIFIER", "[0-9A-Za-z-]+"), a2("BUILD", "(?:\\+(".concat(s2[i2.BUILDIDENTIFIER], "(?:\\.").concat(s2[i2.BUILDIDENTIFIER], ")*))")), a2("FULLPLAIN", "v?".concat(s2[i2.MAINVERSION]).concat(s2[i2.PRERELEASE], "?").concat(s2[i2.BUILD], "?")), a2("FULL", "^".concat(s2[i2.FULLPLAIN], "$")), a2("LOOSEPLAIN", "[v=\\s]*".concat(s2[i2.MAINVERSIONLOOSE]).concat(s2[i2.PRERELEASELOOSE], "?").concat(s2[i2.BUILD], "?")), a2("LOOSE", "^".concat(s2[i2.LOOSEPLAIN], "$")), a2("GTLT", "((?:<|>)?=?)"), a2("XRANGEIDENTIFIERLOOSE", "".concat(s2[i2.NUMERICIDENTIFIERLOOSE], "|x|X|\\*")), a2("XRANGEIDENTIFIER", "".concat(s2[i2.NUMERICIDENTIFIER], "|x|X|\\*")), a2("XRANGEPLAIN", "[v=\\s]*(".concat(s2[i2.XRANGEIDENTIFIER], ")") + "(?:\\.(".concat(s2[i2.XRANGEIDENTIFIER], ")") + "(?:\\.(".concat(s2[i2.XRANGEIDENTIFIER], ")") + "(?:".concat(s2[i2.PRERELEASE], ")?").concat(s2[i2.BUILD], "?") + ")?)?"), a2("XRANGEPLAINLOOSE", "[v=\\s]*(".concat(s2[i2.XRANGEIDENTIFIERLOOSE], ")") + "(?:\\.(".concat(s2[i2.XRANGEIDENTIFIERLOOSE], ")") + "(?:\\.(".concat(s2[i2.XRANGEIDENTIFIERLOOSE], ")") + "(?:".concat(s2[i2.PRERELEASELOOSE], ")?").concat(s2[i2.BUILD], "?") + ")?)?"), a2("XRANGE", "^".concat(s2[i2.GTLT], "\\s*").concat(s2[i2.XRANGEPLAIN], "$")), a2("XRANGELOOSE", "^".concat(s2[i2.GTLT], "\\s*").concat(s2[i2.XRANGEPLAINLOOSE], "$")), a2("COERCE", "".concat("(^|[^\\d])(\\d{1,").concat(r2, "})") + "(?:\\.(\\d{1,".concat(r2, "}))?") + "(?:\\.(\\d{1,".concat(r2, "}))?") + "(?:$|[^\\d])"), a2("COERCERTL", s2[i2.COERCE], true), a2("LONETILDE", "(?:~>?)"), a2("TILDETRIM", "(\\s*)".concat(s2[i2.LONETILDE], "\\s+"), true), t2.tildeTrimReplace = "$1~", a2("TILDE", "^".concat(s2[i2.LONETILDE]).concat(s2[i2.XRANGEPLAIN], "$")), a2("TILDELOOSE", "^".concat(s2[i2.LONETILDE]).concat(s2[i2.XRANGEPLAINLOOSE], "$")), a2("LONECARET", "(?:\\^)"), a2("CARETTRIM", "(\\s*)".concat(s2[i2.LONECARET], "\\s+"), true), t2.caretTrimReplace = "$1^", a2("CARET", "^".concat(s2[i2.LONECARET]).concat(s2[i2.XRANGEPLAIN], "$")), a2("CARETLOOSE", "^".concat(s2[i2.LONECARET]).concat(s2[i2.XRANGEPLAINLOOSE], "$")), a2("COMPARATORLOOSE", "^".concat(s2[i2.GTLT], "\\s*(").concat(s2[i2.LOOSEPLAIN], ")$|^$")), a2("COMPARATOR", "^".concat(s2[i2.GTLT], "\\s*(").concat(s2[i2.FULLPLAIN], ")$|^$")), a2("COMPARATORTRIM", "(\\s*)".concat(s2[i2.GTLT], "\\s*(").concat(s2[i2.LOOSEPLAIN], "|").concat(s2[i2.XRANGEPLAIN], ")"), true), t2.comparatorTrimReplace = "$1$2$3", a2("HYPHENRANGE", "^\\s*(".concat(s2[i2.XRANGEPLAIN], ")") + "\\s+-\\s+" + "(".concat(s2[i2.XRANGEPLAIN], ")") + "\\s*$"), a2("HYPHENRANGELOOSE", "^\\s*(".concat(s2[i2.XRANGEPLAINLOOSE], ")") + "\\s+-\\s+" + "(".concat(s2[i2.XRANGEPLAINLOOSE], ")") + "\\s*$"), a2("STAR", "(<|>)?=?\\s*\\*"), a2("GTE0", "^\\s*>=\\s*0.0.0\\s*$"), a2("GTE0PRE", "^\\s*>=\\s*0.0.0-0\\s*$");
      });
      const Ae = ["includePrerelease", "loose", "rtl"];
      var be = (e2) => e2 ? "object" != typeof e2 ? { loose: true } : Ae.filter((t2) => e2[t2]).reduce((e3, t2) => (e3[t2] = true, e3), {}) : {};
      const we = /^[0-9]+$/, Ne = (e2, t2) => {
        const r2 = we.test(e2), n2 = we.test(t2);
        return r2 && n2 && (e2 = +e2, t2 = +t2), e2 === t2 ? 0 : r2 && !n2 ? -1 : n2 && !r2 ? 1 : e2 < t2 ? -1 : 1;
      };
      var ke = { compareIdentifiers: Ne, rcompareIdentifiers: (e2, t2) => Ne(t2, e2) };
      const { MAX_LENGTH: xe, MAX_SAFE_INTEGER: Ie } = Fe, { re: Pe, t: Re } = ve, { compareIdentifiers: Oe } = ke;
      class Le {
        constructor(e2, t2) {
          if (t2 = be(t2), e2 instanceof Le) {
            if (e2.loose === !!t2.loose && e2.includePrerelease === !!t2.includePrerelease)
              return e2;
            e2 = e2.version;
          } else if ("string" != typeof e2)
            throw new TypeError("Invalid Version: ".concat(e2));
          if (e2.length > xe)
            throw new TypeError("version is longer than ".concat(xe, " characters"));
          ye("SemVer", e2, t2), this.options = t2, this.loose = !!t2.loose, this.includePrerelease = !!t2.includePrerelease;
          const r2 = e2.trim().match(t2.loose ? Pe[Re.LOOSE] : Pe[Re.FULL]);
          if (!r2)
            throw new TypeError("Invalid Version: ".concat(e2));
          if (this.raw = e2, this.major = +r2[1], this.minor = +r2[2], this.patch = +r2[3], this.major > Ie || this.major < 0)
            throw new TypeError("Invalid major version");
          if (this.minor > Ie || this.minor < 0)
            throw new TypeError("Invalid minor version");
          if (this.patch > Ie || this.patch < 0)
            throw new TypeError("Invalid patch version");
          r2[4] ? this.prerelease = r2[4].split(".").map((e3) => {
            if (/^[0-9]+$/.test(e3)) {
              const t3 = +e3;
              if (t3 >= 0 && t3 < Ie)
                return t3;
            }
            return e3;
          }) : this.prerelease = [], this.build = r2[5] ? r2[5].split(".") : [], this.format();
        }
        format() {
          return this.version = "".concat(this.major, ".").concat(this.minor, ".").concat(this.patch), this.prerelease.length && (this.version += "-".concat(this.prerelease.join("."))), this.version;
        }
        toString() {
          return this.version;
        }
        compare(e2) {
          if (ye("SemVer.compare", this.version, this.options, e2), !(e2 instanceof Le)) {
            if ("string" == typeof e2 && e2 === this.version)
              return 0;
            e2 = new Le(e2, this.options);
          }
          return e2.version === this.version ? 0 : this.compareMain(e2) || this.comparePre(e2);
        }
        compareMain(e2) {
          return e2 instanceof Le || (e2 = new Le(e2, this.options)), Oe(this.major, e2.major) || Oe(this.minor, e2.minor) || Oe(this.patch, e2.patch);
        }
        comparePre(e2) {
          if (e2 instanceof Le || (e2 = new Le(e2, this.options)), this.prerelease.length && !e2.prerelease.length)
            return -1;
          if (!this.prerelease.length && e2.prerelease.length)
            return 1;
          if (!this.prerelease.length && !e2.prerelease.length)
            return 0;
          let t2 = 0;
          do {
            const r2 = this.prerelease[t2], n2 = e2.prerelease[t2];
            if (ye("prerelease compare", t2, r2, n2), void 0 === r2 && void 0 === n2)
              return 0;
            if (void 0 === n2)
              return 1;
            if (void 0 === r2)
              return -1;
            if (r2 !== n2)
              return Oe(r2, n2);
          } while (++t2);
        }
        compareBuild(e2) {
          e2 instanceof Le || (e2 = new Le(e2, this.options));
          let t2 = 0;
          do {
            const r2 = this.build[t2], n2 = e2.build[t2];
            if (ye("prerelease compare", t2, r2, n2), void 0 === r2 && void 0 === n2)
              return 0;
            if (void 0 === n2)
              return 1;
            if (void 0 === r2)
              return -1;
            if (r2 !== n2)
              return Oe(r2, n2);
          } while (++t2);
        }
        inc(e2, t2) {
          switch (e2) {
            case "premajor":
              this.prerelease.length = 0, this.patch = 0, this.minor = 0, this.major++, this.inc("pre", t2);
              break;
            case "preminor":
              this.prerelease.length = 0, this.patch = 0, this.minor++, this.inc("pre", t2);
              break;
            case "prepatch":
              this.prerelease.length = 0, this.inc("patch", t2), this.inc("pre", t2);
              break;
            case "prerelease":
              0 === this.prerelease.length && this.inc("patch", t2), this.inc("pre", t2);
              break;
            case "major":
              0 === this.minor && 0 === this.patch && 0 !== this.prerelease.length || this.major++, this.minor = 0, this.patch = 0, this.prerelease = [];
              break;
            case "minor":
              0 === this.patch && 0 !== this.prerelease.length || this.minor++, this.patch = 0, this.prerelease = [];
              break;
            case "patch":
              0 === this.prerelease.length && this.patch++, this.prerelease = [];
              break;
            case "pre":
              if (0 === this.prerelease.length)
                this.prerelease = [0];
              else {
                let e3 = this.prerelease.length;
                for (; --e3 >= 0; )
                  "number" == typeof this.prerelease[e3] && (this.prerelease[e3]++, e3 = -2);
                -1 === e3 && this.prerelease.push(0);
              }
              t2 && (this.prerelease[0] === t2 ? isNaN(this.prerelease[1]) && (this.prerelease = [t2, 0]) : this.prerelease = [t2, 0]);
              break;
            default:
              throw new Error("invalid increment argument: ".concat(e2));
          }
          return this.format(), this.raw = this.version, this;
        }
      }
      var Be = Le;
      var qe = (e2, t2, r2) => new Be(e2, r2).compare(new Be(t2, r2));
      var $e = (e2, t2, r2) => qe(e2, t2, r2) < 0;
      var Me, Ue, Ve, Ge, je, Xe, He = (e2, t2, r2) => qe(e2, t2, r2) >= 0, ze = "2.3.0", We = t(function(e2, t2) {
        function r2() {
          for (var e3 = [], t3 = 0; t3 < arguments.length; t3++)
            e3[t3] = arguments[t3];
        }
        function n2() {
          return "undefined" != typeof WeakMap ? /* @__PURE__ */ new WeakMap() : { add: r2, delete: r2, get: r2, set: r2, has: function(e3) {
            return false;
          } };
        }
        Object.defineProperty(t2, "__esModule", { value: true }), t2.outdent = void 0;
        var s2 = Object.prototype.hasOwnProperty, i2 = function(e3, t3) {
          return s2.call(e3, t3);
        };
        function o2(e3, t3) {
          for (var r3 in t3)
            i2(t3, r3) && (e3[r3] = t3[r3]);
          return e3;
        }
        var a2 = /^[ \t]*(?:\r\n|\r|\n)/, u2 = /(?:\r\n|\r|\n)[ \t]*$/, c2 = /^(?:[\r\n]|$)/, l2 = /(?:\r\n|\r|\n)([ \t]*)(?:[^ \t\r\n]|$)/, D2 = /^[ \t]*[\r\n][ \t\r\n]*$/;
        function p2(e3, t3, r3) {
          var n3 = 0, s3 = e3[0].match(l2);
          s3 && (n3 = s3[1].length);
          var i3 = new RegExp("(\\r\\n|\\r|\\n).{0," + n3 + "}", "g");
          t3 && (e3 = e3.slice(1));
          var o3 = r3.newline, c3 = r3.trimLeadingNewline, D3 = r3.trimTrailingNewline, p3 = "string" == typeof o3, h3 = e3.length;
          return e3.map(function(e4, t4) {
            return e4 = e4.replace(i3, "$1"), 0 === t4 && c3 && (e4 = e4.replace(a2, "")), t4 === h3 - 1 && D3 && (e4 = e4.replace(u2, "")), p3 && (e4 = e4.replace(/\r\n|\n|\r/g, function(e5) {
              return o3;
            })), e4;
          });
        }
        function h2(e3, t3) {
          for (var r3 = "", n3 = 0, s3 = e3.length; n3 < s3; n3++)
            r3 += e3[n3], n3 < s3 - 1 && (r3 += t3[n3]);
          return r3;
        }
        function d2(e3) {
          return i2(e3, "raw") && i2(e3, "length");
        }
        var m2 = function e3(t3) {
          var r3 = n2(), s3 = n2();
          return o2(function n3(i3) {
            for (var a3 = [], u3 = 1; u3 < arguments.length; u3++)
              a3[u3 - 1] = arguments[u3];
            if (d2(i3)) {
              var l3 = i3, f2 = (a3[0] === n3 || a3[0] === m2) && D2.test(l3[0]) && c2.test(l3[1]), g2 = f2 ? s3 : r3, E2 = g2.get(l3);
              if (E2 || (E2 = p2(l3, f2, t3), g2.set(l3, E2)), 0 === a3.length)
                return E2[0];
              var C2 = h2(E2, f2 ? a3.slice(1) : a3);
              return C2;
            }
            return e3(o2(o2({}, t3), i3 || {}));
          }, { string: function(e4) {
            return p2([e4], false, t3)[0];
          } });
        }({ trimLeadingNewline: true, trimTrailingNewline: true });
        t2.outdent = m2, t2.default = m2;
        try {
          e2.exports = m2, Object.defineProperty(m2, "__esModule", { value: true }), m2.default = m2, m2.outdent = m2;
        } catch (e3) {
        }
      });
      const { outdent: Ye } = We, Qe = "Config", Je = "Editor", Ze = "Other", Ke = "Global", et = "Special", tt = { cursorOffset: { since: "1.4.0", category: et, type: "int", default: -1, range: { start: -1, end: Number.POSITIVE_INFINITY, step: 1 }, description: Ye(Me || (Me = Q(["\n      Print (to stderr) where a cursor at the given position would move to after formatting.\n      This option cannot be used with --range-start and --range-end.\n    "]))), cliCategory: Je }, endOfLine: { since: "1.15.0", category: Ke, type: "choice", default: [{ since: "1.15.0", value: "auto" }, { since: "2.0.0", value: "lf" }], description: "Which end of line characters to apply.", choices: [{ value: "lf", description: "Line Feed only (\\n), common on Linux and macOS as well as inside git repos" }, { value: "crlf", description: "Carriage Return + Line Feed characters (\\r\\n), common on Windows" }, { value: "cr", description: "Carriage Return character only (\\r), used very rarely" }, { value: "auto", description: Ye(Ue || (Ue = Q(["\n          Maintain existing\n          (mixed values within one file are normalised by looking at what's used after the first line)\n        "]))) }] }, filepath: { since: "1.4.0", category: et, type: "path", description: "Specify the input filepath. This will be used to do parser inference.", cliName: "stdin-filepath", cliCategory: Ze, cliDescription: "Path to the file to pretend that stdin comes from." }, insertPragma: { since: "1.8.0", category: et, type: "boolean", default: false, description: "Insert @format pragma into file's first docblock comment.", cliCategory: Ze }, parser: { since: "0.0.10", category: Ke, type: "choice", default: [{ since: "0.0.10", value: "babylon" }, { since: "1.13.0", value: void 0 }], description: "Which parser to use.", exception: (e2) => "string" == typeof e2 || "function" == typeof e2, choices: [{ value: "flow", description: "Flow" }, { value: "babel", since: "1.16.0", description: "JavaScript" }, { value: "babel-flow", since: "1.16.0", description: "Flow" }, { value: "babel-ts", since: "2.0.0", description: "TypeScript" }, { value: "typescript", since: "1.4.0", description: "TypeScript" }, { value: "espree", since: "2.2.0", description: "JavaScript" }, { value: "meriyah", since: "2.2.0", description: "JavaScript" }, { value: "css", since: "1.7.1", description: "CSS" }, { value: "less", since: "1.7.1", description: "Less" }, { value: "scss", since: "1.7.1", description: "SCSS" }, { value: "json", since: "1.5.0", description: "JSON" }, { value: "json5", since: "1.13.0", description: "JSON5" }, { value: "json-stringify", since: "1.13.0", description: "JSON.stringify" }, { value: "graphql", since: "1.5.0", description: "GraphQL" }, { value: "markdown", since: "1.8.0", description: "Markdown" }, { value: "mdx", since: "1.15.0", description: "MDX" }, { value: "vue", since: "1.10.0", description: "Vue" }, { value: "yaml", since: "1.14.0", description: "YAML" }, { value: "glimmer", since: "2.3.0", description: "Ember / Handlebars" }, { value: "html", since: "1.15.0", description: "HTML" }, { value: "angular", since: "1.15.0", description: "Angular" }, { value: "lwc", since: "1.17.0", description: "Lightning Web Components" }] }, plugins: { since: "1.10.0", type: "path", array: true, default: [{ value: [] }], category: Ke, description: "Add a plugin. Multiple plugins can be passed as separate `--plugin`s.", exception: (e2) => "string" == typeof e2 || "object" == typeof e2, cliName: "plugin", cliCategory: Qe }, pluginSearchDirs: { since: "1.13.0", type: "path", array: true, default: [{ value: [] }], category: Ke, description: Ye(Ve || (Ve = Q(["\n      Custom directory that contains prettier plugins in node_modules subdirectory.\n      Overrides default behavior when plugins are searched relatively to the location of Prettier.\n      Multiple values are accepted.\n    "]))), exception: (e2) => "string" == typeof e2 || "object" == typeof e2, cliName: "plugin-search-dir", cliCategory: Qe }, printWidth: { since: "0.0.0", category: Ke, type: "int", default: 80, description: "The line length where Prettier will try wrap.", range: { start: 0, end: Number.POSITIVE_INFINITY, step: 1 } }, rangeEnd: { since: "1.4.0", category: et, type: "int", default: Number.POSITIVE_INFINITY, range: { start: 0, end: Number.POSITIVE_INFINITY, step: 1 }, description: Ye(Ge || (Ge = Q(["\n      Format code ending at a given character offset (exclusive).\n      The range will extend forwards to the end of the selected statement.\n      This option cannot be used with --cursor-offset.\n    "]))), cliCategory: Je }, rangeStart: { since: "1.4.0", category: et, type: "int", default: 0, range: { start: 0, end: Number.POSITIVE_INFINITY, step: 1 }, description: Ye(je || (je = Q(["\n      Format code starting at a given character offset.\n      The range will extend backwards to the start of the first line containing the selected statement.\n      This option cannot be used with --cursor-offset.\n    "]))), cliCategory: Je }, requirePragma: { since: "1.7.0", category: et, type: "boolean", default: false, description: Ye(Xe || (Xe = Q(["\n      Require either '@prettier' or '@format' to be present in the file's first docblock comment\n      in order for it to be formatted.\n    "]))), cliCategory: Ze }, tabWidth: { type: "int", category: Ke, default: 2, description: "Number of spaces per indentation level.", range: { start: 0, end: Number.POSITIVE_INFINITY, step: 1 } }, useTabs: { since: "1.0.0", category: Ke, type: "boolean", default: false, description: "Indent with tabs instead of spaces." }, embeddedLanguageFormatting: { since: "2.1.0", category: Ke, type: "choice", default: [{ since: "2.1.0", value: "auto" }], description: "Control how Prettier formats quoted code embedded in the file.", choices: [{ value: "auto", description: "Format embedded code if Prettier can automatically identify it." }, { value: "off", description: "Never automatically format embedded code." }] } };
      const rt = { compare: qe, lt: $e, gte: He }, nt = ze, st = { CATEGORY_CONFIG: Qe, CATEGORY_EDITOR: Je, CATEGORY_FORMAT: "Format", CATEGORY_OTHER: Ze, CATEGORY_OUTPUT: "Output", CATEGORY_GLOBAL: Ke, CATEGORY_SPECIAL: et, options: tt }.options;
      var it = { getSupportInfo: function({ plugins: e2 = [], showUnreleased: t2 = false, showDeprecated: r2 = false, showInternal: n2 = false } = {}) {
        const s2 = nt.split("-", 1)[0], i2 = e2.reduce((e3, t3) => [...e3, ...t3.languages || []], []).filter(a2), o2 = ((e3, t3) => Object.entries(e3).map(([e4, r3]) => Object.assign({ [t3]: e4 }, r3)))(Object.assign({}, ...e2.map(({ options: e3 }) => e3), st), "name").filter((e3) => a2(e3) && u2(e3)).sort((e3, t3) => e3.name === t3.name ? 0 : e3.name < t3.name ? -1 : 1).map(function(e3) {
          if (n2)
            return e3;
          return function(e4, t3) {
            if (null == e4)
              return {};
            var r3, n3, s3 = {}, i3 = Object.keys(e4);
            for (n3 = 0; n3 < i3.length; n3++)
              r3 = i3[n3], t3.indexOf(r3) >= 0 || (s3[r3] = e4[r3]);
            return s3;
          }(e3, ["cliName", "cliCategory", "cliDescription"]);
        }).map((t3) => {
          t3 = Object.assign({}, t3), Array.isArray(t3.default) && (t3.default = 1 === t3.default.length ? t3.default[0].value : t3.default.filter(a2).sort((e3, t4) => rt.compare(t4.since, e3.since))[0].value), Array.isArray(t3.choices) && (t3.choices = t3.choices.filter((e3) => a2(e3) && u2(e3)), "parser" === t3.name && function(e3, t4, r4) {
            const n3 = new Set(e3.choices.map((e4) => e4.value));
            for (const s3 of t4)
              if (s3.parsers) {
                for (const t5 of s3.parsers)
                  if (!n3.has(t5)) {
                    n3.add(t5);
                    const i3 = r4.find((e4) => e4.parsers && e4.parsers[t5]);
                    let o3 = s3.name;
                    i3 && i3.name && (o3 += " (plugin: ".concat(i3.name, ")")), e3.choices.push({ value: t5, description: o3 });
                  }
              }
          }(t3, i2, e2));
          const r3 = J(e2.filter((e3) => e3.defaultOptions && void 0 !== e3.defaultOptions[t3.name]).map((e3) => [e3.name, e3.defaultOptions[t3.name]]));
          return Object.assign({}, t3, { pluginDefaults: r3 });
        });
        return { languages: i2, options: o2 };
        function a2(e3) {
          return t2 || !("since" in e3) || e3.since && rt.gte(s2, e3.since);
        }
        function u2(e3) {
          return r2 || !("deprecated" in e3) || e3.deprecated && rt.lt(s2, e3.deprecated);
        }
      } };
      const { getSupportInfo: ot } = it, at = /[^\x20-\x7F]/;
      function ut(e2) {
        return (t2, r2, n2) => {
          const s2 = n2 && n2.backwards;
          if (false === r2)
            return false;
          const { length: i2 } = t2;
          let o2 = r2;
          for (; o2 >= 0 && o2 < i2; ) {
            const r3 = t2.charAt(o2);
            if (e2 instanceof RegExp) {
              if (!e2.test(r3))
                return o2;
            } else if (!e2.includes(r3))
              return o2;
            s2 ? o2-- : o2++;
          }
          return (-1 === o2 || o2 === i2) && o2;
        };
      }
      const ct = ut(/\s/), lt = ut(" 	"), Dt = ut(",; 	"), pt = ut(/[^\n\r]/);
      function ht(e2, t2) {
        if (false === t2)
          return false;
        if ("/" === e2.charAt(t2) && "*" === e2.charAt(t2 + 1)) {
          for (let r2 = t2 + 2; r2 < e2.length; ++r2)
            if ("*" === e2.charAt(r2) && "/" === e2.charAt(r2 + 1))
              return r2 + 2;
        }
        return t2;
      }
      function dt(e2, t2) {
        return false !== t2 && ("/" === e2.charAt(t2) && "/" === e2.charAt(t2 + 1) ? pt(e2, t2) : t2);
      }
      function mt(e2, t2, r2) {
        const n2 = r2 && r2.backwards;
        if (false === t2)
          return false;
        const s2 = e2.charAt(t2);
        if (n2) {
          if ("\r" === e2.charAt(t2 - 1) && "\n" === s2)
            return t2 - 2;
          if ("\n" === s2 || "\r" === s2 || "\u2028" === s2 || "\u2029" === s2)
            return t2 - 1;
        } else {
          if ("\r" === s2 && "\n" === e2.charAt(t2 + 1))
            return t2 + 2;
          if ("\n" === s2 || "\r" === s2 || "\u2028" === s2 || "\u2029" === s2)
            return t2 + 1;
        }
        return t2;
      }
      function ft(e2, t2, r2 = {}) {
        const n2 = lt(e2, r2.backwards ? t2 - 1 : t2, r2);
        return n2 !== mt(e2, n2, r2);
      }
      function gt(e2, t2) {
        let r2 = null, n2 = t2;
        for (; n2 !== r2; )
          r2 = n2, n2 = Dt(e2, n2), n2 = ht(e2, n2), n2 = lt(e2, n2);
        return n2 = dt(e2, n2), n2 = mt(e2, n2), false !== n2 && ft(e2, n2);
      }
      function Et(e2, t2) {
        let r2 = null, n2 = t2;
        for (; n2 !== r2; )
          r2 = n2, n2 = lt(e2, n2), n2 = ht(e2, n2), n2 = dt(e2, n2), n2 = mt(e2, n2);
        return n2;
      }
      function Ct(e2, t2, r2) {
        return Et(e2, r2(t2));
      }
      function Tt(e2, t2, r2 = 0) {
        let n2 = 0;
        for (let s2 = r2; s2 < e2.length; ++s2)
          "	" === e2[s2] ? n2 = n2 + t2 - n2 % t2 : n2++;
        return n2;
      }
      function _t(e2, t2) {
        const r2 = e2.slice(1, -1), n2 = { quote: '"', regex: /"/g }, s2 = { quote: "'", regex: /'/g }, i2 = "'" === t2 ? s2 : n2, o2 = i2 === s2 ? n2 : s2;
        let a2 = i2.quote;
        if (r2.includes(i2.quote) || r2.includes(o2.quote)) {
          a2 = (r2.match(i2.regex) || []).length > (r2.match(o2.regex) || []).length ? o2.quote : i2.quote;
        }
        return a2;
      }
      function St(e2, t2, r2) {
        const n2 = '"' === t2 ? "'" : '"', s2 = e2.replace(/\\([\S\s])|(["'])/g, (e3, s3, i2) => s3 === n2 ? s3 : i2 === t2 ? "\\" + i2 : i2 || (r2 && /^[^\n\r"'0-7\\bfnrt-vx\u2028\u2029]$/.test(s3) ? s3 : "\\" + s3));
        return t2 + s2 + t2;
      }
      function yt(e2, t2) {
        (e2.comments || (e2.comments = [])).push(t2), t2.printed = false, t2.nodeDescription = function(e3) {
          const t3 = e3.type || e3.kind || "(unknown type)";
          let r2 = String(e3.name || e3.id && ("object" == typeof e3.id ? e3.id.name : e3.id) || e3.key && ("object" == typeof e3.key ? e3.key.name : e3.key) || e3.value && ("object" == typeof e3.value ? "" : String(e3.value)) || e3.operator || "");
          r2.length > 20 && (r2 = r2.slice(0, 19) + "\u2026");
          return t3 + (r2 ? " " + r2 : "");
        }(e2);
      }
      var Ft = { inferParserByLanguage: function(e2, t2) {
        const { languages: r2 } = ot({ plugins: t2.plugins }), n2 = r2.find(({ name: t3 }) => t3.toLowerCase() === e2) || r2.find(({ aliases: t3 }) => Array.isArray(t3) && t3.includes(e2)) || r2.find(({ extensions: t3 }) => Array.isArray(t3) && t3.includes(".".concat(e2)));
        return n2 && n2.parsers[0];
      }, replaceEndOfLineWith: function(e2, t2) {
        const r2 = [];
        for (const n2 of e2.split("\n"))
          r2.length > 0 && r2.push(t2), r2.push(n2);
        return r2;
      }, getStringWidth: function(e2) {
        return e2 ? at.test(e2) ? z(e2) : e2.length : 0;
      }, getMaxContinuousCount: function(e2, t2) {
        const r2 = e2.match(new RegExp("(".concat(Y(t2), ")+"), "g"));
        return null === r2 ? 0 : r2.reduce((e3, r3) => Math.max(e3, r3.length / t2.length), 0);
      }, getMinNotPresentContinuousCount: function(e2, t2) {
        const r2 = e2.match(new RegExp("(".concat(Y(t2), ")+"), "g"));
        if (null === r2)
          return 0;
        const n2 = /* @__PURE__ */ new Map();
        let s2 = 0;
        for (const e3 of r2) {
          const r3 = e3.length / t2.length;
          n2.set(r3, true), r3 > s2 && (s2 = r3);
        }
        for (let e3 = 1; e3 < s2; e3++)
          if (!n2.get(e3))
            return e3;
        return s2 + 1;
      }, getPenultimate: (e2) => e2[e2.length - 2], getLast: M, getNextNonSpaceNonCommentCharacterIndexWithStartIndex: Et, getNextNonSpaceNonCommentCharacterIndex: Ct, getNextNonSpaceNonCommentCharacter: function(e2, t2, r2) {
        return e2.charAt(Ct(e2, t2, r2));
      }, skip: ut, skipWhitespace: ct, skipSpaces: lt, skipToLineEnd: Dt, skipEverythingButNewLine: pt, skipInlineComment: ht, skipTrailingComment: dt, skipNewline: mt, isNextLineEmptyAfterIndex: gt, isNextLineEmpty: function(e2, t2, r2) {
        return gt(e2, r2(t2));
      }, isPreviousLineEmpty: function(e2, t2, r2) {
        let n2 = r2(t2) - 1;
        return n2 = lt(e2, n2, { backwards: true }), n2 = mt(e2, n2, { backwards: true }), n2 = lt(e2, n2, { backwards: true }), n2 !== mt(e2, n2, { backwards: true });
      }, hasNewline: ft, hasNewlineInRange: function(e2, t2, r2) {
        for (let n2 = t2; n2 < r2; ++n2)
          if ("\n" === e2.charAt(n2))
            return true;
        return false;
      }, hasSpaces: function(e2, t2, r2 = {}) {
        return lt(e2, r2.backwards ? t2 - 1 : t2, r2) !== t2;
      }, getAlignmentSize: Tt, getIndentSize: function(e2, t2) {
        const r2 = e2.lastIndexOf("\n");
        return -1 === r2 ? 0 : Tt(e2.slice(r2 + 1).match(/^[\t ]*/)[0], t2);
      }, getPreferredQuote: _t, printString: function(e2, t2) {
        return St(e2.slice(1, -1), "json" === t2.parser || "json5" === t2.parser && "preserve" === t2.quoteProps && !t2.singleQuote ? '"' : t2.__isInHtmlAttribute ? "'" : _t(e2, t2.singleQuote ? "'" : '"'), !("css" === t2.parser || "less" === t2.parser || "scss" === t2.parser || t2.__embeddedInHtml));
      }, printNumber: function(e2) {
        return e2.toLowerCase().replace(/^([+-]?[\d.]+e)(?:\+|(-))?0*(\d)/, "$1$2$3").replace(/^([+-]?[\d.]+)e[+-]?0+$/, "$1").replace(/^([+-])?\./, "$10.").replace(/(\.\d+?)0+(?=e|$)/, "$1").replace(/\.(?=e|$)/, "");
      }, makeString: St, addLeadingComment: function(e2, t2) {
        t2.leading = true, t2.trailing = false, yt(e2, t2);
      }, addDanglingComment: function(e2, t2, r2) {
        t2.leading = false, t2.trailing = false, r2 && (t2.marker = r2), yt(e2, t2);
      }, addTrailingComment: function(e2, t2) {
        t2.leading = false, t2.trailing = true, yt(e2, t2);
      }, isFrontMatterNode: function(e2) {
        return e2 && "front-matter" === e2.type;
      }, getShebang: function(e2) {
        if (!e2.startsWith("#!"))
          return "";
        const t2 = e2.indexOf("\n");
        return -1 === t2 ? e2 : e2.slice(0, t2);
      }, isNonEmptyArray: function(e2) {
        return Array.isArray(e2) && e2.length > 0;
      }, createGroupIdMapper: function(e2) {
        const t2 = /* @__PURE__ */ new WeakMap();
        return function(r2) {
          return t2.has(r2) || t2.set(r2, Symbol(e2)), t2.get(r2);
        };
      } }, vt = { "*": ["accesskey", "autocapitalize", "autofocus", "class", "contenteditable", "dir", "draggable", "enterkeyhint", "hidden", "id", "inputmode", "is", "itemid", "itemprop", "itemref", "itemscope", "itemtype", "lang", "nonce", "slot", "spellcheck", "style", "tabindex", "title", "translate"], a: ["accesskey", "charset", "coords", "download", "href", "hreflang", "name", "ping", "referrerpolicy", "rel", "rev", "shape", "tabindex", "target", "type"], abbr: ["title"], applet: ["align", "alt", "archive", "code", "codebase", "height", "hspace", "name", "object", "vspace", "width"], area: ["accesskey", "alt", "coords", "download", "href", "hreflang", "nohref", "ping", "referrerpolicy", "rel", "shape", "tabindex", "target", "type"], audio: ["autoplay", "controls", "crossorigin", "loop", "muted", "preload", "src"], base: ["href", "target"], basefont: ["color", "face", "size"], bdo: ["dir"], blockquote: ["cite"], body: ["alink", "background", "bgcolor", "link", "text", "vlink"], br: ["clear"], button: ["accesskey", "autofocus", "disabled", "form", "formaction", "formenctype", "formmethod", "formnovalidate", "formtarget", "name", "tabindex", "type", "value"], canvas: ["height", "width"], caption: ["align"], col: ["align", "char", "charoff", "span", "valign", "width"], colgroup: ["align", "char", "charoff", "span", "valign", "width"], data: ["value"], del: ["cite", "datetime"], details: ["open"], dfn: ["title"], dialog: ["open"], dir: ["compact"], div: ["align"], dl: ["compact"], embed: ["height", "src", "type", "width"], fieldset: ["disabled", "form", "name"], font: ["color", "face", "size"], form: ["accept", "accept-charset", "action", "autocomplete", "enctype", "method", "name", "novalidate", "target"], frame: ["frameborder", "longdesc", "marginheight", "marginwidth", "name", "noresize", "scrolling", "src"], frameset: ["cols", "rows"], h1: ["align"], h2: ["align"], h3: ["align"], h4: ["align"], h5: ["align"], h6: ["align"], head: ["profile"], hr: ["align", "noshade", "size", "width"], html: ["manifest", "version"], iframe: ["align", "allow", "allowfullscreen", "allowpaymentrequest", "allowusermedia", "frameborder", "height", "loading", "longdesc", "marginheight", "marginwidth", "name", "referrerpolicy", "sandbox", "scrolling", "src", "srcdoc", "width"], img: ["align", "alt", "border", "crossorigin", "decoding", "height", "hspace", "ismap", "loading", "longdesc", "name", "referrerpolicy", "sizes", "src", "srcset", "usemap", "vspace", "width"], input: ["accept", "accesskey", "align", "alt", "autocomplete", "autofocus", "checked", "dirname", "disabled", "form", "formaction", "formenctype", "formmethod", "formnovalidate", "formtarget", "height", "ismap", "list", "max", "maxlength", "min", "minlength", "multiple", "name", "pattern", "placeholder", "readonly", "required", "size", "src", "step", "tabindex", "title", "type", "usemap", "value", "width"], ins: ["cite", "datetime"], isindex: ["prompt"], label: ["accesskey", "for", "form"], legend: ["accesskey", "align"], li: ["type", "value"], link: ["as", "charset", "color", "crossorigin", "disabled", "href", "hreflang", "imagesizes", "imagesrcset", "integrity", "media", "nonce", "referrerpolicy", "rel", "rev", "sizes", "target", "title", "type"], map: ["name"], menu: ["compact"], meta: ["charset", "content", "http-equiv", "name", "scheme"], meter: ["high", "low", "max", "min", "optimum", "value"], object: ["align", "archive", "border", "classid", "codebase", "codetype", "data", "declare", "form", "height", "hspace", "name", "standby", "tabindex", "type", "typemustmatch", "usemap", "vspace", "width"], ol: ["compact", "reversed", "start", "type"], optgroup: ["disabled", "label"], option: ["disabled", "label", "selected", "value"], output: ["for", "form", "name"], p: ["align"], param: ["name", "type", "value", "valuetype"], pre: ["width"], progress: ["max", "value"], q: ["cite"], script: ["async", "charset", "crossorigin", "defer", "integrity", "language", "nomodule", "nonce", "referrerpolicy", "src", "type"], select: ["autocomplete", "autofocus", "disabled", "form", "multiple", "name", "required", "size", "tabindex"], slot: ["name"], source: ["media", "sizes", "src", "srcset", "type"], style: ["media", "nonce", "title", "type"], table: ["align", "bgcolor", "border", "cellpadding", "cellspacing", "frame", "rules", "summary", "width"], tbody: ["align", "char", "charoff", "valign"], td: ["abbr", "align", "axis", "bgcolor", "char", "charoff", "colspan", "headers", "height", "nowrap", "rowspan", "scope", "valign", "width"], textarea: ["accesskey", "autocomplete", "autofocus", "cols", "dirname", "disabled", "form", "maxlength", "minlength", "name", "placeholder", "readonly", "required", "rows", "tabindex", "wrap"], tfoot: ["align", "char", "charoff", "valign"], th: ["abbr", "align", "axis", "bgcolor", "char", "charoff", "colspan", "headers", "height", "nowrap", "rowspan", "scope", "valign", "width"], thead: ["align", "char", "charoff", "valign"], time: ["datetime"], tr: ["align", "bgcolor", "char", "charoff", "valign"], track: ["default", "kind", "label", "src", "srclang"], ul: ["compact", "type"], video: ["autoplay", "controls", "crossorigin", "height", "loop", "muted", "playsinline", "poster", "preload", "src", "width"] };
      const { inferParserByLanguage: At, isFrontMatterNode: bt } = Ft, { CSS_DISPLAY_TAGS: wt, CSS_DISPLAY_DEFAULT: Nt, CSS_WHITE_SPACE_TAGS: kt, CSS_WHITE_SPACE_DEFAULT: xt } = { CSS_DISPLAY_TAGS: { area: "none", base: "none", basefont: "none", datalist: "none", head: "none", link: "none", meta: "none", noembed: "none", noframes: "none", param: "block", rp: "none", script: "block", source: "block", style: "none", template: "inline", track: "block", title: "none", html: "block", body: "block", address: "block", blockquote: "block", center: "block", div: "block", figure: "block", figcaption: "block", footer: "block", form: "block", header: "block", hr: "block", legend: "block", listing: "block", main: "block", p: "block", plaintext: "block", pre: "block", xmp: "block", slot: "contents", ruby: "ruby", rt: "ruby-text", article: "block", aside: "block", h1: "block", h2: "block", h3: "block", h4: "block", h5: "block", h6: "block", hgroup: "block", nav: "block", section: "block", dir: "block", dd: "block", dl: "block", dt: "block", ol: "block", ul: "block", li: "list-item", table: "table", caption: "table-caption", colgroup: "table-column-group", col: "table-column", thead: "table-header-group", tbody: "table-row-group", tfoot: "table-footer-group", tr: "table-row", td: "table-cell", th: "table-cell", fieldset: "block", button: "inline-block", details: "block", summary: "block", dialog: "block", meter: "inline-block", progress: "inline-block", object: "inline-block", video: "inline-block", audio: "inline-block", select: "inline-block", option: "block", optgroup: "block" }, CSS_DISPLAY_DEFAULT: "inline", CSS_WHITE_SPACE_TAGS: { listing: "pre", plaintext: "pre", pre: "pre", xmp: "pre", nobr: "nowrap", table: "initial", textarea: "pre-wrap" }, CSS_WHITE_SPACE_DEFAULT: "normal" }, It = Lt(["a", "abbr", "acronym", "address", "applet", "area", "article", "aside", "audio", "b", "base", "basefont", "bdi", "bdo", "bgsound", "big", "blink", "blockquote", "body", "br", "button", "canvas", "caption", "center", "cite", "code", "col", "colgroup", "command", "content", "data", "datalist", "dd", "del", "details", "dfn", "dialog", "dir", "div", "dl", "dt", "element", "em", "embed", "fieldset", "figcaption", "figure", "font", "footer", "form", "frame", "frameset", "h1", "h2", "h3", "h4", "h5", "h6", "head", "header", "hgroup", "hr", "html", "i", "iframe", "image", "img", "input", "ins", "isindex", "kbd", "keygen", "label", "legend", "li", "link", "listing", "main", "map", "mark", "marquee", "math", "menu", "menuitem", "meta", "meter", "multicol", "nav", "nextid", "nobr", "noembed", "noframes", "noscript", "object", "ol", "optgroup", "option", "output", "p", "param", "picture", "plaintext", "pre", "progress", "q", "rb", "rbc", "rp", "rt", "rtc", "ruby", "s", "samp", "script", "section", "select", "shadow", "slot", "small", "source", "spacer", "span", "strike", "strong", "style", "sub", "summary", "sup", "svg", "table", "tbody", "td", "template", "textarea", "tfoot", "th", "thead", "time", "title", "tr", "track", "tt", "u", "ul", "var", "video", "wbr", "xmp"]), Pt = function(e2, t2) {
        const r2 = /* @__PURE__ */ Object.create(null);
        for (const [n2, s2] of Object.entries(e2))
          r2[n2] = t2(s2, n2);
        return r2;
      }(vt, Lt), Rt = /* @__PURE__ */ new Set(["	", "\n", "\f", "\r", " "]), Ot = (e2) => e2.replace(/[\t\n\f\r ]+$/, "");
      function Lt(e2) {
        const t2 = /* @__PURE__ */ Object.create(null);
        for (const r2 of e2)
          t2[r2] = true;
        return t2;
      }
      function Bt(e2, t2) {
        return !("ieConditionalComment" !== e2.type || !e2.lastChild || e2.lastChild.isSelfClosing || e2.lastChild.endSourceSpan) || ("ieConditionalComment" === e2.type && !e2.complete || (!(!Yt(e2) || !e2.children.some((e3) => "text" !== e3.type && "interpolation" !== e3.type)) || !(!tr(e2, t2) || $t(e2) || "interpolation" === e2.type)));
      }
      function qt(e2) {
        if ("attribute" === e2.type)
          return false;
        if (!e2.parent)
          return false;
        if ("number" != typeof e2.index || 0 === e2.index)
          return false;
        return function(e3) {
          return "comment" === e3.type && "prettier-ignore" === e3.value.trim();
        }(e2.parent.children[e2.index - 1]);
      }
      function $t(e2) {
        return "element" === e2.type && ("script" === e2.fullName || "style" === e2.fullName || "svg:style" === e2.fullName || Qt(e2) && ("script" === e2.name || "style" === e2.name));
      }
      function Mt(e2) {
        return Jt(e2).startsWith("pre");
      }
      function Ut(e2) {
        return "element" === e2.type && e2.children.length > 0 && (["html", "head", "ul", "ol", "select"].includes(e2.name) || e2.cssDisplay.startsWith("table") && "table-cell" !== e2.cssDisplay);
      }
      function Vt(e2) {
        return Ht(e2) || "element" === e2.type && "br" === e2.fullName || Gt(e2);
      }
      function Gt(e2) {
        return jt(e2) && Xt(e2);
      }
      function jt(e2) {
        return e2.hasLeadingSpaces && (e2.prev ? e2.prev.sourceSpan.end.line < e2.sourceSpan.start.line : "root" === e2.parent.type || e2.parent.startSourceSpan.end.line < e2.sourceSpan.start.line);
      }
      function Xt(e2) {
        return e2.hasTrailingSpaces && (e2.next ? e2.next.sourceSpan.start.line > e2.sourceSpan.end.line : "root" === e2.parent.type || e2.parent.endSourceSpan && e2.parent.endSourceSpan.start.line > e2.sourceSpan.end.line);
      }
      function Ht(e2) {
        switch (e2.type) {
          case "ieConditionalComment":
          case "comment":
          case "directive":
            return true;
          case "element":
            return ["script", "select"].includes(e2.name);
        }
        return false;
      }
      function zt(e2) {
        const { type: t2, lang: r2 } = e2.attrMap;
        return "module" === t2 || "text/javascript" === t2 || "text/babel" === t2 || "application/javascript" === t2 || "jsx" === r2 ? "babel" : "application/x-typescript" === t2 || "ts" === r2 || "tsx" === r2 ? "typescript" : "text/markdown" === t2 ? "markdown" : "text/html" === t2 ? "html" : t2 && (t2.endsWith("json") || t2.endsWith("importmap")) ? "json" : "text/x-handlebars-template" === t2 ? "glimmer" : void 0;
      }
      function Wt(e2) {
        return "block" === e2 || "list-item" === e2 || e2.startsWith("table");
      }
      function Yt(e2) {
        return Jt(e2).startsWith("pre");
      }
      function Qt(e2) {
        return "element" === e2.type && !e2.hasExplicitNamespace && !["html", "svg"].includes(e2.namespace);
      }
      function Jt(e2) {
        return "element" === e2.type && (!e2.namespace || Qt(e2)) && kt[e2.name] || xt;
      }
      const Zt = /* @__PURE__ */ new Set(["template", "style", "script"]);
      function Kt(e2, t2) {
        return er(e2, t2) && !Zt.has(e2.fullName);
      }
      function er(e2, t2) {
        return "vue" === t2.parser && "element" === e2.type && "root" === e2.parent.type && "html" !== e2.fullName.toLowerCase();
      }
      function tr(e2, t2) {
        return er(e2, t2) && (Kt(e2, t2) || e2.attrMap.lang && "html" !== e2.attrMap.lang);
      }
      var rr = { HTML_ELEMENT_ATTRIBUTES: Pt, HTML_TAGS: It, htmlTrim: (e2) => ((e3) => e3.replace(/^[\t\n\f\r ]+/, ""))(Ot(e2)), htmlTrimPreserveIndentation: (e2) => ((e3) => e3.replace(/^[\t\f\r ]*?\n/g, ""))(Ot(e2)), splitByHtmlWhitespace: (e2) => e2.split(/[\t\n\f\r ]+/), hasHtmlWhitespace: (e2) => /[\t\n\f\r ]/.test(e2), getLeadingAndTrailingHtmlWhitespace: (e2) => {
        const [, t2, r2, n2] = e2.match(/^([\t\n\f\r ]*)([\S\s]*?)([\t\n\f\r ]*)$/);
        return { leadingWhitespace: t2, trailingWhitespace: n2, text: r2 };
      }, canHaveInterpolation: function(e2) {
        return e2.children && !$t(e2);
      }, countChars: function(e2, t2) {
        let r2 = 0;
        for (let n2 = 0; n2 < e2.length; n2++)
          e2[n2] === t2 && r2++;
        return r2;
      }, countParents: function(e2, t2) {
        let r2 = 0;
        for (let n2 = e2.stack.length - 1; n2 >= 0; n2--) {
          const s2 = e2.stack[n2];
          s2 && "object" == typeof s2 && !Array.isArray(s2) && t2(s2) && r2++;
        }
        return r2;
      }, dedentString: function(e2, t2 = function(e3) {
        let t3 = Number.POSITIVE_INFINITY;
        for (const n2 of e3.split("\n")) {
          if (0 === n2.length)
            continue;
          if (!Rt.has(n2[0]))
            return 0;
          const e4 = (r2 = n2, r2.match(/^[\t\n\f\r ]*/)[0]).length;
          n2.length !== e4 && e4 < t3 && (t3 = e4);
        }
        var r2;
        return t3 === Number.POSITIVE_INFINITY ? 0 : t3;
      }(e2)) {
        return 0 === t2 ? e2 : e2.split("\n").map((e3) => e3.slice(t2)).join("\n");
      }, forceBreakChildren: Ut, forceBreakContent: function(e2) {
        return Ut(e2) || "element" === e2.type && e2.children.length > 0 && (["body", "script", "style"].includes(e2.name) || e2.children.some((e3) => function(e4) {
          return e4.children && e4.children.some((e5) => "text" !== e5.type);
        }(e3))) || e2.firstChild && e2.firstChild === e2.lastChild && "text" !== e2.firstChild.type && jt(e2.firstChild) && (!e2.lastChild.isTrailingSpaceSensitive || Xt(e2.lastChild));
      }, forceNextEmptyLine: function(e2) {
        return bt(e2) || e2.next && e2.sourceSpan.end && e2.sourceSpan.end.line + 1 < e2.next.sourceSpan.start.line;
      }, getLastDescendant: function e2(t2) {
        return t2.lastChild ? e2(t2.lastChild) : t2;
      }, getNodeCssStyleDisplay: function(e2, t2) {
        if (e2.prev && "comment" === e2.prev.type) {
          const t3 = e2.prev.value.match(/^\s*display:\s*([a-z]+)\s*$/);
          if (t3)
            return t3[1];
        }
        let r2 = false;
        if ("element" === e2.type && "svg" === e2.namespace) {
          if (!function(e3, t3) {
            let r3 = e3;
            for (; r3; ) {
              if (t3(r3))
                return true;
              r3 = r3.parent;
            }
            return false;
          }(e2, (e3) => "svg:foreignObject" === e3.fullName))
            return "svg" === e2.name ? "inline-block" : "block";
          r2 = true;
        }
        switch (t2.htmlWhitespaceSensitivity) {
          case "strict":
            return "inline";
          case "ignore":
            return "block";
          default:
            return "vue" === t2.parser && e2.parent && "root" === e2.parent.type ? "block" : "element" === e2.type && (!e2.namespace || r2 || Qt(e2)) && wt[e2.name] || Nt;
        }
      }, getNodeCssStyleWhiteSpace: Jt, getPrettierIgnoreAttributeCommentData: function(e2) {
        const t2 = e2.trim().match(/^prettier-ignore-attribute(?:\s+([^]+))?$/);
        return !!t2 && (!t2[1] || t2[1].split(/\s+/));
      }, hasPrettierIgnore: qt, inferScriptParser: function(e2, t2) {
        return "script" !== e2.name || e2.attrMap.src ? "style" === e2.name ? function(e3) {
          const { lang: t3 } = e3.attrMap;
          return t3 && "postcss" !== t3 && "css" !== t3 ? "scss" === t3 ? "scss" : "less" === t3 ? "less" : void 0 : "css";
        }(e2) : t2 && tr(e2, t2) ? zt(e2) || !("src" in e2.attrMap) && At(e2.attrMap.lang, t2) : void 0 : e2.attrMap.lang || e2.attrMap.type ? zt(e2) : "babel";
      }, isVueCustomBlock: Kt, isVueNonHtmlBlock: tr, isVueSlotAttribute: function(e2) {
        const t2 = e2.fullName;
        return "#" === t2.charAt(0) || "slot-scope" === t2 || "v-slot" === t2 || t2.startsWith("v-slot:");
      }, isVueSfcBindingsAttribute: function(e2, t2) {
        const r2 = e2.parent;
        if (!er(r2, t2))
          return false;
        const n2 = r2.fullName, s2 = e2.fullName;
        return "script" === n2 && "setup" === s2 || "style" === n2 && "vars" === s2;
      }, isDanglingSpaceSensitiveNode: function(e2) {
        return !(t2 = e2.cssDisplay, Wt(t2) || "inline-block" === t2 || $t(e2));
        var t2;
      }, isIndentationSensitiveNode: Mt, isLeadingSpaceSensitiveNode: function(e2, t2) {
        const r2 = function() {
          if (bt(e2))
            return false;
          if (("text" === e2.type || "interpolation" === e2.type) && e2.prev && ("text" === e2.prev.type || "interpolation" === e2.prev.type))
            return true;
          if (!e2.parent || "none" === e2.parent.cssDisplay)
            return false;
          if (Yt(e2.parent))
            return true;
          if (!e2.prev && ("root" === e2.parent.type || Yt(e2) && e2.parent || $t(e2.parent) || Kt(e2.parent, t2) || (r3 = e2.parent.cssDisplay, Wt(r3) || "inline-block" === r3)))
            return false;
          var r3;
          if (e2.prev && !function(e3) {
            return !Wt(e3);
          }(e2.prev.cssDisplay))
            return false;
          return true;
        }();
        return r2 && !e2.prev && e2.parent && e2.parent.tagDefinition && e2.parent.tagDefinition.ignoreFirstLf ? "interpolation" === e2.type : r2;
      }, isPreLikeNode: Yt, isScriptLikeTag: $t, isTextLikeNode: function(e2) {
        return "text" === e2.type || "comment" === e2.type;
      }, isTrailingSpaceSensitiveNode: function(e2, t2) {
        return !bt(e2) && (!("text" !== e2.type && "interpolation" !== e2.type || !e2.next || "text" !== e2.next.type && "interpolation" !== e2.next.type) || !(!e2.parent || "none" === e2.parent.cssDisplay) && (!!Yt(e2.parent) || !(!e2.next && ("root" === e2.parent.type || Yt(e2) && e2.parent || $t(e2.parent) || Kt(e2.parent, t2) || (r2 = e2.parent.cssDisplay, Wt(r2) || "inline-block" === r2))) && !(e2.next && !function(e3) {
          return !Wt(e3);
        }(e2.next.cssDisplay))));
        var r2;
      }, isWhitespaceSensitiveNode: function(e2) {
        return $t(e2) || "interpolation" === e2.type || Mt(e2);
      }, isUnknownNamespace: Qt, preferHardlineAsLeadingSpaces: function(e2) {
        return Ht(e2) || e2.prev && Vt(e2.prev) || Gt(e2);
      }, preferHardlineAsTrailingSpaces: Vt, shouldNotPrintClosingTag: function(e2, t2) {
        return !e2.isSelfClosing && !e2.endSourceSpan && (qt(e2) || Bt(e2.parent, t2));
      }, shouldPreserveContent: Bt, unescapeQuoteEntities: function(e2) {
        return e2.replace(/&apos;/g, "'").replace(/&quot;/g, '"');
      } };
      var nr = { hasPragma: function(e2) {
        return /^\s*<!--\s*@(format|prettier)\s*-->/.test(e2);
      }, insertPragma: function(e2) {
        return "<!-- @format -->\n\n" + e2.replace(/^\s*\n/, "");
      } };
      const { isNonEmptyArray: sr } = Ft, ir = { attrs: true, children: true };
      class or {
        constructor(e2 = {}) {
          for (const [t2, r2] of Object.entries(e2))
            t2 in ir ? this._setNodes(t2, r2) : this[t2] = r2;
        }
        _setNodes(e2, t2) {
          t2 !== this[e2] && (this[e2] = function(e3, t3) {
            const r2 = e3.map((e4) => e4 instanceof or ? e4.clone() : new or(e4));
            let n2 = null, s2 = r2[0], i2 = r2[1] || null;
            for (let e4 = 0; e4 < r2.length; e4++)
              ur(s2, { index: e4, siblings: r2, prev: n2, next: i2, parent: t3 }), n2 = s2, s2 = i2, i2 = r2[e4 + 2] || null;
            return r2;
          }(t2, this), "attrs" === e2 && ur(this, { attrMap: J(this[e2].map((e3) => [e3.fullName, e3.value])) }));
        }
        map(e2) {
          let t2 = null;
          for (const r2 in ir) {
            const n2 = this[r2];
            if (n2) {
              const s2 = ar(n2, (t3) => t3.map(e2));
              t2 !== n2 && (t2 || (t2 = new or()), t2._setNodes(r2, s2));
            }
          }
          if (t2) {
            for (const e4 in this)
              e4 in ir || (t2[e4] = this[e4]);
            const { index: e3, siblings: r2, prev: n2, next: s2, parent: i2 } = this;
            ur(t2, { index: e3, siblings: r2, prev: n2, next: s2, parent: i2 });
          }
          return e2(t2 || this);
        }
        clone(e2) {
          return new or(e2 ? Object.assign({}, this, e2) : this);
        }
        get firstChild() {
          return sr(this.children) ? this.children[0] : null;
        }
        get lastChild() {
          return sr(this.children) ? M(this.children) : null;
        }
        get rawName() {
          return this.hasExplicitNamespace ? this.fullName : this.name;
        }
        get fullName() {
          return this.namespace ? this.namespace + ":" + this.name : this.name;
        }
      }
      function ar(e2, t2) {
        const r2 = e2.map(t2);
        return r2.some((t3, r3) => t3 !== e2[r3]) ? r2 : e2;
      }
      function ur(e2, t2) {
        const r2 = J(Object.entries(t2).map(([e3, t3]) => [e3, { value: t3, enumerable: false }]));
        Object.defineProperties(e2, r2);
      }
      var cr = { Node: or };
      const { ParseSourceSpan: lr } = B, Dr = [{ regex: /^(\[if([^\]]*?)]>)(.*?)<!\s*\[endif]$/s, parse: function(e2, t2, r2) {
        const [, n2, s2, i2] = r2, o2 = "<!--".length + n2.length, a2 = e2.sourceSpan.start.moveBy(o2), u2 = a2.moveBy(i2.length), [c2, l2] = (() => {
          try {
            return [true, t2(i2, a2).children];
          } catch (e3) {
            return [false, [{ type: "text", value: i2, sourceSpan: new lr(a2, u2) }]];
          }
        })();
        return { type: "ieConditionalComment", complete: c2, children: l2, condition: s2.trim().replace(/\s+/g, " "), sourceSpan: e2.sourceSpan, startSourceSpan: new lr(e2.sourceSpan.start, a2), endSourceSpan: new lr(u2, e2.sourceSpan.end) };
      } }, { regex: /^\[if([^\]]*?)]><!$/, parse: function(e2, t2, r2) {
        const [, n2] = r2;
        return { type: "ieConditionalStartComment", condition: n2.trim().replace(/\s+/g, " "), sourceSpan: e2.sourceSpan };
      } }, { regex: /^<!\s*\[endif]$/, parse: function(e2) {
        return { type: "ieConditionalEndComment", sourceSpan: e2.sourceSpan };
      } }];
      var pr = { parseIeConditionalComment: function(e2, t2) {
        if (e2.value)
          for (const { regex: r2, parse: n2 } of Dr) {
            const s2 = e2.value.match(r2);
            if (s2)
              return n2(e2, t2, s2);
          }
        return null;
      } };
      var hr = { locStart: function(e2) {
        return e2.sourceSpan.start.offset;
      }, locEnd: function(e2) {
        return e2.sourceSpan.end.offset;
      } }, dr = t(function(e2, t2) {
        function r2(e3) {
          if (":" != e3[0])
            return [null, e3];
          const t3 = e3.indexOf(":", 1);
          if (-1 == t3)
            throw new Error('Unsupported format "'.concat(e3, '" expecting ":namespace:name"'));
          return [e3.slice(1, t3), e3.slice(t3 + 1)];
        }
        Object.defineProperty(t2, "__esModule", { value: true }), function(e3) {
          e3[e3.RAW_TEXT = 0] = "RAW_TEXT", e3[e3.ESCAPABLE_RAW_TEXT = 1] = "ESCAPABLE_RAW_TEXT", e3[e3.PARSABLE_DATA = 2] = "PARSABLE_DATA";
        }(t2.TagContentType || (t2.TagContentType = {})), t2.splitNsName = r2, t2.isNgContainer = function(e3) {
          return "ng-container" === r2(e3)[1];
        }, t2.isNgContent = function(e3) {
          return "ng-content" === r2(e3)[1];
        }, t2.isNgTemplate = function(e3) {
          return "ng-template" === r2(e3)[1];
        }, t2.getNsPrefix = function(e3) {
          return null === e3 ? null : r2(e3)[0];
        }, t2.mergeNsAndName = function(e3, t3) {
          return e3 ? ":".concat(e3, ":").concat(t3) : t3;
        }, t2.NAMED_ENTITIES = { Aacute: "\xC1", aacute: "\xE1", Abreve: "\u0102", abreve: "\u0103", ac: "\u223E", acd: "\u223F", acE: "\u223E\u0333", Acirc: "\xC2", acirc: "\xE2", acute: "\xB4", Acy: "\u0410", acy: "\u0430", AElig: "\xC6", aelig: "\xE6", af: "\u2061", Afr: "\u{1D504}", afr: "\u{1D51E}", Agrave: "\xC0", agrave: "\xE0", alefsym: "\u2135", aleph: "\u2135", Alpha: "\u0391", alpha: "\u03B1", Amacr: "\u0100", amacr: "\u0101", amalg: "\u2A3F", AMP: "&", amp: "&", And: "\u2A53", and: "\u2227", andand: "\u2A55", andd: "\u2A5C", andslope: "\u2A58", andv: "\u2A5A", ang: "\u2220", ange: "\u29A4", angle: "\u2220", angmsd: "\u2221", angmsdaa: "\u29A8", angmsdab: "\u29A9", angmsdac: "\u29AA", angmsdad: "\u29AB", angmsdae: "\u29AC", angmsdaf: "\u29AD", angmsdag: "\u29AE", angmsdah: "\u29AF", angrt: "\u221F", angrtvb: "\u22BE", angrtvbd: "\u299D", angsph: "\u2222", angst: "\xC5", angzarr: "\u237C", Aogon: "\u0104", aogon: "\u0105", Aopf: "\u{1D538}", aopf: "\u{1D552}", ap: "\u2248", apacir: "\u2A6F", apE: "\u2A70", ape: "\u224A", apid: "\u224B", apos: "'", ApplyFunction: "\u2061", approx: "\u2248", approxeq: "\u224A", Aring: "\xC5", aring: "\xE5", Ascr: "\u{1D49C}", ascr: "\u{1D4B6}", Assign: "\u2254", ast: "*", asymp: "\u2248", asympeq: "\u224D", Atilde: "\xC3", atilde: "\xE3", Auml: "\xC4", auml: "\xE4", awconint: "\u2233", awint: "\u2A11", backcong: "\u224C", backepsilon: "\u03F6", backprime: "\u2035", backsim: "\u223D", backsimeq: "\u22CD", Backslash: "\u2216", Barv: "\u2AE7", barvee: "\u22BD", Barwed: "\u2306", barwed: "\u2305", barwedge: "\u2305", bbrk: "\u23B5", bbrktbrk: "\u23B6", bcong: "\u224C", Bcy: "\u0411", bcy: "\u0431", bdquo: "\u201E", becaus: "\u2235", Because: "\u2235", because: "\u2235", bemptyv: "\u29B0", bepsi: "\u03F6", bernou: "\u212C", Bernoullis: "\u212C", Beta: "\u0392", beta: "\u03B2", beth: "\u2136", between: "\u226C", Bfr: "\u{1D505}", bfr: "\u{1D51F}", bigcap: "\u22C2", bigcirc: "\u25EF", bigcup: "\u22C3", bigodot: "\u2A00", bigoplus: "\u2A01", bigotimes: "\u2A02", bigsqcup: "\u2A06", bigstar: "\u2605", bigtriangledown: "\u25BD", bigtriangleup: "\u25B3", biguplus: "\u2A04", bigvee: "\u22C1", bigwedge: "\u22C0", bkarow: "\u290D", blacklozenge: "\u29EB", blacksquare: "\u25AA", blacktriangle: "\u25B4", blacktriangledown: "\u25BE", blacktriangleleft: "\u25C2", blacktriangleright: "\u25B8", blank: "\u2423", blk12: "\u2592", blk14: "\u2591", blk34: "\u2593", block: "\u2588", bne: "=\u20E5", bnequiv: "\u2261\u20E5", bNot: "\u2AED", bnot: "\u2310", Bopf: "\u{1D539}", bopf: "\u{1D553}", bot: "\u22A5", bottom: "\u22A5", bowtie: "\u22C8", boxbox: "\u29C9", boxDL: "\u2557", boxDl: "\u2556", boxdL: "\u2555", boxdl: "\u2510", boxDR: "\u2554", boxDr: "\u2553", boxdR: "\u2552", boxdr: "\u250C", boxH: "\u2550", boxh: "\u2500", boxHD: "\u2566", boxHd: "\u2564", boxhD: "\u2565", boxhd: "\u252C", boxHU: "\u2569", boxHu: "\u2567", boxhU: "\u2568", boxhu: "\u2534", boxminus: "\u229F", boxplus: "\u229E", boxtimes: "\u22A0", boxUL: "\u255D", boxUl: "\u255C", boxuL: "\u255B", boxul: "\u2518", boxUR: "\u255A", boxUr: "\u2559", boxuR: "\u2558", boxur: "\u2514", boxV: "\u2551", boxv: "\u2502", boxVH: "\u256C", boxVh: "\u256B", boxvH: "\u256A", boxvh: "\u253C", boxVL: "\u2563", boxVl: "\u2562", boxvL: "\u2561", boxvl: "\u2524", boxVR: "\u2560", boxVr: "\u255F", boxvR: "\u255E", boxvr: "\u251C", bprime: "\u2035", Breve: "\u02D8", breve: "\u02D8", brvbar: "\xA6", Bscr: "\u212C", bscr: "\u{1D4B7}", bsemi: "\u204F", bsim: "\u223D", bsime: "\u22CD", bsol: "\\", bsolb: "\u29C5", bsolhsub: "\u27C8", bull: "\u2022", bullet: "\u2022", bump: "\u224E", bumpE: "\u2AAE", bumpe: "\u224F", Bumpeq: "\u224E", bumpeq: "\u224F", Cacute: "\u0106", cacute: "\u0107", Cap: "\u22D2", cap: "\u2229", capand: "\u2A44", capbrcup: "\u2A49", capcap: "\u2A4B", capcup: "\u2A47", capdot: "\u2A40", CapitalDifferentialD: "\u2145", caps: "\u2229\uFE00", caret: "\u2041", caron: "\u02C7", Cayleys: "\u212D", ccaps: "\u2A4D", Ccaron: "\u010C", ccaron: "\u010D", Ccedil: "\xC7", ccedil: "\xE7", Ccirc: "\u0108", ccirc: "\u0109", Cconint: "\u2230", ccups: "\u2A4C", ccupssm: "\u2A50", Cdot: "\u010A", cdot: "\u010B", cedil: "\xB8", Cedilla: "\xB8", cemptyv: "\u29B2", cent: "\xA2", CenterDot: "\xB7", centerdot: "\xB7", Cfr: "\u212D", cfr: "\u{1D520}", CHcy: "\u0427", chcy: "\u0447", check: "\u2713", checkmark: "\u2713", Chi: "\u03A7", chi: "\u03C7", cir: "\u25CB", circ: "\u02C6", circeq: "\u2257", circlearrowleft: "\u21BA", circlearrowright: "\u21BB", circledast: "\u229B", circledcirc: "\u229A", circleddash: "\u229D", CircleDot: "\u2299", circledR: "\xAE", circledS: "\u24C8", CircleMinus: "\u2296", CirclePlus: "\u2295", CircleTimes: "\u2297", cirE: "\u29C3", cire: "\u2257", cirfnint: "\u2A10", cirmid: "\u2AEF", cirscir: "\u29C2", ClockwiseContourIntegral: "\u2232", CloseCurlyDoubleQuote: "\u201D", CloseCurlyQuote: "\u2019", clubs: "\u2663", clubsuit: "\u2663", Colon: "\u2237", colon: ":", Colone: "\u2A74", colone: "\u2254", coloneq: "\u2254", comma: ",", commat: "@", comp: "\u2201", compfn: "\u2218", complement: "\u2201", complexes: "\u2102", cong: "\u2245", congdot: "\u2A6D", Congruent: "\u2261", Conint: "\u222F", conint: "\u222E", ContourIntegral: "\u222E", Copf: "\u2102", copf: "\u{1D554}", coprod: "\u2210", Coproduct: "\u2210", COPY: "\xA9", copy: "\xA9", copysr: "\u2117", CounterClockwiseContourIntegral: "\u2233", crarr: "\u21B5", Cross: "\u2A2F", cross: "\u2717", Cscr: "\u{1D49E}", cscr: "\u{1D4B8}", csub: "\u2ACF", csube: "\u2AD1", csup: "\u2AD0", csupe: "\u2AD2", ctdot: "\u22EF", cudarrl: "\u2938", cudarrr: "\u2935", cuepr: "\u22DE", cuesc: "\u22DF", cularr: "\u21B6", cularrp: "\u293D", Cup: "\u22D3", cup: "\u222A", cupbrcap: "\u2A48", CupCap: "\u224D", cupcap: "\u2A46", cupcup: "\u2A4A", cupdot: "\u228D", cupor: "\u2A45", cups: "\u222A\uFE00", curarr: "\u21B7", curarrm: "\u293C", curlyeqprec: "\u22DE", curlyeqsucc: "\u22DF", curlyvee: "\u22CE", curlywedge: "\u22CF", curren: "\xA4", curvearrowleft: "\u21B6", curvearrowright: "\u21B7", cuvee: "\u22CE", cuwed: "\u22CF", cwconint: "\u2232", cwint: "\u2231", cylcty: "\u232D", Dagger: "\u2021", dagger: "\u2020", daleth: "\u2138", Darr: "\u21A1", dArr: "\u21D3", darr: "\u2193", dash: "\u2010", Dashv: "\u2AE4", dashv: "\u22A3", dbkarow: "\u290F", dblac: "\u02DD", Dcaron: "\u010E", dcaron: "\u010F", Dcy: "\u0414", dcy: "\u0434", DD: "\u2145", dd: "\u2146", ddagger: "\u2021", ddarr: "\u21CA", DDotrahd: "\u2911", ddotseq: "\u2A77", deg: "\xB0", Del: "\u2207", Delta: "\u0394", delta: "\u03B4", demptyv: "\u29B1", dfisht: "\u297F", Dfr: "\u{1D507}", dfr: "\u{1D521}", dHar: "\u2965", dharl: "\u21C3", dharr: "\u21C2", DiacriticalAcute: "\xB4", DiacriticalDot: "\u02D9", DiacriticalDoubleAcute: "\u02DD", DiacriticalGrave: "`", DiacriticalTilde: "\u02DC", diam: "\u22C4", Diamond: "\u22C4", diamond: "\u22C4", diamondsuit: "\u2666", diams: "\u2666", die: "\xA8", DifferentialD: "\u2146", digamma: "\u03DD", disin: "\u22F2", div: "\xF7", divide: "\xF7", divideontimes: "\u22C7", divonx: "\u22C7", DJcy: "\u0402", djcy: "\u0452", dlcorn: "\u231E", dlcrop: "\u230D", dollar: "$", Dopf: "\u{1D53B}", dopf: "\u{1D555}", Dot: "\xA8", dot: "\u02D9", DotDot: "\u20DC", doteq: "\u2250", doteqdot: "\u2251", DotEqual: "\u2250", dotminus: "\u2238", dotplus: "\u2214", dotsquare: "\u22A1", doublebarwedge: "\u2306", DoubleContourIntegral: "\u222F", DoubleDot: "\xA8", DoubleDownArrow: "\u21D3", DoubleLeftArrow: "\u21D0", DoubleLeftRightArrow: "\u21D4", DoubleLeftTee: "\u2AE4", DoubleLongLeftArrow: "\u27F8", DoubleLongLeftRightArrow: "\u27FA", DoubleLongRightArrow: "\u27F9", DoubleRightArrow: "\u21D2", DoubleRightTee: "\u22A8", DoubleUpArrow: "\u21D1", DoubleUpDownArrow: "\u21D5", DoubleVerticalBar: "\u2225", DownArrow: "\u2193", Downarrow: "\u21D3", downarrow: "\u2193", DownArrowBar: "\u2913", DownArrowUpArrow: "\u21F5", DownBreve: "\u0311", downdownarrows: "\u21CA", downharpoonleft: "\u21C3", downharpoonright: "\u21C2", DownLeftRightVector: "\u2950", DownLeftTeeVector: "\u295E", DownLeftVector: "\u21BD", DownLeftVectorBar: "\u2956", DownRightTeeVector: "\u295F", DownRightVector: "\u21C1", DownRightVectorBar: "\u2957", DownTee: "\u22A4", DownTeeArrow: "\u21A7", drbkarow: "\u2910", drcorn: "\u231F", drcrop: "\u230C", Dscr: "\u{1D49F}", dscr: "\u{1D4B9}", DScy: "\u0405", dscy: "\u0455", dsol: "\u29F6", Dstrok: "\u0110", dstrok: "\u0111", dtdot: "\u22F1", dtri: "\u25BF", dtrif: "\u25BE", duarr: "\u21F5", duhar: "\u296F", dwangle: "\u29A6", DZcy: "\u040F", dzcy: "\u045F", dzigrarr: "\u27FF", Eacute: "\xC9", eacute: "\xE9", easter: "\u2A6E", Ecaron: "\u011A", ecaron: "\u011B", ecir: "\u2256", Ecirc: "\xCA", ecirc: "\xEA", ecolon: "\u2255", Ecy: "\u042D", ecy: "\u044D", eDDot: "\u2A77", Edot: "\u0116", eDot: "\u2251", edot: "\u0117", ee: "\u2147", efDot: "\u2252", Efr: "\u{1D508}", efr: "\u{1D522}", eg: "\u2A9A", Egrave: "\xC8", egrave: "\xE8", egs: "\u2A96", egsdot: "\u2A98", el: "\u2A99", Element: "\u2208", elinters: "\u23E7", ell: "\u2113", els: "\u2A95", elsdot: "\u2A97", Emacr: "\u0112", emacr: "\u0113", empty: "\u2205", emptyset: "\u2205", EmptySmallSquare: "\u25FB", emptyv: "\u2205", EmptyVerySmallSquare: "\u25AB", emsp: "\u2003", emsp13: "\u2004", emsp14: "\u2005", ENG: "\u014A", eng: "\u014B", ensp: "\u2002", Eogon: "\u0118", eogon: "\u0119", Eopf: "\u{1D53C}", eopf: "\u{1D556}", epar: "\u22D5", eparsl: "\u29E3", eplus: "\u2A71", epsi: "\u03B5", Epsilon: "\u0395", epsilon: "\u03B5", epsiv: "\u03F5", eqcirc: "\u2256", eqcolon: "\u2255", eqsim: "\u2242", eqslantgtr: "\u2A96", eqslantless: "\u2A95", Equal: "\u2A75", equals: "=", EqualTilde: "\u2242", equest: "\u225F", Equilibrium: "\u21CC", equiv: "\u2261", equivDD: "\u2A78", eqvparsl: "\u29E5", erarr: "\u2971", erDot: "\u2253", Escr: "\u2130", escr: "\u212F", esdot: "\u2250", Esim: "\u2A73", esim: "\u2242", Eta: "\u0397", eta: "\u03B7", ETH: "\xD0", eth: "\xF0", Euml: "\xCB", euml: "\xEB", euro: "\u20AC", excl: "!", exist: "\u2203", Exists: "\u2203", expectation: "\u2130", ExponentialE: "\u2147", exponentiale: "\u2147", fallingdotseq: "\u2252", Fcy: "\u0424", fcy: "\u0444", female: "\u2640", ffilig: "\uFB03", fflig: "\uFB00", ffllig: "\uFB04", Ffr: "\u{1D509}", ffr: "\u{1D523}", filig: "\uFB01", FilledSmallSquare: "\u25FC", FilledVerySmallSquare: "\u25AA", fjlig: "fj", flat: "\u266D", fllig: "\uFB02", fltns: "\u25B1", fnof: "\u0192", Fopf: "\u{1D53D}", fopf: "\u{1D557}", ForAll: "\u2200", forall: "\u2200", fork: "\u22D4", forkv: "\u2AD9", Fouriertrf: "\u2131", fpartint: "\u2A0D", frac12: "\xBD", frac13: "\u2153", frac14: "\xBC", frac15: "\u2155", frac16: "\u2159", frac18: "\u215B", frac23: "\u2154", frac25: "\u2156", frac34: "\xBE", frac35: "\u2157", frac38: "\u215C", frac45: "\u2158", frac56: "\u215A", frac58: "\u215D", frac78: "\u215E", frasl: "\u2044", frown: "\u2322", Fscr: "\u2131", fscr: "\u{1D4BB}", gacute: "\u01F5", Gamma: "\u0393", gamma: "\u03B3", Gammad: "\u03DC", gammad: "\u03DD", gap: "\u2A86", Gbreve: "\u011E", gbreve: "\u011F", Gcedil: "\u0122", Gcirc: "\u011C", gcirc: "\u011D", Gcy: "\u0413", gcy: "\u0433", Gdot: "\u0120", gdot: "\u0121", gE: "\u2267", ge: "\u2265", gEl: "\u2A8C", gel: "\u22DB", geq: "\u2265", geqq: "\u2267", geqslant: "\u2A7E", ges: "\u2A7E", gescc: "\u2AA9", gesdot: "\u2A80", gesdoto: "\u2A82", gesdotol: "\u2A84", gesl: "\u22DB\uFE00", gesles: "\u2A94", Gfr: "\u{1D50A}", gfr: "\u{1D524}", Gg: "\u22D9", gg: "\u226B", ggg: "\u22D9", gimel: "\u2137", GJcy: "\u0403", gjcy: "\u0453", gl: "\u2277", gla: "\u2AA5", glE: "\u2A92", glj: "\u2AA4", gnap: "\u2A8A", gnapprox: "\u2A8A", gnE: "\u2269", gne: "\u2A88", gneq: "\u2A88", gneqq: "\u2269", gnsim: "\u22E7", Gopf: "\u{1D53E}", gopf: "\u{1D558}", grave: "`", GreaterEqual: "\u2265", GreaterEqualLess: "\u22DB", GreaterFullEqual: "\u2267", GreaterGreater: "\u2AA2", GreaterLess: "\u2277", GreaterSlantEqual: "\u2A7E", GreaterTilde: "\u2273", Gscr: "\u{1D4A2}", gscr: "\u210A", gsim: "\u2273", gsime: "\u2A8E", gsiml: "\u2A90", GT: ">", Gt: "\u226B", gt: ">", gtcc: "\u2AA7", gtcir: "\u2A7A", gtdot: "\u22D7", gtlPar: "\u2995", gtquest: "\u2A7C", gtrapprox: "\u2A86", gtrarr: "\u2978", gtrdot: "\u22D7", gtreqless: "\u22DB", gtreqqless: "\u2A8C", gtrless: "\u2277", gtrsim: "\u2273", gvertneqq: "\u2269\uFE00", gvnE: "\u2269\uFE00", Hacek: "\u02C7", hairsp: "\u200A", half: "\xBD", hamilt: "\u210B", HARDcy: "\u042A", hardcy: "\u044A", hArr: "\u21D4", harr: "\u2194", harrcir: "\u2948", harrw: "\u21AD", Hat: "^", hbar: "\u210F", Hcirc: "\u0124", hcirc: "\u0125", hearts: "\u2665", heartsuit: "\u2665", hellip: "\u2026", hercon: "\u22B9", Hfr: "\u210C", hfr: "\u{1D525}", HilbertSpace: "\u210B", hksearow: "\u2925", hkswarow: "\u2926", hoarr: "\u21FF", homtht: "\u223B", hookleftarrow: "\u21A9", hookrightarrow: "\u21AA", Hopf: "\u210D", hopf: "\u{1D559}", horbar: "\u2015", HorizontalLine: "\u2500", Hscr: "\u210B", hscr: "\u{1D4BD}", hslash: "\u210F", Hstrok: "\u0126", hstrok: "\u0127", HumpDownHump: "\u224E", HumpEqual: "\u224F", hybull: "\u2043", hyphen: "\u2010", Iacute: "\xCD", iacute: "\xED", ic: "\u2063", Icirc: "\xCE", icirc: "\xEE", Icy: "\u0418", icy: "\u0438", Idot: "\u0130", IEcy: "\u0415", iecy: "\u0435", iexcl: "\xA1", iff: "\u21D4", Ifr: "\u2111", ifr: "\u{1D526}", Igrave: "\xCC", igrave: "\xEC", ii: "\u2148", iiiint: "\u2A0C", iiint: "\u222D", iinfin: "\u29DC", iiota: "\u2129", IJlig: "\u0132", ijlig: "\u0133", Im: "\u2111", Imacr: "\u012A", imacr: "\u012B", image: "\u2111", ImaginaryI: "\u2148", imagline: "\u2110", imagpart: "\u2111", imath: "\u0131", imof: "\u22B7", imped: "\u01B5", Implies: "\u21D2", in: "\u2208", incare: "\u2105", infin: "\u221E", infintie: "\u29DD", inodot: "\u0131", Int: "\u222C", int: "\u222B", intcal: "\u22BA", integers: "\u2124", Integral: "\u222B", intercal: "\u22BA", Intersection: "\u22C2", intlarhk: "\u2A17", intprod: "\u2A3C", InvisibleComma: "\u2063", InvisibleTimes: "\u2062", IOcy: "\u0401", iocy: "\u0451", Iogon: "\u012E", iogon: "\u012F", Iopf: "\u{1D540}", iopf: "\u{1D55A}", Iota: "\u0399", iota: "\u03B9", iprod: "\u2A3C", iquest: "\xBF", Iscr: "\u2110", iscr: "\u{1D4BE}", isin: "\u2208", isindot: "\u22F5", isinE: "\u22F9", isins: "\u22F4", isinsv: "\u22F3", isinv: "\u2208", it: "\u2062", Itilde: "\u0128", itilde: "\u0129", Iukcy: "\u0406", iukcy: "\u0456", Iuml: "\xCF", iuml: "\xEF", Jcirc: "\u0134", jcirc: "\u0135", Jcy: "\u0419", jcy: "\u0439", Jfr: "\u{1D50D}", jfr: "\u{1D527}", jmath: "\u0237", Jopf: "\u{1D541}", jopf: "\u{1D55B}", Jscr: "\u{1D4A5}", jscr: "\u{1D4BF}", Jsercy: "\u0408", jsercy: "\u0458", Jukcy: "\u0404", jukcy: "\u0454", Kappa: "\u039A", kappa: "\u03BA", kappav: "\u03F0", Kcedil: "\u0136", kcedil: "\u0137", Kcy: "\u041A", kcy: "\u043A", Kfr: "\u{1D50E}", kfr: "\u{1D528}", kgreen: "\u0138", KHcy: "\u0425", khcy: "\u0445", KJcy: "\u040C", kjcy: "\u045C", Kopf: "\u{1D542}", kopf: "\u{1D55C}", Kscr: "\u{1D4A6}", kscr: "\u{1D4C0}", lAarr: "\u21DA", Lacute: "\u0139", lacute: "\u013A", laemptyv: "\u29B4", lagran: "\u2112", Lambda: "\u039B", lambda: "\u03BB", Lang: "\u27EA", lang: "\u27E8", langd: "\u2991", langle: "\u27E8", lap: "\u2A85", Laplacetrf: "\u2112", laquo: "\xAB", Larr: "\u219E", lArr: "\u21D0", larr: "\u2190", larrb: "\u21E4", larrbfs: "\u291F", larrfs: "\u291D", larrhk: "\u21A9", larrlp: "\u21AB", larrpl: "\u2939", larrsim: "\u2973", larrtl: "\u21A2", lat: "\u2AAB", lAtail: "\u291B", latail: "\u2919", late: "\u2AAD", lates: "\u2AAD\uFE00", lBarr: "\u290E", lbarr: "\u290C", lbbrk: "\u2772", lbrace: "{", lbrack: "[", lbrke: "\u298B", lbrksld: "\u298F", lbrkslu: "\u298D", Lcaron: "\u013D", lcaron: "\u013E", Lcedil: "\u013B", lcedil: "\u013C", lceil: "\u2308", lcub: "{", Lcy: "\u041B", lcy: "\u043B", ldca: "\u2936", ldquo: "\u201C", ldquor: "\u201E", ldrdhar: "\u2967", ldrushar: "\u294B", ldsh: "\u21B2", lE: "\u2266", le: "\u2264", LeftAngleBracket: "\u27E8", LeftArrow: "\u2190", Leftarrow: "\u21D0", leftarrow: "\u2190", LeftArrowBar: "\u21E4", LeftArrowRightArrow: "\u21C6", leftarrowtail: "\u21A2", LeftCeiling: "\u2308", LeftDoubleBracket: "\u27E6", LeftDownTeeVector: "\u2961", LeftDownVector: "\u21C3", LeftDownVectorBar: "\u2959", LeftFloor: "\u230A", leftharpoondown: "\u21BD", leftharpoonup: "\u21BC", leftleftarrows: "\u21C7", LeftRightArrow: "\u2194", Leftrightarrow: "\u21D4", leftrightarrow: "\u2194", leftrightarrows: "\u21C6", leftrightharpoons: "\u21CB", leftrightsquigarrow: "\u21AD", LeftRightVector: "\u294E", LeftTee: "\u22A3", LeftTeeArrow: "\u21A4", LeftTeeVector: "\u295A", leftthreetimes: "\u22CB", LeftTriangle: "\u22B2", LeftTriangleBar: "\u29CF", LeftTriangleEqual: "\u22B4", LeftUpDownVector: "\u2951", LeftUpTeeVector: "\u2960", LeftUpVector: "\u21BF", LeftUpVectorBar: "\u2958", LeftVector: "\u21BC", LeftVectorBar: "\u2952", lEg: "\u2A8B", leg: "\u22DA", leq: "\u2264", leqq: "\u2266", leqslant: "\u2A7D", les: "\u2A7D", lescc: "\u2AA8", lesdot: "\u2A7F", lesdoto: "\u2A81", lesdotor: "\u2A83", lesg: "\u22DA\uFE00", lesges: "\u2A93", lessapprox: "\u2A85", lessdot: "\u22D6", lesseqgtr: "\u22DA", lesseqqgtr: "\u2A8B", LessEqualGreater: "\u22DA", LessFullEqual: "\u2266", LessGreater: "\u2276", lessgtr: "\u2276", LessLess: "\u2AA1", lesssim: "\u2272", LessSlantEqual: "\u2A7D", LessTilde: "\u2272", lfisht: "\u297C", lfloor: "\u230A", Lfr: "\u{1D50F}", lfr: "\u{1D529}", lg: "\u2276", lgE: "\u2A91", lHar: "\u2962", lhard: "\u21BD", lharu: "\u21BC", lharul: "\u296A", lhblk: "\u2584", LJcy: "\u0409", ljcy: "\u0459", Ll: "\u22D8", ll: "\u226A", llarr: "\u21C7", llcorner: "\u231E", Lleftarrow: "\u21DA", llhard: "\u296B", lltri: "\u25FA", Lmidot: "\u013F", lmidot: "\u0140", lmoust: "\u23B0", lmoustache: "\u23B0", lnap: "\u2A89", lnapprox: "\u2A89", lnE: "\u2268", lne: "\u2A87", lneq: "\u2A87", lneqq: "\u2268", lnsim: "\u22E6", loang: "\u27EC", loarr: "\u21FD", lobrk: "\u27E6", LongLeftArrow: "\u27F5", Longleftarrow: "\u27F8", longleftarrow: "\u27F5", LongLeftRightArrow: "\u27F7", Longleftrightarrow: "\u27FA", longleftrightarrow: "\u27F7", longmapsto: "\u27FC", LongRightArrow: "\u27F6", Longrightarrow: "\u27F9", longrightarrow: "\u27F6", looparrowleft: "\u21AB", looparrowright: "\u21AC", lopar: "\u2985", Lopf: "\u{1D543}", lopf: "\u{1D55D}", loplus: "\u2A2D", lotimes: "\u2A34", lowast: "\u2217", lowbar: "_", LowerLeftArrow: "\u2199", LowerRightArrow: "\u2198", loz: "\u25CA", lozenge: "\u25CA", lozf: "\u29EB", lpar: "(", lparlt: "\u2993", lrarr: "\u21C6", lrcorner: "\u231F", lrhar: "\u21CB", lrhard: "\u296D", lrm: "\u200E", lrtri: "\u22BF", lsaquo: "\u2039", Lscr: "\u2112", lscr: "\u{1D4C1}", Lsh: "\u21B0", lsh: "\u21B0", lsim: "\u2272", lsime: "\u2A8D", lsimg: "\u2A8F", lsqb: "[", lsquo: "\u2018", lsquor: "\u201A", Lstrok: "\u0141", lstrok: "\u0142", LT: "<", Lt: "\u226A", lt: "<", ltcc: "\u2AA6", ltcir: "\u2A79", ltdot: "\u22D6", lthree: "\u22CB", ltimes: "\u22C9", ltlarr: "\u2976", ltquest: "\u2A7B", ltri: "\u25C3", ltrie: "\u22B4", ltrif: "\u25C2", ltrPar: "\u2996", lurdshar: "\u294A", luruhar: "\u2966", lvertneqq: "\u2268\uFE00", lvnE: "\u2268\uFE00", macr: "\xAF", male: "\u2642", malt: "\u2720", maltese: "\u2720", Map: "\u2905", map: "\u21A6", mapsto: "\u21A6", mapstodown: "\u21A7", mapstoleft: "\u21A4", mapstoup: "\u21A5", marker: "\u25AE", mcomma: "\u2A29", Mcy: "\u041C", mcy: "\u043C", mdash: "\u2014", mDDot: "\u223A", measuredangle: "\u2221", MediumSpace: "\u205F", Mellintrf: "\u2133", Mfr: "\u{1D510}", mfr: "\u{1D52A}", mho: "\u2127", micro: "\xB5", mid: "\u2223", midast: "*", midcir: "\u2AF0", middot: "\xB7", minus: "\u2212", minusb: "\u229F", minusd: "\u2238", minusdu: "\u2A2A", MinusPlus: "\u2213", mlcp: "\u2ADB", mldr: "\u2026", mnplus: "\u2213", models: "\u22A7", Mopf: "\u{1D544}", mopf: "\u{1D55E}", mp: "\u2213", Mscr: "\u2133", mscr: "\u{1D4C2}", mstpos: "\u223E", Mu: "\u039C", mu: "\u03BC", multimap: "\u22B8", mumap: "\u22B8", nabla: "\u2207", Nacute: "\u0143", nacute: "\u0144", nang: "\u2220\u20D2", nap: "\u2249", napE: "\u2A70\u0338", napid: "\u224B\u0338", napos: "\u0149", napprox: "\u2249", natur: "\u266E", natural: "\u266E", naturals: "\u2115", nbsp: "\xA0", nbump: "\u224E\u0338", nbumpe: "\u224F\u0338", ncap: "\u2A43", Ncaron: "\u0147", ncaron: "\u0148", Ncedil: "\u0145", ncedil: "\u0146", ncong: "\u2247", ncongdot: "\u2A6D\u0338", ncup: "\u2A42", Ncy: "\u041D", ncy: "\u043D", ndash: "\u2013", ne: "\u2260", nearhk: "\u2924", neArr: "\u21D7", nearr: "\u2197", nearrow: "\u2197", nedot: "\u2250\u0338", NegativeMediumSpace: "\u200B", NegativeThickSpace: "\u200B", NegativeThinSpace: "\u200B", NegativeVeryThinSpace: "\u200B", nequiv: "\u2262", nesear: "\u2928", nesim: "\u2242\u0338", NestedGreaterGreater: "\u226B", NestedLessLess: "\u226A", NewLine: "\n", nexist: "\u2204", nexists: "\u2204", Nfr: "\u{1D511}", nfr: "\u{1D52B}", ngE: "\u2267\u0338", nge: "\u2271", ngeq: "\u2271", ngeqq: "\u2267\u0338", ngeqslant: "\u2A7E\u0338", nges: "\u2A7E\u0338", nGg: "\u22D9\u0338", ngsim: "\u2275", nGt: "\u226B\u20D2", ngt: "\u226F", ngtr: "\u226F", nGtv: "\u226B\u0338", nhArr: "\u21CE", nharr: "\u21AE", nhpar: "\u2AF2", ni: "\u220B", nis: "\u22FC", nisd: "\u22FA", niv: "\u220B", NJcy: "\u040A", njcy: "\u045A", nlArr: "\u21CD", nlarr: "\u219A", nldr: "\u2025", nlE: "\u2266\u0338", nle: "\u2270", nLeftarrow: "\u21CD", nleftarrow: "\u219A", nLeftrightarrow: "\u21CE", nleftrightarrow: "\u21AE", nleq: "\u2270", nleqq: "\u2266\u0338", nleqslant: "\u2A7D\u0338", nles: "\u2A7D\u0338", nless: "\u226E", nLl: "\u22D8\u0338", nlsim: "\u2274", nLt: "\u226A\u20D2", nlt: "\u226E", nltri: "\u22EA", nltrie: "\u22EC", nLtv: "\u226A\u0338", nmid: "\u2224", NoBreak: "\u2060", NonBreakingSpace: "\xA0", Nopf: "\u2115", nopf: "\u{1D55F}", Not: "\u2AEC", not: "\xAC", NotCongruent: "\u2262", NotCupCap: "\u226D", NotDoubleVerticalBar: "\u2226", NotElement: "\u2209", NotEqual: "\u2260", NotEqualTilde: "\u2242\u0338", NotExists: "\u2204", NotGreater: "\u226F", NotGreaterEqual: "\u2271", NotGreaterFullEqual: "\u2267\u0338", NotGreaterGreater: "\u226B\u0338", NotGreaterLess: "\u2279", NotGreaterSlantEqual: "\u2A7E\u0338", NotGreaterTilde: "\u2275", NotHumpDownHump: "\u224E\u0338", NotHumpEqual: "\u224F\u0338", notin: "\u2209", notindot: "\u22F5\u0338", notinE: "\u22F9\u0338", notinva: "\u2209", notinvb: "\u22F7", notinvc: "\u22F6", NotLeftTriangle: "\u22EA", NotLeftTriangleBar: "\u29CF\u0338", NotLeftTriangleEqual: "\u22EC", NotLess: "\u226E", NotLessEqual: "\u2270", NotLessGreater: "\u2278", NotLessLess: "\u226A\u0338", NotLessSlantEqual: "\u2A7D\u0338", NotLessTilde: "\u2274", NotNestedGreaterGreater: "\u2AA2\u0338", NotNestedLessLess: "\u2AA1\u0338", notni: "\u220C", notniva: "\u220C", notnivb: "\u22FE", notnivc: "\u22FD", NotPrecedes: "\u2280", NotPrecedesEqual: "\u2AAF\u0338", NotPrecedesSlantEqual: "\u22E0", NotReverseElement: "\u220C", NotRightTriangle: "\u22EB", NotRightTriangleBar: "\u29D0\u0338", NotRightTriangleEqual: "\u22ED", NotSquareSubset: "\u228F\u0338", NotSquareSubsetEqual: "\u22E2", NotSquareSuperset: "\u2290\u0338", NotSquareSupersetEqual: "\u22E3", NotSubset: "\u2282\u20D2", NotSubsetEqual: "\u2288", NotSucceeds: "\u2281", NotSucceedsEqual: "\u2AB0\u0338", NotSucceedsSlantEqual: "\u22E1", NotSucceedsTilde: "\u227F\u0338", NotSuperset: "\u2283\u20D2", NotSupersetEqual: "\u2289", NotTilde: "\u2241", NotTildeEqual: "\u2244", NotTildeFullEqual: "\u2247", NotTildeTilde: "\u2249", NotVerticalBar: "\u2224", npar: "\u2226", nparallel: "\u2226", nparsl: "\u2AFD\u20E5", npart: "\u2202\u0338", npolint: "\u2A14", npr: "\u2280", nprcue: "\u22E0", npre: "\u2AAF\u0338", nprec: "\u2280", npreceq: "\u2AAF\u0338", nrArr: "\u21CF", nrarr: "\u219B", nrarrc: "\u2933\u0338", nrarrw: "\u219D\u0338", nRightarrow: "\u21CF", nrightarrow: "\u219B", nrtri: "\u22EB", nrtrie: "\u22ED", nsc: "\u2281", nsccue: "\u22E1", nsce: "\u2AB0\u0338", Nscr: "\u{1D4A9}", nscr: "\u{1D4C3}", nshortmid: "\u2224", nshortparallel: "\u2226", nsim: "\u2241", nsime: "\u2244", nsimeq: "\u2244", nsmid: "\u2224", nspar: "\u2226", nsqsube: "\u22E2", nsqsupe: "\u22E3", nsub: "\u2284", nsubE: "\u2AC5\u0338", nsube: "\u2288", nsubset: "\u2282\u20D2", nsubseteq: "\u2288", nsubseteqq: "\u2AC5\u0338", nsucc: "\u2281", nsucceq: "\u2AB0\u0338", nsup: "\u2285", nsupE: "\u2AC6\u0338", nsupe: "\u2289", nsupset: "\u2283\u20D2", nsupseteq: "\u2289", nsupseteqq: "\u2AC6\u0338", ntgl: "\u2279", Ntilde: "\xD1", ntilde: "\xF1", ntlg: "\u2278", ntriangleleft: "\u22EA", ntrianglelefteq: "\u22EC", ntriangleright: "\u22EB", ntrianglerighteq: "\u22ED", Nu: "\u039D", nu: "\u03BD", num: "#", numero: "\u2116", numsp: "\u2007", nvap: "\u224D\u20D2", nVDash: "\u22AF", nVdash: "\u22AE", nvDash: "\u22AD", nvdash: "\u22AC", nvge: "\u2265\u20D2", nvgt: ">\u20D2", nvHarr: "\u2904", nvinfin: "\u29DE", nvlArr: "\u2902", nvle: "\u2264\u20D2", nvlt: "<\u20D2", nvltrie: "\u22B4\u20D2", nvrArr: "\u2903", nvrtrie: "\u22B5\u20D2", nvsim: "\u223C\u20D2", nwarhk: "\u2923", nwArr: "\u21D6", nwarr: "\u2196", nwarrow: "\u2196", nwnear: "\u2927", Oacute: "\xD3", oacute: "\xF3", oast: "\u229B", ocir: "\u229A", Ocirc: "\xD4", ocirc: "\xF4", Ocy: "\u041E", ocy: "\u043E", odash: "\u229D", Odblac: "\u0150", odblac: "\u0151", odiv: "\u2A38", odot: "\u2299", odsold: "\u29BC", OElig: "\u0152", oelig: "\u0153", ofcir: "\u29BF", Ofr: "\u{1D512}", ofr: "\u{1D52C}", ogon: "\u02DB", Ograve: "\xD2", ograve: "\xF2", ogt: "\u29C1", ohbar: "\u29B5", ohm: "\u03A9", oint: "\u222E", olarr: "\u21BA", olcir: "\u29BE", olcross: "\u29BB", oline: "\u203E", olt: "\u29C0", Omacr: "\u014C", omacr: "\u014D", Omega: "\u03A9", omega: "\u03C9", Omicron: "\u039F", omicron: "\u03BF", omid: "\u29B6", ominus: "\u2296", Oopf: "\u{1D546}", oopf: "\u{1D560}", opar: "\u29B7", OpenCurlyDoubleQuote: "\u201C", OpenCurlyQuote: "\u2018", operp: "\u29B9", oplus: "\u2295", Or: "\u2A54", or: "\u2228", orarr: "\u21BB", ord: "\u2A5D", order: "\u2134", orderof: "\u2134", ordf: "\xAA", ordm: "\xBA", origof: "\u22B6", oror: "\u2A56", orslope: "\u2A57", orv: "\u2A5B", oS: "\u24C8", Oscr: "\u{1D4AA}", oscr: "\u2134", Oslash: "\xD8", oslash: "\xF8", osol: "\u2298", Otilde: "\xD5", otilde: "\xF5", Otimes: "\u2A37", otimes: "\u2297", otimesas: "\u2A36", Ouml: "\xD6", ouml: "\xF6", ovbar: "\u233D", OverBar: "\u203E", OverBrace: "\u23DE", OverBracket: "\u23B4", OverParenthesis: "\u23DC", par: "\u2225", para: "\xB6", parallel: "\u2225", parsim: "\u2AF3", parsl: "\u2AFD", part: "\u2202", PartialD: "\u2202", Pcy: "\u041F", pcy: "\u043F", percnt: "%", period: ".", permil: "\u2030", perp: "\u22A5", pertenk: "\u2031", Pfr: "\u{1D513}", pfr: "\u{1D52D}", Phi: "\u03A6", phi: "\u03C6", phiv: "\u03D5", phmmat: "\u2133", phone: "\u260E", Pi: "\u03A0", pi: "\u03C0", pitchfork: "\u22D4", piv: "\u03D6", planck: "\u210F", planckh: "\u210E", plankv: "\u210F", plus: "+", plusacir: "\u2A23", plusb: "\u229E", pluscir: "\u2A22", plusdo: "\u2214", plusdu: "\u2A25", pluse: "\u2A72", PlusMinus: "\xB1", plusmn: "\xB1", plussim: "\u2A26", plustwo: "\u2A27", pm: "\xB1", Poincareplane: "\u210C", pointint: "\u2A15", Popf: "\u2119", popf: "\u{1D561}", pound: "\xA3", Pr: "\u2ABB", pr: "\u227A", prap: "\u2AB7", prcue: "\u227C", prE: "\u2AB3", pre: "\u2AAF", prec: "\u227A", precapprox: "\u2AB7", preccurlyeq: "\u227C", Precedes: "\u227A", PrecedesEqual: "\u2AAF", PrecedesSlantEqual: "\u227C", PrecedesTilde: "\u227E", preceq: "\u2AAF", precnapprox: "\u2AB9", precneqq: "\u2AB5", precnsim: "\u22E8", precsim: "\u227E", Prime: "\u2033", prime: "\u2032", primes: "\u2119", prnap: "\u2AB9", prnE: "\u2AB5", prnsim: "\u22E8", prod: "\u220F", Product: "\u220F", profalar: "\u232E", profline: "\u2312", profsurf: "\u2313", prop: "\u221D", Proportion: "\u2237", Proportional: "\u221D", propto: "\u221D", prsim: "\u227E", prurel: "\u22B0", Pscr: "\u{1D4AB}", pscr: "\u{1D4C5}", Psi: "\u03A8", psi: "\u03C8", puncsp: "\u2008", Qfr: "\u{1D514}", qfr: "\u{1D52E}", qint: "\u2A0C", Qopf: "\u211A", qopf: "\u{1D562}", qprime: "\u2057", Qscr: "\u{1D4AC}", qscr: "\u{1D4C6}", quaternions: "\u210D", quatint: "\u2A16", quest: "?", questeq: "\u225F", QUOT: '"', quot: '"', rAarr: "\u21DB", race: "\u223D\u0331", Racute: "\u0154", racute: "\u0155", radic: "\u221A", raemptyv: "\u29B3", Rang: "\u27EB", rang: "\u27E9", rangd: "\u2992", range: "\u29A5", rangle: "\u27E9", raquo: "\xBB", Rarr: "\u21A0", rArr: "\u21D2", rarr: "\u2192", rarrap: "\u2975", rarrb: "\u21E5", rarrbfs: "\u2920", rarrc: "\u2933", rarrfs: "\u291E", rarrhk: "\u21AA", rarrlp: "\u21AC", rarrpl: "\u2945", rarrsim: "\u2974", Rarrtl: "\u2916", rarrtl: "\u21A3", rarrw: "\u219D", rAtail: "\u291C", ratail: "\u291A", ratio: "\u2236", rationals: "\u211A", RBarr: "\u2910", rBarr: "\u290F", rbarr: "\u290D", rbbrk: "\u2773", rbrace: "}", rbrack: "]", rbrke: "\u298C", rbrksld: "\u298E", rbrkslu: "\u2990", Rcaron: "\u0158", rcaron: "\u0159", Rcedil: "\u0156", rcedil: "\u0157", rceil: "\u2309", rcub: "}", Rcy: "\u0420", rcy: "\u0440", rdca: "\u2937", rdldhar: "\u2969", rdquo: "\u201D", rdquor: "\u201D", rdsh: "\u21B3", Re: "\u211C", real: "\u211C", realine: "\u211B", realpart: "\u211C", reals: "\u211D", rect: "\u25AD", REG: "\xAE", reg: "\xAE", ReverseElement: "\u220B", ReverseEquilibrium: "\u21CB", ReverseUpEquilibrium: "\u296F", rfisht: "\u297D", rfloor: "\u230B", Rfr: "\u211C", rfr: "\u{1D52F}", rHar: "\u2964", rhard: "\u21C1", rharu: "\u21C0", rharul: "\u296C", Rho: "\u03A1", rho: "\u03C1", rhov: "\u03F1", RightAngleBracket: "\u27E9", RightArrow: "\u2192", Rightarrow: "\u21D2", rightarrow: "\u2192", RightArrowBar: "\u21E5", RightArrowLeftArrow: "\u21C4", rightarrowtail: "\u21A3", RightCeiling: "\u2309", RightDoubleBracket: "\u27E7", RightDownTeeVector: "\u295D", RightDownVector: "\u21C2", RightDownVectorBar: "\u2955", RightFloor: "\u230B", rightharpoondown: "\u21C1", rightharpoonup: "\u21C0", rightleftarrows: "\u21C4", rightleftharpoons: "\u21CC", rightrightarrows: "\u21C9", rightsquigarrow: "\u219D", RightTee: "\u22A2", RightTeeArrow: "\u21A6", RightTeeVector: "\u295B", rightthreetimes: "\u22CC", RightTriangle: "\u22B3", RightTriangleBar: "\u29D0", RightTriangleEqual: "\u22B5", RightUpDownVector: "\u294F", RightUpTeeVector: "\u295C", RightUpVector: "\u21BE", RightUpVectorBar: "\u2954", RightVector: "\u21C0", RightVectorBar: "\u2953", ring: "\u02DA", risingdotseq: "\u2253", rlarr: "\u21C4", rlhar: "\u21CC", rlm: "\u200F", rmoust: "\u23B1", rmoustache: "\u23B1", rnmid: "\u2AEE", roang: "\u27ED", roarr: "\u21FE", robrk: "\u27E7", ropar: "\u2986", Ropf: "\u211D", ropf: "\u{1D563}", roplus: "\u2A2E", rotimes: "\u2A35", RoundImplies: "\u2970", rpar: ")", rpargt: "\u2994", rppolint: "\u2A12", rrarr: "\u21C9", Rrightarrow: "\u21DB", rsaquo: "\u203A", Rscr: "\u211B", rscr: "\u{1D4C7}", Rsh: "\u21B1", rsh: "\u21B1", rsqb: "]", rsquo: "\u2019", rsquor: "\u2019", rthree: "\u22CC", rtimes: "\u22CA", rtri: "\u25B9", rtrie: "\u22B5", rtrif: "\u25B8", rtriltri: "\u29CE", RuleDelayed: "\u29F4", ruluhar: "\u2968", rx: "\u211E", Sacute: "\u015A", sacute: "\u015B", sbquo: "\u201A", Sc: "\u2ABC", sc: "\u227B", scap: "\u2AB8", Scaron: "\u0160", scaron: "\u0161", sccue: "\u227D", scE: "\u2AB4", sce: "\u2AB0", Scedil: "\u015E", scedil: "\u015F", Scirc: "\u015C", scirc: "\u015D", scnap: "\u2ABA", scnE: "\u2AB6", scnsim: "\u22E9", scpolint: "\u2A13", scsim: "\u227F", Scy: "\u0421", scy: "\u0441", sdot: "\u22C5", sdotb: "\u22A1", sdote: "\u2A66", searhk: "\u2925", seArr: "\u21D8", searr: "\u2198", searrow: "\u2198", sect: "\xA7", semi: ";", seswar: "\u2929", setminus: "\u2216", setmn: "\u2216", sext: "\u2736", Sfr: "\u{1D516}", sfr: "\u{1D530}", sfrown: "\u2322", sharp: "\u266F", SHCHcy: "\u0429", shchcy: "\u0449", SHcy: "\u0428", shcy: "\u0448", ShortDownArrow: "\u2193", ShortLeftArrow: "\u2190", shortmid: "\u2223", shortparallel: "\u2225", ShortRightArrow: "\u2192", ShortUpArrow: "\u2191", shy: "\xAD", Sigma: "\u03A3", sigma: "\u03C3", sigmaf: "\u03C2", sigmav: "\u03C2", sim: "\u223C", simdot: "\u2A6A", sime: "\u2243", simeq: "\u2243", simg: "\u2A9E", simgE: "\u2AA0", siml: "\u2A9D", simlE: "\u2A9F", simne: "\u2246", simplus: "\u2A24", simrarr: "\u2972", slarr: "\u2190", SmallCircle: "\u2218", smallsetminus: "\u2216", smashp: "\u2A33", smeparsl: "\u29E4", smid: "\u2223", smile: "\u2323", smt: "\u2AAA", smte: "\u2AAC", smtes: "\u2AAC\uFE00", SOFTcy: "\u042C", softcy: "\u044C", sol: "/", solb: "\u29C4", solbar: "\u233F", Sopf: "\u{1D54A}", sopf: "\u{1D564}", spades: "\u2660", spadesuit: "\u2660", spar: "\u2225", sqcap: "\u2293", sqcaps: "\u2293\uFE00", sqcup: "\u2294", sqcups: "\u2294\uFE00", Sqrt: "\u221A", sqsub: "\u228F", sqsube: "\u2291", sqsubset: "\u228F", sqsubseteq: "\u2291", sqsup: "\u2290", sqsupe: "\u2292", sqsupset: "\u2290", sqsupseteq: "\u2292", squ: "\u25A1", Square: "\u25A1", square: "\u25A1", SquareIntersection: "\u2293", SquareSubset: "\u228F", SquareSubsetEqual: "\u2291", SquareSuperset: "\u2290", SquareSupersetEqual: "\u2292", SquareUnion: "\u2294", squarf: "\u25AA", squf: "\u25AA", srarr: "\u2192", Sscr: "\u{1D4AE}", sscr: "\u{1D4C8}", ssetmn: "\u2216", ssmile: "\u2323", sstarf: "\u22C6", Star: "\u22C6", star: "\u2606", starf: "\u2605", straightepsilon: "\u03F5", straightphi: "\u03D5", strns: "\xAF", Sub: "\u22D0", sub: "\u2282", subdot: "\u2ABD", subE: "\u2AC5", sube: "\u2286", subedot: "\u2AC3", submult: "\u2AC1", subnE: "\u2ACB", subne: "\u228A", subplus: "\u2ABF", subrarr: "\u2979", Subset: "\u22D0", subset: "\u2282", subseteq: "\u2286", subseteqq: "\u2AC5", SubsetEqual: "\u2286", subsetneq: "\u228A", subsetneqq: "\u2ACB", subsim: "\u2AC7", subsub: "\u2AD5", subsup: "\u2AD3", succ: "\u227B", succapprox: "\u2AB8", succcurlyeq: "\u227D", Succeeds: "\u227B", SucceedsEqual: "\u2AB0", SucceedsSlantEqual: "\u227D", SucceedsTilde: "\u227F", succeq: "\u2AB0", succnapprox: "\u2ABA", succneqq: "\u2AB6", succnsim: "\u22E9", succsim: "\u227F", SuchThat: "\u220B", Sum: "\u2211", sum: "\u2211", sung: "\u266A", Sup: "\u22D1", sup: "\u2283", sup1: "\xB9", sup2: "\xB2", sup3: "\xB3", supdot: "\u2ABE", supdsub: "\u2AD8", supE: "\u2AC6", supe: "\u2287", supedot: "\u2AC4", Superset: "\u2283", SupersetEqual: "\u2287", suphsol: "\u27C9", suphsub: "\u2AD7", suplarr: "\u297B", supmult: "\u2AC2", supnE: "\u2ACC", supne: "\u228B", supplus: "\u2AC0", Supset: "\u22D1", supset: "\u2283", supseteq: "\u2287", supseteqq: "\u2AC6", supsetneq: "\u228B", supsetneqq: "\u2ACC", supsim: "\u2AC8", supsub: "\u2AD4", supsup: "\u2AD6", swarhk: "\u2926", swArr: "\u21D9", swarr: "\u2199", swarrow: "\u2199", swnwar: "\u292A", szlig: "\xDF", Tab: "	", target: "\u2316", Tau: "\u03A4", tau: "\u03C4", tbrk: "\u23B4", Tcaron: "\u0164", tcaron: "\u0165", Tcedil: "\u0162", tcedil: "\u0163", Tcy: "\u0422", tcy: "\u0442", tdot: "\u20DB", telrec: "\u2315", Tfr: "\u{1D517}", tfr: "\u{1D531}", there4: "\u2234", Therefore: "\u2234", therefore: "\u2234", Theta: "\u0398", theta: "\u03B8", thetasym: "\u03D1", thetav: "\u03D1", thickapprox: "\u2248", thicksim: "\u223C", ThickSpace: "\u205F\u200A", thinsp: "\u2009", ThinSpace: "\u2009", thkap: "\u2248", thksim: "\u223C", THORN: "\xDE", thorn: "\xFE", Tilde: "\u223C", tilde: "\u02DC", TildeEqual: "\u2243", TildeFullEqual: "\u2245", TildeTilde: "\u2248", times: "\xD7", timesb: "\u22A0", timesbar: "\u2A31", timesd: "\u2A30", tint: "\u222D", toea: "\u2928", top: "\u22A4", topbot: "\u2336", topcir: "\u2AF1", Topf: "\u{1D54B}", topf: "\u{1D565}", topfork: "\u2ADA", tosa: "\u2929", tprime: "\u2034", TRADE: "\u2122", trade: "\u2122", triangle: "\u25B5", triangledown: "\u25BF", triangleleft: "\u25C3", trianglelefteq: "\u22B4", triangleq: "\u225C", triangleright: "\u25B9", trianglerighteq: "\u22B5", tridot: "\u25EC", trie: "\u225C", triminus: "\u2A3A", TripleDot: "\u20DB", triplus: "\u2A39", trisb: "\u29CD", tritime: "\u2A3B", trpezium: "\u23E2", Tscr: "\u{1D4AF}", tscr: "\u{1D4C9}", TScy: "\u0426", tscy: "\u0446", TSHcy: "\u040B", tshcy: "\u045B", Tstrok: "\u0166", tstrok: "\u0167", twixt: "\u226C", twoheadleftarrow: "\u219E", twoheadrightarrow: "\u21A0", Uacute: "\xDA", uacute: "\xFA", Uarr: "\u219F", uArr: "\u21D1", uarr: "\u2191", Uarrocir: "\u2949", Ubrcy: "\u040E", ubrcy: "\u045E", Ubreve: "\u016C", ubreve: "\u016D", Ucirc: "\xDB", ucirc: "\xFB", Ucy: "\u0423", ucy: "\u0443", udarr: "\u21C5", Udblac: "\u0170", udblac: "\u0171", udhar: "\u296E", ufisht: "\u297E", Ufr: "\u{1D518}", ufr: "\u{1D532}", Ugrave: "\xD9", ugrave: "\xF9", uHar: "\u2963", uharl: "\u21BF", uharr: "\u21BE", uhblk: "\u2580", ulcorn: "\u231C", ulcorner: "\u231C", ulcrop: "\u230F", ultri: "\u25F8", Umacr: "\u016A", umacr: "\u016B", uml: "\xA8", UnderBar: "_", UnderBrace: "\u23DF", UnderBracket: "\u23B5", UnderParenthesis: "\u23DD", Union: "\u22C3", UnionPlus: "\u228E", Uogon: "\u0172", uogon: "\u0173", Uopf: "\u{1D54C}", uopf: "\u{1D566}", UpArrow: "\u2191", Uparrow: "\u21D1", uparrow: "\u2191", UpArrowBar: "\u2912", UpArrowDownArrow: "\u21C5", UpDownArrow: "\u2195", Updownarrow: "\u21D5", updownarrow: "\u2195", UpEquilibrium: "\u296E", upharpoonleft: "\u21BF", upharpoonright: "\u21BE", uplus: "\u228E", UpperLeftArrow: "\u2196", UpperRightArrow: "\u2197", Upsi: "\u03D2", upsi: "\u03C5", upsih: "\u03D2", Upsilon: "\u03A5", upsilon: "\u03C5", UpTee: "\u22A5", UpTeeArrow: "\u21A5", upuparrows: "\u21C8", urcorn: "\u231D", urcorner: "\u231D", urcrop: "\u230E", Uring: "\u016E", uring: "\u016F", urtri: "\u25F9", Uscr: "\u{1D4B0}", uscr: "\u{1D4CA}", utdot: "\u22F0", Utilde: "\u0168", utilde: "\u0169", utri: "\u25B5", utrif: "\u25B4", uuarr: "\u21C8", Uuml: "\xDC", uuml: "\xFC", uwangle: "\u29A7", vangrt: "\u299C", varepsilon: "\u03F5", varkappa: "\u03F0", varnothing: "\u2205", varphi: "\u03D5", varpi: "\u03D6", varpropto: "\u221D", vArr: "\u21D5", varr: "\u2195", varrho: "\u03F1", varsigma: "\u03C2", varsubsetneq: "\u228A\uFE00", varsubsetneqq: "\u2ACB\uFE00", varsupsetneq: "\u228B\uFE00", varsupsetneqq: "\u2ACC\uFE00", vartheta: "\u03D1", vartriangleleft: "\u22B2", vartriangleright: "\u22B3", Vbar: "\u2AEB", vBar: "\u2AE8", vBarv: "\u2AE9", Vcy: "\u0412", vcy: "\u0432", VDash: "\u22AB", Vdash: "\u22A9", vDash: "\u22A8", vdash: "\u22A2", Vdashl: "\u2AE6", Vee: "\u22C1", vee: "\u2228", veebar: "\u22BB", veeeq: "\u225A", vellip: "\u22EE", Verbar: "\u2016", verbar: "|", Vert: "\u2016", vert: "|", VerticalBar: "\u2223", VerticalLine: "|", VerticalSeparator: "\u2758", VerticalTilde: "\u2240", VeryThinSpace: "\u200A", Vfr: "\u{1D519}", vfr: "\u{1D533}", vltri: "\u22B2", vnsub: "\u2282\u20D2", vnsup: "\u2283\u20D2", Vopf: "\u{1D54D}", vopf: "\u{1D567}", vprop: "\u221D", vrtri: "\u22B3", Vscr: "\u{1D4B1}", vscr: "\u{1D4CB}", vsubnE: "\u2ACB\uFE00", vsubne: "\u228A\uFE00", vsupnE: "\u2ACC\uFE00", vsupne: "\u228B\uFE00", Vvdash: "\u22AA", vzigzag: "\u299A", Wcirc: "\u0174", wcirc: "\u0175", wedbar: "\u2A5F", Wedge: "\u22C0", wedge: "\u2227", wedgeq: "\u2259", weierp: "\u2118", Wfr: "\u{1D51A}", wfr: "\u{1D534}", Wopf: "\u{1D54E}", wopf: "\u{1D568}", wp: "\u2118", wr: "\u2240", wreath: "\u2240", Wscr: "\u{1D4B2}", wscr: "\u{1D4CC}", xcap: "\u22C2", xcirc: "\u25EF", xcup: "\u22C3", xdtri: "\u25BD", Xfr: "\u{1D51B}", xfr: "\u{1D535}", xhArr: "\u27FA", xharr: "\u27F7", Xi: "\u039E", xi: "\u03BE", xlArr: "\u27F8", xlarr: "\u27F5", xmap: "\u27FC", xnis: "\u22FB", xodot: "\u2A00", Xopf: "\u{1D54F}", xopf: "\u{1D569}", xoplus: "\u2A01", xotime: "\u2A02", xrArr: "\u27F9", xrarr: "\u27F6", Xscr: "\u{1D4B3}", xscr: "\u{1D4CD}", xsqcup: "\u2A06", xuplus: "\u2A04", xutri: "\u25B3", xvee: "\u22C1", xwedge: "\u22C0", Yacute: "\xDD", yacute: "\xFD", YAcy: "\u042F", yacy: "\u044F", Ycirc: "\u0176", ycirc: "\u0177", Ycy: "\u042B", ycy: "\u044B", yen: "\xA5", Yfr: "\u{1D51C}", yfr: "\u{1D536}", YIcy: "\u0407", yicy: "\u0457", Yopf: "\u{1D550}", yopf: "\u{1D56A}", Yscr: "\u{1D4B4}", yscr: "\u{1D4CE}", YUcy: "\u042E", yucy: "\u044E", Yuml: "\u0178", yuml: "\xFF", Zacute: "\u0179", zacute: "\u017A", Zcaron: "\u017D", zcaron: "\u017E", Zcy: "\u0417", zcy: "\u0437", Zdot: "\u017B", zdot: "\u017C", zeetrf: "\u2128", ZeroWidthSpace: "\u200B", Zeta: "\u0396", zeta: "\u03B6", Zfr: "\u2128", zfr: "\u{1D537}", ZHcy: "\u0416", zhcy: "\u0436", zigrarr: "\u21DD", Zopf: "\u2124", zopf: "\u{1D56B}", Zscr: "\u{1D4B5}", zscr: "\u{1D4CF}", zwj: "\u200D", zwnj: "\u200C" }, t2.NGSP_UNICODE = "\uE500", t2.NAMED_ENTITIES.ngsp = t2.NGSP_UNICODE;
      });
      class mr {
        constructor({ closedByChildren: e2, implicitNamespacePrefix: t2, contentType: r2 = dr.TagContentType.PARSABLE_DATA, closedByParent: n2 = false, isVoid: s2 = false, ignoreFirstLf: i2 = false } = {}) {
          this.closedByChildren = {}, this.closedByParent = false, this.canSelfClose = false, e2 && e2.length > 0 && e2.forEach((e3) => this.closedByChildren[e3] = true), this.isVoid = s2, this.closedByParent = n2 || s2, this.implicitNamespacePrefix = t2 || null, this.contentType = r2, this.ignoreFirstLf = i2;
        }
        isClosedByChild(e2) {
          return this.isVoid || e2.toLowerCase() in this.closedByChildren;
        }
      }
      var fr = mr;
      let gr, Er;
      var Cr = function(e2) {
        return Er || (gr = new mr(), Er = { base: new mr({ isVoid: true }), meta: new mr({ isVoid: true }), area: new mr({ isVoid: true }), embed: new mr({ isVoid: true }), link: new mr({ isVoid: true }), img: new mr({ isVoid: true }), input: new mr({ isVoid: true }), param: new mr({ isVoid: true }), hr: new mr({ isVoid: true }), br: new mr({ isVoid: true }), source: new mr({ isVoid: true }), track: new mr({ isVoid: true }), wbr: new mr({ isVoid: true }), p: new mr({ closedByChildren: ["address", "article", "aside", "blockquote", "div", "dl", "fieldset", "footer", "form", "h1", "h2", "h3", "h4", "h5", "h6", "header", "hgroup", "hr", "main", "nav", "ol", "p", "pre", "section", "table", "ul"], closedByParent: true }), thead: new mr({ closedByChildren: ["tbody", "tfoot"] }), tbody: new mr({ closedByChildren: ["tbody", "tfoot"], closedByParent: true }), tfoot: new mr({ closedByChildren: ["tbody"], closedByParent: true }), tr: new mr({ closedByChildren: ["tr"], closedByParent: true }), td: new mr({ closedByChildren: ["td", "th"], closedByParent: true }), th: new mr({ closedByChildren: ["td", "th"], closedByParent: true }), col: new mr({ isVoid: true }), svg: new mr({ implicitNamespacePrefix: "svg" }), math: new mr({ implicitNamespacePrefix: "math" }), li: new mr({ closedByChildren: ["li"], closedByParent: true }), dt: new mr({ closedByChildren: ["dt", "dd"] }), dd: new mr({ closedByChildren: ["dt", "dd"], closedByParent: true }), rb: new mr({ closedByChildren: ["rb", "rt", "rtc", "rp"], closedByParent: true }), rt: new mr({ closedByChildren: ["rb", "rt", "rtc", "rp"], closedByParent: true }), rtc: new mr({ closedByChildren: ["rb", "rtc", "rp"], closedByParent: true }), rp: new mr({ closedByChildren: ["rb", "rt", "rtc", "rp"], closedByParent: true }), optgroup: new mr({ closedByChildren: ["optgroup"], closedByParent: true }), option: new mr({ closedByChildren: ["option", "optgroup"], closedByParent: true }), pre: new mr({ ignoreFirstLf: true }), listing: new mr({ ignoreFirstLf: true }), style: new mr({ contentType: dr.TagContentType.RAW_TEXT }), script: new mr({ contentType: dr.TagContentType.RAW_TEXT }), title: new mr({ contentType: dr.TagContentType.ESCAPABLE_RAW_TEXT }), textarea: new mr({ contentType: dr.TagContentType.ESCAPABLE_RAW_TEXT, ignoreFirstLf: true }) }), Er[e2] || gr;
      }, Tr = Object.defineProperty({ HtmlTagDefinition: fr, getHtmlTagDefinition: Cr }, "__esModule", { value: true });
      var _r = class {
        constructor(e2, t2 = -1) {
          this.path = e2, this.position = t2;
        }
        get empty() {
          return !this.path || !this.path.length;
        }
        get head() {
          return this.path[0];
        }
        get tail() {
          return this.path[this.path.length - 1];
        }
        parentOf(e2) {
          return e2 && this.path[this.path.indexOf(e2) - 1];
        }
        childOf(e2) {
          return this.path[this.path.indexOf(e2) + 1];
        }
        first(e2) {
          for (let t2 = this.path.length - 1; t2 >= 0; t2--) {
            let r2 = this.path[t2];
            if (r2 instanceof e2)
              return r2;
          }
        }
        push(e2) {
          this.path.push(e2);
        }
        pop() {
          return this.path.pop();
        }
      }, Sr = Object.defineProperty({ AstPath: _r }, "__esModule", { value: true });
      var yr = class {
        constructor(e2, t2, r2) {
          this.value = e2, this.sourceSpan = t2, this.i18n = r2, this.type = "text";
        }
        visit(e2, t2) {
          return e2.visitText(this, t2);
        }
      };
      var Fr = class {
        constructor(e2, t2) {
          this.value = e2, this.sourceSpan = t2, this.type = "cdata";
        }
        visit(e2, t2) {
          return e2.visitCdata(this, t2);
        }
      };
      var vr = class {
        constructor(e2, t2, r2, n2, s2, i2) {
          this.switchValue = e2, this.type = t2, this.cases = r2, this.sourceSpan = n2, this.switchValueSourceSpan = s2, this.i18n = i2;
        }
        visit(e2, t2) {
          return e2.visitExpansion(this, t2);
        }
      };
      var Ar = class {
        constructor(e2, t2, r2, n2, s2) {
          this.value = e2, this.expression = t2, this.sourceSpan = r2, this.valueSourceSpan = n2, this.expSourceSpan = s2;
        }
        visit(e2, t2) {
          return e2.visitExpansionCase(this, t2);
        }
      };
      var br = class {
        constructor(e2, t2, r2, n2 = null, s2 = null, i2 = null) {
          this.name = e2, this.value = t2, this.sourceSpan = r2, this.valueSpan = n2, this.nameSpan = s2, this.i18n = i2, this.type = "attribute";
        }
        visit(e2, t2) {
          return e2.visitAttribute(this, t2);
        }
      };
      class wr {
        constructor(e2, t2, r2, n2, s2 = null, i2 = null, o2 = null, a2 = null) {
          this.name = e2, this.attrs = t2, this.children = r2, this.sourceSpan = n2, this.startSourceSpan = s2, this.endSourceSpan = i2, this.nameSpan = o2, this.i18n = a2, this.type = "element";
        }
        visit(e2, t2) {
          return e2.visitElement(this, t2);
        }
      }
      var Nr = wr;
      var kr = class {
        constructor(e2, t2) {
          this.value = e2, this.sourceSpan = t2, this.type = "comment";
        }
        visit(e2, t2) {
          return e2.visitComment(this, t2);
        }
      };
      var xr = class {
        constructor(e2, t2) {
          this.value = e2, this.sourceSpan = t2, this.type = "docType";
        }
        visit(e2, t2) {
          return e2.visitDocType(this, t2);
        }
      };
      function Ir(e2, t2, r2 = null) {
        const n2 = [], s2 = e2.visit ? (t3) => e2.visit(t3, r2) || t3.visit(e2, r2) : (t3) => t3.visit(e2, r2);
        return t2.forEach((e3) => {
          const t3 = s2(e3);
          t3 && n2.push(t3);
        }), n2;
      }
      var Pr = Ir;
      class Rr {
        constructor() {
        }
        visitElement(e2, t2) {
          this.visitChildren(t2, (t3) => {
            t3(e2.attrs), t3(e2.children);
          });
        }
        visitAttribute(e2, t2) {
        }
        visitText(e2, t2) {
        }
        visitCdata(e2, t2) {
        }
        visitComment(e2, t2) {
        }
        visitDocType(e2, t2) {
        }
        visitExpansion(e2, t2) {
          return this.visitChildren(t2, (t3) => {
            t3(e2.cases);
          });
        }
        visitExpansionCase(e2, t2) {
        }
        visitChildren(e2, t2) {
          let r2 = [], n2 = this;
          return t2(function(t3) {
            t3 && r2.push(Ir(n2, t3, e2));
          }), Array.prototype.concat.apply([], r2);
        }
      }
      var Or = Rr;
      function Lr(e2) {
        const t2 = e2.sourceSpan.start.offset;
        let r2 = e2.sourceSpan.end.offset;
        return e2 instanceof wr && (e2.endSourceSpan ? r2 = e2.endSourceSpan.end.offset : e2.children && e2.children.length && (r2 = Lr(e2.children[e2.children.length - 1]).end)), { start: t2, end: r2 };
      }
      var Br = function(e2, t2) {
        const r2 = [];
        return Ir(new class extends Rr {
          visit(e3, n2) {
            const s2 = Lr(e3);
            if (!(s2.start <= t2 && t2 < s2.end))
              return true;
            r2.push(e3);
          }
        }(), e2), new Sr.AstPath(r2, t2);
      }, qr = Object.defineProperty({ Text: yr, CDATA: Fr, Expansion: vr, ExpansionCase: Ar, Attribute: br, Element: Nr, Comment: kr, DocType: xr, visitAll: Pr, RecursiveVisitor: Or, findNode: Br }, "__esModule", { value: true });
      var $r = function(e2, t2) {
        if (null != t2) {
          if (!Array.isArray(t2))
            throw new Error("Expected '".concat(e2, "' to be an array of strings."));
          for (let r2 = 0; r2 < t2.length; r2 += 1)
            if ("string" != typeof t2[r2])
              throw new Error("Expected '".concat(e2, "' to be an array of strings."));
        }
      };
      const Mr = [/^\s*$/, /[<>]/, /^[{}]$/, /&(#|[a-z])/i, /^\/\//];
      var Ur = function(e2, t2) {
        if (!(null == t2 || Array.isArray(t2) && 2 == t2.length))
          throw new Error("Expected '".concat(e2, "' to be an array, [start, end]."));
        if (null != t2) {
          const e3 = t2[0], r2 = t2[1];
          Mr.forEach((t3) => {
            if (t3.test(e3) || t3.test(r2))
              throw new Error("['".concat(e3, "', '").concat(r2, "'] contains unusable interpolation symbol."));
          });
        }
      }, Vr = Object.defineProperty({ assertArrayOfStrings: $r, assertInterpolationSymbols: Ur }, "__esModule", { value: true }), Gr = t(function(e2, t2) {
        Object.defineProperty(t2, "__esModule", { value: true });
        class r2 {
          constructor(e3, t3) {
            this.start = e3, this.end = t3;
          }
          static fromArray(e3) {
            return e3 ? (Vr.assertInterpolationSymbols("interpolation", e3), new r2(e3[0], e3[1])) : t2.DEFAULT_INTERPOLATION_CONFIG;
          }
        }
        t2.InterpolationConfig = r2, t2.DEFAULT_INTERPOLATION_CONFIG = new r2("{{", "}}");
      }), jr = t(function(e2, t2) {
        Object.defineProperty(t2, "__esModule", { value: true });
        const n2 = r;
        var s2;
        !function(e3) {
          e3[e3.TAG_OPEN_START = 0] = "TAG_OPEN_START", e3[e3.TAG_OPEN_END = 1] = "TAG_OPEN_END", e3[e3.TAG_OPEN_END_VOID = 2] = "TAG_OPEN_END_VOID", e3[e3.TAG_CLOSE = 3] = "TAG_CLOSE", e3[e3.TEXT = 4] = "TEXT", e3[e3.ESCAPABLE_RAW_TEXT = 5] = "ESCAPABLE_RAW_TEXT", e3[e3.RAW_TEXT = 6] = "RAW_TEXT", e3[e3.COMMENT_START = 7] = "COMMENT_START", e3[e3.COMMENT_END = 8] = "COMMENT_END", e3[e3.CDATA_START = 9] = "CDATA_START", e3[e3.CDATA_END = 10] = "CDATA_END", e3[e3.ATTR_NAME = 11] = "ATTR_NAME", e3[e3.ATTR_QUOTE = 12] = "ATTR_QUOTE", e3[e3.ATTR_VALUE = 13] = "ATTR_VALUE", e3[e3.DOC_TYPE_START = 14] = "DOC_TYPE_START", e3[e3.DOC_TYPE_END = 15] = "DOC_TYPE_END", e3[e3.EXPANSION_FORM_START = 16] = "EXPANSION_FORM_START", e3[e3.EXPANSION_CASE_VALUE = 17] = "EXPANSION_CASE_VALUE", e3[e3.EXPANSION_CASE_EXP_START = 18] = "EXPANSION_CASE_EXP_START", e3[e3.EXPANSION_CASE_EXP_END = 19] = "EXPANSION_CASE_EXP_END", e3[e3.EXPANSION_FORM_END = 20] = "EXPANSION_FORM_END", e3[e3.EOF = 21] = "EOF";
        }(s2 = t2.TokenType || (t2.TokenType = {}));
        class i2 {
          constructor(e3, t3, r2) {
            this.type = e3, this.parts = t3, this.sourceSpan = r2;
          }
        }
        t2.Token = i2;
        class o2 extends B.ParseError {
          constructor(e3, t3, r2) {
            super(r2, e3), this.tokenType = t3;
          }
        }
        t2.TokenError = o2;
        class a2 {
          constructor(e3, t3) {
            this.tokens = e3, this.errors = t3;
          }
        }
        t2.TokenizeResult = a2, t2.tokenize = function(e3, t3, r2, n3 = {}) {
          return new p2(new B.ParseSourceFile(e3, t3), r2, n3).tokenize();
        };
        const u2 = /\r\n?/g;
        function c2(e3) {
          const t3 = e3 === n2.$EOF ? "EOF" : String.fromCharCode(e3);
          return 'Unexpected character "'.concat(t3, '"');
        }
        function l2(e3) {
          return 'Unknown entity "'.concat(e3, '" - use the "&#<decimal>;" or  "&#x<hex>;" syntax');
        }
        class D2 {
          constructor(e3) {
            this.error = e3;
          }
        }
        class p2 {
          constructor(e3, t3, r2) {
            this._getTagContentType = t3, this._currentTokenStart = null, this._currentTokenType = null, this._expansionCaseStack = [], this._inInterpolation = false, this._fullNameStack = [], this.tokens = [], this.errors = [], this._tokenizeIcu = r2.tokenizeExpansionForms || false, this._interpolationConfig = r2.interpolationConfig || Gr.DEFAULT_INTERPOLATION_CONFIG, this._leadingTriviaCodePoints = r2.leadingTriviaChars && r2.leadingTriviaChars.map((e4) => e4.codePointAt(0) || 0), this._canSelfClose = r2.canSelfClose || false, this._allowHtmComponentClosingTags = r2.allowHtmComponentClosingTags || false;
            const n3 = r2.range || { endPos: e3.content.length, startPos: 0, startLine: 0, startCol: 0 };
            this._cursor = r2.escapedString ? new C2(e3, n3) : new E2(e3, n3);
            try {
              this._cursor.init();
            } catch (e4) {
              this.handleError(e4);
            }
          }
          _processCarriageReturns(e3) {
            return e3.replace(u2, "\n");
          }
          tokenize() {
            for (; this._cursor.peek() !== n2.$EOF; ) {
              const e3 = this._cursor.clone();
              try {
                if (this._attemptCharCode(n2.$LT))
                  if (this._attemptCharCode(n2.$BANG))
                    this._attemptStr("[CDATA[") ? this._consumeCdata(e3) : this._attemptStr("--") ? this._consumeComment(e3) : this._attemptStrCaseInsensitive("doctype") ? this._consumeDocType(e3) : this._consumeBogusComment(e3);
                  else if (this._attemptCharCode(n2.$SLASH))
                    this._consumeTagClose(e3);
                  else {
                    const t3 = this._cursor.clone();
                    this._attemptCharCode(n2.$QUESTION) ? (this._cursor = t3, this._consumeBogusComment(e3)) : this._consumeTagOpen(e3);
                  }
                else
                  this._tokenizeIcu && this._tokenizeExpansionForm() || this._consumeText();
              } catch (e4) {
                this.handleError(e4);
              }
            }
            return this._beginToken(s2.EOF), this._endToken([]), new a2(function(e3) {
              const t3 = [];
              let r2;
              for (let n3 = 0; n3 < e3.length; n3++) {
                const i3 = e3[n3];
                r2 && r2.type == s2.TEXT && i3.type == s2.TEXT ? (r2.parts[0] += i3.parts[0], r2.sourceSpan.end = i3.sourceSpan.end) : (r2 = i3, t3.push(r2));
              }
              return t3;
            }(this.tokens), this.errors);
          }
          _tokenizeExpansionForm() {
            if (this.isExpansionFormStart())
              return this._consumeExpansionFormStart(), true;
            if (((e3 = this._cursor.peek()) === n2.$EQ || n2.isAsciiLetter(e3) || n2.isDigit(e3)) && this._isInExpansionForm())
              return this._consumeExpansionCaseStart(), true;
            var e3;
            if (this._cursor.peek() === n2.$RBRACE) {
              if (this._isInExpansionCase())
                return this._consumeExpansionCaseEnd(), true;
              if (this._isInExpansionForm())
                return this._consumeExpansionFormEnd(), true;
            }
            return false;
          }
          _beginToken(e3, t3 = this._cursor.clone()) {
            this._currentTokenStart = t3, this._currentTokenType = e3;
          }
          _endToken(e3, t3 = this._cursor.clone()) {
            if (null === this._currentTokenStart)
              throw new o2("Programming error - attempted to end a token when there was no start to the token", this._currentTokenType, this._cursor.getSpan(t3));
            if (null === this._currentTokenType)
              throw new o2("Programming error - attempted to end a token which has no token type", null, this._cursor.getSpan(this._currentTokenStart));
            const r2 = new i2(this._currentTokenType, e3, this._cursor.getSpan(this._currentTokenStart, this._leadingTriviaCodePoints));
            return this.tokens.push(r2), this._currentTokenStart = null, this._currentTokenType = null, r2;
          }
          _createError(e3, t3) {
            this._isInExpansionForm() && (e3 += ` (Do you have an unescaped "{" in your template? Use "{{ '{' }}") to escape it.)`);
            const r2 = new o2(e3, this._currentTokenType, t3);
            return this._currentTokenStart = null, this._currentTokenType = null, new D2(r2);
          }
          handleError(e3) {
            if (e3 instanceof T2 && (e3 = this._createError(e3.msg, this._cursor.getSpan(e3.cursor))), !(e3 instanceof D2))
              throw e3;
            this.errors.push(e3.error);
          }
          _attemptCharCode(e3) {
            return this._cursor.peek() === e3 && (this._cursor.advance(), true);
          }
          _attemptCharCodeCaseInsensitive(e3) {
            return t3 = this._cursor.peek(), r2 = e3, g2(t3) == g2(r2) && (this._cursor.advance(), true);
            var t3, r2;
          }
          _requireCharCode(e3) {
            const t3 = this._cursor.clone();
            if (!this._attemptCharCode(e3))
              throw this._createError(c2(this._cursor.peek()), this._cursor.getSpan(t3));
          }
          _attemptStr(e3) {
            const t3 = e3.length;
            if (this._cursor.charsLeft() < t3)
              return false;
            const r2 = this._cursor.clone();
            for (let n3 = 0; n3 < t3; n3++)
              if (!this._attemptCharCode(e3.charCodeAt(n3)))
                return this._cursor = r2, false;
            return true;
          }
          _attemptStrCaseInsensitive(e3) {
            for (let t3 = 0; t3 < e3.length; t3++)
              if (!this._attemptCharCodeCaseInsensitive(e3.charCodeAt(t3)))
                return false;
            return true;
          }
          _requireStr(e3) {
            const t3 = this._cursor.clone();
            if (!this._attemptStr(e3))
              throw this._createError(c2(this._cursor.peek()), this._cursor.getSpan(t3));
          }
          _requireStrCaseInsensitive(e3) {
            const t3 = this._cursor.clone();
            if (!this._attemptStrCaseInsensitive(e3))
              throw this._createError(c2(this._cursor.peek()), this._cursor.getSpan(t3));
          }
          _attemptCharCodeUntilFn(e3) {
            for (; !e3(this._cursor.peek()); )
              this._cursor.advance();
          }
          _requireCharCodeUntilFn(e3, t3) {
            const r2 = this._cursor.clone();
            this._attemptCharCodeUntilFn(e3);
            if (this._cursor.clone().diff(r2) < t3)
              throw this._createError(c2(this._cursor.peek()), this._cursor.getSpan(r2));
          }
          _attemptUntilChar(e3) {
            for (; this._cursor.peek() !== e3; )
              this._cursor.advance();
          }
          _readChar(e3) {
            if (e3 && this._cursor.peek() === n2.$AMPERSAND)
              return this._decodeEntity();
            {
              const e4 = String.fromCodePoint(this._cursor.peek());
              return this._cursor.advance(), e4;
            }
          }
          _decodeEntity() {
            const e3 = this._cursor.clone();
            if (this._cursor.advance(), !this._attemptCharCode(n2.$HASH)) {
              const t3 = this._cursor.clone();
              if (this._attemptCharCodeUntilFn(f2), this._cursor.peek() != n2.$SEMICOLON)
                return this._cursor = t3, "&";
              const r2 = this._cursor.getChars(t3);
              this._cursor.advance();
              const s3 = dr.NAMED_ENTITIES[r2];
              if (!s3)
                throw this._createError(l2(r2), this._cursor.getSpan(e3));
              return s3;
            }
            {
              const t3 = this._attemptCharCode(n2.$x) || this._attemptCharCode(n2.$X), r2 = this._cursor.clone();
              if (this._attemptCharCodeUntilFn(m2), this._cursor.peek() != n2.$SEMICOLON)
                throw this._createError(c2(this._cursor.peek()), this._cursor.getSpan());
              const s3 = this._cursor.getChars(r2);
              this._cursor.advance();
              try {
                const e4 = parseInt(s3, t3 ? 16 : 10);
                return String.fromCharCode(e4);
              } catch (t4) {
                throw this._createError(l2(this._cursor.getChars(e3)), this._cursor.getSpan());
              }
            }
          }
          _consumeRawText(e3, t3) {
            this._beginToken(e3 ? s2.ESCAPABLE_RAW_TEXT : s2.RAW_TEXT);
            const r2 = [];
            for (; ; ) {
              const n3 = this._cursor.clone(), s3 = t3();
              if (this._cursor = n3, s3)
                break;
              r2.push(this._readChar(e3));
            }
            return this._endToken([this._processCarriageReturns(r2.join(""))]);
          }
          _consumeComment(e3) {
            this._beginToken(s2.COMMENT_START, e3), this._endToken([]), this._consumeRawText(false, () => this._attemptStr("-->")), this._beginToken(s2.COMMENT_END), this._requireStr("-->"), this._endToken([]);
          }
          _consumeBogusComment(e3) {
            this._beginToken(s2.COMMENT_START, e3), this._endToken([]), this._consumeRawText(false, () => this._cursor.peek() === n2.$GT), this._beginToken(s2.COMMENT_END), this._cursor.advance(), this._endToken([]);
          }
          _consumeCdata(e3) {
            this._beginToken(s2.CDATA_START, e3), this._endToken([]), this._consumeRawText(false, () => this._attemptStr("]]>")), this._beginToken(s2.CDATA_END), this._requireStr("]]>"), this._endToken([]);
          }
          _consumeDocType(e3) {
            this._beginToken(s2.DOC_TYPE_START, e3), this._endToken([]), this._consumeRawText(false, () => this._cursor.peek() === n2.$GT), this._beginToken(s2.DOC_TYPE_END), this._cursor.advance(), this._endToken([]);
          }
          _consumePrefixAndName() {
            const e3 = this._cursor.clone();
            let t3 = "";
            for (; this._cursor.peek() !== n2.$COLON && !(((r2 = this._cursor.peek()) < n2.$a || n2.$z < r2) && (r2 < n2.$A || n2.$Z < r2) && (r2 < n2.$0 || r2 > n2.$9)); )
              this._cursor.advance();
            var r2;
            let s3;
            this._cursor.peek() === n2.$COLON ? (t3 = this._cursor.getChars(e3), this._cursor.advance(), s3 = this._cursor.clone()) : s3 = e3, this._requireCharCodeUntilFn(d2, "" === t3 ? 0 : 1);
            return [t3, this._cursor.getChars(s3)];
          }
          _consumeTagOpen(e3) {
            let t3, r2, i3, o3 = this.tokens.length;
            const a3 = this._cursor.clone(), u3 = [];
            try {
              if (!n2.isAsciiLetter(this._cursor.peek()))
                throw this._createError(c2(this._cursor.peek()), this._cursor.getSpan(e3));
              for (i3 = this._consumeTagOpenStart(e3), r2 = i3.parts[0], t3 = i3.parts[1], this._attemptCharCodeUntilFn(h2); this._cursor.peek() !== n2.$SLASH && this._cursor.peek() !== n2.$GT; ) {
                const [e4, t4] = this._consumeAttributeName();
                if (this._attemptCharCodeUntilFn(h2), this._attemptCharCode(n2.$EQ)) {
                  this._attemptCharCodeUntilFn(h2);
                  const r3 = this._consumeAttributeValue();
                  u3.push({ prefix: e4, name: t4, value: r3 });
                } else
                  u3.push({ prefix: e4, name: t4 });
                this._attemptCharCodeUntilFn(h2);
              }
              this._consumeTagOpenEnd();
            } catch (t4) {
              if (t4 instanceof D2)
                return this._cursor = a3, i3 && (this.tokens.length = o3), this._beginToken(s2.TEXT, e3), void this._endToken(["<"]);
              throw t4;
            }
            if (this._canSelfClose && this.tokens[this.tokens.length - 1].type === s2.TAG_OPEN_END_VOID)
              return;
            const l3 = this._getTagContentType(t3, r2, this._fullNameStack.length > 0, u3);
            this._handleFullNameStackForTagOpen(r2, t3), l3 === dr.TagContentType.RAW_TEXT ? this._consumeRawTextWithTagClose(r2, t3, false) : l3 === dr.TagContentType.ESCAPABLE_RAW_TEXT && this._consumeRawTextWithTagClose(r2, t3, true);
          }
          _consumeRawTextWithTagClose(e3, t3, r2) {
            this._consumeRawText(r2, () => !!this._attemptCharCode(n2.$LT) && (!!this._attemptCharCode(n2.$SLASH) && (this._attemptCharCodeUntilFn(h2), !!this._attemptStrCaseInsensitive(e3 ? "".concat(e3, ":").concat(t3) : t3) && (this._attemptCharCodeUntilFn(h2), this._attemptCharCode(n2.$GT))))), this._beginToken(s2.TAG_CLOSE), this._requireCharCodeUntilFn((e4) => e4 === n2.$GT, 3), this._cursor.advance(), this._endToken([e3, t3]), this._handleFullNameStackForTagClose(e3, t3);
          }
          _consumeTagOpenStart(e3) {
            this._beginToken(s2.TAG_OPEN_START, e3);
            const t3 = this._consumePrefixAndName();
            return this._endToken(t3);
          }
          _consumeAttributeName() {
            const e3 = this._cursor.peek();
            if (e3 === n2.$SQ || e3 === n2.$DQ)
              throw this._createError(c2(e3), this._cursor.getSpan());
            this._beginToken(s2.ATTR_NAME);
            const t3 = this._consumePrefixAndName();
            return this._endToken(t3), t3;
          }
          _consumeAttributeValue() {
            let e3;
            if (this._cursor.peek() === n2.$SQ || this._cursor.peek() === n2.$DQ) {
              this._beginToken(s2.ATTR_QUOTE);
              const t3 = this._cursor.peek();
              this._cursor.advance(), this._endToken([String.fromCodePoint(t3)]), this._beginToken(s2.ATTR_VALUE);
              const r2 = [];
              for (; this._cursor.peek() !== t3; )
                r2.push(this._readChar(true));
              e3 = this._processCarriageReturns(r2.join("")), this._endToken([e3]), this._beginToken(s2.ATTR_QUOTE), this._cursor.advance(), this._endToken([String.fromCodePoint(t3)]);
            } else {
              this._beginToken(s2.ATTR_VALUE);
              const t3 = this._cursor.clone();
              this._requireCharCodeUntilFn(d2, 1), e3 = this._processCarriageReturns(this._cursor.getChars(t3)), this._endToken([e3]);
            }
            return e3;
          }
          _consumeTagOpenEnd() {
            const e3 = this._attemptCharCode(n2.$SLASH) ? s2.TAG_OPEN_END_VOID : s2.TAG_OPEN_END;
            this._beginToken(e3), this._requireCharCode(n2.$GT), this._endToken([]);
          }
          _consumeTagClose(e3) {
            if (this._beginToken(s2.TAG_CLOSE, e3), this._attemptCharCodeUntilFn(h2), this._allowHtmComponentClosingTags && this._attemptCharCode(n2.$SLASH))
              this._attemptCharCodeUntilFn(h2), this._requireCharCode(n2.$GT), this._endToken([]);
            else {
              const [e4, t3] = this._consumePrefixAndName();
              this._attemptCharCodeUntilFn(h2), this._requireCharCode(n2.$GT), this._endToken([e4, t3]), this._handleFullNameStackForTagClose(e4, t3);
            }
          }
          _consumeExpansionFormStart() {
            this._beginToken(s2.EXPANSION_FORM_START), this._requireCharCode(n2.$LBRACE), this._endToken([]), this._expansionCaseStack.push(s2.EXPANSION_FORM_START), this._beginToken(s2.RAW_TEXT);
            const e3 = this._readUntil(n2.$COMMA);
            this._endToken([e3]), this._requireCharCode(n2.$COMMA), this._attemptCharCodeUntilFn(h2), this._beginToken(s2.RAW_TEXT);
            const t3 = this._readUntil(n2.$COMMA);
            this._endToken([t3]), this._requireCharCode(n2.$COMMA), this._attemptCharCodeUntilFn(h2);
          }
          _consumeExpansionCaseStart() {
            this._beginToken(s2.EXPANSION_CASE_VALUE);
            const e3 = this._readUntil(n2.$LBRACE).trim();
            this._endToken([e3]), this._attemptCharCodeUntilFn(h2), this._beginToken(s2.EXPANSION_CASE_EXP_START), this._requireCharCode(n2.$LBRACE), this._endToken([]), this._attemptCharCodeUntilFn(h2), this._expansionCaseStack.push(s2.EXPANSION_CASE_EXP_START);
          }
          _consumeExpansionCaseEnd() {
            this._beginToken(s2.EXPANSION_CASE_EXP_END), this._requireCharCode(n2.$RBRACE), this._endToken([]), this._attemptCharCodeUntilFn(h2), this._expansionCaseStack.pop();
          }
          _consumeExpansionFormEnd() {
            this._beginToken(s2.EXPANSION_FORM_END), this._requireCharCode(n2.$RBRACE), this._endToken([]), this._expansionCaseStack.pop();
          }
          _consumeText() {
            const e3 = this._cursor.clone();
            this._beginToken(s2.TEXT, e3);
            const t3 = [];
            do {
              this._interpolationConfig && this._attemptStr(this._interpolationConfig.start) ? (t3.push(this._interpolationConfig.start), this._inInterpolation = true) : this._interpolationConfig && this._inInterpolation && this._attemptStr(this._interpolationConfig.end) ? (t3.push(this._interpolationConfig.end), this._inInterpolation = false) : t3.push(this._readChar(true));
            } while (!this._isTextEnd());
            this._endToken([this._processCarriageReturns(t3.join(""))]);
          }
          _isTextEnd() {
            if (this._cursor.peek() === n2.$LT || this._cursor.peek() === n2.$EOF)
              return true;
            if (this._tokenizeIcu && !this._inInterpolation) {
              if (this.isExpansionFormStart())
                return true;
              if (this._cursor.peek() === n2.$RBRACE && this._isInExpansionCase())
                return true;
            }
            return false;
          }
          _readUntil(e3) {
            const t3 = this._cursor.clone();
            return this._attemptUntilChar(e3), this._cursor.getChars(t3);
          }
          _isInExpansionCase() {
            return this._expansionCaseStack.length > 0 && this._expansionCaseStack[this._expansionCaseStack.length - 1] === s2.EXPANSION_CASE_EXP_START;
          }
          _isInExpansionForm() {
            return this._expansionCaseStack.length > 0 && this._expansionCaseStack[this._expansionCaseStack.length - 1] === s2.EXPANSION_FORM_START;
          }
          isExpansionFormStart() {
            if (this._cursor.peek() !== n2.$LBRACE)
              return false;
            if (this._interpolationConfig) {
              const e3 = this._cursor.clone(), t3 = this._attemptStr(this._interpolationConfig.start);
              return this._cursor = e3, !t3;
            }
            return true;
          }
          _handleFullNameStackForTagOpen(e3, t3) {
            const r2 = dr.mergeNsAndName(e3, t3);
            0 !== this._fullNameStack.length && this._fullNameStack[this._fullNameStack.length - 1] !== r2 || this._fullNameStack.push(r2);
          }
          _handleFullNameStackForTagClose(e3, t3) {
            const r2 = dr.mergeNsAndName(e3, t3);
            0 !== this._fullNameStack.length && this._fullNameStack[this._fullNameStack.length - 1] === r2 && this._fullNameStack.pop();
          }
        }
        function h2(e3) {
          return !n2.isWhitespace(e3) || e3 === n2.$EOF;
        }
        function d2(e3) {
          return n2.isWhitespace(e3) || e3 === n2.$GT || e3 === n2.$SLASH || e3 === n2.$SQ || e3 === n2.$DQ || e3 === n2.$EQ;
        }
        function m2(e3) {
          return e3 == n2.$SEMICOLON || e3 == n2.$EOF || !n2.isAsciiHexDigit(e3);
        }
        function f2(e3) {
          return e3 == n2.$SEMICOLON || e3 == n2.$EOF || !n2.isAsciiLetter(e3);
        }
        function g2(e3) {
          return e3 >= n2.$a && e3 <= n2.$z ? e3 - n2.$a + n2.$A : e3;
        }
        class E2 {
          constructor(e3, t3) {
            if (e3 instanceof E2)
              this.file = e3.file, this.input = e3.input, this.end = e3.end, this.state = Object.assign({}, e3.state);
            else {
              if (!t3)
                throw new Error("Programming error: the range argument must be provided with a file argument.");
              this.file = e3, this.input = e3.content, this.end = t3.endPos, this.state = { peek: -1, offset: t3.startPos, line: t3.startLine, column: t3.startCol };
            }
          }
          clone() {
            return new E2(this);
          }
          peek() {
            return this.state.peek;
          }
          charsLeft() {
            return this.end - this.state.offset;
          }
          diff(e3) {
            return this.state.offset - e3.state.offset;
          }
          advance() {
            this.advanceState(this.state);
          }
          init() {
            this.updatePeek(this.state);
          }
          getSpan(e3, t3) {
            if (e3 = e3 || this, t3)
              for (e3 = e3.clone(); this.diff(e3) > 0 && -1 !== t3.indexOf(e3.peek()); )
                e3.advance();
            return new B.ParseSourceSpan(new B.ParseLocation(e3.file, e3.state.offset, e3.state.line, e3.state.column), new B.ParseLocation(this.file, this.state.offset, this.state.line, this.state.column));
          }
          getChars(e3) {
            return this.input.substring(e3.state.offset, this.state.offset);
          }
          charAt(e3) {
            return this.input.charCodeAt(e3);
          }
          advanceState(e3) {
            if (e3.offset >= this.end)
              throw this.state = e3, new T2('Unexpected character "EOF"', this);
            const t3 = this.charAt(e3.offset);
            t3 === n2.$LF ? (e3.line++, e3.column = 0) : n2.isNewLine(t3) || e3.column++, e3.offset++, this.updatePeek(e3);
          }
          updatePeek(e3) {
            e3.peek = e3.offset >= this.end ? n2.$EOF : this.charAt(e3.offset);
          }
        }
        class C2 extends E2 {
          constructor(e3, t3) {
            e3 instanceof C2 ? (super(e3), this.internalState = Object.assign({}, e3.internalState)) : (super(e3, t3), this.internalState = this.state);
          }
          advance() {
            this.state = this.internalState, super.advance(), this.processEscapeSequence();
          }
          init() {
            super.init(), this.processEscapeSequence();
          }
          clone() {
            return new C2(this);
          }
          getChars(e3) {
            const t3 = e3.clone();
            let r2 = "";
            for (; t3.internalState.offset < this.internalState.offset; )
              r2 += String.fromCodePoint(t3.peek()), t3.advance();
            return r2;
          }
          processEscapeSequence() {
            const e3 = () => this.internalState.peek;
            if (e3() === n2.$BACKSLASH)
              if (this.internalState = Object.assign({}, this.state), this.advanceState(this.internalState), e3() === n2.$n)
                this.state.peek = n2.$LF;
              else if (e3() === n2.$r)
                this.state.peek = n2.$CR;
              else if (e3() === n2.$v)
                this.state.peek = n2.$VTAB;
              else if (e3() === n2.$t)
                this.state.peek = n2.$TAB;
              else if (e3() === n2.$b)
                this.state.peek = n2.$BSPACE;
              else if (e3() === n2.$f)
                this.state.peek = n2.$FF;
              else if (e3() === n2.$u)
                if (this.advanceState(this.internalState), e3() === n2.$LBRACE) {
                  this.advanceState(this.internalState);
                  const t3 = this.clone();
                  let r2 = 0;
                  for (; e3() !== n2.$RBRACE; )
                    this.advanceState(this.internalState), r2++;
                  this.state.peek = this.decodeHexDigits(t3, r2);
                } else {
                  const e4 = this.clone();
                  this.advanceState(this.internalState), this.advanceState(this.internalState), this.advanceState(this.internalState), this.state.peek = this.decodeHexDigits(e4, 4);
                }
              else if (e3() === n2.$x) {
                this.advanceState(this.internalState);
                const e4 = this.clone();
                this.advanceState(this.internalState), this.state.peek = this.decodeHexDigits(e4, 2);
              } else if (n2.isOctalDigit(e3())) {
                let t3 = "", r2 = 0, s3 = this.clone();
                for (; n2.isOctalDigit(e3()) && r2 < 3; )
                  s3 = this.clone(), t3 += String.fromCodePoint(e3()), this.advanceState(this.internalState), r2++;
                this.state.peek = parseInt(t3, 8), this.internalState = s3.internalState;
              } else
                n2.isNewLine(this.internalState.peek) ? (this.advanceState(this.internalState), this.state = this.internalState) : this.state.peek = this.internalState.peek;
          }
          decodeHexDigits(e3, t3) {
            const r2 = this.input.substr(e3.internalState.offset, t3), n3 = parseInt(r2, 16);
            if (isNaN(n3))
              throw e3.state = e3.internalState, new T2("Invalid hexadecimal escape sequence", e3);
            return n3;
          }
        }
        class T2 {
          constructor(e3, t3) {
            this.msg = e3, this.cursor = t3;
          }
        }
        t2.CursorError = T2;
      });
      class Xr extends B.ParseError {
        constructor(e2, t2, r2) {
          super(t2, r2), this.elementName = e2;
        }
        static create(e2, t2, r2) {
          return new Xr(e2, t2, r2);
        }
      }
      var Hr = Xr;
      class zr {
        constructor(e2, t2) {
          this.rootNodes = e2, this.errors = t2;
        }
      }
      var Wr = zr;
      var Yr = class {
        constructor(e2) {
          this.getTagDefinition = e2;
        }
        parse(e2, t2, r2, n2 = false, s2) {
          const i2 = (e3) => (t3, ...r3) => e3(t3.toLowerCase(), ...r3), o2 = n2 ? this.getTagDefinition : i2(this.getTagDefinition), a2 = (e3) => o2(e3).contentType, u2 = n2 ? s2 : i2(s2), c2 = s2 ? (e3, t3, r3, n3) => {
            const s3 = u2(e3, t3, r3, n3);
            return void 0 !== s3 ? s3 : a2(e3);
          } : a2, l2 = jr.tokenize(e2, t2, c2, r2), D2 = r2 && r2.canSelfClose || false, p2 = r2 && r2.allowHtmComponentClosingTags || false, h2 = new Qr(l2.tokens, o2, D2, p2, n2).build();
          return new zr(h2.rootNodes, l2.errors.concat(h2.errors));
        }
      };
      class Qr {
        constructor(e2, t2, r2, n2, s2) {
          this.tokens = e2, this.getTagDefinition = t2, this.canSelfClose = r2, this.allowHtmComponentClosingTags = n2, this.isTagNameCaseSensitive = s2, this._index = -1, this._rootNodes = [], this._errors = [], this._elementStack = [], this._advance();
        }
        build() {
          for (; this._peek.type !== jr.TokenType.EOF; )
            this._peek.type === jr.TokenType.TAG_OPEN_START ? this._consumeStartTag(this._advance()) : this._peek.type === jr.TokenType.TAG_CLOSE ? (this._closeVoidElement(), this._consumeEndTag(this._advance())) : this._peek.type === jr.TokenType.CDATA_START ? (this._closeVoidElement(), this._consumeCdata(this._advance())) : this._peek.type === jr.TokenType.COMMENT_START ? (this._closeVoidElement(), this._consumeComment(this._advance())) : this._peek.type === jr.TokenType.TEXT || this._peek.type === jr.TokenType.RAW_TEXT || this._peek.type === jr.TokenType.ESCAPABLE_RAW_TEXT ? (this._closeVoidElement(), this._consumeText(this._advance())) : this._peek.type === jr.TokenType.EXPANSION_FORM_START ? this._consumeExpansion(this._advance()) : this._peek.type === jr.TokenType.DOC_TYPE_START ? this._consumeDocType(this._advance()) : this._advance();
          return new zr(this._rootNodes, this._errors);
        }
        _advance() {
          const e2 = this._peek;
          return this._index < this.tokens.length - 1 && this._index++, this._peek = this.tokens[this._index], e2;
        }
        _advanceIf(e2) {
          return this._peek.type === e2 ? this._advance() : null;
        }
        _consumeCdata(e2) {
          const t2 = this._advance(), r2 = this._getText(t2), n2 = this._advanceIf(jr.TokenType.CDATA_END);
          this._addToParent(new qr.CDATA(r2, new B.ParseSourceSpan(e2.sourceSpan.start, (n2 || t2).sourceSpan.end)));
        }
        _consumeComment(e2) {
          const t2 = this._advanceIf(jr.TokenType.RAW_TEXT), r2 = this._advanceIf(jr.TokenType.COMMENT_END), n2 = null != t2 ? t2.parts[0].trim() : null, s2 = new B.ParseSourceSpan(e2.sourceSpan.start, (r2 || t2 || e2).sourceSpan.end);
          this._addToParent(new qr.Comment(n2, s2));
        }
        _consumeDocType(e2) {
          const t2 = this._advanceIf(jr.TokenType.RAW_TEXT), r2 = this._advanceIf(jr.TokenType.DOC_TYPE_END), n2 = null != t2 ? t2.parts[0].trim() : null, s2 = new B.ParseSourceSpan(e2.sourceSpan.start, (r2 || t2 || e2).sourceSpan.end);
          this._addToParent(new qr.DocType(n2, s2));
        }
        _consumeExpansion(e2) {
          const t2 = this._advance(), r2 = this._advance(), n2 = [];
          for (; this._peek.type === jr.TokenType.EXPANSION_CASE_VALUE; ) {
            const e3 = this._parseExpansionCase();
            if (!e3)
              return;
            n2.push(e3);
          }
          if (this._peek.type !== jr.TokenType.EXPANSION_FORM_END)
            return void this._errors.push(Xr.create(null, this._peek.sourceSpan, "Invalid ICU message. Missing '}'."));
          const s2 = new B.ParseSourceSpan(e2.sourceSpan.start, this._peek.sourceSpan.end);
          this._addToParent(new qr.Expansion(t2.parts[0], r2.parts[0], n2, s2, t2.sourceSpan)), this._advance();
        }
        _parseExpansionCase() {
          const e2 = this._advance();
          if (this._peek.type !== jr.TokenType.EXPANSION_CASE_EXP_START)
            return this._errors.push(Xr.create(null, this._peek.sourceSpan, "Invalid ICU message. Missing '{'.")), null;
          const t2 = this._advance(), r2 = this._collectExpansionExpTokens(t2);
          if (!r2)
            return null;
          const n2 = this._advance();
          r2.push(new jr.Token(jr.TokenType.EOF, [], n2.sourceSpan));
          const s2 = new Qr(r2, this.getTagDefinition, this.canSelfClose, this.allowHtmComponentClosingTags, this.isTagNameCaseSensitive).build();
          if (s2.errors.length > 0)
            return this._errors = this._errors.concat(s2.errors), null;
          const i2 = new B.ParseSourceSpan(e2.sourceSpan.start, n2.sourceSpan.end), o2 = new B.ParseSourceSpan(t2.sourceSpan.start, n2.sourceSpan.end);
          return new qr.ExpansionCase(e2.parts[0], s2.rootNodes, i2, e2.sourceSpan, o2);
        }
        _collectExpansionExpTokens(e2) {
          const t2 = [], r2 = [jr.TokenType.EXPANSION_CASE_EXP_START];
          for (; ; ) {
            if (this._peek.type !== jr.TokenType.EXPANSION_FORM_START && this._peek.type !== jr.TokenType.EXPANSION_CASE_EXP_START || r2.push(this._peek.type), this._peek.type === jr.TokenType.EXPANSION_CASE_EXP_END) {
              if (!Jr(r2, jr.TokenType.EXPANSION_CASE_EXP_START))
                return this._errors.push(Xr.create(null, e2.sourceSpan, "Invalid ICU message. Missing '}'.")), null;
              if (r2.pop(), 0 == r2.length)
                return t2;
            }
            if (this._peek.type === jr.TokenType.EXPANSION_FORM_END) {
              if (!Jr(r2, jr.TokenType.EXPANSION_FORM_START))
                return this._errors.push(Xr.create(null, e2.sourceSpan, "Invalid ICU message. Missing '}'.")), null;
              r2.pop();
            }
            if (this._peek.type === jr.TokenType.EOF)
              return this._errors.push(Xr.create(null, e2.sourceSpan, "Invalid ICU message. Missing '}'.")), null;
            t2.push(this._advance());
          }
        }
        _getText(e2) {
          let t2 = e2.parts[0];
          if (t2.length > 0 && "\n" == t2[0]) {
            const e3 = this._getParentElement();
            null != e3 && 0 == e3.children.length && this.getTagDefinition(e3.name).ignoreFirstLf && (t2 = t2.substring(1));
          }
          return t2;
        }
        _consumeText(e2) {
          const t2 = this._getText(e2);
          t2.length > 0 && this._addToParent(new qr.Text(t2, e2.sourceSpan));
        }
        _closeVoidElement() {
          const e2 = this._getParentElement();
          e2 && this.getTagDefinition(e2.name).isVoid && this._elementStack.pop();
        }
        _consumeStartTag(e2) {
          const t2 = e2.parts[0], r2 = e2.parts[1], n2 = [];
          for (; this._peek.type === jr.TokenType.ATTR_NAME; )
            n2.push(this._consumeAttr(this._advance()));
          const s2 = this._getElementFullName(t2, r2, this._getParentElement());
          let i2 = false;
          if (this._peek.type === jr.TokenType.TAG_OPEN_END_VOID) {
            this._advance(), i2 = true;
            const t3 = this.getTagDefinition(s2);
            this.canSelfClose || t3.canSelfClose || null !== dr.getNsPrefix(s2) || t3.isVoid || this._errors.push(Xr.create(s2, e2.sourceSpan, 'Only void and foreign elements can be self closed "'.concat(e2.parts[1], '"')));
          } else
            this._peek.type === jr.TokenType.TAG_OPEN_END && (this._advance(), i2 = false);
          const o2 = this._peek.sourceSpan.start, a2 = new B.ParseSourceSpan(e2.sourceSpan.start, o2), u2 = new B.ParseSourceSpan(e2.sourceSpan.start.moveBy(1), e2.sourceSpan.end), c2 = new qr.Element(s2, n2, [], a2, a2, void 0, u2);
          this._pushElement(c2), i2 && (this._popElement(s2), c2.endSourceSpan = a2);
        }
        _pushElement(e2) {
          const t2 = this._getParentElement();
          t2 && this.getTagDefinition(t2.name).isClosedByChild(e2.name) && this._elementStack.pop(), this._addToParent(e2), this._elementStack.push(e2);
        }
        _consumeEndTag(e2) {
          const t2 = this.allowHtmComponentClosingTags && 0 === e2.parts.length ? null : this._getElementFullName(e2.parts[0], e2.parts[1], this._getParentElement());
          if (this._getParentElement() && (this._getParentElement().endSourceSpan = e2.sourceSpan), t2 && this.getTagDefinition(t2).isVoid)
            this._errors.push(Xr.create(t2, e2.sourceSpan, 'Void elements do not have end tags "'.concat(e2.parts[1], '"')));
          else if (!this._popElement(t2)) {
            const r2 = 'Unexpected closing tag "'.concat(t2, '". It may happen when the tag has already been closed by another tag. For more info see https://www.w3.org/TR/html5/syntax.html#closing-elements-that-have-implied-end-tags');
            this._errors.push(Xr.create(t2, e2.sourceSpan, r2));
          }
        }
        _popElement(e2) {
          for (let t2 = this._elementStack.length - 1; t2 >= 0; t2--) {
            const r2 = this._elementStack[t2];
            if (!e2 || (dr.getNsPrefix(r2.name) ? r2.name == e2 : r2.name.toLowerCase() == e2.toLowerCase()))
              return this._elementStack.splice(t2, this._elementStack.length - t2), true;
            if (!this.getTagDefinition(r2.name).closedByParent)
              return false;
          }
          return false;
        }
        _consumeAttr(e2) {
          const t2 = dr.mergeNsAndName(e2.parts[0], e2.parts[1]);
          let r2, n2, s2 = e2.sourceSpan.end, i2 = "";
          if (this._peek.type === jr.TokenType.ATTR_QUOTE) {
            n2 = this._advance().sourceSpan.start;
          }
          if (this._peek.type === jr.TokenType.ATTR_VALUE) {
            const e3 = this._advance();
            i2 = e3.parts[0], s2 = e3.sourceSpan.end, r2 = e3.sourceSpan;
          }
          if (this._peek.type === jr.TokenType.ATTR_QUOTE) {
            s2 = this._advance().sourceSpan.end, r2 = new B.ParseSourceSpan(n2, s2);
          }
          return new qr.Attribute(t2, i2, new B.ParseSourceSpan(e2.sourceSpan.start, s2), r2, e2.sourceSpan);
        }
        _getParentElement() {
          return this._elementStack.length > 0 ? this._elementStack[this._elementStack.length - 1] : null;
        }
        _getParentElementSkippingContainers() {
          let e2 = null;
          for (let t2 = this._elementStack.length - 1; t2 >= 0; t2--) {
            if (!dr.isNgContainer(this._elementStack[t2].name))
              return { parent: this._elementStack[t2], container: e2 };
            e2 = this._elementStack[t2];
          }
          return { parent: null, container: e2 };
        }
        _addToParent(e2) {
          const t2 = this._getParentElement();
          null != t2 ? t2.children.push(e2) : this._rootNodes.push(e2);
        }
        _insertBeforeContainer(e2, t2, r2) {
          if (t2) {
            if (e2) {
              const n2 = e2.children.indexOf(t2);
              e2.children[n2] = r2;
            } else
              this._rootNodes.push(r2);
            r2.children.push(t2), this._elementStack.splice(this._elementStack.indexOf(t2), 0, r2);
          } else
            this._addToParent(r2), this._elementStack.push(r2);
        }
        _getElementFullName(e2, t2, r2) {
          return "" === e2 && "" === (e2 = this.getTagDefinition(t2).implicitNamespacePrefix || "") && null != r2 && (e2 = dr.getNsPrefix(r2.name)), dr.mergeNsAndName(e2, t2);
        }
      }
      function Jr(e2, t2) {
        return e2.length > 0 && e2[e2.length - 1] === t2;
      }
      var Zr = Object.defineProperty({ TreeError: Hr, ParseTreeResult: Wr, Parser: Yr }, "__esModule", { value: true }), Kr = Zr, en = Kr.ParseTreeResult, tn = Kr.TreeError;
      class rn extends Zr.Parser {
        constructor() {
          super(Tr.getHtmlTagDefinition);
        }
        parse(e2, t2, r2, n2 = false, s2) {
          return super.parse(e2, t2, r2, n2, s2);
        }
      }
      var nn = rn, sn = Object.defineProperty({ ParseTreeResult: en, TreeError: tn, HtmlParser: nn }, "__esModule", { value: true }), on = dr.TagContentType;
      let an = null;
      var un = function(e2, t2 = {}) {
        const { canSelfClose: r2 = false, allowHtmComponentClosingTags: n2 = false, isTagNameCaseSensitive: s2 = false, getTagContentType: i2 } = t2;
        return (an || (an = new sn.HtmlParser()), an).parse(e2, "angular-html-parser", { tokenizeExpansionForms: false, interpolationConfig: void 0, canSelfClose: r2, allowHtmComponentClosingTags: n2 }, s2, i2);
      }, cn = Object.defineProperty({ TagContentType: on, parse: un }, "__esModule", { value: true });
      const { ParseSourceSpan: ln, ParseLocation: Dn, ParseSourceFile: pn } = B, { inferParserByLanguage: hn } = Ft, { HTML_ELEMENT_ATTRIBUTES: dn, HTML_TAGS: mn, isUnknownNamespace: fn2 } = rr, { hasPragma: gn } = nr, { Node: En } = cr, { parseIeConditionalComment: Cn } = pr, { locStart: Tn, locEnd: _n } = hr;
      function Sn(e2, { recognizeSelfClosing: t2, normalizeTagName: r2, normalizeAttributeName: n2, allowHtmComponentClosingTags: s2, isTagNameCaseSensitive: i2, getTagContentType: o2 }, a2) {
        const u2 = cn, { RecursiveVisitor: c2, visitAll: l2 } = qr, { ParseSourceSpan: D2 } = B, { getHtmlTagDefinition: p2 } = Tr;
        let { rootNodes: h2, errors: d2 } = u2.parse(e2, { canSelfClose: t2, allowHtmComponentClosingTags: s2, isTagNameCaseSensitive: i2, getTagContentType: o2 });
        if ("vue" === a2.parser) {
          if (h2.some((e3) => "docType" === e3.type && "html" === e3.value || "element" === e3.type && "html" === e3.name.toLowerCase())) {
            t2 = true, r2 = true, n2 = true, s2 = true, i2 = false;
            const o3 = u2.parse(e2, { canSelfClose: t2, allowHtmComponentClosingTags: s2, isTagNameCaseSensitive: i2 });
            h2 = o3.rootNodes, d2 = o3.errors;
          } else {
            const r3 = (e3) => {
              if (!e3)
                return false;
              if ("element" !== e3.type || "template" !== e3.name)
                return false;
              const t3 = e3.attrs.find((e4) => "lang" === e4.name), r4 = t3 && t3.value;
              return !r4 || "html" === hn(r4, a2);
            };
            if (h2.some(r3)) {
              let n3;
              const o3 = () => u2.parse(e2, { canSelfClose: t2, allowHtmComponentClosingTags: s2, isTagNameCaseSensitive: i2 }), a3 = () => n3 || (n3 = o3()), c3 = (e3) => a3().rootNodes.find(({ startSourceSpan: t3 }) => t3 && t3.start.offset === e3.startSourceSpan.start.offset);
              for (let e3 = 0; e3 < h2.length; e3++) {
                const t3 = h2[e3], { endSourceSpan: n4, startSourceSpan: s3 } = t3;
                if (null === n4) {
                  d2 = a3().errors, h2[e3] = c3(t3) || t3;
                } else if (r3(t3)) {
                  const r4 = a3(), i3 = s3.end.offset, o4 = n4.start.offset;
                  for (const e4 of r4.errors) {
                    const { offset: t4 } = e4.span.start;
                    if (i3 < t4 && t4 < o4) {
                      d2 = [e4];
                      break;
                    }
                  }
                  h2[e3] = c3(t3) || t3;
                }
              }
            }
          }
        }
        if (d2.length > 0) {
          const { msg: e3, span: { start: t3, end: r3 } } = d2[0];
          throw U(e3, { start: { line: t3.line + 1, column: t3.col + 1 }, end: { line: r3.line + 1, column: r3.col + 1 } });
        }
        const m2 = (e3) => {
          const t3 = e3.name.startsWith(":") ? e3.name.slice(1).split(":")[0] : null, r3 = e3.nameSpan.toString(), n3 = null !== t3 && r3.startsWith("".concat(t3, ":")), s3 = n3 ? r3.slice(t3.length + 1) : r3;
          e3.name = s3, e3.namespace = t3, e3.hasExplicitNamespace = n3;
        }, f2 = (e3, t3) => {
          const r3 = e3.toLowerCase();
          return t3(r3) ? r3 : e3;
        };
        return l2(new class extends c2 {
          visit(e3) {
            ((e4) => {
              if ("element" === e4.type) {
                m2(e4);
                for (const t3 of e4.attrs)
                  m2(t3), t3.valueSpan ? (t3.value = t3.valueSpan.toString(), /["']/.test(t3.value[0]) && (t3.value = t3.value.slice(1, -1))) : t3.value = null;
              } else
                "comment" === e4.type ? e4.value = e4.sourceSpan.toString().slice("<!--".length, -"-->".length) : "text" === e4.type && (e4.value = e4.sourceSpan.toString());
            })(e3), ((e4) => {
              if ("element" === e4.type) {
                const t3 = p2(i2 ? e4.name : e4.name.toLowerCase());
                !e4.namespace || e4.namespace === t3.implicitNamespacePrefix || fn2(e4) ? e4.tagDefinition = t3 : e4.tagDefinition = p2("");
              }
            })(e3), ((e4) => {
              if ("element" === e4.type && (!r2 || e4.namespace && e4.namespace !== e4.tagDefinition.implicitNamespacePrefix && !fn2(e4) || (e4.name = f2(e4.name, (e5) => e5 in mn)), n2)) {
                const t3 = dn[e4.name] || /* @__PURE__ */ Object.create(null);
                for (const r3 of e4.attrs)
                  r3.namespace || (r3.name = f2(r3.name, (r4) => e4.name in dn && (r4 in dn["*"] || r4 in t3)));
              }
            })(e3), ((e4) => {
              e4.sourceSpan && e4.endSourceSpan && (e4.sourceSpan = new D2(e4.sourceSpan.start, e4.endSourceSpan.end));
            })(e3);
          }
        }(), h2), h2;
      }
      function yn(e2, t2, r2, n2 = true) {
        const { frontMatter: s2, content: i2 } = n2 ? $(e2) : { frontMatter: null, content: e2 }, o2 = new pn(e2, t2.filepath), a2 = new Dn(o2, 0, 0, 0), u2 = a2.moveBy(e2.length), c2 = { type: "root", sourceSpan: new ln(a2, u2), children: Sn(i2, r2, t2) };
        if (s2) {
          const e3 = new Dn(o2, 0, 0, 0), t3 = e3.moveBy(s2.raw.length);
          s2.sourceSpan = new ln(e3, t3), c2.children.unshift(s2);
        }
        const l2 = new En(c2), D2 = (n3, s3) => {
          const { offset: i3 } = s3, o3 = yn(e2.slice(0, i3).replace(/[^\n\r]/g, " ") + n3, t2, r2, false);
          o3.sourceSpan = new ln(s3, M(o3.children).sourceSpan.end);
          const a3 = o3.children[0];
          return a3.length === i3 ? o3.children.shift() : (a3.sourceSpan = new ln(a3.sourceSpan.start.moveBy(i3), a3.sourceSpan.end), a3.value = a3.value.slice(i3)), o3;
        };
        return l2.map((e3) => {
          if ("comment" === e3.type) {
            const t3 = Cn(e3, D2);
            if (t3)
              return t3;
          }
          return e3;
        });
      }
      function Fn({ recognizeSelfClosing: e2 = false, normalizeTagName: t2 = false, normalizeAttributeName: r2 = false, allowHtmComponentClosingTags: n2 = false, isTagNameCaseSensitive: s2 = false, getTagContentType: i2 } = {}) {
        return { parse: (o2, a2, u2) => yn(o2, u2, { recognizeSelfClosing: e2, normalizeTagName: t2, normalizeAttributeName: r2, allowHtmComponentClosingTags: n2, isTagNameCaseSensitive: s2, getTagContentType: i2 }), hasPragma: gn, astFormat: "html", locStart: Tn, locEnd: _n };
      }
      return { parsers: { html: Fn({ recognizeSelfClosing: true, normalizeTagName: true, normalizeAttributeName: true, allowHtmComponentClosingTags: true }), angular: Fn(), vue: Fn({ recognizeSelfClosing: true, isTagNameCaseSensitive: true, getTagContentType: (e2, t2, r2, n2) => {
        if ("html" !== e2.toLowerCase() && !r2 && ("template" !== e2 || n2.some(({ name: e3, value: t3 }) => "lang" === e3 && "html" !== t3)))
          return cn.TagContentType.RAW_TEXT;
      } }), lwc: Fn() } };
    });
  }
});

// node_modules/prettier/standalone.js
var require_standalone = __commonJS({
  "node_modules/prettier/standalone.js"(exports, module2) {
    !function(e, t) {
      "object" == typeof exports && "undefined" != typeof module2 ? module2.exports = t() : "function" == typeof define && define.amd ? define(t) : (e = "undefined" != typeof globalThis ? globalThis : e || self).prettier = t();
    }(exports, function() {
      "use strict";
      function e(e2, t2) {
        if (null == e2)
          return {};
        var n2, r2, o2 = {}, i2 = Object.keys(e2);
        for (r2 = 0; r2 < i2.length; r2++)
          n2 = i2[r2], t2.indexOf(n2) >= 0 || (o2[n2] = e2[n2]);
        return o2;
      }
      function t(e2, t2) {
        return t2 || (t2 = e2.slice(0)), Object.freeze(Object.defineProperties(e2, { raw: { value: Object.freeze(t2) } }));
      }
      var n = { name: "prettier", version: "2.3.0", description: "Prettier is an opinionated code formatter", bin: "./bin/prettier.js", repository: "prettier/prettier", homepage: "https://prettier.io", author: "James Long", license: "MIT", main: "./index.js", browser: "./standalone.js", unpkg: "./standalone.js", engines: { node: ">=10.13.0" }, files: ["index.js", "standalone.js", "src", "bin"], dependencies: { "@angular/compiler": "11.2.13", "@babel/code-frame": "7.12.13", "@babel/parser": "7.14.1", "@glimmer/syntax": "0.79.0", "@iarna/toml": "2.2.5", "@typescript-eslint/typescript-estree": "4.22.0", "angular-estree-parser": "2.3.0", "angular-html-parser": "1.8.0", camelcase: "6.2.0", chalk: "4.1.1", "ci-info": "3.1.1", "cjk-regex": "2.0.1", cosmiconfig: "7.0.0", dashify: "2.0.0", diff: "5.0.0", editorconfig: "0.15.3", "editorconfig-to-prettier": "0.2.0", "escape-string-regexp": "4.0.0", espree: "7.3.1", esutils: "2.0.3", "fast-glob": "3.2.5", "fast-json-stable-stringify": "2.1.0", "find-parent-dir": "0.3.0", "flow-parser": "0.150.1", "get-stdin": "8.0.0", globby: "11.0.3", graphql: "15.5.0", "html-element-attributes": "2.3.0", "html-styles": "1.0.0", "html-tag-names": "1.1.5", "html-void-elements": "1.0.5", ignore: "4.0.6", "jest-docblock": "26.0.0", json5: "2.2.0", leven: "3.1.0", "lines-and-columns": "1.1.6", "linguist-languages": "7.14.0", lodash: "4.17.21", mem: "8.1.1", meriyah: "4.1.5", minimatch: "3.0.4", minimist: "1.2.5", "n-readlines": "1.0.1", outdent: "0.8.0", "parse-srcset": "ikatyang/parse-srcset#54eb9c1cb21db5c62b4d0e275d7249516df6f0ee", "please-upgrade-node": "3.2.0", "postcss-less": "3.1.4", "postcss-media-query-parser": "0.2.3", "postcss-scss": "2.1.1", "postcss-selector-parser": "2.2.3", "postcss-values-parser": "2.0.1", "regexp-util": "1.2.2", "remark-footnotes": "2.0.0", "remark-math": "3.0.1", "remark-parse": "8.0.3", resolve: "1.20.0", semver: "7.3.5", "string-width": "4.2.2", "strip-ansi": "6.0.0", typescript: "4.2.4", "unicode-regex": "3.0.0", unified: "9.2.1", vnopts: "1.0.2", wcwidth: "1.0.1", "yaml-unist-parser": "1.3.1" }, devDependencies: { "@babel/core": "7.14.0", "@babel/preset-env": "7.14.1", "@babel/types": "7.14.1", "@glimmer/reference": "0.79.0", "@rollup/plugin-alias": "3.1.2", "@rollup/plugin-babel": "5.3.0", "@rollup/plugin-commonjs": "18.1.0", "@rollup/plugin-json": "4.1.0", "@rollup/plugin-node-resolve": "13.0.0", "@rollup/plugin-replace": "2.4.2", "@types/estree": "0.0.47", "@types/node": "15.0.1", "babel-jest": "26.6.3", "babel-loader": "8.2.2", benchmark: "2.1.4", "builtin-modules": "3.2.0", "cross-env": "7.0.3", cspell: "4.2.8", eslint: "7.26.0", "eslint-config-prettier": "8.3.0", "eslint-formatter-friendly": "7.0.0", "eslint-plugin-import": "2.22.1", "eslint-plugin-jest": "24.3.6", "eslint-plugin-prettier-internal-rules": "link:scripts/tools/eslint-plugin-prettier-internal-rules", "eslint-plugin-react": "7.23.2", "eslint-plugin-unicorn": "31.0.0", execa: "5.0.0", jest: "26.6.3", "jest-snapshot-serializer-ansi": "1.0.0", "jest-snapshot-serializer-raw": "1.2.0", "jest-watch-typeahead": "0.6.3", "npm-run-all": "4.1.5", "path-browserify": "1.0.1", prettier: "2.2.1", "pretty-bytes": "5.6.0", rimraf: "3.0.2", rollup: "2.47.0", "rollup-plugin-polyfill-node": "0.6.2", "rollup-plugin-terser": "7.0.2", shelljs: "0.8.4", "snapshot-diff": "0.8.1", "synchronous-promise": "2.0.15", tempy: "1.0.1", "terser-webpack-plugin": "5.1.1", webpack: "5.36.2" }, scripts: { prepublishOnly: 'echo "Error: must publish from dist/" && exit 1', "prepare-release": "yarn && yarn build && yarn test:dist", test: "jest", "test:dev-package": "cross-env INSTALL_PACKAGE=1 jest", "test:dist": "cross-env NODE_ENV=production jest", "test:dist-standalone": "cross-env NODE_ENV=production TEST_STANDALONE=1 jest", "test:integration": "jest tests/integration", "perf:repeat": "yarn && yarn build && cross-env NODE_ENV=production node ./dist/bin-prettier.js --debug-repeat ${PERF_REPEAT:-1000} --loglevel debug ${PERF_FILE:-./index.js} > /dev/null", "perf:repeat-inspect": "yarn && yarn build && cross-env NODE_ENV=production node --inspect-brk ./dist/bin-prettier.js --debug-repeat ${PERF_REPEAT:-1000} --loglevel debug ${PERF_FILE:-./index.js} > /dev/null", "perf:benchmark": "yarn && yarn build && cross-env NODE_ENV=production node ./dist/bin-prettier.js --debug-benchmark --loglevel debug ${PERF_FILE:-./index.js} > /dev/null", lint: "run-p lint:*", "lint:typecheck": "tsc", "lint:eslint": "cross-env EFF_NO_LINK_RULES=true eslint . --format friendly", "lint:changelog": "node ./scripts/lint-changelog.js", "lint:prettier": 'prettier . "!test*" --check', "lint:dist": 'eslint --no-eslintrc --no-ignore --no-inline-config --env=es6,browser --parser-options=ecmaVersion:2018 "dist/!(bin-prettier|index|third-party).js"', "lint:spellcheck": 'cspell "**/*" ".github/**/*"', "lint:deps": "node ./scripts/check-deps.js", fix: "run-s fix:eslint fix:prettier", "fix:eslint": "yarn lint:eslint --fix", "fix:prettier": "yarn lint:prettier --write", build: "node --max-old-space-size=3072 ./scripts/build/build.js", "build-docs": "node ./scripts/build-docs.js" } }, r = "undefined" != typeof globalThis ? globalThis : "undefined" != typeof window ? window : "undefined" != typeof global ? global : "undefined" != typeof self ? self : {};
      function o(e2) {
        return e2 && Object.prototype.hasOwnProperty.call(e2, "default") ? e2.default : e2;
      }
      function i(e2) {
        var t2 = { exports: {} };
        return e2(t2, t2.exports), t2.exports;
      }
      var u = i(function(e2, t2) {
        function n2() {
        }
        function r2(e3, t3, n3, r3, o3) {
          for (var i2 = 0, u2 = t3.length, s2 = 0, a2 = 0; i2 < u2; i2++) {
            var c2 = t3[i2];
            if (c2.removed) {
              if (c2.value = e3.join(r3.slice(a2, a2 + c2.count)), a2 += c2.count, i2 && t3[i2 - 1].added) {
                var l2 = t3[i2 - 1];
                t3[i2 - 1] = t3[i2], t3[i2] = l2;
              }
            } else {
              if (!c2.added && o3) {
                var p2 = n3.slice(s2, s2 + c2.count);
                p2 = p2.map(function(e4, t4) {
                  var n4 = r3[a2 + t4];
                  return n4.length > e4.length ? n4 : e4;
                }), c2.value = e3.join(p2);
              } else
                c2.value = e3.join(n3.slice(s2, s2 + c2.count));
              s2 += c2.count, c2.added || (a2 += c2.count);
            }
          }
          var f2 = t3[u2 - 1];
          return u2 > 1 && "string" == typeof f2.value && (f2.added || f2.removed) && e3.equals("", f2.value) && (t3[u2 - 2].value += f2.value, t3.pop()), t3;
        }
        function o2(e3) {
          return { newPos: e3.newPos, components: e3.components.slice(0) };
        }
        Object.defineProperty(t2, "__esModule", { value: true }), t2.default = n2, n2.prototype = { diff: function(e3, t3) {
          var n3 = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : {}, i2 = n3.callback;
          "function" == typeof n3 && (i2 = n3, n3 = {}), this.options = n3;
          var u2 = this;
          function s2(e4) {
            return i2 ? (setTimeout(function() {
              i2(void 0, e4);
            }, 0), true) : e4;
          }
          e3 = this.castInput(e3), t3 = this.castInput(t3), e3 = this.removeEmpty(this.tokenize(e3));
          var a2 = (t3 = this.removeEmpty(this.tokenize(t3))).length, c2 = e3.length, l2 = 1, p2 = a2 + c2, f2 = [{ newPos: -1, components: [] }], d2 = this.extractCommon(f2[0], t3, e3, 0);
          if (f2[0].newPos + 1 >= a2 && d2 + 1 >= c2)
            return s2([{ value: this.join(t3), count: t3.length }]);
          function h2() {
            for (var n4 = -1 * l2; n4 <= l2; n4 += 2) {
              var i3 = void 0, p3 = f2[n4 - 1], d3 = f2[n4 + 1], h3 = (d3 ? d3.newPos : 0) - n4;
              p3 && (f2[n4 - 1] = void 0);
              var m3 = p3 && p3.newPos + 1 < a2, g2 = d3 && 0 <= h3 && h3 < c2;
              if (m3 || g2) {
                if (!m3 || g2 && p3.newPos < d3.newPos ? (i3 = o2(d3), u2.pushComponent(i3.components, void 0, true)) : ((i3 = p3).newPos++, u2.pushComponent(i3.components, true, void 0)), h3 = u2.extractCommon(i3, t3, e3, n4), i3.newPos + 1 >= a2 && h3 + 1 >= c2)
                  return s2(r2(u2, i3.components, t3, e3, u2.useLongestToken));
                f2[n4] = i3;
              } else
                f2[n4] = void 0;
            }
            l2++;
          }
          if (i2)
            !function e4() {
              setTimeout(function() {
                if (l2 > p2)
                  return i2();
                h2() || e4();
              }, 0);
            }();
          else
            for (; l2 <= p2; ) {
              var m2 = h2();
              if (m2)
                return m2;
            }
        }, pushComponent: function(e3, t3, n3) {
          var r3 = e3[e3.length - 1];
          r3 && r3.added === t3 && r3.removed === n3 ? e3[e3.length - 1] = { count: r3.count + 1, added: t3, removed: n3 } : e3.push({ count: 1, added: t3, removed: n3 });
        }, extractCommon: function(e3, t3, n3, r3) {
          for (var o3 = t3.length, i2 = n3.length, u2 = e3.newPos, s2 = u2 - r3, a2 = 0; u2 + 1 < o3 && s2 + 1 < i2 && this.equals(t3[u2 + 1], n3[s2 + 1]); )
            u2++, s2++, a2++;
          return a2 && e3.components.push({ count: a2 }), e3.newPos = u2, s2;
        }, equals: function(e3, t3) {
          return this.options.comparator ? this.options.comparator(e3, t3) : e3 === t3 || this.options.ignoreCase && e3.toLowerCase() === t3.toLowerCase();
        }, removeEmpty: function(e3) {
          for (var t3 = [], n3 = 0; n3 < e3.length; n3++)
            e3[n3] && t3.push(e3[n3]);
          return t3;
        }, castInput: function(e3) {
          return e3;
        }, tokenize: function(e3) {
          return e3.split("");
        }, join: function(e3) {
          return e3.join("");
        } };
      }), s = i(function(e2, t2) {
        var n2;
        Object.defineProperty(t2, "__esModule", { value: true }), t2.diffChars = function(e3, t3, n3) {
          return r2.diff(e3, t3, n3);
        }, t2.characterDiff = void 0;
        var r2 = new ((n2 = u) && n2.__esModule ? n2 : { default: n2 }).default();
        t2.characterDiff = r2;
      }), a = function(e2, t2) {
        if ("function" == typeof e2)
          t2.callback = e2;
        else if (e2)
          for (var n2 in e2)
            e2.hasOwnProperty(n2) && (t2[n2] = e2[n2]);
        return t2;
      };
      var c = Object.defineProperty({ generateOptions: a }, "__esModule", { value: true }), l = i(function(e2, t2) {
        Object.defineProperty(t2, "__esModule", { value: true }), t2.diffWords = function(e3, t3, n3) {
          return n3 = (0, c.generateOptions)(n3, { ignoreWhitespace: true }), s2.diff(e3, t3, n3);
        }, t2.diffWordsWithSpace = function(e3, t3, n3) {
          return s2.diff(e3, t3, n3);
        }, t2.wordDiff = void 0;
        var n2, r2 = (n2 = u) && n2.__esModule ? n2 : { default: n2 };
        var o2 = /^[A-Za-z\xC0-\u02C6\u02C8-\u02D7\u02DE-\u02FF\u1E00-\u1EFF]+$/, i2 = /\S/, s2 = new r2.default();
        t2.wordDiff = s2, s2.equals = function(e3, t3) {
          return this.options.ignoreCase && (e3 = e3.toLowerCase(), t3 = t3.toLowerCase()), e3 === t3 || this.options.ignoreWhitespace && !i2.test(e3) && !i2.test(t3);
        }, s2.tokenize = function(e3) {
          for (var t3 = e3.split(/([^\S\r\n]+|[()[\]{}'"\r\n]|\b)/), n3 = 0; n3 < t3.length - 1; n3++)
            !t3[n3 + 1] && t3[n3 + 2] && o2.test(t3[n3]) && o2.test(t3[n3 + 2]) && (t3[n3] += t3[n3 + 2], t3.splice(n3 + 1, 2), n3--);
          return t3;
        };
      }), p = i(function(e2, t2) {
        var n2;
        Object.defineProperty(t2, "__esModule", { value: true }), t2.diffLines = function(e3, t3, n3) {
          return r2.diff(e3, t3, n3);
        }, t2.diffTrimmedLines = function(e3, t3, n3) {
          var o2 = (0, c.generateOptions)(n3, { ignoreWhitespace: true });
          return r2.diff(e3, t3, o2);
        }, t2.lineDiff = void 0;
        var r2 = new ((n2 = u) && n2.__esModule ? n2 : { default: n2 }).default();
        t2.lineDiff = r2, r2.tokenize = function(e3) {
          var t3 = [], n3 = e3.split(/(\n|\r\n)/);
          n3[n3.length - 1] || n3.pop();
          for (var r3 = 0; r3 < n3.length; r3++) {
            var o2 = n3[r3];
            r3 % 2 && !this.options.newlineIsToken ? t3[t3.length - 1] += o2 : (this.options.ignoreWhitespace && (o2 = o2.trim()), t3.push(o2));
          }
          return t3;
        };
      }), f = i(function(e2, t2) {
        var n2;
        Object.defineProperty(t2, "__esModule", { value: true }), t2.diffSentences = function(e3, t3, n3) {
          return r2.diff(e3, t3, n3);
        }, t2.sentenceDiff = void 0;
        var r2 = new ((n2 = u) && n2.__esModule ? n2 : { default: n2 }).default();
        t2.sentenceDiff = r2, r2.tokenize = function(e3) {
          return e3.split(/(\S.+?[.!?])(?=\s+|$)/);
        };
      }), d = i(function(e2, t2) {
        var n2;
        Object.defineProperty(t2, "__esModule", { value: true }), t2.diffCss = function(e3, t3, n3) {
          return r2.diff(e3, t3, n3);
        }, t2.cssDiff = void 0;
        var r2 = new ((n2 = u) && n2.__esModule ? n2 : { default: n2 }).default();
        t2.cssDiff = r2, r2.tokenize = function(e3) {
          return e3.split(/([{}:;,]|\s+)/);
        };
      }), h = i(function(e2, t2) {
        Object.defineProperty(t2, "__esModule", { value: true }), t2.diffJson = function(e3, t3, n3) {
          return s2.diff(e3, t3, n3);
        }, t2.canonicalize = a2, t2.jsonDiff = void 0;
        var n2, r2 = (n2 = u) && n2.__esModule ? n2 : { default: n2 };
        function o2(e3) {
          return (o2 = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(e4) {
            return typeof e4;
          } : function(e4) {
            return e4 && "function" == typeof Symbol && e4.constructor === Symbol && e4 !== Symbol.prototype ? "symbol" : typeof e4;
          })(e3);
        }
        var i2 = Object.prototype.toString, s2 = new r2.default();
        function a2(e3, t3, n3, r3, u2) {
          var s3, c2;
          for (t3 = t3 || [], n3 = n3 || [], r3 && (e3 = r3(u2, e3)), s3 = 0; s3 < t3.length; s3 += 1)
            if (t3[s3] === e3)
              return n3[s3];
          if ("[object Array]" === i2.call(e3)) {
            for (t3.push(e3), c2 = new Array(e3.length), n3.push(c2), s3 = 0; s3 < e3.length; s3 += 1)
              c2[s3] = a2(e3[s3], t3, n3, r3, u2);
            return t3.pop(), n3.pop(), c2;
          }
          if (e3 && e3.toJSON && (e3 = e3.toJSON()), "object" === o2(e3) && null !== e3) {
            t3.push(e3), c2 = {}, n3.push(c2);
            var l2, p2 = [];
            for (l2 in e3)
              e3.hasOwnProperty(l2) && p2.push(l2);
            for (p2.sort(), s3 = 0; s3 < p2.length; s3 += 1)
              c2[l2 = p2[s3]] = a2(e3[l2], t3, n3, r3, l2);
            t3.pop(), n3.pop();
          } else
            c2 = e3;
          return c2;
        }
        t2.jsonDiff = s2, s2.useLongestToken = true, s2.tokenize = p.lineDiff.tokenize, s2.castInput = function(e3) {
          var t3 = this.options, n3 = t3.undefinedReplacement, r3 = t3.stringifyReplacer, o3 = void 0 === r3 ? function(e4, t4) {
            return void 0 === t4 ? n3 : t4;
          } : r3;
          return "string" == typeof e3 ? e3 : JSON.stringify(a2(e3, null, null, o3), o3, "  ");
        }, s2.equals = function(e3, t3) {
          return r2.default.prototype.equals.call(s2, e3.replace(/,([\r\n])/g, "$1"), t3.replace(/,([\r\n])/g, "$1"));
        };
      }), m = i(function(e2, t2) {
        var n2;
        Object.defineProperty(t2, "__esModule", { value: true }), t2.diffArrays = function(e3, t3, n3) {
          return r2.diff(e3, t3, n3);
        }, t2.arrayDiff = void 0;
        var r2 = new ((n2 = u) && n2.__esModule ? n2 : { default: n2 }).default();
        t2.arrayDiff = r2, r2.tokenize = function(e3) {
          return e3.slice();
        }, r2.join = r2.removeEmpty = function(e3) {
          return e3;
        };
      }), g = function(e2) {
        var t2 = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {}, n2 = e2.split(/\r\n|[\n\v\f\r\x85]/), r2 = e2.match(/\r\n|[\n\v\f\r\x85]/g) || [], o2 = [], i2 = 0;
        function u2() {
          var e3 = {};
          for (o2.push(e3); i2 < n2.length; ) {
            var r3 = n2[i2];
            if (/^(\-\-\-|\+\+\+|@@)\s/.test(r3))
              break;
            var u3 = /^(?:Index:|diff(?: -r \w+)+)\s+(.+?)\s*$/.exec(r3);
            u3 && (e3.index = u3[1]), i2++;
          }
          for (s2(e3), s2(e3), e3.hunks = []; i2 < n2.length; ) {
            var c2 = n2[i2];
            if (/^(Index:|diff|\-\-\-|\+\+\+)\s/.test(c2))
              break;
            if (/^@@/.test(c2))
              e3.hunks.push(a2());
            else {
              if (c2 && t2.strict)
                throw new Error("Unknown line " + (i2 + 1) + " " + JSON.stringify(c2));
              i2++;
            }
          }
        }
        function s2(e3) {
          var t3 = /^(---|\+\+\+)\s+(.*)$/.exec(n2[i2]);
          if (t3) {
            var r3 = "---" === t3[1] ? "old" : "new", o3 = t3[2].split("	", 2), u3 = o3[0].replace(/\\\\/g, "\\");
            /^".*"$/.test(u3) && (u3 = u3.substr(1, u3.length - 2)), e3[r3 + "FileName"] = u3, e3[r3 + "Header"] = (o3[1] || "").trim(), i2++;
          }
        }
        function a2() {
          var e3 = i2, o3 = n2[i2++].split(/@@ -(\d+)(?:,(\d+))? \+(\d+)(?:,(\d+))? @@/), u3 = { oldStart: +o3[1], oldLines: void 0 === o3[2] ? 1 : +o3[2], newStart: +o3[3], newLines: void 0 === o3[4] ? 1 : +o3[4], lines: [], linedelimiters: [] };
          0 === u3.oldLines && (u3.oldStart += 1), 0 === u3.newLines && (u3.newStart += 1);
          for (var s3 = 0, a3 = 0; i2 < n2.length && !(0 === n2[i2].indexOf("--- ") && i2 + 2 < n2.length && 0 === n2[i2 + 1].indexOf("+++ ") && 0 === n2[i2 + 2].indexOf("@@")); i2++) {
            var c2 = 0 == n2[i2].length && i2 != n2.length - 1 ? " " : n2[i2][0];
            if ("+" !== c2 && "-" !== c2 && " " !== c2 && "\\" !== c2)
              break;
            u3.lines.push(n2[i2]), u3.linedelimiters.push(r2[i2] || "\n"), "+" === c2 ? s3++ : "-" === c2 ? a3++ : " " === c2 && (s3++, a3++);
          }
          if (s3 || 1 !== u3.newLines || (u3.newLines = 0), a3 || 1 !== u3.oldLines || (u3.oldLines = 0), t2.strict) {
            if (s3 !== u3.newLines)
              throw new Error("Added line count did not match for hunk at line " + (e3 + 1));
            if (a3 !== u3.oldLines)
              throw new Error("Removed line count did not match for hunk at line " + (e3 + 1));
          }
          return u3;
        }
        for (; i2 < n2.length; )
          u2();
        return o2;
      };
      var y, D = Object.defineProperty({ parsePatch: g }, "__esModule", { value: true }), E = i(function(e2, t2) {
        Object.defineProperty(t2, "__esModule", { value: true }), t2.default = function(e3, t3, n2) {
          var r2 = true, o2 = false, i2 = false, u2 = 1;
          return function s2() {
            if (r2 && !i2) {
              if (o2 ? u2++ : r2 = false, e3 + u2 <= n2)
                return u2;
              i2 = true;
            }
            if (!o2)
              return i2 || (r2 = true), t3 <= e3 - u2 ? -u2++ : (o2 = true, s2());
          };
        };
      }), b = A3, C = function(e2, t2) {
        "string" == typeof e2 && (e2 = (0, D.parsePatch)(e2));
        var n2 = 0;
        !function r2() {
          var o2 = e2[n2++];
          if (!o2)
            return t2.complete();
          t2.loadFile(o2, function(e3, n3) {
            if (e3)
              return t2.complete(e3);
            var i2 = A3(n3, o2, t2);
            t2.patched(o2, i2, function(e4) {
              if (e4)
                return t2.complete(e4);
              r2();
            });
          });
        }();
      }, v = (y = E) && y.__esModule ? y : { default: y };
      function A3(e2, t2) {
        var n2 = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : {};
        if ("string" == typeof t2 && (t2 = (0, D.parsePatch)(t2)), Array.isArray(t2)) {
          if (t2.length > 1)
            throw new Error("applyPatch only works with a single input.");
          t2 = t2[0];
        }
        var r2, o2, i2 = e2.split(/\r\n|[\n\v\f\r\x85]/), u2 = e2.match(/\r\n|[\n\v\f\r\x85]/g) || [], s2 = t2.hunks, a2 = n2.compareLine || function(e3, t3, n3, r3) {
          return t3 === r3;
        }, c2 = 0, l2 = n2.fuzzFactor || 0, p2 = 0, f2 = 0;
        function d2(e3, t3) {
          for (var n3 = 0; n3 < e3.lines.length; n3++) {
            var r3 = e3.lines[n3], o3 = r3.length > 0 ? r3[0] : " ", u3 = r3.length > 0 ? r3.substr(1) : r3;
            if (" " === o3 || "-" === o3) {
              if (!a2(t3 + 1, i2[t3], o3, u3) && ++c2 > l2)
                return false;
              t3++;
            }
          }
          return true;
        }
        for (var h2 = 0; h2 < s2.length; h2++) {
          for (var m2 = s2[h2], g2 = i2.length - m2.oldLines, y2 = 0, E2 = f2 + m2.oldStart - 1, b2 = (0, v.default)(E2, p2, g2); void 0 !== y2; y2 = b2())
            if (d2(m2, E2 + y2)) {
              m2.offset = f2 += y2;
              break;
            }
          if (void 0 === y2)
            return false;
          p2 = m2.offset + m2.oldStart + m2.oldLines;
        }
        for (var C2 = 0, A4 = 0; A4 < s2.length; A4++) {
          var F2 = s2[A4], x2 = F2.oldStart + F2.offset + C2 - 1;
          C2 += F2.newLines - F2.oldLines;
          for (var S2 = 0; S2 < F2.lines.length; S2++) {
            var w2 = F2.lines[S2], T2 = w2.length > 0 ? w2[0] : " ", B2 = w2.length > 0 ? w2.substr(1) : w2, k2 = F2.linedelimiters[S2];
            if (" " === T2)
              x2++;
            else if ("-" === T2)
              i2.splice(x2, 1), u2.splice(x2, 1);
            else if ("+" === T2)
              i2.splice(x2, 0, B2), u2.splice(x2, 0, k2), x2++;
            else if ("\\" === T2) {
              var N2 = F2.lines[S2 - 1] ? F2.lines[S2 - 1][0] : null;
              "+" === N2 ? r2 = true : "-" === N2 && (o2 = true);
            }
          }
        }
        if (r2)
          for (; !i2[i2.length - 1]; )
            i2.pop(), u2.pop();
        else
          o2 && (i2.push(""), u2.push("\n"));
        for (var P3 = 0; P3 < i2.length - 1; P3++)
          i2[P3] = i2[P3] + u2[P3];
        return i2.join("");
      }
      var F = Object.defineProperty({ applyPatch: b, applyPatches: C }, "__esModule", { value: true }), x = N, S = P2, w = O, T = function(e2, t2, n2, r2, o2, i2) {
        return O(e2, e2, t2, n2, r2, o2, i2);
      };
      function B(e2) {
        return function(e3) {
          if (Array.isArray(e3))
            return k(e3);
        }(e2) || function(e3) {
          if ("undefined" != typeof Symbol && Symbol.iterator in Object(e3))
            return Array.from(e3);
        }(e2) || function(e3, t2) {
          if (!e3)
            return;
          if ("string" == typeof e3)
            return k(e3, t2);
          var n2 = Object.prototype.toString.call(e3).slice(8, -1);
          "Object" === n2 && e3.constructor && (n2 = e3.constructor.name);
          if ("Map" === n2 || "Set" === n2)
            return Array.from(e3);
          if ("Arguments" === n2 || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n2))
            return k(e3, t2);
        }(e2) || function() {
          throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
        }();
      }
      function k(e2, t2) {
        (null == t2 || t2 > e2.length) && (t2 = e2.length);
        for (var n2 = 0, r2 = new Array(t2); n2 < t2; n2++)
          r2[n2] = e2[n2];
        return r2;
      }
      function N(e2, t2, n2, r2, o2, i2, u2) {
        u2 || (u2 = {}), void 0 === u2.context && (u2.context = 4);
        var s2 = (0, p.diffLines)(n2, r2, u2);
        function a2(e3) {
          return e3.map(function(e4) {
            return " " + e4;
          });
        }
        s2.push({ value: "", lines: [] });
        for (var c2 = [], l2 = 0, f2 = 0, d2 = [], h2 = 1, m2 = 1, g2 = function(e3) {
          var t3 = s2[e3], o3 = t3.lines || t3.value.replace(/\n$/, "").split("\n");
          if (t3.lines = o3, t3.added || t3.removed) {
            var i3;
            if (!l2) {
              var p2 = s2[e3 - 1];
              l2 = h2, f2 = m2, p2 && (d2 = u2.context > 0 ? a2(p2.lines.slice(-u2.context)) : [], l2 -= d2.length, f2 -= d2.length);
            }
            (i3 = d2).push.apply(i3, B(o3.map(function(e4) {
              return (t3.added ? "+" : "-") + e4;
            }))), t3.added ? m2 += o3.length : h2 += o3.length;
          } else {
            if (l2)
              if (o3.length <= 2 * u2.context && e3 < s2.length - 2) {
                var g3;
                (g3 = d2).push.apply(g3, B(a2(o3)));
              } else {
                var y3, D2 = Math.min(o3.length, u2.context);
                (y3 = d2).push.apply(y3, B(a2(o3.slice(0, D2))));
                var E2 = { oldStart: l2, oldLines: h2 - l2 + D2, newStart: f2, newLines: m2 - f2 + D2, lines: d2 };
                if (e3 >= s2.length - 2 && o3.length <= u2.context) {
                  var b2 = /\n$/.test(n2), C2 = /\n$/.test(r2), v2 = 0 == o3.length && d2.length > E2.oldLines;
                  !b2 && v2 && n2.length > 0 && d2.splice(E2.oldLines, 0, "\\ No newline at end of file"), (b2 || v2) && C2 || d2.push("\\ No newline at end of file");
                }
                c2.push(E2), l2 = 0, f2 = 0, d2 = [];
              }
            h2 += o3.length, m2 += o3.length;
          }
        }, y2 = 0; y2 < s2.length; y2++)
          g2(y2);
        return { oldFileName: e2, newFileName: t2, oldHeader: o2, newHeader: i2, hunks: c2 };
      }
      function P2(e2) {
        var t2 = [];
        e2.oldFileName == e2.newFileName && t2.push("Index: " + e2.oldFileName), t2.push("==================================================================="), t2.push("--- " + e2.oldFileName + (void 0 === e2.oldHeader ? "" : "	" + e2.oldHeader)), t2.push("+++ " + e2.newFileName + (void 0 === e2.newHeader ? "" : "	" + e2.newHeader));
        for (var n2 = 0; n2 < e2.hunks.length; n2++) {
          var r2 = e2.hunks[n2];
          0 === r2.oldLines && (r2.oldStart -= 1), 0 === r2.newLines && (r2.newStart -= 1), t2.push("@@ -" + r2.oldStart + "," + r2.oldLines + " +" + r2.newStart + "," + r2.newLines + " @@"), t2.push.apply(t2, r2.lines);
        }
        return t2.join("\n") + "\n";
      }
      function O(e2, t2, n2, r2, o2, i2, u2) {
        return P2(N(e2, t2, n2, r2, o2, i2, u2));
      }
      var I = Object.defineProperty({ structuredPatch: x, formatPatch: S, createTwoFilesPatch: w, createPatch: T }, "__esModule", { value: true }), j = function(e2, t2) {
        if (e2.length !== t2.length)
          return false;
        return _(e2, t2);
      }, L = _;
      function _(e2, t2) {
        if (t2.length > e2.length)
          return false;
        for (var n2 = 0; n2 < t2.length; n2++)
          if (t2[n2] !== e2[n2])
            return false;
        return true;
      }
      var M = Object.defineProperty({ arrayEqual: j, arrayStartsWith: L }, "__esModule", { value: true }), R = W, V = function(e2, t2, n2) {
        e2 = U(e2, n2), t2 = U(t2, n2);
        var r2 = {};
        (e2.index || t2.index) && (r2.index = e2.index || t2.index);
        (e2.newFileName || t2.newFileName) && (z(e2) ? z(t2) ? (r2.oldFileName = H(r2, e2.oldFileName, t2.oldFileName), r2.newFileName = H(r2, e2.newFileName, t2.newFileName), r2.oldHeader = H(r2, e2.oldHeader, t2.oldHeader), r2.newHeader = H(r2, e2.newHeader, t2.newHeader)) : (r2.oldFileName = e2.oldFileName, r2.newFileName = e2.newFileName, r2.oldHeader = e2.oldHeader, r2.newHeader = e2.newHeader) : (r2.oldFileName = t2.oldFileName || e2.oldFileName, r2.newFileName = t2.newFileName || e2.newFileName, r2.oldHeader = t2.oldHeader || e2.oldHeader, r2.newHeader = t2.newHeader || e2.newHeader));
        r2.hunks = [];
        var o2 = 0, i2 = 0, u2 = 0, s2 = 0;
        for (; o2 < e2.hunks.length || i2 < t2.hunks.length; ) {
          var a2 = e2.hunks[o2] || { oldStart: 1 / 0 }, c2 = t2.hunks[i2] || { oldStart: 1 / 0 };
          if (G(a2, c2))
            r2.hunks.push(J(a2, u2)), o2++, s2 += a2.newLines - a2.oldLines;
          else if (G(c2, a2))
            r2.hunks.push(J(c2, s2)), i2++, u2 += c2.newLines - c2.oldLines;
          else {
            var l2 = { oldStart: Math.min(a2.oldStart, c2.oldStart), oldLines: 0, newStart: Math.min(a2.newStart + u2, c2.oldStart + s2), newLines: 0, lines: [] };
            X(l2, a2.oldStart, a2.lines, c2.oldStart, c2.lines), i2++, o2++, r2.hunks.push(l2);
          }
        }
        return r2;
      };
      function $(e2) {
        return function(e3) {
          if (Array.isArray(e3))
            return q(e3);
        }(e2) || function(e3) {
          if ("undefined" != typeof Symbol && Symbol.iterator in Object(e3))
            return Array.from(e3);
        }(e2) || function(e3, t2) {
          if (!e3)
            return;
          if ("string" == typeof e3)
            return q(e3, t2);
          var n2 = Object.prototype.toString.call(e3).slice(8, -1);
          "Object" === n2 && e3.constructor && (n2 = e3.constructor.name);
          if ("Map" === n2 || "Set" === n2)
            return Array.from(e3);
          if ("Arguments" === n2 || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n2))
            return q(e3, t2);
        }(e2) || function() {
          throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
        }();
      }
      function q(e2, t2) {
        (null == t2 || t2 > e2.length) && (t2 = e2.length);
        for (var n2 = 0, r2 = new Array(t2); n2 < t2; n2++)
          r2[n2] = e2[n2];
        return r2;
      }
      function W(e2) {
        var t2 = oe(e2.lines), n2 = t2.oldLines, r2 = t2.newLines;
        void 0 !== n2 ? e2.oldLines = n2 : delete e2.oldLines, void 0 !== r2 ? e2.newLines = r2 : delete e2.newLines;
      }
      function U(e2, t2) {
        if ("string" == typeof e2) {
          if (/^@@/m.test(e2) || /^Index:/m.test(e2))
            return (0, D.parsePatch)(e2)[0];
          if (!t2)
            throw new Error("Must provide a base reference or pass in a patch");
          return (0, I.structuredPatch)(void 0, void 0, t2, e2);
        }
        return e2;
      }
      function z(e2) {
        return e2.newFileName && e2.newFileName !== e2.oldFileName;
      }
      function H(e2, t2, n2) {
        return t2 === n2 ? t2 : (e2.conflict = true, { mine: t2, theirs: n2 });
      }
      function G(e2, t2) {
        return e2.oldStart < t2.oldStart && e2.oldStart + e2.oldLines < t2.oldStart;
      }
      function J(e2, t2) {
        return { oldStart: e2.oldStart, oldLines: e2.oldLines, newStart: e2.newStart + t2, newLines: e2.newLines, lines: e2.lines };
      }
      function X(e2, t2, n2, r2, o2) {
        var i2 = { offset: t2, lines: n2, index: 0 }, u2 = { offset: r2, lines: o2, index: 0 };
        for (Z(e2, i2, u2), Z(e2, u2, i2); i2.index < i2.lines.length && u2.index < u2.lines.length; ) {
          var s2 = i2.lines[i2.index], a2 = u2.lines[u2.index];
          if ("-" !== s2[0] && "+" !== s2[0] || "-" !== a2[0] && "+" !== a2[0])
            if ("+" === s2[0] && " " === a2[0]) {
              var c2;
              (c2 = e2.lines).push.apply(c2, $(te(i2)));
            } else if ("+" === a2[0] && " " === s2[0]) {
              var l2;
              (l2 = e2.lines).push.apply(l2, $(te(u2)));
            } else
              "-" === s2[0] && " " === a2[0] ? K(e2, i2, u2) : "-" === a2[0] && " " === s2[0] ? K(e2, u2, i2, true) : s2 === a2 ? (e2.lines.push(s2), i2.index++, u2.index++) : Q(e2, te(i2), te(u2));
          else
            Y(e2, i2, u2);
        }
        ee(e2, i2), ee(e2, u2), W(e2);
      }
      function Y(e2, t2, n2) {
        var r2 = te(t2), o2 = te(n2);
        if (ne(r2) && ne(o2)) {
          var i2, u2;
          if ((0, M.arrayStartsWith)(r2, o2) && re(n2, r2, r2.length - o2.length))
            return void (i2 = e2.lines).push.apply(i2, $(r2));
          if ((0, M.arrayStartsWith)(o2, r2) && re(t2, o2, o2.length - r2.length))
            return void (u2 = e2.lines).push.apply(u2, $(o2));
        } else if ((0, M.arrayEqual)(r2, o2)) {
          var s2;
          return void (s2 = e2.lines).push.apply(s2, $(r2));
        }
        Q(e2, r2, o2);
      }
      function K(e2, t2, n2, r2) {
        var o2, i2 = te(t2), u2 = function(e3, t3) {
          var n3 = [], r3 = [], o3 = 0, i3 = false, u3 = false;
          for (; o3 < t3.length && e3.index < e3.lines.length; ) {
            var s2 = e3.lines[e3.index], a2 = t3[o3];
            if ("+" === a2[0])
              break;
            if (i3 = i3 || " " !== s2[0], r3.push(a2), o3++, "+" === s2[0])
              for (u3 = true; "+" === s2[0]; )
                n3.push(s2), s2 = e3.lines[++e3.index];
            a2.substr(1) === s2.substr(1) ? (n3.push(s2), e3.index++) : u3 = true;
          }
          "+" === (t3[o3] || "")[0] && i3 && (u3 = true);
          if (u3)
            return n3;
          for (; o3 < t3.length; )
            r3.push(t3[o3++]);
          return { merged: r3, changes: n3 };
        }(n2, i2);
        u2.merged ? (o2 = e2.lines).push.apply(o2, $(u2.merged)) : Q(e2, r2 ? u2 : i2, r2 ? i2 : u2);
      }
      function Q(e2, t2, n2) {
        e2.conflict = true, e2.lines.push({ conflict: true, mine: t2, theirs: n2 });
      }
      function Z(e2, t2, n2) {
        for (; t2.offset < n2.offset && t2.index < t2.lines.length; ) {
          var r2 = t2.lines[t2.index++];
          e2.lines.push(r2), t2.offset++;
        }
      }
      function ee(e2, t2) {
        for (; t2.index < t2.lines.length; ) {
          var n2 = t2.lines[t2.index++];
          e2.lines.push(n2);
        }
      }
      function te(e2) {
        for (var t2 = [], n2 = e2.lines[e2.index][0]; e2.index < e2.lines.length; ) {
          var r2 = e2.lines[e2.index];
          if ("-" === n2 && "+" === r2[0] && (n2 = "+"), n2 !== r2[0])
            break;
          t2.push(r2), e2.index++;
        }
        return t2;
      }
      function ne(e2) {
        return e2.reduce(function(e3, t2) {
          return e3 && "-" === t2[0];
        }, true);
      }
      function re(e2, t2, n2) {
        for (var r2 = 0; r2 < n2; r2++) {
          var o2 = t2[t2.length - n2 + r2].substr(1);
          if (e2.lines[e2.index + r2] !== " " + o2)
            return false;
        }
        return e2.index += n2, true;
      }
      function oe(e2) {
        var t2 = 0, n2 = 0;
        return e2.forEach(function(e3) {
          if ("string" != typeof e3) {
            var r2 = oe(e3.mine), o2 = oe(e3.theirs);
            void 0 !== t2 && (r2.oldLines === o2.oldLines ? t2 += r2.oldLines : t2 = void 0), void 0 !== n2 && (r2.newLines === o2.newLines ? n2 += r2.newLines : n2 = void 0);
          } else
            void 0 === n2 || "+" !== e3[0] && " " !== e3[0] || n2++, void 0 === t2 || "-" !== e3[0] && " " !== e3[0] || t2++;
        }), { oldLines: t2, newLines: n2 };
      }
      var ie = Object.defineProperty({ calcLineCount: R, merge: V }, "__esModule", { value: true }), ue = function(e2) {
        for (var t2, n2, r2 = [], o2 = 0; o2 < e2.length; o2++)
          t2 = e2[o2], n2 = t2.added ? 1 : t2.removed ? -1 : 0, r2.push([n2, t2.value]);
        return r2;
      };
      var se = Object.defineProperty({ convertChangesToDMP: ue }, "__esModule", { value: true }), ae = function(e2) {
        for (var t2 = [], n2 = 0; n2 < e2.length; n2++) {
          var r2 = e2[n2];
          r2.added ? t2.push("<ins>") : r2.removed && t2.push("<del>"), t2.push(ce(r2.value)), r2.added ? t2.push("</ins>") : r2.removed && t2.push("</del>");
        }
        return t2.join("");
      };
      function ce(e2) {
        var t2 = e2;
        return t2 = (t2 = (t2 = (t2 = t2.replace(/&/g, "&amp;")).replace(/</g, "&lt;")).replace(/>/g, "&gt;")).replace(/"/g, "&quot;");
      }
      var le = Object.defineProperty({ convertChangesToXML: ae }, "__esModule", { value: true }), pe = i(function(e2, t2) {
        Object.defineProperty(t2, "__esModule", { value: true }), Object.defineProperty(t2, "Diff", { enumerable: true, get: function() {
          return n2.default;
        } }), Object.defineProperty(t2, "diffChars", { enumerable: true, get: function() {
          return s.diffChars;
        } }), Object.defineProperty(t2, "diffWords", { enumerable: true, get: function() {
          return l.diffWords;
        } }), Object.defineProperty(t2, "diffWordsWithSpace", { enumerable: true, get: function() {
          return l.diffWordsWithSpace;
        } }), Object.defineProperty(t2, "diffLines", { enumerable: true, get: function() {
          return p.diffLines;
        } }), Object.defineProperty(t2, "diffTrimmedLines", { enumerable: true, get: function() {
          return p.diffTrimmedLines;
        } }), Object.defineProperty(t2, "diffSentences", { enumerable: true, get: function() {
          return f.diffSentences;
        } }), Object.defineProperty(t2, "diffCss", { enumerable: true, get: function() {
          return d.diffCss;
        } }), Object.defineProperty(t2, "diffJson", { enumerable: true, get: function() {
          return h.diffJson;
        } }), Object.defineProperty(t2, "canonicalize", { enumerable: true, get: function() {
          return h.canonicalize;
        } }), Object.defineProperty(t2, "diffArrays", { enumerable: true, get: function() {
          return m.diffArrays;
        } }), Object.defineProperty(t2, "applyPatch", { enumerable: true, get: function() {
          return F.applyPatch;
        } }), Object.defineProperty(t2, "applyPatches", { enumerable: true, get: function() {
          return F.applyPatches;
        } }), Object.defineProperty(t2, "parsePatch", { enumerable: true, get: function() {
          return D.parsePatch;
        } }), Object.defineProperty(t2, "merge", { enumerable: true, get: function() {
          return ie.merge;
        } }), Object.defineProperty(t2, "structuredPatch", { enumerable: true, get: function() {
          return I.structuredPatch;
        } }), Object.defineProperty(t2, "createTwoFilesPatch", { enumerable: true, get: function() {
          return I.createTwoFilesPatch;
        } }), Object.defineProperty(t2, "createPatch", { enumerable: true, get: function() {
          return I.createPatch;
        } }), Object.defineProperty(t2, "convertChangesToDMP", { enumerable: true, get: function() {
          return se.convertChangesToDMP;
        } }), Object.defineProperty(t2, "convertChangesToXML", { enumerable: true, get: function() {
          return le.convertChangesToXML;
        } });
        var n2 = function(e3) {
          return e3 && e3.__esModule ? e3 : { default: e3 };
        }(u);
      });
      function fe(e2) {
        return { type: "concat", parts: e2 };
      }
      function de(e2) {
        return { type: "indent", contents: e2 };
      }
      function he(e2, t2) {
        return { type: "align", contents: t2, n: e2 };
      }
      function me(e2, t2 = {}) {
        return { type: "group", id: t2.id, contents: e2, break: Boolean(t2.shouldBreak), expandedStates: t2.expandedStates };
      }
      const ge = { type: "break-parent" }, ye = { type: "line", hard: true }, De = { type: "line", hard: true, literal: true }, Ee = fe([ye, ge]), be = fe([De, ge]);
      var Ce = { concat: fe, join: function(e2, t2) {
        const n2 = [];
        for (let r2 = 0; r2 < t2.length; r2++)
          0 !== r2 && n2.push(e2), n2.push(t2[r2]);
        return fe(n2);
      }, line: { type: "line" }, softline: { type: "line", soft: true }, hardline: Ee, literalline: be, group: me, conditionalGroup: function(e2, t2) {
        return me(e2[0], Object.assign({}, t2, { expandedStates: e2 }));
      }, fill: function(e2) {
        return { type: "fill", parts: e2 };
      }, lineSuffix: function(e2) {
        return { type: "line-suffix", contents: e2 };
      }, lineSuffixBoundary: { type: "line-suffix-boundary" }, cursor: { type: "cursor", placeholder: Symbol("cursor") }, breakParent: ge, ifBreak: function(e2, t2, n2 = {}) {
        return { type: "if-break", breakContents: e2, flatContents: t2, groupId: n2.groupId };
      }, trim: { type: "trim" }, indent: de, indentIfBreak: function(e2, t2) {
        return { type: "indent-if-break", contents: e2, groupId: t2.groupId, negate: t2.negate };
      }, align: he, addAlignmentToDoc: function(e2, t2, n2) {
        let r2 = e2;
        if (t2 > 0) {
          for (let e3 = 0; e3 < Math.floor(t2 / n2); ++e3)
            r2 = de(r2);
          r2 = he(t2 % n2, r2), r2 = he(Number.NEGATIVE_INFINITY, r2);
        }
        return r2;
      }, markAsRoot: function(e2) {
        return he({ type: "root" }, e2);
      }, dedentToRoot: function(e2) {
        return he(Number.NEGATIVE_INFINITY, e2);
      }, dedent: function(e2) {
        return he(-1, e2);
      }, hardlineWithoutBreakParent: ye, literallineWithoutBreakParent: De, label: function(e2, t2) {
        return { type: "label", label: e2, contents: t2 };
      } }, ve = (e2) => "string" == typeof e2 ? e2.replace((({ onlyFirst: e3 = false } = {}) => {
        const t2 = ["[\\u001B\\u009B][[\\]()#;?]*(?:(?:(?:[a-zA-Z\\d]*(?:;[-a-zA-Z\\d\\/#&.:=?%@~_]*)*)?\\u0007)", "(?:(?:\\d{1,4}(?:;\\d{0,4})*)?[\\dA-PR-TZcf-ntqry=><~]))"].join("|");
        return new RegExp(t2, e3 ? void 0 : "g");
      })(), "") : e2;
      const Ae = (e2) => !Number.isNaN(e2) && (e2 >= 4352 && (e2 <= 4447 || 9001 === e2 || 9002 === e2 || 11904 <= e2 && e2 <= 12871 && 12351 !== e2 || 12880 <= e2 && e2 <= 19903 || 19968 <= e2 && e2 <= 42182 || 43360 <= e2 && e2 <= 43388 || 44032 <= e2 && e2 <= 55203 || 63744 <= e2 && e2 <= 64255 || 65040 <= e2 && e2 <= 65049 || 65072 <= e2 && e2 <= 65131 || 65281 <= e2 && e2 <= 65376 || 65504 <= e2 && e2 <= 65510 || 110592 <= e2 && e2 <= 110593 || 127488 <= e2 && e2 <= 127569 || 131072 <= e2 && e2 <= 262141));
      var Fe = Ae, xe = Ae;
      Fe.default = xe;
      const Se = (e2) => {
        if ("string" != typeof e2 || 0 === e2.length)
          return 0;
        if (0 === (e2 = ve(e2)).length)
          return 0;
        e2 = e2.replace(/\uD83C\uDFF4\uDB40\uDC67\uDB40\uDC62(?:\uDB40\uDC65\uDB40\uDC6E\uDB40\uDC67|\uDB40\uDC73\uDB40\uDC63\uDB40\uDC74|\uDB40\uDC77\uDB40\uDC6C\uDB40\uDC73)\uDB40\uDC7F|\uD83D\uDC68(?:\uD83C\uDFFC\u200D(?:\uD83E\uDD1D\u200D\uD83D\uDC68\uD83C\uDFFB|\uD83C[\uDF3E\uDF73\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uD83E[\uDDAF-\uDDB3\uDDBC\uDDBD])|\uD83C\uDFFF\u200D(?:\uD83E\uDD1D\u200D\uD83D\uDC68(?:\uD83C[\uDFFB-\uDFFE])|\uD83C[\uDF3E\uDF73\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uD83E[\uDDAF-\uDDB3\uDDBC\uDDBD])|\uD83C\uDFFE\u200D(?:\uD83E\uDD1D\u200D\uD83D\uDC68(?:\uD83C[\uDFFB-\uDFFD])|\uD83C[\uDF3E\uDF73\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uD83E[\uDDAF-\uDDB3\uDDBC\uDDBD])|\uD83C\uDFFD\u200D(?:\uD83E\uDD1D\u200D\uD83D\uDC68(?:\uD83C[\uDFFB\uDFFC])|\uD83C[\uDF3E\uDF73\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uD83E[\uDDAF-\uDDB3\uDDBC\uDDBD])|\u200D(?:\u2764\uFE0F\u200D(?:\uD83D\uDC8B\u200D)?\uD83D\uDC68|(?:\uD83D[\uDC68\uDC69])\u200D(?:\uD83D\uDC66\u200D\uD83D\uDC66|\uD83D\uDC67\u200D(?:\uD83D[\uDC66\uDC67]))|\uD83D\uDC66\u200D\uD83D\uDC66|\uD83D\uDC67\u200D(?:\uD83D[\uDC66\uDC67])|(?:\uD83D[\uDC68\uDC69])\u200D(?:\uD83D[\uDC66\uDC67])|[\u2695\u2696\u2708]\uFE0F|\uD83D[\uDC66\uDC67]|\uD83C[\uDF3E\uDF73\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uD83E[\uDDAF-\uDDB3\uDDBC\uDDBD])|(?:\uD83C\uDFFB\u200D[\u2695\u2696\u2708]|\uD83C\uDFFF\u200D[\u2695\u2696\u2708]|\uD83C\uDFFE\u200D[\u2695\u2696\u2708]|\uD83C\uDFFD\u200D[\u2695\u2696\u2708]|\uD83C\uDFFC\u200D[\u2695\u2696\u2708])\uFE0F|\uD83C\uDFFB\u200D(?:\uD83C[\uDF3E\uDF73\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uD83E[\uDDAF-\uDDB3\uDDBC\uDDBD])|\uD83C[\uDFFB-\uDFFF])|(?:\uD83E\uDDD1\uD83C\uDFFB\u200D\uD83E\uDD1D\u200D\uD83E\uDDD1|\uD83D\uDC69\uD83C\uDFFC\u200D\uD83E\uDD1D\u200D\uD83D\uDC69)\uD83C\uDFFB|\uD83E\uDDD1(?:\uD83C\uDFFF\u200D\uD83E\uDD1D\u200D\uD83E\uDDD1(?:\uD83C[\uDFFB-\uDFFF])|\u200D\uD83E\uDD1D\u200D\uD83E\uDDD1)|(?:\uD83E\uDDD1\uD83C\uDFFE\u200D\uD83E\uDD1D\u200D\uD83E\uDDD1|\uD83D\uDC69\uD83C\uDFFF\u200D\uD83E\uDD1D\u200D(?:\uD83D[\uDC68\uDC69]))(?:\uD83C[\uDFFB-\uDFFE])|(?:\uD83E\uDDD1\uD83C\uDFFC\u200D\uD83E\uDD1D\u200D\uD83E\uDDD1|\uD83D\uDC69\uD83C\uDFFD\u200D\uD83E\uDD1D\u200D\uD83D\uDC69)(?:\uD83C[\uDFFB\uDFFC])|\uD83D\uDC69(?:\uD83C\uDFFE\u200D(?:\uD83E\uDD1D\u200D\uD83D\uDC68(?:\uD83C[\uDFFB-\uDFFD\uDFFF])|\uD83C[\uDF3E\uDF73\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uD83E[\uDDAF-\uDDB3\uDDBC\uDDBD])|\uD83C\uDFFC\u200D(?:\uD83E\uDD1D\u200D\uD83D\uDC68(?:\uD83C[\uDFFB\uDFFD-\uDFFF])|\uD83C[\uDF3E\uDF73\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uD83E[\uDDAF-\uDDB3\uDDBC\uDDBD])|\uD83C\uDFFB\u200D(?:\uD83E\uDD1D\u200D\uD83D\uDC68(?:\uD83C[\uDFFC-\uDFFF])|\uD83C[\uDF3E\uDF73\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uD83E[\uDDAF-\uDDB3\uDDBC\uDDBD])|\uD83C\uDFFD\u200D(?:\uD83E\uDD1D\u200D\uD83D\uDC68(?:\uD83C[\uDFFB\uDFFC\uDFFE\uDFFF])|\uD83C[\uDF3E\uDF73\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uD83E[\uDDAF-\uDDB3\uDDBC\uDDBD])|\u200D(?:\u2764\uFE0F\u200D(?:\uD83D\uDC8B\u200D(?:\uD83D[\uDC68\uDC69])|\uD83D[\uDC68\uDC69])|\uD83C[\uDF3E\uDF73\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uD83E[\uDDAF-\uDDB3\uDDBC\uDDBD])|\uD83C\uDFFF\u200D(?:\uD83C[\uDF3E\uDF73\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uD83E[\uDDAF-\uDDB3\uDDBC\uDDBD]))|\uD83D\uDC69\u200D\uD83D\uDC69\u200D(?:\uD83D\uDC66\u200D\uD83D\uDC66|\uD83D\uDC67\u200D(?:\uD83D[\uDC66\uDC67]))|(?:\uD83E\uDDD1\uD83C\uDFFD\u200D\uD83E\uDD1D\u200D\uD83E\uDDD1|\uD83D\uDC69\uD83C\uDFFE\u200D\uD83E\uDD1D\u200D\uD83D\uDC69)(?:\uD83C[\uDFFB-\uDFFD])|\uD83D\uDC69\u200D\uD83D\uDC66\u200D\uD83D\uDC66|\uD83D\uDC69\u200D\uD83D\uDC69\u200D(?:\uD83D[\uDC66\uDC67])|(?:\uD83D\uDC41\uFE0F\u200D\uD83D\uDDE8|\uD83D\uDC69(?:\uD83C\uDFFF\u200D[\u2695\u2696\u2708]|\uD83C\uDFFE\u200D[\u2695\u2696\u2708]|\uD83C\uDFFC\u200D[\u2695\u2696\u2708]|\uD83C\uDFFB\u200D[\u2695\u2696\u2708]|\uD83C\uDFFD\u200D[\u2695\u2696\u2708]|\u200D[\u2695\u2696\u2708])|(?:(?:\u26F9|\uD83C[\uDFCB\uDFCC]|\uD83D\uDD75)\uFE0F|\uD83D\uDC6F|\uD83E[\uDD3C\uDDDE\uDDDF])\u200D[\u2640\u2642]|(?:\u26F9|\uD83C[\uDFCB\uDFCC]|\uD83D\uDD75)(?:\uD83C[\uDFFB-\uDFFF])\u200D[\u2640\u2642]|(?:\uD83C[\uDFC3\uDFC4\uDFCA]|\uD83D[\uDC6E\uDC71\uDC73\uDC77\uDC81\uDC82\uDC86\uDC87\uDE45-\uDE47\uDE4B\uDE4D\uDE4E\uDEA3\uDEB4-\uDEB6]|\uD83E[\uDD26\uDD37-\uDD39\uDD3D\uDD3E\uDDB8\uDDB9\uDDCD-\uDDCF\uDDD6-\uDDDD])(?:(?:\uD83C[\uDFFB-\uDFFF])\u200D[\u2640\u2642]|\u200D[\u2640\u2642])|\uD83C\uDFF4\u200D\u2620)\uFE0F|\uD83D\uDC69\u200D\uD83D\uDC67\u200D(?:\uD83D[\uDC66\uDC67])|\uD83C\uDFF3\uFE0F\u200D\uD83C\uDF08|\uD83D\uDC15\u200D\uD83E\uDDBA|\uD83D\uDC69\u200D\uD83D\uDC66|\uD83D\uDC69\u200D\uD83D\uDC67|\uD83C\uDDFD\uD83C\uDDF0|\uD83C\uDDF4\uD83C\uDDF2|\uD83C\uDDF6\uD83C\uDDE6|[#\*0-9]\uFE0F\u20E3|\uD83C\uDDE7(?:\uD83C[\uDDE6\uDDE7\uDDE9-\uDDEF\uDDF1-\uDDF4\uDDF6-\uDDF9\uDDFB\uDDFC\uDDFE\uDDFF])|\uD83C\uDDF9(?:\uD83C[\uDDE6\uDDE8\uDDE9\uDDEB-\uDDED\uDDEF-\uDDF4\uDDF7\uDDF9\uDDFB\uDDFC\uDDFF])|\uD83C\uDDEA(?:\uD83C[\uDDE6\uDDE8\uDDEA\uDDEC\uDDED\uDDF7-\uDDFA])|\uD83E\uDDD1(?:\uD83C[\uDFFB-\uDFFF])|\uD83C\uDDF7(?:\uD83C[\uDDEA\uDDF4\uDDF8\uDDFA\uDDFC])|\uD83D\uDC69(?:\uD83C[\uDFFB-\uDFFF])|\uD83C\uDDF2(?:\uD83C[\uDDE6\uDDE8-\uDDED\uDDF0-\uDDFF])|\uD83C\uDDE6(?:\uD83C[\uDDE8-\uDDEC\uDDEE\uDDF1\uDDF2\uDDF4\uDDF6-\uDDFA\uDDFC\uDDFD\uDDFF])|\uD83C\uDDF0(?:\uD83C[\uDDEA\uDDEC-\uDDEE\uDDF2\uDDF3\uDDF5\uDDF7\uDDFC\uDDFE\uDDFF])|\uD83C\uDDED(?:\uD83C[\uDDF0\uDDF2\uDDF3\uDDF7\uDDF9\uDDFA])|\uD83C\uDDE9(?:\uD83C[\uDDEA\uDDEC\uDDEF\uDDF0\uDDF2\uDDF4\uDDFF])|\uD83C\uDDFE(?:\uD83C[\uDDEA\uDDF9])|\uD83C\uDDEC(?:\uD83C[\uDDE6\uDDE7\uDDE9-\uDDEE\uDDF1-\uDDF3\uDDF5-\uDDFA\uDDFC\uDDFE])|\uD83C\uDDF8(?:\uD83C[\uDDE6-\uDDEA\uDDEC-\uDDF4\uDDF7-\uDDF9\uDDFB\uDDFD-\uDDFF])|\uD83C\uDDEB(?:\uD83C[\uDDEE-\uDDF0\uDDF2\uDDF4\uDDF7])|\uD83C\uDDF5(?:\uD83C[\uDDE6\uDDEA-\uDDED\uDDF0-\uDDF3\uDDF7-\uDDF9\uDDFC\uDDFE])|\uD83C\uDDFB(?:\uD83C[\uDDE6\uDDE8\uDDEA\uDDEC\uDDEE\uDDF3\uDDFA])|\uD83C\uDDF3(?:\uD83C[\uDDE6\uDDE8\uDDEA-\uDDEC\uDDEE\uDDF1\uDDF4\uDDF5\uDDF7\uDDFA\uDDFF])|\uD83C\uDDE8(?:\uD83C[\uDDE6\uDDE8\uDDE9\uDDEB-\uDDEE\uDDF0-\uDDF5\uDDF7\uDDFA-\uDDFF])|\uD83C\uDDF1(?:\uD83C[\uDDE6-\uDDE8\uDDEE\uDDF0\uDDF7-\uDDFB\uDDFE])|\uD83C\uDDFF(?:\uD83C[\uDDE6\uDDF2\uDDFC])|\uD83C\uDDFC(?:\uD83C[\uDDEB\uDDF8])|\uD83C\uDDFA(?:\uD83C[\uDDE6\uDDEC\uDDF2\uDDF3\uDDF8\uDDFE\uDDFF])|\uD83C\uDDEE(?:\uD83C[\uDDE8-\uDDEA\uDDF1-\uDDF4\uDDF6-\uDDF9])|\uD83C\uDDEF(?:\uD83C[\uDDEA\uDDF2\uDDF4\uDDF5])|(?:\uD83C[\uDFC3\uDFC4\uDFCA]|\uD83D[\uDC6E\uDC71\uDC73\uDC77\uDC81\uDC82\uDC86\uDC87\uDE45-\uDE47\uDE4B\uDE4D\uDE4E\uDEA3\uDEB4-\uDEB6]|\uD83E[\uDD26\uDD37-\uDD39\uDD3D\uDD3E\uDDB8\uDDB9\uDDCD-\uDDCF\uDDD6-\uDDDD])(?:\uD83C[\uDFFB-\uDFFF])|(?:\u26F9|\uD83C[\uDFCB\uDFCC]|\uD83D\uDD75)(?:\uD83C[\uDFFB-\uDFFF])|(?:[\u261D\u270A-\u270D]|\uD83C[\uDF85\uDFC2\uDFC7]|\uD83D[\uDC42\uDC43\uDC46-\uDC50\uDC66\uDC67\uDC6B-\uDC6D\uDC70\uDC72\uDC74-\uDC76\uDC78\uDC7C\uDC83\uDC85\uDCAA\uDD74\uDD7A\uDD90\uDD95\uDD96\uDE4C\uDE4F\uDEC0\uDECC]|\uD83E[\uDD0F\uDD18-\uDD1C\uDD1E\uDD1F\uDD30-\uDD36\uDDB5\uDDB6\uDDBB\uDDD2-\uDDD5])(?:\uD83C[\uDFFB-\uDFFF])|(?:[\u231A\u231B\u23E9-\u23EC\u23F0\u23F3\u25FD\u25FE\u2614\u2615\u2648-\u2653\u267F\u2693\u26A1\u26AA\u26AB\u26BD\u26BE\u26C4\u26C5\u26CE\u26D4\u26EA\u26F2\u26F3\u26F5\u26FA\u26FD\u2705\u270A\u270B\u2728\u274C\u274E\u2753-\u2755\u2757\u2795-\u2797\u27B0\u27BF\u2B1B\u2B1C\u2B50\u2B55]|\uD83C[\uDC04\uDCCF\uDD8E\uDD91-\uDD9A\uDDE6-\uDDFF\uDE01\uDE1A\uDE2F\uDE32-\uDE36\uDE38-\uDE3A\uDE50\uDE51\uDF00-\uDF20\uDF2D-\uDF35\uDF37-\uDF7C\uDF7E-\uDF93\uDFA0-\uDFCA\uDFCF-\uDFD3\uDFE0-\uDFF0\uDFF4\uDFF8-\uDFFF]|\uD83D[\uDC00-\uDC3E\uDC40\uDC42-\uDCFC\uDCFF-\uDD3D\uDD4B-\uDD4E\uDD50-\uDD67\uDD7A\uDD95\uDD96\uDDA4\uDDFB-\uDE4F\uDE80-\uDEC5\uDECC\uDED0-\uDED2\uDED5\uDEEB\uDEEC\uDEF4-\uDEFA\uDFE0-\uDFEB]|\uD83E[\uDD0D-\uDD3A\uDD3C-\uDD45\uDD47-\uDD71\uDD73-\uDD76\uDD7A-\uDDA2\uDDA5-\uDDAA\uDDAE-\uDDCA\uDDCD-\uDDFF\uDE70-\uDE73\uDE78-\uDE7A\uDE80-\uDE82\uDE90-\uDE95])|(?:[#\*0-9\xA9\xAE\u203C\u2049\u2122\u2139\u2194-\u2199\u21A9\u21AA\u231A\u231B\u2328\u23CF\u23E9-\u23F3\u23F8-\u23FA\u24C2\u25AA\u25AB\u25B6\u25C0\u25FB-\u25FE\u2600-\u2604\u260E\u2611\u2614\u2615\u2618\u261D\u2620\u2622\u2623\u2626\u262A\u262E\u262F\u2638-\u263A\u2640\u2642\u2648-\u2653\u265F\u2660\u2663\u2665\u2666\u2668\u267B\u267E\u267F\u2692-\u2697\u2699\u269B\u269C\u26A0\u26A1\u26AA\u26AB\u26B0\u26B1\u26BD\u26BE\u26C4\u26C5\u26C8\u26CE\u26CF\u26D1\u26D3\u26D4\u26E9\u26EA\u26F0-\u26F5\u26F7-\u26FA\u26FD\u2702\u2705\u2708-\u270D\u270F\u2712\u2714\u2716\u271D\u2721\u2728\u2733\u2734\u2744\u2747\u274C\u274E\u2753-\u2755\u2757\u2763\u2764\u2795-\u2797\u27A1\u27B0\u27BF\u2934\u2935\u2B05-\u2B07\u2B1B\u2B1C\u2B50\u2B55\u3030\u303D\u3297\u3299]|\uD83C[\uDC04\uDCCF\uDD70\uDD71\uDD7E\uDD7F\uDD8E\uDD91-\uDD9A\uDDE6-\uDDFF\uDE01\uDE02\uDE1A\uDE2F\uDE32-\uDE3A\uDE50\uDE51\uDF00-\uDF21\uDF24-\uDF93\uDF96\uDF97\uDF99-\uDF9B\uDF9E-\uDFF0\uDFF3-\uDFF5\uDFF7-\uDFFF]|\uD83D[\uDC00-\uDCFD\uDCFF-\uDD3D\uDD49-\uDD4E\uDD50-\uDD67\uDD6F\uDD70\uDD73-\uDD7A\uDD87\uDD8A-\uDD8D\uDD90\uDD95\uDD96\uDDA4\uDDA5\uDDA8\uDDB1\uDDB2\uDDBC\uDDC2-\uDDC4\uDDD1-\uDDD3\uDDDC-\uDDDE\uDDE1\uDDE3\uDDE8\uDDEF\uDDF3\uDDFA-\uDE4F\uDE80-\uDEC5\uDECB-\uDED2\uDED5\uDEE0-\uDEE5\uDEE9\uDEEB\uDEEC\uDEF0\uDEF3-\uDEFA\uDFE0-\uDFEB]|\uD83E[\uDD0D-\uDD3A\uDD3C-\uDD45\uDD47-\uDD71\uDD73-\uDD76\uDD7A-\uDDA2\uDDA5-\uDDAA\uDDAE-\uDDCA\uDDCD-\uDDFF\uDE70-\uDE73\uDE78-\uDE7A\uDE80-\uDE82\uDE90-\uDE95])\uFE0F|(?:[\u261D\u26F9\u270A-\u270D]|\uD83C[\uDF85\uDFC2-\uDFC4\uDFC7\uDFCA-\uDFCC]|\uD83D[\uDC42\uDC43\uDC46-\uDC50\uDC66-\uDC78\uDC7C\uDC81-\uDC83\uDC85-\uDC87\uDC8F\uDC91\uDCAA\uDD74\uDD75\uDD7A\uDD90\uDD95\uDD96\uDE45-\uDE47\uDE4B-\uDE4F\uDEA3\uDEB4-\uDEB6\uDEC0\uDECC]|\uD83E[\uDD0F\uDD18-\uDD1F\uDD26\uDD30-\uDD39\uDD3C-\uDD3E\uDDB5\uDDB6\uDDB8\uDDB9\uDDBB\uDDCD-\uDDCF\uDDD1-\uDDDD])/g, "  ");
        let t2 = 0;
        for (let n2 = 0; n2 < e2.length; n2++) {
          const r2 = e2.codePointAt(n2);
          r2 <= 31 || r2 >= 127 && r2 <= 159 || (r2 >= 768 && r2 <= 879 || (r2 > 65535 && n2++, t2 += Fe(r2) ? 2 : 1));
        }
        return t2;
      };
      var we = Se, Te = Se;
      we.default = Te;
      var Be = (e2) => {
        if ("string" != typeof e2)
          throw new TypeError("Expected a string");
        return e2.replace(/[|\\{}()[\]^$+*?.]/g, "\\$&").replace(/-/g, "\\x2d");
      };
      var ke = (e2) => e2[e2.length - 1];
      var Ne = function(e2) {
        for (var t2 = -1, n2 = null == e2 ? 0 : e2.length, r2 = {}; ++t2 < n2; ) {
          var o2 = e2[t2];
          r2[o2[0]] = o2[1];
        }
        return r2;
      }, Pe = void 0 !== Pe ? Pe : "undefined" != typeof self ? self : "undefined" != typeof window ? window : {};
      function Oe() {
        throw new Error("setTimeout has not been defined");
      }
      function Ie() {
        throw new Error("clearTimeout has not been defined");
      }
      var je = Oe, Le = Ie;
      function _e(e2) {
        if (je === setTimeout)
          return setTimeout(e2, 0);
        if ((je === Oe || !je) && setTimeout)
          return je = setTimeout, setTimeout(e2, 0);
        try {
          return je(e2, 0);
        } catch (t2) {
          try {
            return je.call(null, e2, 0);
          } catch (t3) {
            return je.call(this, e2, 0);
          }
        }
      }
      "function" == typeof Pe.setTimeout && (je = setTimeout), "function" == typeof Pe.clearTimeout && (Le = clearTimeout);
      var Me, Re = [], Ve = false, $e = -1;
      function qe() {
        Ve && Me && (Ve = false, Me.length ? Re = Me.concat(Re) : $e = -1, Re.length && We());
      }
      function We() {
        if (!Ve) {
          var e2 = _e(qe);
          Ve = true;
          for (var t2 = Re.length; t2; ) {
            for (Me = Re, Re = []; ++$e < t2; )
              Me && Me[$e].run();
            $e = -1, t2 = Re.length;
          }
          Me = null, Ve = false, function(e3) {
            if (Le === clearTimeout)
              return clearTimeout(e3);
            if ((Le === Ie || !Le) && clearTimeout)
              return Le = clearTimeout, clearTimeout(e3);
            try {
              Le(e3);
            } catch (t3) {
              try {
                return Le.call(null, e3);
              } catch (t4) {
                return Le.call(this, e3);
              }
            }
          }(e2);
        }
      }
      function Ue(e2, t2) {
        this.fun = e2, this.array = t2;
      }
      Ue.prototype.run = function() {
        this.fun.apply(null, this.array);
      };
      function ze() {
      }
      var He = ze, Ge = ze, Je = ze, Xe = ze, Ye = ze, Ke = ze, Qe = ze;
      var Ze = Pe.performance || {}, et = Ze.now || Ze.mozNow || Ze.msNow || Ze.oNow || Ze.webkitNow || function() {
        return new Date().getTime();
      };
      var tt = new Date();
      var nt = { nextTick: function(e2) {
        var t2 = new Array(arguments.length - 1);
        if (arguments.length > 1)
          for (var n2 = 1; n2 < arguments.length; n2++)
            t2[n2 - 1] = arguments[n2];
        Re.push(new Ue(e2, t2)), 1 !== Re.length || Ve || _e(We);
      }, title: "browser", browser: true, env: {}, argv: [], version: "", versions: {}, on: He, addListener: Ge, once: Je, off: Xe, removeListener: Ye, removeAllListeners: Ke, emit: Qe, binding: function(e2) {
        throw new Error("process.binding is not supported");
      }, cwd: function() {
        return "/";
      }, chdir: function(e2) {
        throw new Error("process.chdir is not supported");
      }, umask: function() {
        return 0;
      }, hrtime: function(e2) {
        var t2 = 1e-3 * et.call(Ze), n2 = Math.floor(t2), r2 = Math.floor(t2 % 1 * 1e9);
        return e2 && (n2 -= e2[0], (r2 -= e2[1]) < 0 && (n2--, r2 += 1e9)), [n2, r2];
      }, platform: "browser", release: {}, config: {}, uptime: function() {
        return (new Date() - tt) / 1e3;
      } };
      var rt = "object" == typeof nt && nt.env && nt.env.NODE_DEBUG && /\bsemver\b/i.test(nt.env.NODE_DEBUG) ? (...e2) => console.error("SEMVER", ...e2) : () => {
      };
      var ot = { SEMVER_SPEC_VERSION: "2.0.0", MAX_LENGTH: 256, MAX_SAFE_INTEGER: Number.MAX_SAFE_INTEGER || 9007199254740991, MAX_SAFE_COMPONENT_LENGTH: 16 }, it = i(function(e2, t2) {
        const { MAX_SAFE_COMPONENT_LENGTH: n2 } = ot, r2 = (t2 = e2.exports = {}).re = [], o2 = t2.src = [], i2 = t2.t = {};
        let u2 = 0;
        const s2 = (e3, t3, n3) => {
          const s3 = u2++;
          rt(s3, t3), i2[e3] = s3, o2[s3] = t3, r2[s3] = new RegExp(t3, n3 ? "g" : void 0);
        };
        s2("NUMERICIDENTIFIER", "0|[1-9]\\d*"), s2("NUMERICIDENTIFIERLOOSE", "[0-9]+"), s2("NONNUMERICIDENTIFIER", "\\d*[a-zA-Z-][a-zA-Z0-9-]*"), s2("MAINVERSION", "(".concat(o2[i2.NUMERICIDENTIFIER], ")\\.") + "(".concat(o2[i2.NUMERICIDENTIFIER], ")\\.") + "(".concat(o2[i2.NUMERICIDENTIFIER], ")")), s2("MAINVERSIONLOOSE", "(".concat(o2[i2.NUMERICIDENTIFIERLOOSE], ")\\.") + "(".concat(o2[i2.NUMERICIDENTIFIERLOOSE], ")\\.") + "(".concat(o2[i2.NUMERICIDENTIFIERLOOSE], ")")), s2("PRERELEASEIDENTIFIER", "(?:".concat(o2[i2.NUMERICIDENTIFIER], "|").concat(o2[i2.NONNUMERICIDENTIFIER], ")")), s2("PRERELEASEIDENTIFIERLOOSE", "(?:".concat(o2[i2.NUMERICIDENTIFIERLOOSE], "|").concat(o2[i2.NONNUMERICIDENTIFIER], ")")), s2("PRERELEASE", "(?:-(".concat(o2[i2.PRERELEASEIDENTIFIER], "(?:\\.").concat(o2[i2.PRERELEASEIDENTIFIER], ")*))")), s2("PRERELEASELOOSE", "(?:-?(".concat(o2[i2.PRERELEASEIDENTIFIERLOOSE], "(?:\\.").concat(o2[i2.PRERELEASEIDENTIFIERLOOSE], ")*))")), s2("BUILDIDENTIFIER", "[0-9A-Za-z-]+"), s2("BUILD", "(?:\\+(".concat(o2[i2.BUILDIDENTIFIER], "(?:\\.").concat(o2[i2.BUILDIDENTIFIER], ")*))")), s2("FULLPLAIN", "v?".concat(o2[i2.MAINVERSION]).concat(o2[i2.PRERELEASE], "?").concat(o2[i2.BUILD], "?")), s2("FULL", "^".concat(o2[i2.FULLPLAIN], "$")), s2("LOOSEPLAIN", "[v=\\s]*".concat(o2[i2.MAINVERSIONLOOSE]).concat(o2[i2.PRERELEASELOOSE], "?").concat(o2[i2.BUILD], "?")), s2("LOOSE", "^".concat(o2[i2.LOOSEPLAIN], "$")), s2("GTLT", "((?:<|>)?=?)"), s2("XRANGEIDENTIFIERLOOSE", "".concat(o2[i2.NUMERICIDENTIFIERLOOSE], "|x|X|\\*")), s2("XRANGEIDENTIFIER", "".concat(o2[i2.NUMERICIDENTIFIER], "|x|X|\\*")), s2("XRANGEPLAIN", "[v=\\s]*(".concat(o2[i2.XRANGEIDENTIFIER], ")") + "(?:\\.(".concat(o2[i2.XRANGEIDENTIFIER], ")") + "(?:\\.(".concat(o2[i2.XRANGEIDENTIFIER], ")") + "(?:".concat(o2[i2.PRERELEASE], ")?").concat(o2[i2.BUILD], "?") + ")?)?"), s2("XRANGEPLAINLOOSE", "[v=\\s]*(".concat(o2[i2.XRANGEIDENTIFIERLOOSE], ")") + "(?:\\.(".concat(o2[i2.XRANGEIDENTIFIERLOOSE], ")") + "(?:\\.(".concat(o2[i2.XRANGEIDENTIFIERLOOSE], ")") + "(?:".concat(o2[i2.PRERELEASELOOSE], ")?").concat(o2[i2.BUILD], "?") + ")?)?"), s2("XRANGE", "^".concat(o2[i2.GTLT], "\\s*").concat(o2[i2.XRANGEPLAIN], "$")), s2("XRANGELOOSE", "^".concat(o2[i2.GTLT], "\\s*").concat(o2[i2.XRANGEPLAINLOOSE], "$")), s2("COERCE", "".concat("(^|[^\\d])(\\d{1,").concat(n2, "})") + "(?:\\.(\\d{1,".concat(n2, "}))?") + "(?:\\.(\\d{1,".concat(n2, "}))?") + "(?:$|[^\\d])"), s2("COERCERTL", o2[i2.COERCE], true), s2("LONETILDE", "(?:~>?)"), s2("TILDETRIM", "(\\s*)".concat(o2[i2.LONETILDE], "\\s+"), true), t2.tildeTrimReplace = "$1~", s2("TILDE", "^".concat(o2[i2.LONETILDE]).concat(o2[i2.XRANGEPLAIN], "$")), s2("TILDELOOSE", "^".concat(o2[i2.LONETILDE]).concat(o2[i2.XRANGEPLAINLOOSE], "$")), s2("LONECARET", "(?:\\^)"), s2("CARETTRIM", "(\\s*)".concat(o2[i2.LONECARET], "\\s+"), true), t2.caretTrimReplace = "$1^", s2("CARET", "^".concat(o2[i2.LONECARET]).concat(o2[i2.XRANGEPLAIN], "$")), s2("CARETLOOSE", "^".concat(o2[i2.LONECARET]).concat(o2[i2.XRANGEPLAINLOOSE], "$")), s2("COMPARATORLOOSE", "^".concat(o2[i2.GTLT], "\\s*(").concat(o2[i2.LOOSEPLAIN], ")$|^$")), s2("COMPARATOR", "^".concat(o2[i2.GTLT], "\\s*(").concat(o2[i2.FULLPLAIN], ")$|^$")), s2("COMPARATORTRIM", "(\\s*)".concat(o2[i2.GTLT], "\\s*(").concat(o2[i2.LOOSEPLAIN], "|").concat(o2[i2.XRANGEPLAIN], ")"), true), t2.comparatorTrimReplace = "$1$2$3", s2("HYPHENRANGE", "^\\s*(".concat(o2[i2.XRANGEPLAIN], ")") + "\\s+-\\s+" + "(".concat(o2[i2.XRANGEPLAIN], ")") + "\\s*$"), s2("HYPHENRANGELOOSE", "^\\s*(".concat(o2[i2.XRANGEPLAINLOOSE], ")") + "\\s+-\\s+" + "(".concat(o2[i2.XRANGEPLAINLOOSE], ")") + "\\s*$"), s2("STAR", "(<|>)?=?\\s*\\*"), s2("GTE0", "^\\s*>=\\s*0.0.0\\s*$"), s2("GTE0PRE", "^\\s*>=\\s*0.0.0-0\\s*$");
      });
      const ut = ["includePrerelease", "loose", "rtl"];
      var st = (e2) => e2 ? "object" != typeof e2 ? { loose: true } : ut.filter((t2) => e2[t2]).reduce((e3, t2) => (e3[t2] = true, e3), {}) : {};
      const at = /^[0-9]+$/, ct = (e2, t2) => {
        const n2 = at.test(e2), r2 = at.test(t2);
        return n2 && r2 && (e2 = +e2, t2 = +t2), e2 === t2 ? 0 : n2 && !r2 ? -1 : r2 && !n2 ? 1 : e2 < t2 ? -1 : 1;
      };
      var lt = { compareIdentifiers: ct, rcompareIdentifiers: (e2, t2) => ct(t2, e2) };
      const { MAX_LENGTH: pt, MAX_SAFE_INTEGER: ft } = ot, { re: dt, t: ht } = it, { compareIdentifiers: mt } = lt;
      class gt {
        constructor(e2, t2) {
          if (t2 = st(t2), e2 instanceof gt) {
            if (e2.loose === !!t2.loose && e2.includePrerelease === !!t2.includePrerelease)
              return e2;
            e2 = e2.version;
          } else if ("string" != typeof e2)
            throw new TypeError("Invalid Version: ".concat(e2));
          if (e2.length > pt)
            throw new TypeError("version is longer than ".concat(pt, " characters"));
          rt("SemVer", e2, t2), this.options = t2, this.loose = !!t2.loose, this.includePrerelease = !!t2.includePrerelease;
          const n2 = e2.trim().match(t2.loose ? dt[ht.LOOSE] : dt[ht.FULL]);
          if (!n2)
            throw new TypeError("Invalid Version: ".concat(e2));
          if (this.raw = e2, this.major = +n2[1], this.minor = +n2[2], this.patch = +n2[3], this.major > ft || this.major < 0)
            throw new TypeError("Invalid major version");
          if (this.minor > ft || this.minor < 0)
            throw new TypeError("Invalid minor version");
          if (this.patch > ft || this.patch < 0)
            throw new TypeError("Invalid patch version");
          n2[4] ? this.prerelease = n2[4].split(".").map((e3) => {
            if (/^[0-9]+$/.test(e3)) {
              const t3 = +e3;
              if (t3 >= 0 && t3 < ft)
                return t3;
            }
            return e3;
          }) : this.prerelease = [], this.build = n2[5] ? n2[5].split(".") : [], this.format();
        }
        format() {
          return this.version = "".concat(this.major, ".").concat(this.minor, ".").concat(this.patch), this.prerelease.length && (this.version += "-".concat(this.prerelease.join("."))), this.version;
        }
        toString() {
          return this.version;
        }
        compare(e2) {
          if (rt("SemVer.compare", this.version, this.options, e2), !(e2 instanceof gt)) {
            if ("string" == typeof e2 && e2 === this.version)
              return 0;
            e2 = new gt(e2, this.options);
          }
          return e2.version === this.version ? 0 : this.compareMain(e2) || this.comparePre(e2);
        }
        compareMain(e2) {
          return e2 instanceof gt || (e2 = new gt(e2, this.options)), mt(this.major, e2.major) || mt(this.minor, e2.minor) || mt(this.patch, e2.patch);
        }
        comparePre(e2) {
          if (e2 instanceof gt || (e2 = new gt(e2, this.options)), this.prerelease.length && !e2.prerelease.length)
            return -1;
          if (!this.prerelease.length && e2.prerelease.length)
            return 1;
          if (!this.prerelease.length && !e2.prerelease.length)
            return 0;
          let t2 = 0;
          do {
            const n2 = this.prerelease[t2], r2 = e2.prerelease[t2];
            if (rt("prerelease compare", t2, n2, r2), void 0 === n2 && void 0 === r2)
              return 0;
            if (void 0 === r2)
              return 1;
            if (void 0 === n2)
              return -1;
            if (n2 !== r2)
              return mt(n2, r2);
          } while (++t2);
        }
        compareBuild(e2) {
          e2 instanceof gt || (e2 = new gt(e2, this.options));
          let t2 = 0;
          do {
            const n2 = this.build[t2], r2 = e2.build[t2];
            if (rt("prerelease compare", t2, n2, r2), void 0 === n2 && void 0 === r2)
              return 0;
            if (void 0 === r2)
              return 1;
            if (void 0 === n2)
              return -1;
            if (n2 !== r2)
              return mt(n2, r2);
          } while (++t2);
        }
        inc(e2, t2) {
          switch (e2) {
            case "premajor":
              this.prerelease.length = 0, this.patch = 0, this.minor = 0, this.major++, this.inc("pre", t2);
              break;
            case "preminor":
              this.prerelease.length = 0, this.patch = 0, this.minor++, this.inc("pre", t2);
              break;
            case "prepatch":
              this.prerelease.length = 0, this.inc("patch", t2), this.inc("pre", t2);
              break;
            case "prerelease":
              0 === this.prerelease.length && this.inc("patch", t2), this.inc("pre", t2);
              break;
            case "major":
              0 === this.minor && 0 === this.patch && 0 !== this.prerelease.length || this.major++, this.minor = 0, this.patch = 0, this.prerelease = [];
              break;
            case "minor":
              0 === this.patch && 0 !== this.prerelease.length || this.minor++, this.patch = 0, this.prerelease = [];
              break;
            case "patch":
              0 === this.prerelease.length && this.patch++, this.prerelease = [];
              break;
            case "pre":
              if (0 === this.prerelease.length)
                this.prerelease = [0];
              else {
                let e3 = this.prerelease.length;
                for (; --e3 >= 0; )
                  "number" == typeof this.prerelease[e3] && (this.prerelease[e3]++, e3 = -2);
                -1 === e3 && this.prerelease.push(0);
              }
              t2 && (this.prerelease[0] === t2 ? isNaN(this.prerelease[1]) && (this.prerelease = [t2, 0]) : this.prerelease = [t2, 0]);
              break;
            default:
              throw new Error("invalid increment argument: ".concat(e2));
          }
          return this.format(), this.raw = this.version, this;
        }
      }
      var yt = gt;
      var Dt = (e2, t2, n2) => new yt(e2, n2).compare(new yt(t2, n2));
      var Et = (e2, t2, n2) => Dt(e2, t2, n2) < 0;
      var bt, Ct, vt, At, Ft, xt, St = (e2, t2, n2) => Dt(e2, t2, n2) >= 0, wt = i(function(e2, t2) {
        function n2() {
          for (var e3 = [], t3 = 0; t3 < arguments.length; t3++)
            e3[t3] = arguments[t3];
        }
        function r2() {
          return "undefined" != typeof WeakMap ? /* @__PURE__ */ new WeakMap() : { add: n2, delete: n2, get: n2, set: n2, has: function(e3) {
            return false;
          } };
        }
        Object.defineProperty(t2, "__esModule", { value: true }), t2.outdent = void 0;
        var o2 = Object.prototype.hasOwnProperty, i2 = function(e3, t3) {
          return o2.call(e3, t3);
        };
        function u2(e3, t3) {
          for (var n3 in t3)
            i2(t3, n3) && (e3[n3] = t3[n3]);
          return e3;
        }
        var s2 = /^[ \t]*(?:\r\n|\r|\n)/, a2 = /(?:\r\n|\r|\n)[ \t]*$/, c2 = /^(?:[\r\n]|$)/, l2 = /(?:\r\n|\r|\n)([ \t]*)(?:[^ \t\r\n]|$)/, p2 = /^[ \t]*[\r\n][ \t\r\n]*$/;
        function f2(e3, t3, n3) {
          var r3 = 0, o3 = e3[0].match(l2);
          o3 && (r3 = o3[1].length);
          var i3 = new RegExp("(\\r\\n|\\r|\\n).{0," + r3 + "}", "g");
          t3 && (e3 = e3.slice(1));
          var u3 = n3.newline, c3 = n3.trimLeadingNewline, p3 = n3.trimTrailingNewline, f3 = "string" == typeof u3, d3 = e3.length;
          return e3.map(function(e4, t4) {
            return e4 = e4.replace(i3, "$1"), 0 === t4 && c3 && (e4 = e4.replace(s2, "")), t4 === d3 - 1 && p3 && (e4 = e4.replace(a2, "")), f3 && (e4 = e4.replace(/\r\n|\n|\r/g, function(e5) {
              return u3;
            })), e4;
          });
        }
        function d2(e3, t3) {
          for (var n3 = "", r3 = 0, o3 = e3.length; r3 < o3; r3++)
            n3 += e3[r3], r3 < o3 - 1 && (n3 += t3[r3]);
          return n3;
        }
        function h2(e3) {
          return i2(e3, "raw") && i2(e3, "length");
        }
        var m2 = function e3(t3) {
          var n3 = r2(), o3 = r2();
          return u2(function r3(i3) {
            for (var s3 = [], a3 = 1; a3 < arguments.length; a3++)
              s3[a3 - 1] = arguments[a3];
            if (h2(i3)) {
              var l3 = i3, g2 = (s3[0] === r3 || s3[0] === m2) && p2.test(l3[0]) && c2.test(l3[1]), y2 = g2 ? o3 : n3, D2 = y2.get(l3);
              if (D2 || (D2 = f2(l3, g2, t3), y2.set(l3, D2)), 0 === s3.length)
                return D2[0];
              var E2 = d2(D2, g2 ? s3.slice(1) : s3);
              return E2;
            }
            return e3(u2(u2({}, t3), i3 || {}));
          }, { string: function(e4) {
            return f2([e4], false, t3)[0];
          } });
        }({ trimLeadingNewline: true, trimTrailingNewline: true });
        t2.outdent = m2, t2.default = m2;
        try {
          e2.exports = m2, Object.defineProperty(m2, "__esModule", { value: true }), m2.default = m2, m2.outdent = m2;
        } catch (e3) {
        }
      });
      const { outdent: Tt } = wt, Bt = "Config", kt = "Editor", Nt = "Other", Pt = "Global", Ot = "Special", It = { cursorOffset: { since: "1.4.0", category: Ot, type: "int", default: -1, range: { start: -1, end: Number.POSITIVE_INFINITY, step: 1 }, description: Tt(bt || (bt = t(["\n      Print (to stderr) where a cursor at the given position would move to after formatting.\n      This option cannot be used with --range-start and --range-end.\n    "]))), cliCategory: kt }, endOfLine: { since: "1.15.0", category: Pt, type: "choice", default: [{ since: "1.15.0", value: "auto" }, { since: "2.0.0", value: "lf" }], description: "Which end of line characters to apply.", choices: [{ value: "lf", description: "Line Feed only (\\n), common on Linux and macOS as well as inside git repos" }, { value: "crlf", description: "Carriage Return + Line Feed characters (\\r\\n), common on Windows" }, { value: "cr", description: "Carriage Return character only (\\r), used very rarely" }, { value: "auto", description: Tt(Ct || (Ct = t(["\n          Maintain existing\n          (mixed values within one file are normalised by looking at what's used after the first line)\n        "]))) }] }, filepath: { since: "1.4.0", category: Ot, type: "path", description: "Specify the input filepath. This will be used to do parser inference.", cliName: "stdin-filepath", cliCategory: Nt, cliDescription: "Path to the file to pretend that stdin comes from." }, insertPragma: { since: "1.8.0", category: Ot, type: "boolean", default: false, description: "Insert @format pragma into file's first docblock comment.", cliCategory: Nt }, parser: { since: "0.0.10", category: Pt, type: "choice", default: [{ since: "0.0.10", value: "babylon" }, { since: "1.13.0", value: void 0 }], description: "Which parser to use.", exception: (e2) => "string" == typeof e2 || "function" == typeof e2, choices: [{ value: "flow", description: "Flow" }, { value: "babel", since: "1.16.0", description: "JavaScript" }, { value: "babel-flow", since: "1.16.0", description: "Flow" }, { value: "babel-ts", since: "2.0.0", description: "TypeScript" }, { value: "typescript", since: "1.4.0", description: "TypeScript" }, { value: "espree", since: "2.2.0", description: "JavaScript" }, { value: "meriyah", since: "2.2.0", description: "JavaScript" }, { value: "css", since: "1.7.1", description: "CSS" }, { value: "less", since: "1.7.1", description: "Less" }, { value: "scss", since: "1.7.1", description: "SCSS" }, { value: "json", since: "1.5.0", description: "JSON" }, { value: "json5", since: "1.13.0", description: "JSON5" }, { value: "json-stringify", since: "1.13.0", description: "JSON.stringify" }, { value: "graphql", since: "1.5.0", description: "GraphQL" }, { value: "markdown", since: "1.8.0", description: "Markdown" }, { value: "mdx", since: "1.15.0", description: "MDX" }, { value: "vue", since: "1.10.0", description: "Vue" }, { value: "yaml", since: "1.14.0", description: "YAML" }, { value: "glimmer", since: "2.3.0", description: "Ember / Handlebars" }, { value: "html", since: "1.15.0", description: "HTML" }, { value: "angular", since: "1.15.0", description: "Angular" }, { value: "lwc", since: "1.17.0", description: "Lightning Web Components" }] }, plugins: { since: "1.10.0", type: "path", array: true, default: [{ value: [] }], category: Pt, description: "Add a plugin. Multiple plugins can be passed as separate `--plugin`s.", exception: (e2) => "string" == typeof e2 || "object" == typeof e2, cliName: "plugin", cliCategory: Bt }, pluginSearchDirs: { since: "1.13.0", type: "path", array: true, default: [{ value: [] }], category: Pt, description: Tt(vt || (vt = t(["\n      Custom directory that contains prettier plugins in node_modules subdirectory.\n      Overrides default behavior when plugins are searched relatively to the location of Prettier.\n      Multiple values are accepted.\n    "]))), exception: (e2) => "string" == typeof e2 || "object" == typeof e2, cliName: "plugin-search-dir", cliCategory: Bt }, printWidth: { since: "0.0.0", category: Pt, type: "int", default: 80, description: "The line length where Prettier will try wrap.", range: { start: 0, end: Number.POSITIVE_INFINITY, step: 1 } }, rangeEnd: { since: "1.4.0", category: Ot, type: "int", default: Number.POSITIVE_INFINITY, range: { start: 0, end: Number.POSITIVE_INFINITY, step: 1 }, description: Tt(At || (At = t(["\n      Format code ending at a given character offset (exclusive).\n      The range will extend forwards to the end of the selected statement.\n      This option cannot be used with --cursor-offset.\n    "]))), cliCategory: kt }, rangeStart: { since: "1.4.0", category: Ot, type: "int", default: 0, range: { start: 0, end: Number.POSITIVE_INFINITY, step: 1 }, description: Tt(Ft || (Ft = t(["\n      Format code starting at a given character offset.\n      The range will extend backwards to the start of the first line containing the selected statement.\n      This option cannot be used with --cursor-offset.\n    "]))), cliCategory: kt }, requirePragma: { since: "1.7.0", category: Ot, type: "boolean", default: false, description: Tt(xt || (xt = t(["\n      Require either '@prettier' or '@format' to be present in the file's first docblock comment\n      in order for it to be formatted.\n    "]))), cliCategory: Nt }, tabWidth: { type: "int", category: Pt, default: 2, description: "Number of spaces per indentation level.", range: { start: 0, end: Number.POSITIVE_INFINITY, step: 1 } }, useTabs: { since: "1.0.0", category: Pt, type: "boolean", default: false, description: "Indent with tabs instead of spaces." }, embeddedLanguageFormatting: { since: "2.1.0", category: Pt, type: "choice", default: [{ since: "2.1.0", value: "auto" }], description: "Control how Prettier formats quoted code embedded in the file.", choices: [{ value: "auto", description: "Format embedded code if Prettier can automatically identify it." }, { value: "off", description: "Never automatically format embedded code." }] } };
      const jt = { compare: Dt, lt: Et, gte: St }, Lt = n.version, _t = { CATEGORY_CONFIG: Bt, CATEGORY_EDITOR: kt, CATEGORY_FORMAT: "Format", CATEGORY_OTHER: Nt, CATEGORY_OUTPUT: "Output", CATEGORY_GLOBAL: Pt, CATEGORY_SPECIAL: Ot, options: It }.options;
      var Mt = { getSupportInfo: function({ plugins: t2 = [], showUnreleased: n2 = false, showDeprecated: r2 = false, showInternal: o2 = false } = {}) {
        const i2 = Lt.split("-", 1)[0], u2 = t2.reduce((e2, t3) => [...e2, ...t3.languages || []], []).filter(a2), s2 = ((e2, t3) => Object.entries(e2).map(([e3, n3]) => Object.assign({ [t3]: e3 }, n3)))(Object.assign({}, ...t2.map(({ options: e2 }) => e2), _t), "name").filter((e2) => a2(e2) && c2(e2)).sort((e2, t3) => e2.name === t3.name ? 0 : e2.name < t3.name ? -1 : 1).map(function(t3) {
          if (o2)
            return t3;
          return e(t3, ["cliName", "cliCategory", "cliDescription"]);
        }).map((e2) => {
          e2 = Object.assign({}, e2), Array.isArray(e2.default) && (e2.default = 1 === e2.default.length ? e2.default[0].value : e2.default.filter(a2).sort((e3, t3) => jt.compare(t3.since, e3.since))[0].value), Array.isArray(e2.choices) && (e2.choices = e2.choices.filter((e3) => a2(e3) && c2(e3)), "parser" === e2.name && function(e3, t3, n4) {
            const r3 = new Set(e3.choices.map((e4) => e4.value));
            for (const o3 of t3)
              if (o3.parsers) {
                for (const t4 of o3.parsers)
                  if (!r3.has(t4)) {
                    r3.add(t4);
                    const i3 = n4.find((e4) => e4.parsers && e4.parsers[t4]);
                    let u3 = o3.name;
                    i3 && i3.name && (u3 += " (plugin: ".concat(i3.name, ")")), e3.choices.push({ value: t4, description: u3 });
                  }
              }
          }(e2, u2, t2));
          const n3 = Ne(t2.filter((t3) => t3.defaultOptions && void 0 !== t3.defaultOptions[e2.name]).map((t3) => [t3.name, t3.defaultOptions[e2.name]]));
          return Object.assign({}, e2, { pluginDefaults: n3 });
        });
        return { languages: u2, options: s2 };
        function a2(e2) {
          return n2 || !("since" in e2) || e2.since && jt.gte(i2, e2.since);
        }
        function c2(e2) {
          return r2 || !("deprecated" in e2) || e2.deprecated && jt.lt(i2, e2.deprecated);
        }
      } };
      const { getSupportInfo: Rt } = Mt, Vt = /[^\x20-\x7F]/;
      function $t(e2) {
        return (t2, n2, r2) => {
          const o2 = r2 && r2.backwards;
          if (false === n2)
            return false;
          const { length: i2 } = t2;
          let u2 = n2;
          for (; u2 >= 0 && u2 < i2; ) {
            const n3 = t2.charAt(u2);
            if (e2 instanceof RegExp) {
              if (!e2.test(n3))
                return u2;
            } else if (!e2.includes(n3))
              return u2;
            o2 ? u2-- : u2++;
          }
          return (-1 === u2 || u2 === i2) && u2;
        };
      }
      const qt = $t(/\s/), Wt = $t(" 	"), Ut = $t(",; 	"), zt = $t(/[^\n\r]/);
      function Ht(e2, t2) {
        if (false === t2)
          return false;
        if ("/" === e2.charAt(t2) && "*" === e2.charAt(t2 + 1)) {
          for (let n2 = t2 + 2; n2 < e2.length; ++n2)
            if ("*" === e2.charAt(n2) && "/" === e2.charAt(n2 + 1))
              return n2 + 2;
        }
        return t2;
      }
      function Gt(e2, t2) {
        return false !== t2 && ("/" === e2.charAt(t2) && "/" === e2.charAt(t2 + 1) ? zt(e2, t2) : t2);
      }
      function Jt(e2, t2, n2) {
        const r2 = n2 && n2.backwards;
        if (false === t2)
          return false;
        const o2 = e2.charAt(t2);
        if (r2) {
          if ("\r" === e2.charAt(t2 - 1) && "\n" === o2)
            return t2 - 2;
          if ("\n" === o2 || "\r" === o2 || "\u2028" === o2 || "\u2029" === o2)
            return t2 - 1;
        } else {
          if ("\r" === o2 && "\n" === e2.charAt(t2 + 1))
            return t2 + 2;
          if ("\n" === o2 || "\r" === o2 || "\u2028" === o2 || "\u2029" === o2)
            return t2 + 1;
        }
        return t2;
      }
      function Xt(e2, t2, n2 = {}) {
        const r2 = Wt(e2, n2.backwards ? t2 - 1 : t2, n2);
        return r2 !== Jt(e2, r2, n2);
      }
      function Yt(e2, t2) {
        let n2 = null, r2 = t2;
        for (; r2 !== n2; )
          n2 = r2, r2 = Ut(e2, r2), r2 = Ht(e2, r2), r2 = Wt(e2, r2);
        return r2 = Gt(e2, r2), r2 = Jt(e2, r2), false !== r2 && Xt(e2, r2);
      }
      function Kt(e2, t2) {
        let n2 = null, r2 = t2;
        for (; r2 !== n2; )
          n2 = r2, r2 = Wt(e2, r2), r2 = Ht(e2, r2), r2 = Gt(e2, r2), r2 = Jt(e2, r2);
        return r2;
      }
      function Qt(e2, t2, n2) {
        return Kt(e2, n2(t2));
      }
      function Zt(e2, t2, n2 = 0) {
        let r2 = 0;
        for (let o2 = n2; o2 < e2.length; ++o2)
          "	" === e2[o2] ? r2 = r2 + t2 - r2 % t2 : r2++;
        return r2;
      }
      function en(e2, t2) {
        const n2 = e2.slice(1, -1), r2 = { quote: '"', regex: /"/g }, o2 = { quote: "'", regex: /'/g }, i2 = "'" === t2 ? o2 : r2, u2 = i2 === o2 ? r2 : o2;
        let s2 = i2.quote;
        if (n2.includes(i2.quote) || n2.includes(u2.quote)) {
          s2 = (n2.match(i2.regex) || []).length > (n2.match(u2.regex) || []).length ? u2.quote : i2.quote;
        }
        return s2;
      }
      function tn(e2, t2, n2) {
        const r2 = '"' === t2 ? "'" : '"', o2 = e2.replace(/\\([\S\s])|(["'])/g, (e3, o3, i2) => o3 === r2 ? o3 : i2 === t2 ? "\\" + i2 : i2 || (n2 && /^[^\n\r"'0-7\\bfnrt-vx\u2028\u2029]$/.test(o3) ? o3 : "\\" + o3));
        return t2 + o2 + t2;
      }
      function nn(e2, t2) {
        (e2.comments || (e2.comments = [])).push(t2), t2.printed = false, t2.nodeDescription = function(e3) {
          const t3 = e3.type || e3.kind || "(unknown type)";
          let n2 = String(e3.name || e3.id && ("object" == typeof e3.id ? e3.id.name : e3.id) || e3.key && ("object" == typeof e3.key ? e3.key.name : e3.key) || e3.value && ("object" == typeof e3.value ? "" : String(e3.value)) || e3.operator || "");
          n2.length > 20 && (n2 = n2.slice(0, 19) + "\u2026");
          return t3 + (n2 ? " " + n2 : "");
        }(e2);
      }
      var rn = { inferParserByLanguage: function(e2, t2) {
        const { languages: n2 } = Rt({ plugins: t2.plugins }), r2 = n2.find(({ name: t3 }) => t3.toLowerCase() === e2) || n2.find(({ aliases: t3 }) => Array.isArray(t3) && t3.includes(e2)) || n2.find(({ extensions: t3 }) => Array.isArray(t3) && t3.includes(".".concat(e2)));
        return r2 && r2.parsers[0];
      }, replaceEndOfLineWith: function(e2, t2) {
        const n2 = [];
        for (const r2 of e2.split("\n"))
          n2.length > 0 && n2.push(t2), n2.push(r2);
        return n2;
      }, getStringWidth: function(e2) {
        return e2 ? Vt.test(e2) ? we(e2) : e2.length : 0;
      }, getMaxContinuousCount: function(e2, t2) {
        const n2 = e2.match(new RegExp("(".concat(Be(t2), ")+"), "g"));
        return null === n2 ? 0 : n2.reduce((e3, n3) => Math.max(e3, n3.length / t2.length), 0);
      }, getMinNotPresentContinuousCount: function(e2, t2) {
        const n2 = e2.match(new RegExp("(".concat(Be(t2), ")+"), "g"));
        if (null === n2)
          return 0;
        const r2 = /* @__PURE__ */ new Map();
        let o2 = 0;
        for (const e3 of n2) {
          const n3 = e3.length / t2.length;
          r2.set(n3, true), n3 > o2 && (o2 = n3);
        }
        for (let e3 = 1; e3 < o2; e3++)
          if (!r2.get(e3))
            return e3;
        return o2 + 1;
      }, getPenultimate: (e2) => e2[e2.length - 2], getLast: ke, getNextNonSpaceNonCommentCharacterIndexWithStartIndex: Kt, getNextNonSpaceNonCommentCharacterIndex: Qt, getNextNonSpaceNonCommentCharacter: function(e2, t2, n2) {
        return e2.charAt(Qt(e2, t2, n2));
      }, skip: $t, skipWhitespace: qt, skipSpaces: Wt, skipToLineEnd: Ut, skipEverythingButNewLine: zt, skipInlineComment: Ht, skipTrailingComment: Gt, skipNewline: Jt, isNextLineEmptyAfterIndex: Yt, isNextLineEmpty: function(e2, t2, n2) {
        return Yt(e2, n2(t2));
      }, isPreviousLineEmpty: function(e2, t2, n2) {
        let r2 = n2(t2) - 1;
        return r2 = Wt(e2, r2, { backwards: true }), r2 = Jt(e2, r2, { backwards: true }), r2 = Wt(e2, r2, { backwards: true }), r2 !== Jt(e2, r2, { backwards: true });
      }, hasNewline: Xt, hasNewlineInRange: function(e2, t2, n2) {
        for (let r2 = t2; r2 < n2; ++r2)
          if ("\n" === e2.charAt(r2))
            return true;
        return false;
      }, hasSpaces: function(e2, t2, n2 = {}) {
        return Wt(e2, n2.backwards ? t2 - 1 : t2, n2) !== t2;
      }, getAlignmentSize: Zt, getIndentSize: function(e2, t2) {
        const n2 = e2.lastIndexOf("\n");
        return -1 === n2 ? 0 : Zt(e2.slice(n2 + 1).match(/^[\t ]*/)[0], t2);
      }, getPreferredQuote: en, printString: function(e2, t2) {
        return tn(e2.slice(1, -1), "json" === t2.parser || "json5" === t2.parser && "preserve" === t2.quoteProps && !t2.singleQuote ? '"' : t2.__isInHtmlAttribute ? "'" : en(e2, t2.singleQuote ? "'" : '"'), !("css" === t2.parser || "less" === t2.parser || "scss" === t2.parser || t2.__embeddedInHtml));
      }, printNumber: function(e2) {
        return e2.toLowerCase().replace(/^([+-]?[\d.]+e)(?:\+|(-))?0*(\d)/, "$1$2$3").replace(/^([+-]?[\d.]+)e[+-]?0+$/, "$1").replace(/^([+-])?\./, "$10.").replace(/(\.\d+?)0+(?=e|$)/, "$1").replace(/\.(?=e|$)/, "");
      }, makeString: tn, addLeadingComment: function(e2, t2) {
        t2.leading = true, t2.trailing = false, nn(e2, t2);
      }, addDanglingComment: function(e2, t2, n2) {
        t2.leading = false, t2.trailing = false, n2 && (t2.marker = n2), nn(e2, t2);
      }, addTrailingComment: function(e2, t2) {
        t2.leading = false, t2.trailing = true, nn(e2, t2);
      }, isFrontMatterNode: function(e2) {
        return e2 && "front-matter" === e2.type;
      }, getShebang: function(e2) {
        if (!e2.startsWith("#!"))
          return "";
        const t2 = e2.indexOf("\n");
        return -1 === t2 ? e2 : e2.slice(0, t2);
      }, isNonEmptyArray: function(e2) {
        return Array.isArray(e2) && e2.length > 0;
      }, createGroupIdMapper: function(e2) {
        const t2 = /* @__PURE__ */ new WeakMap();
        return function(n2) {
          return t2.has(n2) || t2.set(n2, Symbol(e2)), t2.get(n2);
        };
      } };
      var on = { guessEndOfLine: function(e2) {
        const t2 = e2.indexOf("\r");
        return t2 >= 0 ? "\n" === e2.charAt(t2 + 1) ? "crlf" : "cr" : "lf";
      }, convertEndOfLineToChars: function(e2) {
        switch (e2) {
          case "cr":
            return "\r";
          case "crlf":
            return "\r\n";
          default:
            return "\n";
        }
      }, countEndOfLineChars: function(e2, t2) {
        let n2;
        if ("\n" === t2)
          n2 = /\n/g;
        else if ("\r" === t2)
          n2 = /\r/g;
        else {
          if ("\r\n" !== t2)
            throw new Error('Unexpected "eol" '.concat(JSON.stringify(t2), "."));
          n2 = /\r\n/g;
        }
        const r2 = e2.match(n2);
        return r2 ? r2.length : 0;
      }, normalizeEndOfLine: function(e2) {
        return e2.replace(/\r\n?/g, "\n");
      } };
      const { literalline: un } = Ce, sn = (e2) => Array.isArray(e2) || e2 && "concat" === e2.type, an = (e2) => {
        if (Array.isArray(e2))
          return e2;
        if ("concat" !== e2.type && "fill" !== e2.type)
          throw new Error("Expect doc type to be `concat` or `fill`.");
        return e2.parts;
      }, cn = {};
      function ln(e2, t2, n2, r2) {
        const o2 = [e2];
        for (; o2.length > 0; ) {
          const e3 = o2.pop();
          if (e3 !== cn) {
            if (n2 && o2.push(e3, cn), !t2 || false !== t2(e3))
              if (sn(e3) || "fill" === e3.type) {
                const t3 = an(e3);
                for (let e4 = t3.length - 1; e4 >= 0; --e4)
                  o2.push(t3[e4]);
              } else if ("if-break" === e3.type)
                e3.flatContents && o2.push(e3.flatContents), e3.breakContents && o2.push(e3.breakContents);
              else if ("group" === e3.type && e3.expandedStates)
                if (r2)
                  for (let t3 = e3.expandedStates.length - 1; t3 >= 0; --t3)
                    o2.push(e3.expandedStates[t3]);
                else
                  o2.push(e3.contents);
              else
                e3.contents && o2.push(e3.contents);
          } else
            n2(o2.pop());
        }
      }
      function pn(e2, t2) {
        const n2 = /* @__PURE__ */ new Map();
        return r2(e2);
        function r2(e3) {
          if (n2.has(e3))
            return n2.get(e3);
          const o2 = function(e4) {
            if (Array.isArray(e4))
              return t2(e4.map(r2));
            if ("concat" === e4.type || "fill" === e4.type) {
              const n3 = e4.parts.map(r2);
              return t2(Object.assign({}, e4, { parts: n3 }));
            }
            if ("if-break" === e4.type) {
              const n3 = e4.breakContents && r2(e4.breakContents), o3 = e4.flatContents && r2(e4.flatContents);
              return t2(Object.assign({}, e4, { breakContents: n3, flatContents: o3 }));
            }
            if ("group" === e4.type && e4.expandedStates) {
              const n3 = e4.expandedStates.map(r2), o3 = n3[0];
              return t2(Object.assign({}, e4, { contents: o3, expandedStates: n3 }));
            }
            if (e4.contents) {
              const n3 = r2(e4.contents);
              return t2(Object.assign({}, e4, { contents: n3 }));
            }
            return t2(e4);
          }(e3);
          return n2.set(e3, o2), o2;
        }
      }
      function fn2(e2, t2, n2) {
        let r2 = n2, o2 = false;
        return ln(e2, function(e3) {
          const n3 = t2(e3);
          if (void 0 !== n3 && (o2 = true, r2 = n3), o2)
            return false;
        }), r2;
      }
      function dn(e2) {
        return !("group" !== e2.type || !e2.break) || (!("line" !== e2.type || !e2.hard) || ("break-parent" === e2.type || void 0));
      }
      function hn(e2) {
        if (e2.length > 0) {
          const t2 = ke(e2);
          t2.expandedStates || t2.break || (t2.break = "propagated");
        }
        return null;
      }
      function mn(e2) {
        return "line" !== e2.type || e2.hard ? "if-break" === e2.type ? e2.flatContents || "" : e2 : e2.soft ? "" : " ";
      }
      const gn = (e2, t2) => e2 && "line" === e2.type && e2.hard && t2 && "break-parent" === t2.type;
      function yn(e2) {
        if (!e2)
          return e2;
        if (sn(e2) || "fill" === e2.type) {
          const t2 = an(e2);
          for (; t2.length > 1 && gn(...t2.slice(-2)); )
            t2.length -= 2;
          if (t2.length > 0) {
            const e3 = yn(ke(t2));
            t2[t2.length - 1] = e3;
          }
          return Array.isArray(e2) ? t2 : Object.assign({}, e2, { parts: t2 });
        }
        switch (e2.type) {
          case "align":
          case "indent":
          case "indent-if-break":
          case "group":
          case "line-suffix":
          case "label": {
            const t2 = yn(e2.contents);
            return Object.assign({}, e2, { contents: t2 });
          }
          case "if-break": {
            const t2 = yn(e2.breakContents), n2 = yn(e2.flatContents);
            return Object.assign({}, e2, { breakContents: t2, flatContents: n2 });
          }
        }
        return e2;
      }
      function Dn(e2) {
        return pn(e2, (e3) => function(e4) {
          switch (e4.type) {
            case "fill":
              if (0 === e4.parts.length || e4.parts.every((e5) => "" === e5))
                return "";
              break;
            case "group":
              if (!(e4.contents || e4.id || e4.break || e4.expandedStates))
                return "";
              if ("group" === e4.contents.type && e4.contents.id === e4.id && e4.contents.break === e4.break && e4.contents.expandedStates === e4.expandedStates)
                return e4.contents;
              break;
            case "align":
            case "indent":
            case "indent-if-break":
            case "line-suffix":
              if (!e4.contents)
                return "";
              break;
            case "if-break":
              if (!e4.flatContents && !e4.breakContents)
                return "";
          }
          if (!sn(e4))
            return e4;
          const t2 = [];
          for (const n2 of an(e4)) {
            if (!n2)
              continue;
            const [e5, ...r2] = sn(n2) ? an(n2) : [n2];
            "string" == typeof e5 && "string" == typeof ke(t2) ? t2[t2.length - 1] += e5 : t2.push(e5), t2.push(...r2);
          }
          return 0 === t2.length ? "" : 1 === t2.length ? t2[0] : Array.isArray(e4) ? t2 : Object.assign({}, e4, { parts: t2 });
        }(e3));
      }
      function En(e2) {
        const t2 = [], n2 = e2.filter(Boolean);
        for (; n2.length > 0; ) {
          const e3 = n2.shift();
          e3 && (sn(e3) ? n2.unshift(...an(e3)) : t2.length > 0 && "string" == typeof ke(t2) && "string" == typeof e3 ? t2[t2.length - 1] += e3 : t2.push(e3));
        }
        return t2;
      }
      var bn = { isConcat: sn, getDocParts: an, willBreak: function(e2) {
        return fn2(e2, dn, false);
      }, traverseDoc: ln, findInDoc: fn2, mapDoc: pn, propagateBreaks: function(e2) {
        const t2 = /* @__PURE__ */ new Set(), n2 = [];
        ln(e2, function(e3) {
          if ("break-parent" === e3.type && hn(n2), "group" === e3.type) {
            if (n2.push(e3), t2.has(e3))
              return false;
            t2.add(e3);
          }
        }, function(e3) {
          if ("group" === e3.type) {
            n2.pop().break && hn(n2);
          }
        }, true);
      }, removeLines: function(e2) {
        return pn(e2, mn);
      }, stripTrailingHardline: function(e2) {
        return yn(Dn(e2));
      }, normalizeParts: En, normalizeDoc: function(e2) {
        return pn(e2, (e3) => Array.isArray(e3) ? En(e3) : e3.parts ? Object.assign({}, e3, { parts: En(e3.parts) }) : e3);
      }, cleanDoc: Dn, replaceNewlinesWithLiterallines: function(e2) {
        return pn(e2, (e3) => "string" == typeof e3 && e3.includes("\n") ? e3.split(/(\n)/g).map((e4, t2) => t2 % 2 == 0 ? e4 : un) : e3);
      } };
      const { getStringWidth: Cn, getLast: vn } = rn, { convertEndOfLineToChars: An } = on, { fill: Fn, cursor: xn, indent: Sn } = Ce, { isConcat: wn, getDocParts: Tn } = bn;
      let Bn;
      function kn(e2, t2) {
        return Pn(e2, { type: "indent" }, t2);
      }
      function Nn(e2, t2, n2) {
        if (t2 === Number.NEGATIVE_INFINITY)
          return e2.root || { value: "", length: 0, queue: [] };
        if (t2 < 0)
          return Pn(e2, { type: "dedent" }, n2);
        if (!t2)
          return e2;
        if ("root" === t2.type)
          return Object.assign({}, e2, { root: e2 });
        return Pn(e2, { type: "string" == typeof t2 ? "stringAlign" : "numberAlign", n: t2 }, n2);
      }
      function Pn(e2, t2, n2) {
        const r2 = "dedent" === t2.type ? e2.queue.slice(0, -1) : [...e2.queue, t2];
        let o2 = "", i2 = 0, u2 = 0, s2 = 0;
        for (const e3 of r2)
          switch (e3.type) {
            case "indent":
              l2(), n2.useTabs ? a2(1) : c2(n2.tabWidth);
              break;
            case "stringAlign":
              l2(), o2 += e3.n, i2 += e3.n.length;
              break;
            case "numberAlign":
              u2 += 1, s2 += e3.n;
              break;
            default:
              throw new Error("Unexpected type '".concat(e3.type, "'"));
          }
        return p2(), Object.assign({}, e2, { value: o2, length: i2, queue: r2 });
        function a2(e3) {
          o2 += "	".repeat(e3), i2 += n2.tabWidth * e3;
        }
        function c2(e3) {
          o2 += " ".repeat(e3), i2 += e3;
        }
        function l2() {
          n2.useTabs ? function() {
            u2 > 0 && a2(u2);
            f2();
          }() : p2();
        }
        function p2() {
          s2 > 0 && c2(s2), f2();
        }
        function f2() {
          u2 = 0, s2 = 0;
        }
      }
      function On(e2) {
        if (0 === e2.length)
          return 0;
        let t2 = 0;
        for (; e2.length > 0 && "string" == typeof vn(e2) && /^[\t ]*$/.test(vn(e2)); )
          t2 += e2.pop().length;
        if (e2.length > 0 && "string" == typeof vn(e2)) {
          const n2 = vn(e2).replace(/[\t ]*$/, "");
          t2 += vn(e2).length - n2.length, e2[e2.length - 1] = n2;
        }
        return t2;
      }
      function In(e2, t2, n2, r2, o2, i2) {
        let u2 = t2.length;
        const s2 = [e2], a2 = [];
        for (; n2 >= 0; ) {
          if (0 === s2.length) {
            if (0 === u2)
              return true;
            s2.push(t2[u2 - 1]), u2--;
            continue;
          }
          const [e3, c2, l2] = s2.pop();
          if ("string" == typeof l2)
            a2.push(l2), n2 -= Cn(l2);
          else if (wn(l2)) {
            const t3 = Tn(l2);
            for (let n3 = t3.length - 1; n3 >= 0; n3--)
              s2.push([e3, c2, t3[n3]]);
          } else
            switch (l2.type) {
              case "indent":
                s2.push([kn(e3, r2), c2, l2.contents]);
                break;
              case "align":
                s2.push([Nn(e3, l2.n, r2), c2, l2.contents]);
                break;
              case "trim":
                n2 += On(a2);
                break;
              case "group": {
                if (i2 && l2.break)
                  return false;
                const t3 = l2.break ? 1 : c2;
                s2.push([e3, t3, l2.expandedStates && 1 === t3 ? vn(l2.expandedStates) : l2.contents]), l2.id && (Bn[l2.id] = t3);
                break;
              }
              case "fill":
                for (let t3 = l2.parts.length - 1; t3 >= 0; t3--)
                  s2.push([e3, c2, l2.parts[t3]]);
                break;
              case "if-break":
              case "indent-if-break": {
                const t3 = l2.groupId ? Bn[l2.groupId] : c2;
                if (1 === t3) {
                  const t4 = "if-break" === l2.type ? l2.breakContents : l2.negate ? l2.contents : Sn(l2.contents);
                  t4 && s2.push([e3, c2, t4]);
                }
                if (2 === t3) {
                  const t4 = "if-break" === l2.type ? l2.flatContents : l2.negate ? Sn(l2.contents) : l2.contents;
                  t4 && s2.push([e3, c2, t4]);
                }
                break;
              }
              case "line":
                switch (c2) {
                  case 2:
                    if (!l2.hard) {
                      l2.soft || (a2.push(" "), n2 -= 1);
                      break;
                    }
                    return true;
                  case 1:
                    return true;
                }
                break;
              case "line-suffix":
                o2 = true;
                break;
              case "line-suffix-boundary":
                if (o2)
                  return false;
                break;
              case "label":
                s2.push([e3, c2, l2.contents]);
            }
        }
        return false;
      }
      var jn = { printDocToString: function(e2, t2) {
        Bn = {};
        const n2 = t2.printWidth, r2 = An(t2.endOfLine);
        let o2 = 0;
        const i2 = [[{ value: "", length: 0, queue: [] }, 1, e2]], u2 = [];
        let s2 = false, a2 = [];
        for (; i2.length > 0; ) {
          const [e3, c3, l2] = i2.pop();
          if ("string" == typeof l2) {
            const e4 = "\n" !== r2 ? l2.replace(/\n/g, r2) : l2;
            u2.push(e4), o2 += Cn(e4);
          } else if (wn(l2)) {
            const t3 = Tn(l2);
            for (let n3 = t3.length - 1; n3 >= 0; n3--)
              i2.push([e3, c3, t3[n3]]);
          } else
            switch (l2.type) {
              case "cursor":
                u2.push(xn.placeholder);
                break;
              case "indent":
                i2.push([kn(e3, t2), c3, l2.contents]);
                break;
              case "align":
                i2.push([Nn(e3, l2.n, t2), c3, l2.contents]);
                break;
              case "trim":
                o2 -= On(u2);
                break;
              case "group":
                switch (c3) {
                  case 2:
                    if (!s2) {
                      i2.push([e3, l2.break ? 1 : 2, l2.contents]);
                      break;
                    }
                  case 1: {
                    s2 = false;
                    const r3 = [e3, 2, l2.contents], u3 = n2 - o2, c4 = a2.length > 0;
                    if (!l2.break && In(r3, i2, u3, t2, c4))
                      i2.push(r3);
                    else if (l2.expandedStates) {
                      const n3 = vn(l2.expandedStates);
                      if (l2.break) {
                        i2.push([e3, 1, n3]);
                        break;
                      }
                      for (let r4 = 1; r4 < l2.expandedStates.length + 1; r4++) {
                        if (r4 >= l2.expandedStates.length) {
                          i2.push([e3, 1, n3]);
                          break;
                        }
                        {
                          const n4 = [e3, 2, l2.expandedStates[r4]];
                          if (In(n4, i2, u3, t2, c4)) {
                            i2.push(n4);
                            break;
                          }
                        }
                      }
                    } else
                      i2.push([e3, 1, l2.contents]);
                    break;
                  }
                }
                l2.id && (Bn[l2.id] = vn(i2)[1]);
                break;
              case "fill": {
                const r3 = n2 - o2, { parts: u3 } = l2;
                if (0 === u3.length)
                  break;
                const [s3, p2] = u3, f2 = [e3, 2, s3], d2 = [e3, 1, s3], h2 = In(f2, [], r3, t2, a2.length > 0, true);
                if (1 === u3.length) {
                  h2 ? i2.push(f2) : i2.push(d2);
                  break;
                }
                const m2 = [e3, 2, p2], g2 = [e3, 1, p2];
                if (2 === u3.length) {
                  h2 ? i2.push(m2, f2) : i2.push(g2, d2);
                  break;
                }
                u3.splice(0, 2);
                const y2 = [e3, c3, Fn(u3)];
                In([e3, 2, [s3, p2, u3[0]]], [], r3, t2, a2.length > 0, true) ? i2.push(y2, m2, f2) : h2 ? i2.push(y2, g2, f2) : i2.push(y2, g2, d2);
                break;
              }
              case "if-break":
              case "indent-if-break": {
                const t3 = l2.groupId ? Bn[l2.groupId] : c3;
                if (1 === t3) {
                  const t4 = "if-break" === l2.type ? l2.breakContents : l2.negate ? l2.contents : Sn(l2.contents);
                  t4 && i2.push([e3, c3, t4]);
                }
                if (2 === t3) {
                  const t4 = "if-break" === l2.type ? l2.flatContents : l2.negate ? Sn(l2.contents) : l2.contents;
                  t4 && i2.push([e3, c3, t4]);
                }
                break;
              }
              case "line-suffix":
                a2.push([e3, c3, l2.contents]);
                break;
              case "line-suffix-boundary":
                a2.length > 0 && i2.push([e3, c3, { type: "line", hard: true }]);
                break;
              case "line":
                switch (c3) {
                  case 2:
                    if (!l2.hard) {
                      l2.soft || (u2.push(" "), o2 += 1);
                      break;
                    }
                    s2 = true;
                  case 1:
                    if (a2.length > 0) {
                      i2.push([e3, c3, l2], ...a2.reverse()), a2 = [];
                      break;
                    }
                    l2.literal ? e3.root ? (u2.push(r2, e3.root.value), o2 = e3.root.length) : (u2.push(r2), o2 = 0) : (o2 -= On(u2), u2.push(r2 + e3.value), o2 = e3.length);
                }
                break;
              case "label":
                i2.push([e3, c3, l2.contents]);
            }
          0 === i2.length && a2.length > 0 && (i2.push(...a2.reverse()), a2 = []);
        }
        const c2 = u2.indexOf(xn.placeholder);
        if (-1 !== c2) {
          const e3 = u2.indexOf(xn.placeholder, c2 + 1), t3 = u2.slice(0, c2).join(""), n3 = u2.slice(c2 + 1, e3).join("");
          return { formatted: t3 + n3 + u2.slice(e3 + 1).join(""), cursorNodeStart: t3.length, cursorNodeText: n3 };
        }
        return { formatted: u2.join("") };
      } };
      const { isConcat: Ln, getDocParts: _n } = bn;
      function Mn(e2) {
        if (!e2)
          return "";
        if (Ln(e2)) {
          const t2 = [];
          for (const n2 of _n(e2))
            if (Ln(n2))
              t2.push(...Mn(n2).parts);
            else {
              const e3 = Mn(n2);
              "" !== e3 && t2.push(e3);
            }
          return { type: "concat", parts: t2 };
        }
        return "if-break" === e2.type ? Object.assign({}, e2, { breakContents: Mn(e2.breakContents), flatContents: Mn(e2.flatContents) }) : "group" === e2.type ? Object.assign({}, e2, { contents: Mn(e2.contents), expandedStates: e2.expandedStates && e2.expandedStates.map(Mn) }) : "fill" === e2.type ? { type: "fill", parts: e2.parts.map(Mn) } : e2.contents ? Object.assign({}, e2, { contents: Mn(e2.contents) }) : e2;
      }
      var Rn = { builders: Ce, printer: jn, utils: bn, debug: { printDocToDebug: function(e2) {
        const t2 = /* @__PURE__ */ Object.create(null), n2 = /* @__PURE__ */ new Set();
        return function e3(t3, n3, o2) {
          if ("string" == typeof t3)
            return JSON.stringify(t3);
          if (Ln(t3)) {
            const n4 = _n(t3).map(e3).filter(Boolean);
            return 1 === n4.length ? n4[0] : "[".concat(n4.join(", "), "]");
          }
          if ("line" === t3.type) {
            const e4 = Array.isArray(o2) && o2[n3 + 1] && "break-parent" === o2[n3 + 1].type;
            return t3.literal ? e4 ? "literalline" : "literallineWithoutBreakParent" : t3.hard ? e4 ? "hardline" : "hardlineWithoutBreakParent" : t3.soft ? "softline" : "line";
          }
          if ("break-parent" === t3.type) {
            return Array.isArray(o2) && o2[n3 - 1] && "line" === o2[n3 - 1].type && o2[n3 - 1].hard ? void 0 : "breakParent";
          }
          if ("trim" === t3.type)
            return "trim";
          if ("indent" === t3.type)
            return "indent(" + e3(t3.contents) + ")";
          if ("align" === t3.type)
            return t3.n === Number.NEGATIVE_INFINITY ? "dedentToRoot(" + e3(t3.contents) + ")" : t3.n < 0 ? "dedent(" + e3(t3.contents) + ")" : "root" === t3.n.type ? "markAsRoot(" + e3(t3.contents) + ")" : "align(" + JSON.stringify(t3.n) + ", " + e3(t3.contents) + ")";
          if ("if-break" === t3.type)
            return "ifBreak(" + e3(t3.breakContents) + (t3.flatContents ? ", " + e3(t3.flatContents) : "") + (t3.groupId ? (t3.flatContents ? "" : ', ""') + ", { groupId: ".concat(r2(t3.groupId), " }") : "") + ")";
          if ("indent-if-break" === t3.type) {
            const n4 = [];
            t3.negate && n4.push("negate: true"), t3.groupId && n4.push("groupId: ".concat(r2(t3.groupId)));
            const o3 = n4.length > 0 ? ", { ".concat(n4.join(", "), " }") : "";
            return "indentIfBreak(".concat(e3(t3.contents)).concat(o3, ")");
          }
          if ("group" === t3.type) {
            const n4 = [];
            t3.break && "propagated" !== t3.break && n4.push("shouldBreak: true"), t3.id && n4.push("id: ".concat(r2(t3.id)));
            const o3 = n4.length > 0 ? ", { ".concat(n4.join(", "), " }") : "";
            return t3.expandedStates ? "conditionalGroup([".concat(t3.expandedStates.map((t4) => e3(t4)).join(","), "]").concat(o3, ")") : "group(".concat(e3(t3.contents)).concat(o3, ")");
          }
          if ("fill" === t3.type)
            return "fill([".concat(t3.parts.map((t4) => e3(t4)).join(", "), "])");
          if ("line-suffix" === t3.type)
            return "lineSuffix(" + e3(t3.contents) + ")";
          if ("line-suffix-boundary" === t3.type)
            return "lineSuffixBoundary";
          if ("label" === t3.type)
            return "label(".concat(JSON.stringify(t3.label), ", ").concat(e3(t3.contents), ")");
          throw new Error("Unknown doc type " + t3.type);
        }(Mn(e2));
        function r2(e3) {
          if ("symbol" != typeof e3)
            return JSON.stringify(String(e3));
          if (e3 in t2)
            return t2[e3];
          const r3 = String(e3).slice(7, -1) || "symbol";
          for (let o2 = 0; ; o2++) {
            const i2 = r3 + (o2 > 0 ? " #".concat(o2) : "");
            if (!n2.has(i2))
              return n2.add(i2), t2[e3] = "Symbol.for(".concat(JSON.stringify(i2), ")");
          }
        }
      } } }, Vn = Object.freeze({ __proto__: null, default: {} });
      function $n(e2, t2) {
        for (var n2 = 0, r2 = e2.length - 1; r2 >= 0; r2--) {
          var o2 = e2[r2];
          "." === o2 ? e2.splice(r2, 1) : ".." === o2 ? (e2.splice(r2, 1), n2++) : n2 && (e2.splice(r2, 1), n2--);
        }
        if (t2)
          for (; n2--; n2)
            e2.unshift("..");
        return e2;
      }
      var qn = /^(\/?|)([\s\S]*?)((?:\.{1,2}|[^\/]+?|)(\.[^.\/]*|))(?:[\/]*)$/, Wn = function(e2) {
        return qn.exec(e2).slice(1);
      };
      function Un() {
        for (var e2 = "", t2 = false, n2 = arguments.length - 1; n2 >= -1 && !t2; n2--) {
          var r2 = n2 >= 0 ? arguments[n2] : "/";
          if ("string" != typeof r2)
            throw new TypeError("Arguments to path.resolve must be strings");
          r2 && (e2 = r2 + "/" + e2, t2 = "/" === r2.charAt(0));
        }
        return (t2 ? "/" : "") + (e2 = $n(Zn(e2.split("/"), function(e3) {
          return !!e3;
        }), !t2).join("/")) || ".";
      }
      function zn(e2) {
        var t2 = Hn(e2), n2 = "/" === er(e2, -1);
        return (e2 = $n(Zn(e2.split("/"), function(e3) {
          return !!e3;
        }), !t2).join("/")) || t2 || (e2 = "."), e2 && n2 && (e2 += "/"), (t2 ? "/" : "") + e2;
      }
      function Hn(e2) {
        return "/" === e2.charAt(0);
      }
      function Gn() {
        var e2 = Array.prototype.slice.call(arguments, 0);
        return zn(Zn(e2, function(e3, t2) {
          if ("string" != typeof e3)
            throw new TypeError("Arguments to path.join must be strings");
          return e3;
        }).join("/"));
      }
      function Jn(e2, t2) {
        function n2(e3) {
          for (var t3 = 0; t3 < e3.length && "" === e3[t3]; t3++)
            ;
          for (var n3 = e3.length - 1; n3 >= 0 && "" === e3[n3]; n3--)
            ;
          return t3 > n3 ? [] : e3.slice(t3, n3 - t3 + 1);
        }
        e2 = Un(e2).substr(1), t2 = Un(t2).substr(1);
        for (var r2 = n2(e2.split("/")), o2 = n2(t2.split("/")), i2 = Math.min(r2.length, o2.length), u2 = i2, s2 = 0; s2 < i2; s2++)
          if (r2[s2] !== o2[s2]) {
            u2 = s2;
            break;
          }
        var a2 = [];
        for (s2 = u2; s2 < r2.length; s2++)
          a2.push("..");
        return (a2 = a2.concat(o2.slice(u2))).join("/");
      }
      function Xn(e2) {
        var t2 = Wn(e2), n2 = t2[0], r2 = t2[1];
        return n2 || r2 ? (r2 && (r2 = r2.substr(0, r2.length - 1)), n2 + r2) : ".";
      }
      function Yn(e2, t2) {
        var n2 = Wn(e2)[2];
        return t2 && n2.substr(-1 * t2.length) === t2 && (n2 = n2.substr(0, n2.length - t2.length)), n2;
      }
      function Kn(e2) {
        return Wn(e2)[3];
      }
      var Qn = { extname: Kn, basename: Yn, dirname: Xn, sep: "/", delimiter: ":", relative: Jn, join: Gn, isAbsolute: Hn, normalize: zn, resolve: Un };
      function Zn(e2, t2) {
        if (e2.filter)
          return e2.filter(t2);
        for (var n2 = [], r2 = 0; r2 < e2.length; r2++)
          t2(e2[r2], r2, e2) && n2.push(e2[r2]);
        return n2;
      }
      var er = "b" === "ab".substr(-1) ? function(e2, t2, n2) {
        return e2.substr(t2, n2);
      } : function(e2, t2, n2) {
        return t2 < 0 && (t2 = e2.length + t2), e2.substr(t2, n2);
      }, tr = Object.freeze({ __proto__: null, resolve: Un, normalize: zn, isAbsolute: Hn, join: Gn, relative: Jn, sep: "/", delimiter: ":", dirname: Xn, basename: Yn, extname: Kn, default: Qn }), nr = [], rr = [], or = "undefined" != typeof Uint8Array ? Uint8Array : Array, ir = false;
      function ur() {
        ir = true;
        for (var e2 = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/", t2 = 0, n2 = e2.length; t2 < n2; ++t2)
          nr[t2] = e2[t2], rr[e2.charCodeAt(t2)] = t2;
        rr["-".charCodeAt(0)] = 62, rr["_".charCodeAt(0)] = 63;
      }
      function sr(e2, t2, n2) {
        for (var r2, o2, i2 = [], u2 = t2; u2 < n2; u2 += 3)
          r2 = (e2[u2] << 16) + (e2[u2 + 1] << 8) + e2[u2 + 2], i2.push(nr[(o2 = r2) >> 18 & 63] + nr[o2 >> 12 & 63] + nr[o2 >> 6 & 63] + nr[63 & o2]);
        return i2.join("");
      }
      function ar(e2) {
        var t2;
        ir || ur();
        for (var n2 = e2.length, r2 = n2 % 3, o2 = "", i2 = [], u2 = 16383, s2 = 0, a2 = n2 - r2; s2 < a2; s2 += u2)
          i2.push(sr(e2, s2, s2 + u2 > a2 ? a2 : s2 + u2));
        return 1 === r2 ? (t2 = e2[n2 - 1], o2 += nr[t2 >> 2], o2 += nr[t2 << 4 & 63], o2 += "==") : 2 === r2 && (t2 = (e2[n2 - 2] << 8) + e2[n2 - 1], o2 += nr[t2 >> 10], o2 += nr[t2 >> 4 & 63], o2 += nr[t2 << 2 & 63], o2 += "="), i2.push(o2), i2.join("");
      }
      function cr(e2, t2, n2, r2, o2) {
        var i2, u2, s2 = 8 * o2 - r2 - 1, a2 = (1 << s2) - 1, c2 = a2 >> 1, l2 = -7, p2 = n2 ? o2 - 1 : 0, f2 = n2 ? -1 : 1, d2 = e2[t2 + p2];
        for (p2 += f2, i2 = d2 & (1 << -l2) - 1, d2 >>= -l2, l2 += s2; l2 > 0; i2 = 256 * i2 + e2[t2 + p2], p2 += f2, l2 -= 8)
          ;
        for (u2 = i2 & (1 << -l2) - 1, i2 >>= -l2, l2 += r2; l2 > 0; u2 = 256 * u2 + e2[t2 + p2], p2 += f2, l2 -= 8)
          ;
        if (0 === i2)
          i2 = 1 - c2;
        else {
          if (i2 === a2)
            return u2 ? NaN : 1 / 0 * (d2 ? -1 : 1);
          u2 += Math.pow(2, r2), i2 -= c2;
        }
        return (d2 ? -1 : 1) * u2 * Math.pow(2, i2 - r2);
      }
      function lr(e2, t2, n2, r2, o2, i2) {
        var u2, s2, a2, c2 = 8 * i2 - o2 - 1, l2 = (1 << c2) - 1, p2 = l2 >> 1, f2 = 23 === o2 ? Math.pow(2, -24) - Math.pow(2, -77) : 0, d2 = r2 ? 0 : i2 - 1, h2 = r2 ? 1 : -1, m2 = t2 < 0 || 0 === t2 && 1 / t2 < 0 ? 1 : 0;
        for (t2 = Math.abs(t2), isNaN(t2) || t2 === 1 / 0 ? (s2 = isNaN(t2) ? 1 : 0, u2 = l2) : (u2 = Math.floor(Math.log(t2) / Math.LN2), t2 * (a2 = Math.pow(2, -u2)) < 1 && (u2--, a2 *= 2), (t2 += u2 + p2 >= 1 ? f2 / a2 : f2 * Math.pow(2, 1 - p2)) * a2 >= 2 && (u2++, a2 /= 2), u2 + p2 >= l2 ? (s2 = 0, u2 = l2) : u2 + p2 >= 1 ? (s2 = (t2 * a2 - 1) * Math.pow(2, o2), u2 += p2) : (s2 = t2 * Math.pow(2, p2 - 1) * Math.pow(2, o2), u2 = 0)); o2 >= 8; e2[n2 + d2] = 255 & s2, d2 += h2, s2 /= 256, o2 -= 8)
          ;
        for (u2 = u2 << o2 | s2, c2 += o2; c2 > 0; e2[n2 + d2] = 255 & u2, d2 += h2, u2 /= 256, c2 -= 8)
          ;
        e2[n2 + d2 - h2] |= 128 * m2;
      }
      var pr = {}.toString, fr = Array.isArray || function(e2) {
        return "[object Array]" == pr.call(e2);
      };
      function dr() {
        return mr.TYPED_ARRAY_SUPPORT ? 2147483647 : 1073741823;
      }
      function hr(e2, t2) {
        if (dr() < t2)
          throw new RangeError("Invalid typed array length");
        return mr.TYPED_ARRAY_SUPPORT ? (e2 = new Uint8Array(t2)).__proto__ = mr.prototype : (null === e2 && (e2 = new mr(t2)), e2.length = t2), e2;
      }
      function mr(e2, t2, n2) {
        if (!(mr.TYPED_ARRAY_SUPPORT || this instanceof mr))
          return new mr(e2, t2, n2);
        if ("number" == typeof e2) {
          if ("string" == typeof t2)
            throw new Error("If encoding is specified then the first argument must be a string");
          return Dr(this, e2);
        }
        return gr(this, e2, t2, n2);
      }
      function gr(e2, t2, n2, r2) {
        if ("number" == typeof t2)
          throw new TypeError('"value" argument must not be a number');
        return "undefined" != typeof ArrayBuffer && t2 instanceof ArrayBuffer ? function(e3, t3, n3, r3) {
          if (t3.byteLength, n3 < 0 || t3.byteLength < n3)
            throw new RangeError("'offset' is out of bounds");
          if (t3.byteLength < n3 + (r3 || 0))
            throw new RangeError("'length' is out of bounds");
          t3 = void 0 === n3 && void 0 === r3 ? new Uint8Array(t3) : void 0 === r3 ? new Uint8Array(t3, n3) : new Uint8Array(t3, n3, r3);
          mr.TYPED_ARRAY_SUPPORT ? (e3 = t3).__proto__ = mr.prototype : e3 = Er(e3, t3);
          return e3;
        }(e2, t2, n2, r2) : "string" == typeof t2 ? function(e3, t3, n3) {
          "string" == typeof n3 && "" !== n3 || (n3 = "utf8");
          if (!mr.isEncoding(n3))
            throw new TypeError('"encoding" must be a valid string encoding');
          var r3 = 0 | vr(t3, n3), o2 = (e3 = hr(e3, r3)).write(t3, n3);
          o2 !== r3 && (e3 = e3.slice(0, o2));
          return e3;
        }(e2, t2, n2) : function(e3, t3) {
          if (Cr(t3)) {
            var n3 = 0 | br(t3.length);
            return 0 === (e3 = hr(e3, n3)).length || t3.copy(e3, 0, 0, n3), e3;
          }
          if (t3) {
            if ("undefined" != typeof ArrayBuffer && t3.buffer instanceof ArrayBuffer || "length" in t3)
              return "number" != typeof t3.length || (r3 = t3.length) != r3 ? hr(e3, 0) : Er(e3, t3);
            if ("Buffer" === t3.type && fr(t3.data))
              return Er(e3, t3.data);
          }
          var r3;
          throw new TypeError("First argument must be a string, Buffer, ArrayBuffer, Array, or array-like object.");
        }(e2, t2);
      }
      function yr(e2) {
        if ("number" != typeof e2)
          throw new TypeError('"size" argument must be a number');
        if (e2 < 0)
          throw new RangeError('"size" argument must not be negative');
      }
      function Dr(e2, t2) {
        if (yr(t2), e2 = hr(e2, t2 < 0 ? 0 : 0 | br(t2)), !mr.TYPED_ARRAY_SUPPORT)
          for (var n2 = 0; n2 < t2; ++n2)
            e2[n2] = 0;
        return e2;
      }
      function Er(e2, t2) {
        var n2 = t2.length < 0 ? 0 : 0 | br(t2.length);
        e2 = hr(e2, n2);
        for (var r2 = 0; r2 < n2; r2 += 1)
          e2[r2] = 255 & t2[r2];
        return e2;
      }
      function br(e2) {
        if (e2 >= dr())
          throw new RangeError("Attempt to allocate Buffer larger than maximum size: 0x" + dr().toString(16) + " bytes");
        return 0 | e2;
      }
      function Cr(e2) {
        return !(null == e2 || !e2._isBuffer);
      }
      function vr(e2, t2) {
        if (Cr(e2))
          return e2.length;
        if ("undefined" != typeof ArrayBuffer && "function" == typeof ArrayBuffer.isView && (ArrayBuffer.isView(e2) || e2 instanceof ArrayBuffer))
          return e2.byteLength;
        "string" != typeof e2 && (e2 = "" + e2);
        var n2 = e2.length;
        if (0 === n2)
          return 0;
        for (var r2 = false; ; )
          switch (t2) {
            case "ascii":
            case "latin1":
            case "binary":
              return n2;
            case "utf8":
            case "utf-8":
            case void 0:
              return Xr(e2).length;
            case "ucs2":
            case "ucs-2":
            case "utf16le":
            case "utf-16le":
              return 2 * n2;
            case "hex":
              return n2 >>> 1;
            case "base64":
              return Yr(e2).length;
            default:
              if (r2)
                return Xr(e2).length;
              t2 = ("" + t2).toLowerCase(), r2 = true;
          }
      }
      function Ar(e2, t2, n2) {
        var r2 = false;
        if ((void 0 === t2 || t2 < 0) && (t2 = 0), t2 > this.length)
          return "";
        if ((void 0 === n2 || n2 > this.length) && (n2 = this.length), n2 <= 0)
          return "";
        if ((n2 >>>= 0) <= (t2 >>>= 0))
          return "";
        for (e2 || (e2 = "utf8"); ; )
          switch (e2) {
            case "hex":
              return Mr(this, t2, n2);
            case "utf8":
            case "utf-8":
              return Ir(this, t2, n2);
            case "ascii":
              return Lr(this, t2, n2);
            case "latin1":
            case "binary":
              return _r(this, t2, n2);
            case "base64":
              return Or(this, t2, n2);
            case "ucs2":
            case "ucs-2":
            case "utf16le":
            case "utf-16le":
              return Rr(this, t2, n2);
            default:
              if (r2)
                throw new TypeError("Unknown encoding: " + e2);
              e2 = (e2 + "").toLowerCase(), r2 = true;
          }
      }
      function Fr(e2, t2, n2) {
        var r2 = e2[t2];
        e2[t2] = e2[n2], e2[n2] = r2;
      }
      function xr(e2, t2, n2, r2, o2) {
        if (0 === e2.length)
          return -1;
        if ("string" == typeof n2 ? (r2 = n2, n2 = 0) : n2 > 2147483647 ? n2 = 2147483647 : n2 < -2147483648 && (n2 = -2147483648), n2 = +n2, isNaN(n2) && (n2 = o2 ? 0 : e2.length - 1), n2 < 0 && (n2 = e2.length + n2), n2 >= e2.length) {
          if (o2)
            return -1;
          n2 = e2.length - 1;
        } else if (n2 < 0) {
          if (!o2)
            return -1;
          n2 = 0;
        }
        if ("string" == typeof t2 && (t2 = mr.from(t2, r2)), Cr(t2))
          return 0 === t2.length ? -1 : Sr(e2, t2, n2, r2, o2);
        if ("number" == typeof t2)
          return t2 &= 255, mr.TYPED_ARRAY_SUPPORT && "function" == typeof Uint8Array.prototype.indexOf ? o2 ? Uint8Array.prototype.indexOf.call(e2, t2, n2) : Uint8Array.prototype.lastIndexOf.call(e2, t2, n2) : Sr(e2, [t2], n2, r2, o2);
        throw new TypeError("val must be string, number or Buffer");
      }
      function Sr(e2, t2, n2, r2, o2) {
        var i2, u2 = 1, s2 = e2.length, a2 = t2.length;
        if (void 0 !== r2 && ("ucs2" === (r2 = String(r2).toLowerCase()) || "ucs-2" === r2 || "utf16le" === r2 || "utf-16le" === r2)) {
          if (e2.length < 2 || t2.length < 2)
            return -1;
          u2 = 2, s2 /= 2, a2 /= 2, n2 /= 2;
        }
        function c2(e3, t3) {
          return 1 === u2 ? e3[t3] : e3.readUInt16BE(t3 * u2);
        }
        if (o2) {
          var l2 = -1;
          for (i2 = n2; i2 < s2; i2++)
            if (c2(e2, i2) === c2(t2, -1 === l2 ? 0 : i2 - l2)) {
              if (-1 === l2 && (l2 = i2), i2 - l2 + 1 === a2)
                return l2 * u2;
            } else
              -1 !== l2 && (i2 -= i2 - l2), l2 = -1;
        } else
          for (n2 + a2 > s2 && (n2 = s2 - a2), i2 = n2; i2 >= 0; i2--) {
            for (var p2 = true, f2 = 0; f2 < a2; f2++)
              if (c2(e2, i2 + f2) !== c2(t2, f2)) {
                p2 = false;
                break;
              }
            if (p2)
              return i2;
          }
        return -1;
      }
      function wr(e2, t2, n2, r2) {
        n2 = Number(n2) || 0;
        var o2 = e2.length - n2;
        r2 ? (r2 = Number(r2)) > o2 && (r2 = o2) : r2 = o2;
        var i2 = t2.length;
        if (i2 % 2 != 0)
          throw new TypeError("Invalid hex string");
        r2 > i2 / 2 && (r2 = i2 / 2);
        for (var u2 = 0; u2 < r2; ++u2) {
          var s2 = parseInt(t2.substr(2 * u2, 2), 16);
          if (isNaN(s2))
            return u2;
          e2[n2 + u2] = s2;
        }
        return u2;
      }
      function Tr(e2, t2, n2, r2) {
        return Kr(Xr(t2, e2.length - n2), e2, n2, r2);
      }
      function Br(e2, t2, n2, r2) {
        return Kr(function(e3) {
          for (var t3 = [], n3 = 0; n3 < e3.length; ++n3)
            t3.push(255 & e3.charCodeAt(n3));
          return t3;
        }(t2), e2, n2, r2);
      }
      function kr(e2, t2, n2, r2) {
        return Br(e2, t2, n2, r2);
      }
      function Nr(e2, t2, n2, r2) {
        return Kr(Yr(t2), e2, n2, r2);
      }
      function Pr(e2, t2, n2, r2) {
        return Kr(function(e3, t3) {
          for (var n3, r3, o2, i2 = [], u2 = 0; u2 < e3.length && !((t3 -= 2) < 0); ++u2)
            r3 = (n3 = e3.charCodeAt(u2)) >> 8, o2 = n3 % 256, i2.push(o2), i2.push(r3);
          return i2;
        }(t2, e2.length - n2), e2, n2, r2);
      }
      function Or(e2, t2, n2) {
        return 0 === t2 && n2 === e2.length ? ar(e2) : ar(e2.slice(t2, n2));
      }
      function Ir(e2, t2, n2) {
        n2 = Math.min(e2.length, n2);
        for (var r2 = [], o2 = t2; o2 < n2; ) {
          var i2, u2, s2, a2, c2 = e2[o2], l2 = null, p2 = c2 > 239 ? 4 : c2 > 223 ? 3 : c2 > 191 ? 2 : 1;
          if (o2 + p2 <= n2)
            switch (p2) {
              case 1:
                c2 < 128 && (l2 = c2);
                break;
              case 2:
                128 == (192 & (i2 = e2[o2 + 1])) && (a2 = (31 & c2) << 6 | 63 & i2) > 127 && (l2 = a2);
                break;
              case 3:
                i2 = e2[o2 + 1], u2 = e2[o2 + 2], 128 == (192 & i2) && 128 == (192 & u2) && (a2 = (15 & c2) << 12 | (63 & i2) << 6 | 63 & u2) > 2047 && (a2 < 55296 || a2 > 57343) && (l2 = a2);
                break;
              case 4:
                i2 = e2[o2 + 1], u2 = e2[o2 + 2], s2 = e2[o2 + 3], 128 == (192 & i2) && 128 == (192 & u2) && 128 == (192 & s2) && (a2 = (15 & c2) << 18 | (63 & i2) << 12 | (63 & u2) << 6 | 63 & s2) > 65535 && a2 < 1114112 && (l2 = a2);
            }
          null === l2 ? (l2 = 65533, p2 = 1) : l2 > 65535 && (l2 -= 65536, r2.push(l2 >>> 10 & 1023 | 55296), l2 = 56320 | 1023 & l2), r2.push(l2), o2 += p2;
        }
        return function(e3) {
          var t3 = e3.length;
          if (t3 <= jr)
            return String.fromCharCode.apply(String, e3);
          var n3 = "", r3 = 0;
          for (; r3 < t3; )
            n3 += String.fromCharCode.apply(String, e3.slice(r3, r3 += jr));
          return n3;
        }(r2);
      }
      mr.TYPED_ARRAY_SUPPORT = void 0 === Pe.TYPED_ARRAY_SUPPORT || Pe.TYPED_ARRAY_SUPPORT, mr.poolSize = 8192, mr._augment = function(e2) {
        return e2.__proto__ = mr.prototype, e2;
      }, mr.from = function(e2, t2, n2) {
        return gr(null, e2, t2, n2);
      }, mr.TYPED_ARRAY_SUPPORT && (mr.prototype.__proto__ = Uint8Array.prototype, mr.__proto__ = Uint8Array), mr.alloc = function(e2, t2, n2) {
        return function(e3, t3, n3, r2) {
          return yr(t3), t3 <= 0 ? hr(e3, t3) : void 0 !== n3 ? "string" == typeof r2 ? hr(e3, t3).fill(n3, r2) : hr(e3, t3).fill(n3) : hr(e3, t3);
        }(null, e2, t2, n2);
      }, mr.allocUnsafe = function(e2) {
        return Dr(null, e2);
      }, mr.allocUnsafeSlow = function(e2) {
        return Dr(null, e2);
      }, mr.isBuffer = Qr, mr.compare = function(e2, t2) {
        if (!Cr(e2) || !Cr(t2))
          throw new TypeError("Arguments must be Buffers");
        if (e2 === t2)
          return 0;
        for (var n2 = e2.length, r2 = t2.length, o2 = 0, i2 = Math.min(n2, r2); o2 < i2; ++o2)
          if (e2[o2] !== t2[o2]) {
            n2 = e2[o2], r2 = t2[o2];
            break;
          }
        return n2 < r2 ? -1 : r2 < n2 ? 1 : 0;
      }, mr.isEncoding = function(e2) {
        switch (String(e2).toLowerCase()) {
          case "hex":
          case "utf8":
          case "utf-8":
          case "ascii":
          case "latin1":
          case "binary":
          case "base64":
          case "ucs2":
          case "ucs-2":
          case "utf16le":
          case "utf-16le":
            return true;
          default:
            return false;
        }
      }, mr.concat = function(e2, t2) {
        if (!fr(e2))
          throw new TypeError('"list" argument must be an Array of Buffers');
        if (0 === e2.length)
          return mr.alloc(0);
        var n2;
        if (void 0 === t2)
          for (t2 = 0, n2 = 0; n2 < e2.length; ++n2)
            t2 += e2[n2].length;
        var r2 = mr.allocUnsafe(t2), o2 = 0;
        for (n2 = 0; n2 < e2.length; ++n2) {
          var i2 = e2[n2];
          if (!Cr(i2))
            throw new TypeError('"list" argument must be an Array of Buffers');
          i2.copy(r2, o2), o2 += i2.length;
        }
        return r2;
      }, mr.byteLength = vr, mr.prototype._isBuffer = true, mr.prototype.swap16 = function() {
        var e2 = this.length;
        if (e2 % 2 != 0)
          throw new RangeError("Buffer size must be a multiple of 16-bits");
        for (var t2 = 0; t2 < e2; t2 += 2)
          Fr(this, t2, t2 + 1);
        return this;
      }, mr.prototype.swap32 = function() {
        var e2 = this.length;
        if (e2 % 4 != 0)
          throw new RangeError("Buffer size must be a multiple of 32-bits");
        for (var t2 = 0; t2 < e2; t2 += 4)
          Fr(this, t2, t2 + 3), Fr(this, t2 + 1, t2 + 2);
        return this;
      }, mr.prototype.swap64 = function() {
        var e2 = this.length;
        if (e2 % 8 != 0)
          throw new RangeError("Buffer size must be a multiple of 64-bits");
        for (var t2 = 0; t2 < e2; t2 += 8)
          Fr(this, t2, t2 + 7), Fr(this, t2 + 1, t2 + 6), Fr(this, t2 + 2, t2 + 5), Fr(this, t2 + 3, t2 + 4);
        return this;
      }, mr.prototype.toString = function() {
        var e2 = 0 | this.length;
        return 0 === e2 ? "" : 0 === arguments.length ? Ir(this, 0, e2) : Ar.apply(this, arguments);
      }, mr.prototype.equals = function(e2) {
        if (!Cr(e2))
          throw new TypeError("Argument must be a Buffer");
        return this === e2 || 0 === mr.compare(this, e2);
      }, mr.prototype.inspect = function() {
        var e2 = "";
        return this.length > 0 && (e2 = this.toString("hex", 0, 50).match(/.{2}/g).join(" "), this.length > 50 && (e2 += " ... ")), "<Buffer " + e2 + ">";
      }, mr.prototype.compare = function(e2, t2, n2, r2, o2) {
        if (!Cr(e2))
          throw new TypeError("Argument must be a Buffer");
        if (void 0 === t2 && (t2 = 0), void 0 === n2 && (n2 = e2 ? e2.length : 0), void 0 === r2 && (r2 = 0), void 0 === o2 && (o2 = this.length), t2 < 0 || n2 > e2.length || r2 < 0 || o2 > this.length)
          throw new RangeError("out of range index");
        if (r2 >= o2 && t2 >= n2)
          return 0;
        if (r2 >= o2)
          return -1;
        if (t2 >= n2)
          return 1;
        if (this === e2)
          return 0;
        for (var i2 = (o2 >>>= 0) - (r2 >>>= 0), u2 = (n2 >>>= 0) - (t2 >>>= 0), s2 = Math.min(i2, u2), a2 = this.slice(r2, o2), c2 = e2.slice(t2, n2), l2 = 0; l2 < s2; ++l2)
          if (a2[l2] !== c2[l2]) {
            i2 = a2[l2], u2 = c2[l2];
            break;
          }
        return i2 < u2 ? -1 : u2 < i2 ? 1 : 0;
      }, mr.prototype.includes = function(e2, t2, n2) {
        return -1 !== this.indexOf(e2, t2, n2);
      }, mr.prototype.indexOf = function(e2, t2, n2) {
        return xr(this, e2, t2, n2, true);
      }, mr.prototype.lastIndexOf = function(e2, t2, n2) {
        return xr(this, e2, t2, n2, false);
      }, mr.prototype.write = function(e2, t2, n2, r2) {
        if (void 0 === t2)
          r2 = "utf8", n2 = this.length, t2 = 0;
        else if (void 0 === n2 && "string" == typeof t2)
          r2 = t2, n2 = this.length, t2 = 0;
        else {
          if (!isFinite(t2))
            throw new Error("Buffer.write(string, encoding, offset[, length]) is no longer supported");
          t2 |= 0, isFinite(n2) ? (n2 |= 0, void 0 === r2 && (r2 = "utf8")) : (r2 = n2, n2 = void 0);
        }
        var o2 = this.length - t2;
        if ((void 0 === n2 || n2 > o2) && (n2 = o2), e2.length > 0 && (n2 < 0 || t2 < 0) || t2 > this.length)
          throw new RangeError("Attempt to write outside buffer bounds");
        r2 || (r2 = "utf8");
        for (var i2 = false; ; )
          switch (r2) {
            case "hex":
              return wr(this, e2, t2, n2);
            case "utf8":
            case "utf-8":
              return Tr(this, e2, t2, n2);
            case "ascii":
              return Br(this, e2, t2, n2);
            case "latin1":
            case "binary":
              return kr(this, e2, t2, n2);
            case "base64":
              return Nr(this, e2, t2, n2);
            case "ucs2":
            case "ucs-2":
            case "utf16le":
            case "utf-16le":
              return Pr(this, e2, t2, n2);
            default:
              if (i2)
                throw new TypeError("Unknown encoding: " + r2);
              r2 = ("" + r2).toLowerCase(), i2 = true;
          }
      }, mr.prototype.toJSON = function() {
        return { type: "Buffer", data: Array.prototype.slice.call(this._arr || this, 0) };
      };
      var jr = 4096;
      function Lr(e2, t2, n2) {
        var r2 = "";
        n2 = Math.min(e2.length, n2);
        for (var o2 = t2; o2 < n2; ++o2)
          r2 += String.fromCharCode(127 & e2[o2]);
        return r2;
      }
      function _r(e2, t2, n2) {
        var r2 = "";
        n2 = Math.min(e2.length, n2);
        for (var o2 = t2; o2 < n2; ++o2)
          r2 += String.fromCharCode(e2[o2]);
        return r2;
      }
      function Mr(e2, t2, n2) {
        var r2 = e2.length;
        (!t2 || t2 < 0) && (t2 = 0), (!n2 || n2 < 0 || n2 > r2) && (n2 = r2);
        for (var o2 = "", i2 = t2; i2 < n2; ++i2)
          o2 += Jr(e2[i2]);
        return o2;
      }
      function Rr(e2, t2, n2) {
        for (var r2 = e2.slice(t2, n2), o2 = "", i2 = 0; i2 < r2.length; i2 += 2)
          o2 += String.fromCharCode(r2[i2] + 256 * r2[i2 + 1]);
        return o2;
      }
      function Vr(e2, t2, n2) {
        if (e2 % 1 != 0 || e2 < 0)
          throw new RangeError("offset is not uint");
        if (e2 + t2 > n2)
          throw new RangeError("Trying to access beyond buffer length");
      }
      function $r(e2, t2, n2, r2, o2, i2) {
        if (!Cr(e2))
          throw new TypeError('"buffer" argument must be a Buffer instance');
        if (t2 > o2 || t2 < i2)
          throw new RangeError('"value" argument is out of bounds');
        if (n2 + r2 > e2.length)
          throw new RangeError("Index out of range");
      }
      function qr(e2, t2, n2, r2) {
        t2 < 0 && (t2 = 65535 + t2 + 1);
        for (var o2 = 0, i2 = Math.min(e2.length - n2, 2); o2 < i2; ++o2)
          e2[n2 + o2] = (t2 & 255 << 8 * (r2 ? o2 : 1 - o2)) >>> 8 * (r2 ? o2 : 1 - o2);
      }
      function Wr(e2, t2, n2, r2) {
        t2 < 0 && (t2 = 4294967295 + t2 + 1);
        for (var o2 = 0, i2 = Math.min(e2.length - n2, 4); o2 < i2; ++o2)
          e2[n2 + o2] = t2 >>> 8 * (r2 ? o2 : 3 - o2) & 255;
      }
      function Ur(e2, t2, n2, r2, o2, i2) {
        if (n2 + r2 > e2.length)
          throw new RangeError("Index out of range");
        if (n2 < 0)
          throw new RangeError("Index out of range");
      }
      function zr(e2, t2, n2, r2, o2) {
        return o2 || Ur(e2, 0, n2, 4), lr(e2, t2, n2, r2, 23, 4), n2 + 4;
      }
      function Hr(e2, t2, n2, r2, o2) {
        return o2 || Ur(e2, 0, n2, 8), lr(e2, t2, n2, r2, 52, 8), n2 + 8;
      }
      mr.prototype.slice = function(e2, t2) {
        var n2, r2 = this.length;
        if ((e2 = ~~e2) < 0 ? (e2 += r2) < 0 && (e2 = 0) : e2 > r2 && (e2 = r2), (t2 = void 0 === t2 ? r2 : ~~t2) < 0 ? (t2 += r2) < 0 && (t2 = 0) : t2 > r2 && (t2 = r2), t2 < e2 && (t2 = e2), mr.TYPED_ARRAY_SUPPORT)
          (n2 = this.subarray(e2, t2)).__proto__ = mr.prototype;
        else {
          var o2 = t2 - e2;
          n2 = new mr(o2, void 0);
          for (var i2 = 0; i2 < o2; ++i2)
            n2[i2] = this[i2 + e2];
        }
        return n2;
      }, mr.prototype.readUIntLE = function(e2, t2, n2) {
        e2 |= 0, t2 |= 0, n2 || Vr(e2, t2, this.length);
        for (var r2 = this[e2], o2 = 1, i2 = 0; ++i2 < t2 && (o2 *= 256); )
          r2 += this[e2 + i2] * o2;
        return r2;
      }, mr.prototype.readUIntBE = function(e2, t2, n2) {
        e2 |= 0, t2 |= 0, n2 || Vr(e2, t2, this.length);
        for (var r2 = this[e2 + --t2], o2 = 1; t2 > 0 && (o2 *= 256); )
          r2 += this[e2 + --t2] * o2;
        return r2;
      }, mr.prototype.readUInt8 = function(e2, t2) {
        return t2 || Vr(e2, 1, this.length), this[e2];
      }, mr.prototype.readUInt16LE = function(e2, t2) {
        return t2 || Vr(e2, 2, this.length), this[e2] | this[e2 + 1] << 8;
      }, mr.prototype.readUInt16BE = function(e2, t2) {
        return t2 || Vr(e2, 2, this.length), this[e2] << 8 | this[e2 + 1];
      }, mr.prototype.readUInt32LE = function(e2, t2) {
        return t2 || Vr(e2, 4, this.length), (this[e2] | this[e2 + 1] << 8 | this[e2 + 2] << 16) + 16777216 * this[e2 + 3];
      }, mr.prototype.readUInt32BE = function(e2, t2) {
        return t2 || Vr(e2, 4, this.length), 16777216 * this[e2] + (this[e2 + 1] << 16 | this[e2 + 2] << 8 | this[e2 + 3]);
      }, mr.prototype.readIntLE = function(e2, t2, n2) {
        e2 |= 0, t2 |= 0, n2 || Vr(e2, t2, this.length);
        for (var r2 = this[e2], o2 = 1, i2 = 0; ++i2 < t2 && (o2 *= 256); )
          r2 += this[e2 + i2] * o2;
        return r2 >= (o2 *= 128) && (r2 -= Math.pow(2, 8 * t2)), r2;
      }, mr.prototype.readIntBE = function(e2, t2, n2) {
        e2 |= 0, t2 |= 0, n2 || Vr(e2, t2, this.length);
        for (var r2 = t2, o2 = 1, i2 = this[e2 + --r2]; r2 > 0 && (o2 *= 256); )
          i2 += this[e2 + --r2] * o2;
        return i2 >= (o2 *= 128) && (i2 -= Math.pow(2, 8 * t2)), i2;
      }, mr.prototype.readInt8 = function(e2, t2) {
        return t2 || Vr(e2, 1, this.length), 128 & this[e2] ? -1 * (255 - this[e2] + 1) : this[e2];
      }, mr.prototype.readInt16LE = function(e2, t2) {
        t2 || Vr(e2, 2, this.length);
        var n2 = this[e2] | this[e2 + 1] << 8;
        return 32768 & n2 ? 4294901760 | n2 : n2;
      }, mr.prototype.readInt16BE = function(e2, t2) {
        t2 || Vr(e2, 2, this.length);
        var n2 = this[e2 + 1] | this[e2] << 8;
        return 32768 & n2 ? 4294901760 | n2 : n2;
      }, mr.prototype.readInt32LE = function(e2, t2) {
        return t2 || Vr(e2, 4, this.length), this[e2] | this[e2 + 1] << 8 | this[e2 + 2] << 16 | this[e2 + 3] << 24;
      }, mr.prototype.readInt32BE = function(e2, t2) {
        return t2 || Vr(e2, 4, this.length), this[e2] << 24 | this[e2 + 1] << 16 | this[e2 + 2] << 8 | this[e2 + 3];
      }, mr.prototype.readFloatLE = function(e2, t2) {
        return t2 || Vr(e2, 4, this.length), cr(this, e2, true, 23, 4);
      }, mr.prototype.readFloatBE = function(e2, t2) {
        return t2 || Vr(e2, 4, this.length), cr(this, e2, false, 23, 4);
      }, mr.prototype.readDoubleLE = function(e2, t2) {
        return t2 || Vr(e2, 8, this.length), cr(this, e2, true, 52, 8);
      }, mr.prototype.readDoubleBE = function(e2, t2) {
        return t2 || Vr(e2, 8, this.length), cr(this, e2, false, 52, 8);
      }, mr.prototype.writeUIntLE = function(e2, t2, n2, r2) {
        (e2 = +e2, t2 |= 0, n2 |= 0, r2) || $r(this, e2, t2, n2, Math.pow(2, 8 * n2) - 1, 0);
        var o2 = 1, i2 = 0;
        for (this[t2] = 255 & e2; ++i2 < n2 && (o2 *= 256); )
          this[t2 + i2] = e2 / o2 & 255;
        return t2 + n2;
      }, mr.prototype.writeUIntBE = function(e2, t2, n2, r2) {
        (e2 = +e2, t2 |= 0, n2 |= 0, r2) || $r(this, e2, t2, n2, Math.pow(2, 8 * n2) - 1, 0);
        var o2 = n2 - 1, i2 = 1;
        for (this[t2 + o2] = 255 & e2; --o2 >= 0 && (i2 *= 256); )
          this[t2 + o2] = e2 / i2 & 255;
        return t2 + n2;
      }, mr.prototype.writeUInt8 = function(e2, t2, n2) {
        return e2 = +e2, t2 |= 0, n2 || $r(this, e2, t2, 1, 255, 0), mr.TYPED_ARRAY_SUPPORT || (e2 = Math.floor(e2)), this[t2] = 255 & e2, t2 + 1;
      }, mr.prototype.writeUInt16LE = function(e2, t2, n2) {
        return e2 = +e2, t2 |= 0, n2 || $r(this, e2, t2, 2, 65535, 0), mr.TYPED_ARRAY_SUPPORT ? (this[t2] = 255 & e2, this[t2 + 1] = e2 >>> 8) : qr(this, e2, t2, true), t2 + 2;
      }, mr.prototype.writeUInt16BE = function(e2, t2, n2) {
        return e2 = +e2, t2 |= 0, n2 || $r(this, e2, t2, 2, 65535, 0), mr.TYPED_ARRAY_SUPPORT ? (this[t2] = e2 >>> 8, this[t2 + 1] = 255 & e2) : qr(this, e2, t2, false), t2 + 2;
      }, mr.prototype.writeUInt32LE = function(e2, t2, n2) {
        return e2 = +e2, t2 |= 0, n2 || $r(this, e2, t2, 4, 4294967295, 0), mr.TYPED_ARRAY_SUPPORT ? (this[t2 + 3] = e2 >>> 24, this[t2 + 2] = e2 >>> 16, this[t2 + 1] = e2 >>> 8, this[t2] = 255 & e2) : Wr(this, e2, t2, true), t2 + 4;
      }, mr.prototype.writeUInt32BE = function(e2, t2, n2) {
        return e2 = +e2, t2 |= 0, n2 || $r(this, e2, t2, 4, 4294967295, 0), mr.TYPED_ARRAY_SUPPORT ? (this[t2] = e2 >>> 24, this[t2 + 1] = e2 >>> 16, this[t2 + 2] = e2 >>> 8, this[t2 + 3] = 255 & e2) : Wr(this, e2, t2, false), t2 + 4;
      }, mr.prototype.writeIntLE = function(e2, t2, n2, r2) {
        if (e2 = +e2, t2 |= 0, !r2) {
          var o2 = Math.pow(2, 8 * n2 - 1);
          $r(this, e2, t2, n2, o2 - 1, -o2);
        }
        var i2 = 0, u2 = 1, s2 = 0;
        for (this[t2] = 255 & e2; ++i2 < n2 && (u2 *= 256); )
          e2 < 0 && 0 === s2 && 0 !== this[t2 + i2 - 1] && (s2 = 1), this[t2 + i2] = (e2 / u2 >> 0) - s2 & 255;
        return t2 + n2;
      }, mr.prototype.writeIntBE = function(e2, t2, n2, r2) {
        if (e2 = +e2, t2 |= 0, !r2) {
          var o2 = Math.pow(2, 8 * n2 - 1);
          $r(this, e2, t2, n2, o2 - 1, -o2);
        }
        var i2 = n2 - 1, u2 = 1, s2 = 0;
        for (this[t2 + i2] = 255 & e2; --i2 >= 0 && (u2 *= 256); )
          e2 < 0 && 0 === s2 && 0 !== this[t2 + i2 + 1] && (s2 = 1), this[t2 + i2] = (e2 / u2 >> 0) - s2 & 255;
        return t2 + n2;
      }, mr.prototype.writeInt8 = function(e2, t2, n2) {
        return e2 = +e2, t2 |= 0, n2 || $r(this, e2, t2, 1, 127, -128), mr.TYPED_ARRAY_SUPPORT || (e2 = Math.floor(e2)), e2 < 0 && (e2 = 255 + e2 + 1), this[t2] = 255 & e2, t2 + 1;
      }, mr.prototype.writeInt16LE = function(e2, t2, n2) {
        return e2 = +e2, t2 |= 0, n2 || $r(this, e2, t2, 2, 32767, -32768), mr.TYPED_ARRAY_SUPPORT ? (this[t2] = 255 & e2, this[t2 + 1] = e2 >>> 8) : qr(this, e2, t2, true), t2 + 2;
      }, mr.prototype.writeInt16BE = function(e2, t2, n2) {
        return e2 = +e2, t2 |= 0, n2 || $r(this, e2, t2, 2, 32767, -32768), mr.TYPED_ARRAY_SUPPORT ? (this[t2] = e2 >>> 8, this[t2 + 1] = 255 & e2) : qr(this, e2, t2, false), t2 + 2;
      }, mr.prototype.writeInt32LE = function(e2, t2, n2) {
        return e2 = +e2, t2 |= 0, n2 || $r(this, e2, t2, 4, 2147483647, -2147483648), mr.TYPED_ARRAY_SUPPORT ? (this[t2] = 255 & e2, this[t2 + 1] = e2 >>> 8, this[t2 + 2] = e2 >>> 16, this[t2 + 3] = e2 >>> 24) : Wr(this, e2, t2, true), t2 + 4;
      }, mr.prototype.writeInt32BE = function(e2, t2, n2) {
        return e2 = +e2, t2 |= 0, n2 || $r(this, e2, t2, 4, 2147483647, -2147483648), e2 < 0 && (e2 = 4294967295 + e2 + 1), mr.TYPED_ARRAY_SUPPORT ? (this[t2] = e2 >>> 24, this[t2 + 1] = e2 >>> 16, this[t2 + 2] = e2 >>> 8, this[t2 + 3] = 255 & e2) : Wr(this, e2, t2, false), t2 + 4;
      }, mr.prototype.writeFloatLE = function(e2, t2, n2) {
        return zr(this, e2, t2, true, n2);
      }, mr.prototype.writeFloatBE = function(e2, t2, n2) {
        return zr(this, e2, t2, false, n2);
      }, mr.prototype.writeDoubleLE = function(e2, t2, n2) {
        return Hr(this, e2, t2, true, n2);
      }, mr.prototype.writeDoubleBE = function(e2, t2, n2) {
        return Hr(this, e2, t2, false, n2);
      }, mr.prototype.copy = function(e2, t2, n2, r2) {
        if (n2 || (n2 = 0), r2 || 0 === r2 || (r2 = this.length), t2 >= e2.length && (t2 = e2.length), t2 || (t2 = 0), r2 > 0 && r2 < n2 && (r2 = n2), r2 === n2)
          return 0;
        if (0 === e2.length || 0 === this.length)
          return 0;
        if (t2 < 0)
          throw new RangeError("targetStart out of bounds");
        if (n2 < 0 || n2 >= this.length)
          throw new RangeError("sourceStart out of bounds");
        if (r2 < 0)
          throw new RangeError("sourceEnd out of bounds");
        r2 > this.length && (r2 = this.length), e2.length - t2 < r2 - n2 && (r2 = e2.length - t2 + n2);
        var o2, i2 = r2 - n2;
        if (this === e2 && n2 < t2 && t2 < r2)
          for (o2 = i2 - 1; o2 >= 0; --o2)
            e2[o2 + t2] = this[o2 + n2];
        else if (i2 < 1e3 || !mr.TYPED_ARRAY_SUPPORT)
          for (o2 = 0; o2 < i2; ++o2)
            e2[o2 + t2] = this[o2 + n2];
        else
          Uint8Array.prototype.set.call(e2, this.subarray(n2, n2 + i2), t2);
        return i2;
      }, mr.prototype.fill = function(e2, t2, n2, r2) {
        if ("string" == typeof e2) {
          if ("string" == typeof t2 ? (r2 = t2, t2 = 0, n2 = this.length) : "string" == typeof n2 && (r2 = n2, n2 = this.length), 1 === e2.length) {
            var o2 = e2.charCodeAt(0);
            o2 < 256 && (e2 = o2);
          }
          if (void 0 !== r2 && "string" != typeof r2)
            throw new TypeError("encoding must be a string");
          if ("string" == typeof r2 && !mr.isEncoding(r2))
            throw new TypeError("Unknown encoding: " + r2);
        } else
          "number" == typeof e2 && (e2 &= 255);
        if (t2 < 0 || this.length < t2 || this.length < n2)
          throw new RangeError("Out of range index");
        if (n2 <= t2)
          return this;
        var i2;
        if (t2 >>>= 0, n2 = void 0 === n2 ? this.length : n2 >>> 0, e2 || (e2 = 0), "number" == typeof e2)
          for (i2 = t2; i2 < n2; ++i2)
            this[i2] = e2;
        else {
          var u2 = Cr(e2) ? e2 : Xr(new mr(e2, r2).toString()), s2 = u2.length;
          for (i2 = 0; i2 < n2 - t2; ++i2)
            this[i2 + t2] = u2[i2 % s2];
        }
        return this;
      };
      var Gr = /[^+\/0-9A-Za-z-_]/g;
      function Jr(e2) {
        return e2 < 16 ? "0" + e2.toString(16) : e2.toString(16);
      }
      function Xr(e2, t2) {
        var n2;
        t2 = t2 || 1 / 0;
        for (var r2 = e2.length, o2 = null, i2 = [], u2 = 0; u2 < r2; ++u2) {
          if ((n2 = e2.charCodeAt(u2)) > 55295 && n2 < 57344) {
            if (!o2) {
              if (n2 > 56319) {
                (t2 -= 3) > -1 && i2.push(239, 191, 189);
                continue;
              }
              if (u2 + 1 === r2) {
                (t2 -= 3) > -1 && i2.push(239, 191, 189);
                continue;
              }
              o2 = n2;
              continue;
            }
            if (n2 < 56320) {
              (t2 -= 3) > -1 && i2.push(239, 191, 189), o2 = n2;
              continue;
            }
            n2 = 65536 + (o2 - 55296 << 10 | n2 - 56320);
          } else
            o2 && (t2 -= 3) > -1 && i2.push(239, 191, 189);
          if (o2 = null, n2 < 128) {
            if ((t2 -= 1) < 0)
              break;
            i2.push(n2);
          } else if (n2 < 2048) {
            if ((t2 -= 2) < 0)
              break;
            i2.push(n2 >> 6 | 192, 63 & n2 | 128);
          } else if (n2 < 65536) {
            if ((t2 -= 3) < 0)
              break;
            i2.push(n2 >> 12 | 224, n2 >> 6 & 63 | 128, 63 & n2 | 128);
          } else {
            if (!(n2 < 1114112))
              throw new Error("Invalid code point");
            if ((t2 -= 4) < 0)
              break;
            i2.push(n2 >> 18 | 240, n2 >> 12 & 63 | 128, n2 >> 6 & 63 | 128, 63 & n2 | 128);
          }
        }
        return i2;
      }
      function Yr(e2) {
        return function(e3) {
          var t2, n2, r2, o2, i2, u2;
          ir || ur();
          var s2 = e3.length;
          if (s2 % 4 > 0)
            throw new Error("Invalid string. Length must be a multiple of 4");
          i2 = "=" === e3[s2 - 2] ? 2 : "=" === e3[s2 - 1] ? 1 : 0, u2 = new or(3 * s2 / 4 - i2), r2 = i2 > 0 ? s2 - 4 : s2;
          var a2 = 0;
          for (t2 = 0, n2 = 0; t2 < r2; t2 += 4, n2 += 3)
            o2 = rr[e3.charCodeAt(t2)] << 18 | rr[e3.charCodeAt(t2 + 1)] << 12 | rr[e3.charCodeAt(t2 + 2)] << 6 | rr[e3.charCodeAt(t2 + 3)], u2[a2++] = o2 >> 16 & 255, u2[a2++] = o2 >> 8 & 255, u2[a2++] = 255 & o2;
          return 2 === i2 ? (o2 = rr[e3.charCodeAt(t2)] << 2 | rr[e3.charCodeAt(t2 + 1)] >> 4, u2[a2++] = 255 & o2) : 1 === i2 && (o2 = rr[e3.charCodeAt(t2)] << 10 | rr[e3.charCodeAt(t2 + 1)] << 4 | rr[e3.charCodeAt(t2 + 2)] >> 2, u2[a2++] = o2 >> 8 & 255, u2[a2++] = 255 & o2), u2;
        }(function(e3) {
          if ((e3 = function(e4) {
            return e4.trim ? e4.trim() : e4.replace(/^\s+|\s+$/g, "");
          }(e3).replace(Gr, "")).length < 2)
            return "";
          for (; e3.length % 4 != 0; )
            e3 += "=";
          return e3;
        }(e2));
      }
      function Kr(e2, t2, n2, r2) {
        for (var o2 = 0; o2 < r2 && !(o2 + n2 >= t2.length || o2 >= e2.length); ++o2)
          t2[o2 + n2] = e2[o2];
        return o2;
      }
      function Qr(e2) {
        return null != e2 && (!!e2._isBuffer || Zr(e2) || function(e3) {
          return "function" == typeof e3.readFloatLE && "function" == typeof e3.slice && Zr(e3.slice(0, 0));
        }(e2));
      }
      function Zr(e2) {
        return !!e2.constructor && "function" == typeof e2.constructor.isBuffer && e2.constructor.isBuffer(e2);
      }
      var eo = o(Vn);
      var to = class {
        constructor(e2, t2) {
          (t2 = t2 || {}).readChunk || (t2.readChunk = 1024), t2.newLineCharacter ? t2.newLineCharacter = t2.newLineCharacter.charCodeAt(0) : t2.newLineCharacter = 10, this.fd = "number" == typeof e2 ? e2 : eo.openSync(e2, "r"), this.options = t2, this.newLineCharacter = t2.newLineCharacter, this.reset();
        }
        _searchInBuffer(e2, t2) {
          let n2 = -1;
          for (let r2 = 0; r2 <= e2.length; r2++) {
            if (e2[r2] === t2) {
              n2 = r2;
              break;
            }
          }
          return n2;
        }
        reset() {
          this.eofReached = false, this.linesCache = [], this.fdPosition = 0;
        }
        close() {
          eo.closeSync(this.fd), this.fd = null;
        }
        _extractLines(e2) {
          let t2;
          const n2 = [];
          let r2 = 0, o2 = 0;
          for (; ; ) {
            let i3 = e2[r2++];
            if (i3 === this.newLineCharacter)
              t2 = e2.slice(o2, r2), n2.push(t2), o2 = r2;
            else if (void 0 === i3)
              break;
          }
          let i2 = e2.slice(o2, r2);
          return i2.length && n2.push(i2), n2;
        }
        _readChunk(e2) {
          let t2, n2 = 0;
          const r2 = [];
          do {
            const e3 = new mr(this.options.readChunk);
            t2 = eo.readSync(this.fd, e3, 0, this.options.readChunk, this.fdPosition), n2 += t2, this.fdPosition = this.fdPosition + t2, r2.push(e3);
          } while (t2 && -1 === this._searchInBuffer(r2[r2.length - 1], this.options.newLineCharacter));
          let o2 = mr.concat(r2);
          return t2 < this.options.readChunk && (this.eofReached = true, o2 = o2.slice(0, n2)), n2 && (this.linesCache = this._extractLines(o2), e2 && (this.linesCache[0] = mr.concat([e2, this.linesCache[0]]))), n2;
        }
        next() {
          if (!this.fd)
            return false;
          let e2, t2 = false;
          if (this.eofReached && 0 === this.linesCache.length)
            return t2;
          if (this.linesCache.length || (e2 = this._readChunk()), this.linesCache.length) {
            t2 = this.linesCache.shift();
            t2[t2.length - 1] !== this.newLineCharacter && (e2 = this._readChunk(t2), e2 && (t2 = this.linesCache.shift()));
          }
          return this.eofReached && 0 === this.linesCache.length && this.close(), t2 && t2[t2.length - 1] === this.newLineCharacter && (t2 = t2.slice(0, t2.length - 1)), t2;
        }
      };
      class no extends Error {
      }
      class ro extends Error {
      }
      class oo extends Error {
      }
      class io extends Error {
      }
      var uo = { ConfigError: no, DebugError: ro, UndefinedParserError: oo, ArgExpansionBailout: io }, so = function(e2, t2) {
        return (so = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(e3, t3) {
          e3.__proto__ = t3;
        } || function(e3, t3) {
          for (var n2 in t3)
            t3.hasOwnProperty(n2) && (e3[n2] = t3[n2]);
        })(e2, t2);
      };
      var ao = function() {
        return (ao = Object.assign || function(e2) {
          for (var t2, n2 = 1, r2 = arguments.length; n2 < r2; n2++)
            for (var o2 in t2 = arguments[n2])
              Object.prototype.hasOwnProperty.call(t2, o2) && (e2[o2] = t2[o2]);
          return e2;
        }).apply(this, arguments);
      };
      function co(e2) {
        var t2 = "function" == typeof Symbol && Symbol.iterator, n2 = t2 && e2[t2], r2 = 0;
        if (n2)
          return n2.call(e2);
        if (e2 && "number" == typeof e2.length)
          return { next: function() {
            return e2 && r2 >= e2.length && (e2 = void 0), { value: e2 && e2[r2++], done: !e2 };
          } };
        throw new TypeError(t2 ? "Object is not iterable." : "Symbol.iterator is not defined.");
      }
      function lo(e2, t2) {
        var n2 = "function" == typeof Symbol && e2[Symbol.iterator];
        if (!n2)
          return e2;
        var r2, o2, i2 = n2.call(e2), u2 = [];
        try {
          for (; (void 0 === t2 || t2-- > 0) && !(r2 = i2.next()).done; )
            u2.push(r2.value);
        } catch (e3) {
          o2 = { error: e3 };
        } finally {
          try {
            r2 && !r2.done && (n2 = i2.return) && n2.call(i2);
          } finally {
            if (o2)
              throw o2.error;
          }
        }
        return u2;
      }
      function po(e2) {
        return this instanceof po ? (this.v = e2, this) : new po(e2);
      }
      var fo = Object.freeze({ __proto__: null, __extends: function(e2, t2) {
        function n2() {
          this.constructor = e2;
        }
        so(e2, t2), e2.prototype = null === t2 ? Object.create(t2) : (n2.prototype = t2.prototype, new n2());
      }, get __assign() {
        return ao;
      }, __rest: function(e2, t2) {
        var n2 = {};
        for (var r2 in e2)
          Object.prototype.hasOwnProperty.call(e2, r2) && t2.indexOf(r2) < 0 && (n2[r2] = e2[r2]);
        if (null != e2 && "function" == typeof Object.getOwnPropertySymbols) {
          var o2 = 0;
          for (r2 = Object.getOwnPropertySymbols(e2); o2 < r2.length; o2++)
            t2.indexOf(r2[o2]) < 0 && Object.prototype.propertyIsEnumerable.call(e2, r2[o2]) && (n2[r2[o2]] = e2[r2[o2]]);
        }
        return n2;
      }, __decorate: function(e2, t2, n2, r2) {
        var o2, i2 = arguments.length, u2 = i2 < 3 ? t2 : null === r2 ? r2 = Object.getOwnPropertyDescriptor(t2, n2) : r2;
        if ("object" == typeof Reflect && "function" == typeof Reflect.decorate)
          u2 = Reflect.decorate(e2, t2, n2, r2);
        else
          for (var s2 = e2.length - 1; s2 >= 0; s2--)
            (o2 = e2[s2]) && (u2 = (i2 < 3 ? o2(u2) : i2 > 3 ? o2(t2, n2, u2) : o2(t2, n2)) || u2);
        return i2 > 3 && u2 && Object.defineProperty(t2, n2, u2), u2;
      }, __param: function(e2, t2) {
        return function(n2, r2) {
          t2(n2, r2, e2);
        };
      }, __metadata: function(e2, t2) {
        if ("object" == typeof Reflect && "function" == typeof Reflect.metadata)
          return Reflect.metadata(e2, t2);
      }, __awaiter: function(e2, t2, n2, r2) {
        return new (n2 || (n2 = Promise))(function(o2, i2) {
          function u2(e3) {
            try {
              a2(r2.next(e3));
            } catch (e4) {
              i2(e4);
            }
          }
          function s2(e3) {
            try {
              a2(r2.throw(e3));
            } catch (e4) {
              i2(e4);
            }
          }
          function a2(e3) {
            var t3;
            e3.done ? o2(e3.value) : (t3 = e3.value, t3 instanceof n2 ? t3 : new n2(function(e4) {
              e4(t3);
            })).then(u2, s2);
          }
          a2((r2 = r2.apply(e2, t2 || [])).next());
        });
      }, __generator: function(e2, t2) {
        var n2, r2, o2, i2, u2 = { label: 0, sent: function() {
          if (1 & o2[0])
            throw o2[1];
          return o2[1];
        }, trys: [], ops: [] };
        return i2 = { next: s2(0), throw: s2(1), return: s2(2) }, "function" == typeof Symbol && (i2[Symbol.iterator] = function() {
          return this;
        }), i2;
        function s2(i3) {
          return function(s3) {
            return function(i4) {
              if (n2)
                throw new TypeError("Generator is already executing.");
              for (; u2; )
                try {
                  if (n2 = 1, r2 && (o2 = 2 & i4[0] ? r2.return : i4[0] ? r2.throw || ((o2 = r2.return) && o2.call(r2), 0) : r2.next) && !(o2 = o2.call(r2, i4[1])).done)
                    return o2;
                  switch (r2 = 0, o2 && (i4 = [2 & i4[0], o2.value]), i4[0]) {
                    case 0:
                    case 1:
                      o2 = i4;
                      break;
                    case 4:
                      return u2.label++, { value: i4[1], done: false };
                    case 5:
                      u2.label++, r2 = i4[1], i4 = [0];
                      continue;
                    case 7:
                      i4 = u2.ops.pop(), u2.trys.pop();
                      continue;
                    default:
                      if (!(o2 = u2.trys, (o2 = o2.length > 0 && o2[o2.length - 1]) || 6 !== i4[0] && 2 !== i4[0])) {
                        u2 = 0;
                        continue;
                      }
                      if (3 === i4[0] && (!o2 || i4[1] > o2[0] && i4[1] < o2[3])) {
                        u2.label = i4[1];
                        break;
                      }
                      if (6 === i4[0] && u2.label < o2[1]) {
                        u2.label = o2[1], o2 = i4;
                        break;
                      }
                      if (o2 && u2.label < o2[2]) {
                        u2.label = o2[2], u2.ops.push(i4);
                        break;
                      }
                      o2[2] && u2.ops.pop(), u2.trys.pop();
                      continue;
                  }
                  i4 = t2.call(e2, u2);
                } catch (e3) {
                  i4 = [6, e3], r2 = 0;
                } finally {
                  n2 = o2 = 0;
                }
              if (5 & i4[0])
                throw i4[1];
              return { value: i4[0] ? i4[1] : void 0, done: true };
            }([i3, s3]);
          };
        }
      }, __createBinding: function(e2, t2, n2, r2) {
        void 0 === r2 && (r2 = n2), e2[r2] = t2[n2];
      }, __exportStar: function(e2, t2) {
        for (var n2 in e2)
          "default" === n2 || t2.hasOwnProperty(n2) || (t2[n2] = e2[n2]);
      }, __values: co, __read: lo, __spread: function() {
        for (var e2 = [], t2 = 0; t2 < arguments.length; t2++)
          e2 = e2.concat(lo(arguments[t2]));
        return e2;
      }, __spreadArrays: function() {
        for (var e2 = 0, t2 = 0, n2 = arguments.length; t2 < n2; t2++)
          e2 += arguments[t2].length;
        var r2 = Array(e2), o2 = 0;
        for (t2 = 0; t2 < n2; t2++)
          for (var i2 = arguments[t2], u2 = 0, s2 = i2.length; u2 < s2; u2++, o2++)
            r2[o2] = i2[u2];
        return r2;
      }, __await: po, __asyncGenerator: function(e2, t2, n2) {
        if (!Symbol.asyncIterator)
          throw new TypeError("Symbol.asyncIterator is not defined.");
        var r2, o2 = n2.apply(e2, t2 || []), i2 = [];
        return r2 = {}, u2("next"), u2("throw"), u2("return"), r2[Symbol.asyncIterator] = function() {
          return this;
        }, r2;
        function u2(e3) {
          o2[e3] && (r2[e3] = function(t3) {
            return new Promise(function(n3, r3) {
              i2.push([e3, t3, n3, r3]) > 1 || s2(e3, t3);
            });
          });
        }
        function s2(e3, t3) {
          try {
            (n3 = o2[e3](t3)).value instanceof po ? Promise.resolve(n3.value.v).then(a2, c2) : l2(i2[0][2], n3);
          } catch (e4) {
            l2(i2[0][3], e4);
          }
          var n3;
        }
        function a2(e3) {
          s2("next", e3);
        }
        function c2(e3) {
          s2("throw", e3);
        }
        function l2(e3, t3) {
          e3(t3), i2.shift(), i2.length && s2(i2[0][0], i2[0][1]);
        }
      }, __asyncDelegator: function(e2) {
        var t2, n2;
        return t2 = {}, r2("next"), r2("throw", function(e3) {
          throw e3;
        }), r2("return"), t2[Symbol.iterator] = function() {
          return this;
        }, t2;
        function r2(r3, o2) {
          t2[r3] = e2[r3] ? function(t3) {
            return (n2 = !n2) ? { value: po(e2[r3](t3)), done: "return" === r3 } : o2 ? o2(t3) : t3;
          } : o2;
        }
      }, __asyncValues: function(e2) {
        if (!Symbol.asyncIterator)
          throw new TypeError("Symbol.asyncIterator is not defined.");
        var t2, n2 = e2[Symbol.asyncIterator];
        return n2 ? n2.call(e2) : (e2 = co(e2), t2 = {}, r2("next"), r2("throw"), r2("return"), t2[Symbol.asyncIterator] = function() {
          return this;
        }, t2);
        function r2(n3) {
          t2[n3] = e2[n3] && function(t3) {
            return new Promise(function(r3, o2) {
              (function(e3, t4, n4, r4) {
                Promise.resolve(r4).then(function(t5) {
                  e3({ value: t5, done: n4 });
                }, t4);
              })(r3, o2, (t3 = e2[n3](t3)).done, t3.value);
            });
          };
        }
      }, __makeTemplateObject: function(e2, t2) {
        return Object.defineProperty ? Object.defineProperty(e2, "raw", { value: t2 }) : e2.raw = t2, e2;
      }, __importStar: function(e2) {
        if (e2 && e2.__esModule)
          return e2;
        var t2 = {};
        if (null != e2)
          for (var n2 in e2)
            Object.hasOwnProperty.call(e2, n2) && (t2[n2] = e2[n2]);
        return t2.default = e2, t2;
      }, __importDefault: function(e2) {
        return e2 && e2.__esModule ? e2 : { default: e2 };
      }, __classPrivateFieldGet: function(e2, t2) {
        if (!t2.has(e2))
          throw new TypeError("attempted to get private field on non-instance");
        return t2.get(e2);
      }, __classPrivateFieldSet: function(e2, t2, n2) {
        if (!t2.has(e2))
          throw new TypeError("attempted to set private field on non-instance");
        return t2.set(e2, n2), n2;
      } }), ho = i(function(e2, t2) {
        Object.defineProperty(t2, "__esModule", { value: true }), t2.apiDescriptor = { key: (e3) => /^[$_a-zA-Z][$_a-zA-Z0-9]*$/.test(e3) ? e3 : JSON.stringify(e3), value(e3) {
          if (null === e3 || "object" != typeof e3)
            return JSON.stringify(e3);
          if (Array.isArray(e3))
            return "[".concat(e3.map((e4) => t2.apiDescriptor.value(e4)).join(", "), "]");
          const n2 = Object.keys(e3);
          return 0 === n2.length ? "{}" : "{ ".concat(n2.map((n3) => "".concat(t2.apiDescriptor.key(n3), ": ").concat(t2.apiDescriptor.value(e3[n3]))).join(", "), " }");
        }, pair: ({ key: e3, value: n2 }) => t2.apiDescriptor.value({ [e3]: n2 }) };
      }), mo = i(function(e2, t2) {
        Object.defineProperty(t2, "__esModule", { value: true }), fo.__exportStar(ho, t2);
      }), go = /[|\\{}()[\]^$+*?.]/g, yo = function(e2) {
        if ("string" != typeof e2)
          throw new TypeError("Expected a string");
        return e2.replace(go, "\\$&");
      }, Do = { aliceblue: [240, 248, 255], antiquewhite: [250, 235, 215], aqua: [0, 255, 255], aquamarine: [127, 255, 212], azure: [240, 255, 255], beige: [245, 245, 220], bisque: [255, 228, 196], black: [0, 0, 0], blanchedalmond: [255, 235, 205], blue: [0, 0, 255], blueviolet: [138, 43, 226], brown: [165, 42, 42], burlywood: [222, 184, 135], cadetblue: [95, 158, 160], chartreuse: [127, 255, 0], chocolate: [210, 105, 30], coral: [255, 127, 80], cornflowerblue: [100, 149, 237], cornsilk: [255, 248, 220], crimson: [220, 20, 60], cyan: [0, 255, 255], darkblue: [0, 0, 139], darkcyan: [0, 139, 139], darkgoldenrod: [184, 134, 11], darkgray: [169, 169, 169], darkgreen: [0, 100, 0], darkgrey: [169, 169, 169], darkkhaki: [189, 183, 107], darkmagenta: [139, 0, 139], darkolivegreen: [85, 107, 47], darkorange: [255, 140, 0], darkorchid: [153, 50, 204], darkred: [139, 0, 0], darksalmon: [233, 150, 122], darkseagreen: [143, 188, 143], darkslateblue: [72, 61, 139], darkslategray: [47, 79, 79], darkslategrey: [47, 79, 79], darkturquoise: [0, 206, 209], darkviolet: [148, 0, 211], deeppink: [255, 20, 147], deepskyblue: [0, 191, 255], dimgray: [105, 105, 105], dimgrey: [105, 105, 105], dodgerblue: [30, 144, 255], firebrick: [178, 34, 34], floralwhite: [255, 250, 240], forestgreen: [34, 139, 34], fuchsia: [255, 0, 255], gainsboro: [220, 220, 220], ghostwhite: [248, 248, 255], gold: [255, 215, 0], goldenrod: [218, 165, 32], gray: [128, 128, 128], green: [0, 128, 0], greenyellow: [173, 255, 47], grey: [128, 128, 128], honeydew: [240, 255, 240], hotpink: [255, 105, 180], indianred: [205, 92, 92], indigo: [75, 0, 130], ivory: [255, 255, 240], khaki: [240, 230, 140], lavender: [230, 230, 250], lavenderblush: [255, 240, 245], lawngreen: [124, 252, 0], lemonchiffon: [255, 250, 205], lightblue: [173, 216, 230], lightcoral: [240, 128, 128], lightcyan: [224, 255, 255], lightgoldenrodyellow: [250, 250, 210], lightgray: [211, 211, 211], lightgreen: [144, 238, 144], lightgrey: [211, 211, 211], lightpink: [255, 182, 193], lightsalmon: [255, 160, 122], lightseagreen: [32, 178, 170], lightskyblue: [135, 206, 250], lightslategray: [119, 136, 153], lightslategrey: [119, 136, 153], lightsteelblue: [176, 196, 222], lightyellow: [255, 255, 224], lime: [0, 255, 0], limegreen: [50, 205, 50], linen: [250, 240, 230], magenta: [255, 0, 255], maroon: [128, 0, 0], mediumaquamarine: [102, 205, 170], mediumblue: [0, 0, 205], mediumorchid: [186, 85, 211], mediumpurple: [147, 112, 219], mediumseagreen: [60, 179, 113], mediumslateblue: [123, 104, 238], mediumspringgreen: [0, 250, 154], mediumturquoise: [72, 209, 204], mediumvioletred: [199, 21, 133], midnightblue: [25, 25, 112], mintcream: [245, 255, 250], mistyrose: [255, 228, 225], moccasin: [255, 228, 181], navajowhite: [255, 222, 173], navy: [0, 0, 128], oldlace: [253, 245, 230], olive: [128, 128, 0], olivedrab: [107, 142, 35], orange: [255, 165, 0], orangered: [255, 69, 0], orchid: [218, 112, 214], palegoldenrod: [238, 232, 170], palegreen: [152, 251, 152], paleturquoise: [175, 238, 238], palevioletred: [219, 112, 147], papayawhip: [255, 239, 213], peachpuff: [255, 218, 185], peru: [205, 133, 63], pink: [255, 192, 203], plum: [221, 160, 221], powderblue: [176, 224, 230], purple: [128, 0, 128], rebeccapurple: [102, 51, 153], red: [255, 0, 0], rosybrown: [188, 143, 143], royalblue: [65, 105, 225], saddlebrown: [139, 69, 19], salmon: [250, 128, 114], sandybrown: [244, 164, 96], seagreen: [46, 139, 87], seashell: [255, 245, 238], sienna: [160, 82, 45], silver: [192, 192, 192], skyblue: [135, 206, 235], slateblue: [106, 90, 205], slategray: [112, 128, 144], slategrey: [112, 128, 144], snow: [255, 250, 250], springgreen: [0, 255, 127], steelblue: [70, 130, 180], tan: [210, 180, 140], teal: [0, 128, 128], thistle: [216, 191, 216], tomato: [255, 99, 71], turquoise: [64, 224, 208], violet: [238, 130, 238], wheat: [245, 222, 179], white: [255, 255, 255], whitesmoke: [245, 245, 245], yellow: [255, 255, 0], yellowgreen: [154, 205, 50] }, Eo = i(function(e2) {
        var t2 = {};
        for (var n2 in Do)
          Do.hasOwnProperty(n2) && (t2[Do[n2]] = n2);
        var r2 = e2.exports = { rgb: { channels: 3, labels: "rgb" }, hsl: { channels: 3, labels: "hsl" }, hsv: { channels: 3, labels: "hsv" }, hwb: { channels: 3, labels: "hwb" }, cmyk: { channels: 4, labels: "cmyk" }, xyz: { channels: 3, labels: "xyz" }, lab: { channels: 3, labels: "lab" }, lch: { channels: 3, labels: "lch" }, hex: { channels: 1, labels: ["hex"] }, keyword: { channels: 1, labels: ["keyword"] }, ansi16: { channels: 1, labels: ["ansi16"] }, ansi256: { channels: 1, labels: ["ansi256"] }, hcg: { channels: 3, labels: ["h", "c", "g"] }, apple: { channels: 3, labels: ["r16", "g16", "b16"] }, gray: { channels: 1, labels: ["gray"] } };
        for (var o2 in r2)
          if (r2.hasOwnProperty(o2)) {
            if (!("channels" in r2[o2]))
              throw new Error("missing channels property: " + o2);
            if (!("labels" in r2[o2]))
              throw new Error("missing channel labels property: " + o2);
            if (r2[o2].labels.length !== r2[o2].channels)
              throw new Error("channel and label counts mismatch: " + o2);
            var i2 = r2[o2].channels, u2 = r2[o2].labels;
            delete r2[o2].channels, delete r2[o2].labels, Object.defineProperty(r2[o2], "channels", { value: i2 }), Object.defineProperty(r2[o2], "labels", { value: u2 });
          }
        r2.rgb.hsl = function(e3) {
          var t3, n3, r3 = e3[0] / 255, o3 = e3[1] / 255, i3 = e3[2] / 255, u3 = Math.min(r3, o3, i3), s2 = Math.max(r3, o3, i3), a2 = s2 - u3;
          return s2 === u3 ? t3 = 0 : r3 === s2 ? t3 = (o3 - i3) / a2 : o3 === s2 ? t3 = 2 + (i3 - r3) / a2 : i3 === s2 && (t3 = 4 + (r3 - o3) / a2), (t3 = Math.min(60 * t3, 360)) < 0 && (t3 += 360), n3 = (u3 + s2) / 2, [t3, 100 * (s2 === u3 ? 0 : n3 <= 0.5 ? a2 / (s2 + u3) : a2 / (2 - s2 - u3)), 100 * n3];
        }, r2.rgb.hsv = function(e3) {
          var t3, n3, r3, o3, i3, u3 = e3[0] / 255, s2 = e3[1] / 255, a2 = e3[2] / 255, c2 = Math.max(u3, s2, a2), l2 = c2 - Math.min(u3, s2, a2), p2 = function(e4) {
            return (c2 - e4) / 6 / l2 + 0.5;
          };
          return 0 === l2 ? o3 = i3 = 0 : (i3 = l2 / c2, t3 = p2(u3), n3 = p2(s2), r3 = p2(a2), u3 === c2 ? o3 = r3 - n3 : s2 === c2 ? o3 = 1 / 3 + t3 - r3 : a2 === c2 && (o3 = 2 / 3 + n3 - t3), o3 < 0 ? o3 += 1 : o3 > 1 && (o3 -= 1)), [360 * o3, 100 * i3, 100 * c2];
        }, r2.rgb.hwb = function(e3) {
          var t3 = e3[0], n3 = e3[1], o3 = e3[2];
          return [r2.rgb.hsl(e3)[0], 100 * (1 / 255 * Math.min(t3, Math.min(n3, o3))), 100 * (o3 = 1 - 1 / 255 * Math.max(t3, Math.max(n3, o3)))];
        }, r2.rgb.cmyk = function(e3) {
          var t3, n3 = e3[0] / 255, r3 = e3[1] / 255, o3 = e3[2] / 255;
          return [100 * ((1 - n3 - (t3 = Math.min(1 - n3, 1 - r3, 1 - o3))) / (1 - t3) || 0), 100 * ((1 - r3 - t3) / (1 - t3) || 0), 100 * ((1 - o3 - t3) / (1 - t3) || 0), 100 * t3];
        }, r2.rgb.keyword = function(e3) {
          var n3 = t2[e3];
          if (n3)
            return n3;
          var r3, o3, i3, u3 = 1 / 0;
          for (var s2 in Do)
            if (Do.hasOwnProperty(s2)) {
              var a2 = Do[s2], c2 = (o3 = e3, i3 = a2, Math.pow(o3[0] - i3[0], 2) + Math.pow(o3[1] - i3[1], 2) + Math.pow(o3[2] - i3[2], 2));
              c2 < u3 && (u3 = c2, r3 = s2);
            }
          return r3;
        }, r2.keyword.rgb = function(e3) {
          return Do[e3];
        }, r2.rgb.xyz = function(e3) {
          var t3 = e3[0] / 255, n3 = e3[1] / 255, r3 = e3[2] / 255;
          return [100 * (0.4124 * (t3 = t3 > 0.04045 ? Math.pow((t3 + 0.055) / 1.055, 2.4) : t3 / 12.92) + 0.3576 * (n3 = n3 > 0.04045 ? Math.pow((n3 + 0.055) / 1.055, 2.4) : n3 / 12.92) + 0.1805 * (r3 = r3 > 0.04045 ? Math.pow((r3 + 0.055) / 1.055, 2.4) : r3 / 12.92)), 100 * (0.2126 * t3 + 0.7152 * n3 + 0.0722 * r3), 100 * (0.0193 * t3 + 0.1192 * n3 + 0.9505 * r3)];
        }, r2.rgb.lab = function(e3) {
          var t3 = r2.rgb.xyz(e3), n3 = t3[0], o3 = t3[1], i3 = t3[2];
          return o3 /= 100, i3 /= 108.883, n3 = (n3 /= 95.047) > 8856e-6 ? Math.pow(n3, 1 / 3) : 7.787 * n3 + 16 / 116, [116 * (o3 = o3 > 8856e-6 ? Math.pow(o3, 1 / 3) : 7.787 * o3 + 16 / 116) - 16, 500 * (n3 - o3), 200 * (o3 - (i3 = i3 > 8856e-6 ? Math.pow(i3, 1 / 3) : 7.787 * i3 + 16 / 116))];
        }, r2.hsl.rgb = function(e3) {
          var t3, n3, r3, o3, i3, u3 = e3[0] / 360, s2 = e3[1] / 100, a2 = e3[2] / 100;
          if (0 === s2)
            return [i3 = 255 * a2, i3, i3];
          t3 = 2 * a2 - (n3 = a2 < 0.5 ? a2 * (1 + s2) : a2 + s2 - a2 * s2), o3 = [0, 0, 0];
          for (var c2 = 0; c2 < 3; c2++)
            (r3 = u3 + 1 / 3 * -(c2 - 1)) < 0 && r3++, r3 > 1 && r3--, i3 = 6 * r3 < 1 ? t3 + 6 * (n3 - t3) * r3 : 2 * r3 < 1 ? n3 : 3 * r3 < 2 ? t3 + (n3 - t3) * (2 / 3 - r3) * 6 : t3, o3[c2] = 255 * i3;
          return o3;
        }, r2.hsl.hsv = function(e3) {
          var t3 = e3[0], n3 = e3[1] / 100, r3 = e3[2] / 100, o3 = n3, i3 = Math.max(r3, 0.01);
          return n3 *= (r3 *= 2) <= 1 ? r3 : 2 - r3, o3 *= i3 <= 1 ? i3 : 2 - i3, [t3, 100 * (0 === r3 ? 2 * o3 / (i3 + o3) : 2 * n3 / (r3 + n3)), 100 * ((r3 + n3) / 2)];
        }, r2.hsv.rgb = function(e3) {
          var t3 = e3[0] / 60, n3 = e3[1] / 100, r3 = e3[2] / 100, o3 = Math.floor(t3) % 6, i3 = t3 - Math.floor(t3), u3 = 255 * r3 * (1 - n3), s2 = 255 * r3 * (1 - n3 * i3), a2 = 255 * r3 * (1 - n3 * (1 - i3));
          switch (r3 *= 255, o3) {
            case 0:
              return [r3, a2, u3];
            case 1:
              return [s2, r3, u3];
            case 2:
              return [u3, r3, a2];
            case 3:
              return [u3, s2, r3];
            case 4:
              return [a2, u3, r3];
            case 5:
              return [r3, u3, s2];
          }
        }, r2.hsv.hsl = function(e3) {
          var t3, n3, r3, o3 = e3[0], i3 = e3[1] / 100, u3 = e3[2] / 100, s2 = Math.max(u3, 0.01);
          return r3 = (2 - i3) * u3, n3 = i3 * s2, [o3, 100 * (n3 = (n3 /= (t3 = (2 - i3) * s2) <= 1 ? t3 : 2 - t3) || 0), 100 * (r3 /= 2)];
        }, r2.hwb.rgb = function(e3) {
          var t3, n3, r3, o3, i3, u3, s2, a2 = e3[0] / 360, c2 = e3[1] / 100, l2 = e3[2] / 100, p2 = c2 + l2;
          switch (p2 > 1 && (c2 /= p2, l2 /= p2), r3 = 6 * a2 - (t3 = Math.floor(6 * a2)), 0 != (1 & t3) && (r3 = 1 - r3), o3 = c2 + r3 * ((n3 = 1 - l2) - c2), t3) {
            default:
            case 6:
            case 0:
              i3 = n3, u3 = o3, s2 = c2;
              break;
            case 1:
              i3 = o3, u3 = n3, s2 = c2;
              break;
            case 2:
              i3 = c2, u3 = n3, s2 = o3;
              break;
            case 3:
              i3 = c2, u3 = o3, s2 = n3;
              break;
            case 4:
              i3 = o3, u3 = c2, s2 = n3;
              break;
            case 5:
              i3 = n3, u3 = c2, s2 = o3;
          }
          return [255 * i3, 255 * u3, 255 * s2];
        }, r2.cmyk.rgb = function(e3) {
          var t3 = e3[0] / 100, n3 = e3[1] / 100, r3 = e3[2] / 100, o3 = e3[3] / 100;
          return [255 * (1 - Math.min(1, t3 * (1 - o3) + o3)), 255 * (1 - Math.min(1, n3 * (1 - o3) + o3)), 255 * (1 - Math.min(1, r3 * (1 - o3) + o3))];
        }, r2.xyz.rgb = function(e3) {
          var t3, n3, r3, o3 = e3[0] / 100, i3 = e3[1] / 100, u3 = e3[2] / 100;
          return n3 = -0.9689 * o3 + 1.8758 * i3 + 0.0415 * u3, r3 = 0.0557 * o3 + -0.204 * i3 + 1.057 * u3, t3 = (t3 = 3.2406 * o3 + -1.5372 * i3 + -0.4986 * u3) > 31308e-7 ? 1.055 * Math.pow(t3, 1 / 2.4) - 0.055 : 12.92 * t3, n3 = n3 > 31308e-7 ? 1.055 * Math.pow(n3, 1 / 2.4) - 0.055 : 12.92 * n3, r3 = r3 > 31308e-7 ? 1.055 * Math.pow(r3, 1 / 2.4) - 0.055 : 12.92 * r3, [255 * (t3 = Math.min(Math.max(0, t3), 1)), 255 * (n3 = Math.min(Math.max(0, n3), 1)), 255 * (r3 = Math.min(Math.max(0, r3), 1))];
        }, r2.xyz.lab = function(e3) {
          var t3 = e3[0], n3 = e3[1], r3 = e3[2];
          return n3 /= 100, r3 /= 108.883, t3 = (t3 /= 95.047) > 8856e-6 ? Math.pow(t3, 1 / 3) : 7.787 * t3 + 16 / 116, [116 * (n3 = n3 > 8856e-6 ? Math.pow(n3, 1 / 3) : 7.787 * n3 + 16 / 116) - 16, 500 * (t3 - n3), 200 * (n3 - (r3 = r3 > 8856e-6 ? Math.pow(r3, 1 / 3) : 7.787 * r3 + 16 / 116))];
        }, r2.lab.xyz = function(e3) {
          var t3, n3, r3, o3 = e3[0];
          t3 = e3[1] / 500 + (n3 = (o3 + 16) / 116), r3 = n3 - e3[2] / 200;
          var i3 = Math.pow(n3, 3), u3 = Math.pow(t3, 3), s2 = Math.pow(r3, 3);
          return n3 = i3 > 8856e-6 ? i3 : (n3 - 16 / 116) / 7.787, t3 = u3 > 8856e-6 ? u3 : (t3 - 16 / 116) / 7.787, r3 = s2 > 8856e-6 ? s2 : (r3 - 16 / 116) / 7.787, [t3 *= 95.047, n3 *= 100, r3 *= 108.883];
        }, r2.lab.lch = function(e3) {
          var t3, n3 = e3[0], r3 = e3[1], o3 = e3[2];
          return (t3 = 360 * Math.atan2(o3, r3) / 2 / Math.PI) < 0 && (t3 += 360), [n3, Math.sqrt(r3 * r3 + o3 * o3), t3];
        }, r2.lch.lab = function(e3) {
          var t3, n3 = e3[0], r3 = e3[1];
          return t3 = e3[2] / 360 * 2 * Math.PI, [n3, r3 * Math.cos(t3), r3 * Math.sin(t3)];
        }, r2.rgb.ansi16 = function(e3) {
          var t3 = e3[0], n3 = e3[1], o3 = e3[2], i3 = 1 in arguments ? arguments[1] : r2.rgb.hsv(e3)[2];
          if (0 === (i3 = Math.round(i3 / 50)))
            return 30;
          var u3 = 30 + (Math.round(o3 / 255) << 2 | Math.round(n3 / 255) << 1 | Math.round(t3 / 255));
          return 2 === i3 && (u3 += 60), u3;
        }, r2.hsv.ansi16 = function(e3) {
          return r2.rgb.ansi16(r2.hsv.rgb(e3), e3[2]);
        }, r2.rgb.ansi256 = function(e3) {
          var t3 = e3[0], n3 = e3[1], r3 = e3[2];
          return t3 === n3 && n3 === r3 ? t3 < 8 ? 16 : t3 > 248 ? 231 : Math.round((t3 - 8) / 247 * 24) + 232 : 16 + 36 * Math.round(t3 / 255 * 5) + 6 * Math.round(n3 / 255 * 5) + Math.round(r3 / 255 * 5);
        }, r2.ansi16.rgb = function(e3) {
          var t3 = e3 % 10;
          if (0 === t3 || 7 === t3)
            return e3 > 50 && (t3 += 3.5), [t3 = t3 / 10.5 * 255, t3, t3];
          var n3 = 0.5 * (1 + ~~(e3 > 50));
          return [(1 & t3) * n3 * 255, (t3 >> 1 & 1) * n3 * 255, (t3 >> 2 & 1) * n3 * 255];
        }, r2.ansi256.rgb = function(e3) {
          if (e3 >= 232) {
            var t3 = 10 * (e3 - 232) + 8;
            return [t3, t3, t3];
          }
          var n3;
          return e3 -= 16, [Math.floor(e3 / 36) / 5 * 255, Math.floor((n3 = e3 % 36) / 6) / 5 * 255, n3 % 6 / 5 * 255];
        }, r2.rgb.hex = function(e3) {
          var t3 = (((255 & Math.round(e3[0])) << 16) + ((255 & Math.round(e3[1])) << 8) + (255 & Math.round(e3[2]))).toString(16).toUpperCase();
          return "000000".substring(t3.length) + t3;
        }, r2.hex.rgb = function(e3) {
          var t3 = e3.toString(16).match(/[a-f0-9]{6}|[a-f0-9]{3}/i);
          if (!t3)
            return [0, 0, 0];
          var n3 = t3[0];
          3 === t3[0].length && (n3 = n3.split("").map(function(e4) {
            return e4 + e4;
          }).join(""));
          var r3 = parseInt(n3, 16);
          return [r3 >> 16 & 255, r3 >> 8 & 255, 255 & r3];
        }, r2.rgb.hcg = function(e3) {
          var t3, n3 = e3[0] / 255, r3 = e3[1] / 255, o3 = e3[2] / 255, i3 = Math.max(Math.max(n3, r3), o3), u3 = Math.min(Math.min(n3, r3), o3), s2 = i3 - u3;
          return t3 = s2 <= 0 ? 0 : i3 === n3 ? (r3 - o3) / s2 % 6 : i3 === r3 ? 2 + (o3 - n3) / s2 : 4 + (n3 - r3) / s2 + 4, t3 /= 6, [360 * (t3 %= 1), 100 * s2, 100 * (s2 < 1 ? u3 / (1 - s2) : 0)];
        }, r2.hsl.hcg = function(e3) {
          var t3 = e3[1] / 100, n3 = e3[2] / 100, r3 = 1, o3 = 0;
          return (r3 = n3 < 0.5 ? 2 * t3 * n3 : 2 * t3 * (1 - n3)) < 1 && (o3 = (n3 - 0.5 * r3) / (1 - r3)), [e3[0], 100 * r3, 100 * o3];
        }, r2.hsv.hcg = function(e3) {
          var t3 = e3[1] / 100, n3 = e3[2] / 100, r3 = t3 * n3, o3 = 0;
          return r3 < 1 && (o3 = (n3 - r3) / (1 - r3)), [e3[0], 100 * r3, 100 * o3];
        }, r2.hcg.rgb = function(e3) {
          var t3 = e3[0] / 360, n3 = e3[1] / 100, r3 = e3[2] / 100;
          if (0 === n3)
            return [255 * r3, 255 * r3, 255 * r3];
          var o3, i3 = [0, 0, 0], u3 = t3 % 1 * 6, s2 = u3 % 1, a2 = 1 - s2;
          switch (Math.floor(u3)) {
            case 0:
              i3[0] = 1, i3[1] = s2, i3[2] = 0;
              break;
            case 1:
              i3[0] = a2, i3[1] = 1, i3[2] = 0;
              break;
            case 2:
              i3[0] = 0, i3[1] = 1, i3[2] = s2;
              break;
            case 3:
              i3[0] = 0, i3[1] = a2, i3[2] = 1;
              break;
            case 4:
              i3[0] = s2, i3[1] = 0, i3[2] = 1;
              break;
            default:
              i3[0] = 1, i3[1] = 0, i3[2] = a2;
          }
          return o3 = (1 - n3) * r3, [255 * (n3 * i3[0] + o3), 255 * (n3 * i3[1] + o3), 255 * (n3 * i3[2] + o3)];
        }, r2.hcg.hsv = function(e3) {
          var t3 = e3[1] / 100, n3 = t3 + e3[2] / 100 * (1 - t3), r3 = 0;
          return n3 > 0 && (r3 = t3 / n3), [e3[0], 100 * r3, 100 * n3];
        }, r2.hcg.hsl = function(e3) {
          var t3 = e3[1] / 100, n3 = e3[2] / 100 * (1 - t3) + 0.5 * t3, r3 = 0;
          return n3 > 0 && n3 < 0.5 ? r3 = t3 / (2 * n3) : n3 >= 0.5 && n3 < 1 && (r3 = t3 / (2 * (1 - n3))), [e3[0], 100 * r3, 100 * n3];
        }, r2.hcg.hwb = function(e3) {
          var t3 = e3[1] / 100, n3 = t3 + e3[2] / 100 * (1 - t3);
          return [e3[0], 100 * (n3 - t3), 100 * (1 - n3)];
        }, r2.hwb.hcg = function(e3) {
          var t3 = e3[1] / 100, n3 = 1 - e3[2] / 100, r3 = n3 - t3, o3 = 0;
          return r3 < 1 && (o3 = (n3 - r3) / (1 - r3)), [e3[0], 100 * r3, 100 * o3];
        }, r2.apple.rgb = function(e3) {
          return [e3[0] / 65535 * 255, e3[1] / 65535 * 255, e3[2] / 65535 * 255];
        }, r2.rgb.apple = function(e3) {
          return [e3[0] / 255 * 65535, e3[1] / 255 * 65535, e3[2] / 255 * 65535];
        }, r2.gray.rgb = function(e3) {
          return [e3[0] / 100 * 255, e3[0] / 100 * 255, e3[0] / 100 * 255];
        }, r2.gray.hsl = r2.gray.hsv = function(e3) {
          return [0, 0, e3[0]];
        }, r2.gray.hwb = function(e3) {
          return [0, 100, e3[0]];
        }, r2.gray.cmyk = function(e3) {
          return [0, 0, 0, e3[0]];
        }, r2.gray.lab = function(e3) {
          return [e3[0], 0, 0];
        }, r2.gray.hex = function(e3) {
          var t3 = 255 & Math.round(e3[0] / 100 * 255), n3 = ((t3 << 16) + (t3 << 8) + t3).toString(16).toUpperCase();
          return "000000".substring(n3.length) + n3;
        }, r2.rgb.gray = function(e3) {
          return [(e3[0] + e3[1] + e3[2]) / 3 / 255 * 100];
        };
      });
      function bo(e2) {
        var t2 = function() {
          for (var e3 = {}, t3 = Object.keys(Eo), n3 = t3.length, r3 = 0; r3 < n3; r3++)
            e3[t3[r3]] = { distance: -1, parent: null };
          return e3;
        }(), n2 = [e2];
        for (t2[e2].distance = 0; n2.length; )
          for (var r2 = n2.pop(), o2 = Object.keys(Eo[r2]), i2 = o2.length, u2 = 0; u2 < i2; u2++) {
            var s2 = o2[u2], a2 = t2[s2];
            -1 === a2.distance && (a2.distance = t2[r2].distance + 1, a2.parent = r2, n2.unshift(s2));
          }
        return t2;
      }
      function Co(e2, t2) {
        return function(n2) {
          return t2(e2(n2));
        };
      }
      function vo(e2, t2) {
        for (var n2 = [t2[e2].parent, e2], r2 = Eo[t2[e2].parent][e2], o2 = t2[e2].parent; t2[o2].parent; )
          n2.unshift(t2[o2].parent), r2 = Co(Eo[t2[o2].parent][o2], r2), o2 = t2[o2].parent;
        return r2.conversion = n2, r2;
      }
      var Ao = {};
      Object.keys(Eo).forEach(function(e2) {
        Ao[e2] = {}, Object.defineProperty(Ao[e2], "channels", { value: Eo[e2].channels }), Object.defineProperty(Ao[e2], "labels", { value: Eo[e2].labels });
        var t2 = function(e3) {
          for (var t3 = bo(e3), n2 = {}, r2 = Object.keys(t3), o2 = r2.length, i2 = 0; i2 < o2; i2++) {
            var u2 = r2[i2];
            null !== t3[u2].parent && (n2[u2] = vo(u2, t3));
          }
          return n2;
        }(e2);
        Object.keys(t2).forEach(function(n2) {
          var r2 = t2[n2];
          Ao[e2][n2] = function(e3) {
            var t3 = function(t4) {
              if (null == t4)
                return t4;
              arguments.length > 1 && (t4 = Array.prototype.slice.call(arguments));
              var n3 = e3(t4);
              if ("object" == typeof n3)
                for (var r3 = n3.length, o2 = 0; o2 < r3; o2++)
                  n3[o2] = Math.round(n3[o2]);
              return n3;
            };
            return "conversion" in e3 && (t3.conversion = e3.conversion), t3;
          }(r2), Ao[e2][n2].raw = function(e3) {
            var t3 = function(t4) {
              return null == t4 ? t4 : (arguments.length > 1 && (t4 = Array.prototype.slice.call(arguments)), e3(t4));
            };
            return "conversion" in e3 && (t3.conversion = e3.conversion), t3;
          }(r2);
        });
      });
      var Fo, xo = Ao, So = i(function(e2) {
        const t2 = (e3, t3) => function() {
          const n3 = e3.apply(xo, arguments);
          return "\x1B[".concat(n3 + t3, "m");
        }, n2 = (e3, t3) => function() {
          const n3 = e3.apply(xo, arguments);
          return "\x1B[".concat(38 + t3, ";5;").concat(n3, "m");
        }, r2 = (e3, t3) => function() {
          const n3 = e3.apply(xo, arguments);
          return "\x1B[".concat(38 + t3, ";2;").concat(n3[0], ";").concat(n3[1], ";").concat(n3[2], "m");
        };
        Object.defineProperty(e2, "exports", { enumerable: true, get: function() {
          const e3 = /* @__PURE__ */ new Map(), o2 = { modifier: { reset: [0, 0], bold: [1, 22], dim: [2, 22], italic: [3, 23], underline: [4, 24], inverse: [7, 27], hidden: [8, 28], strikethrough: [9, 29] }, color: { black: [30, 39], red: [31, 39], green: [32, 39], yellow: [33, 39], blue: [34, 39], magenta: [35, 39], cyan: [36, 39], white: [37, 39], gray: [90, 39], redBright: [91, 39], greenBright: [92, 39], yellowBright: [93, 39], blueBright: [94, 39], magentaBright: [95, 39], cyanBright: [96, 39], whiteBright: [97, 39] }, bgColor: { bgBlack: [40, 49], bgRed: [41, 49], bgGreen: [42, 49], bgYellow: [43, 49], bgBlue: [44, 49], bgMagenta: [45, 49], bgCyan: [46, 49], bgWhite: [47, 49], bgBlackBright: [100, 49], bgRedBright: [101, 49], bgGreenBright: [102, 49], bgYellowBright: [103, 49], bgBlueBright: [104, 49], bgMagentaBright: [105, 49], bgCyanBright: [106, 49], bgWhiteBright: [107, 49] } };
          o2.color.grey = o2.color.gray;
          for (const t3 of Object.keys(o2)) {
            const n3 = o2[t3];
            for (const t4 of Object.keys(n3)) {
              const r3 = n3[t4];
              o2[t4] = { open: "\x1B[".concat(r3[0], "m"), close: "\x1B[".concat(r3[1], "m") }, n3[t4] = o2[t4], e3.set(r3[0], r3[1]);
            }
            Object.defineProperty(o2, t3, { value: n3, enumerable: false }), Object.defineProperty(o2, "codes", { value: e3, enumerable: false });
          }
          const i2 = (e4) => e4, u2 = (e4, t3, n3) => [e4, t3, n3];
          o2.color.close = "\x1B[39m", o2.bgColor.close = "\x1B[49m", o2.color.ansi = { ansi: t2(i2, 0) }, o2.color.ansi256 = { ansi256: n2(i2, 0) }, o2.color.ansi16m = { rgb: r2(u2, 0) }, o2.bgColor.ansi = { ansi: t2(i2, 10) }, o2.bgColor.ansi256 = { ansi256: n2(i2, 10) }, o2.bgColor.ansi16m = { rgb: r2(u2, 10) };
          for (let e4 of Object.keys(xo)) {
            if ("object" != typeof xo[e4])
              continue;
            const i3 = xo[e4];
            "ansi16" === e4 && (e4 = "ansi"), "ansi16" in i3 && (o2.color.ansi[e4] = t2(i3.ansi16, 0), o2.bgColor.ansi[e4] = t2(i3.ansi16, 10)), "ansi256" in i3 && (o2.color.ansi256[e4] = n2(i3.ansi256, 0), o2.bgColor.ansi256[e4] = n2(i3.ansi256, 10)), "rgb" in i3 && (o2.color.ansi16m[e4] = r2(i3.rgb, 0), o2.bgColor.ansi16m[e4] = r2(i3.rgb, 10));
          }
          return o2;
        } });
      });
      function wo() {
        if (void 0 === Fo) {
          var e2 = new ArrayBuffer(2), t2 = new Uint8Array(e2), n2 = new Uint16Array(e2);
          if (t2[0] = 1, t2[1] = 2, 258 === n2[0])
            Fo = "BE";
          else {
            if (513 !== n2[0])
              throw new Error("unable to figure out endianess");
            Fo = "LE";
          }
        }
        return Fo;
      }
      function To() {
        return void 0 !== Pe.location ? Pe.location.hostname : "";
      }
      function Bo() {
        return [];
      }
      function ko() {
        return 0;
      }
      function No() {
        return Number.MAX_VALUE;
      }
      function Po() {
        return Number.MAX_VALUE;
      }
      function Oo() {
        return [];
      }
      function Io() {
        return "Browser";
      }
      function jo() {
        return void 0 !== Pe.navigator ? Pe.navigator.appVersion : "";
      }
      function Lo() {
      }
      function _o() {
      }
      function Mo() {
        return "javascript";
      }
      function Ro() {
        return "browser";
      }
      function Vo() {
        return "/tmp";
      }
      var $o = Vo, qo = { EOL: "\n", arch: Mo, platform: Ro, tmpdir: $o, tmpDir: Vo, networkInterfaces: Lo, getNetworkInterfaces: _o, release: jo, type: Io, cpus: Oo, totalmem: Po, freemem: No, uptime: ko, loadavg: Bo, hostname: To, endianness: wo }, Wo = (e2, t2) => {
        t2 = t2 || nt.argv;
        const n2 = e2.startsWith("-") ? "" : 1 === e2.length ? "-" : "--", r2 = t2.indexOf(n2 + e2), o2 = t2.indexOf("--");
        return -1 !== r2 && (-1 === o2 || r2 < o2);
      }, Uo = o(Object.freeze({ __proto__: null, endianness: wo, hostname: To, loadavg: Bo, uptime: ko, freemem: No, totalmem: Po, cpus: Oo, type: Io, release: jo, networkInterfaces: Lo, getNetworkInterfaces: _o, arch: Mo, platform: Ro, tmpDir: Vo, tmpdir: $o, EOL: "\n", default: qo }));
      const zo = nt.env;
      let Ho;
      function Go(e2) {
        return function(e3) {
          return 0 !== e3 && { level: e3, hasBasic: true, has256: e3 >= 2, has16m: e3 >= 3 };
        }(function(e3) {
          if (false === Ho)
            return 0;
          if (Wo("color=16m") || Wo("color=full") || Wo("color=truecolor"))
            return 3;
          if (Wo("color=256"))
            return 2;
          if (e3 && !e3.isTTY && true !== Ho)
            return 0;
          const t2 = Ho ? 1 : 0;
          if ("win32" === nt.platform) {
            const e4 = Uo.release().split(".");
            return Number(nt.versions.node.split(".")[0]) >= 8 && Number(e4[0]) >= 10 && Number(e4[2]) >= 10586 ? Number(e4[2]) >= 14931 ? 3 : 2 : 1;
          }
          if ("CI" in zo)
            return ["TRAVIS", "CIRCLECI", "APPVEYOR", "GITLAB_CI"].some((e4) => e4 in zo) || "codeship" === zo.CI_NAME ? 1 : t2;
          if ("TEAMCITY_VERSION" in zo)
            return /^(9\.(0*[1-9]\d*)\.|\d{2,}\.)/.test(zo.TEAMCITY_VERSION) ? 1 : 0;
          if ("truecolor" === zo.COLORTERM)
            return 3;
          if ("TERM_PROGRAM" in zo) {
            const e4 = parseInt((zo.TERM_PROGRAM_VERSION || "").split(".")[0], 10);
            switch (zo.TERM_PROGRAM) {
              case "iTerm.app":
                return e4 >= 3 ? 3 : 2;
              case "Apple_Terminal":
                return 2;
            }
          }
          return /-256(color)?$/i.test(zo.TERM) ? 2 : /^screen|^xterm|^vt100|^vt220|^rxvt|color|ansi|cygwin|linux/i.test(zo.TERM) || "COLORTERM" in zo ? 1 : (zo.TERM, t2);
        }(e2));
      }
      Wo("no-color") || Wo("no-colors") || Wo("color=false") ? Ho = false : (Wo("color") || Wo("colors") || Wo("color=true") || Wo("color=always")) && (Ho = true), "FORCE_COLOR" in zo && (Ho = 0 === zo.FORCE_COLOR.length || 0 !== parseInt(zo.FORCE_COLOR, 10));
      var Jo = { supportsColor: Go, stdout: Go(nt.stdout), stderr: Go(nt.stderr) };
      const Xo = /(?:\\(u[a-f\d]{4}|x[a-f\d]{2}|.))|(?:\{(~)?(\w+(?:\([^)]*\))?(?:\.\w+(?:\([^)]*\))?)*)(?:[ \t]|(?=\r?\n)))|(\})|((?:.|[\r\n\f])+?)/gi, Yo = /(?:^|\.)(\w+)(?:\(([^)]*)\))?/g, Ko = /^(['"])((?:\\.|(?!\1)[^\\])*)\1$/, Qo = /\\(u[a-f\d]{4}|x[a-f\d]{2}|.)|([^\\])/gi, Zo = /* @__PURE__ */ new Map([["n", "\n"], ["r", "\r"], ["t", "	"], ["b", "\b"], ["f", "\f"], ["v", "\v"], ["0", "\0"], ["\\", "\\"], ["e", "\x1B"], ["a", "\x07"]]);
      function ei(e2) {
        return "u" === e2[0] && 5 === e2.length || "x" === e2[0] && 3 === e2.length ? String.fromCharCode(parseInt(e2.slice(1), 16)) : Zo.get(e2) || e2;
      }
      function ti(e2, t2) {
        const n2 = [], r2 = t2.trim().split(/\s*,\s*/g);
        let o2;
        for (const t3 of r2)
          if (isNaN(t3)) {
            if (!(o2 = t3.match(Ko)))
              throw new Error("Invalid Chalk template style argument: ".concat(t3, " (in style '").concat(e2, "')"));
            n2.push(o2[2].replace(Qo, (e3, t4, n3) => t4 ? ei(t4) : n3));
          } else
            n2.push(Number(t3));
        return n2;
      }
      function ni(e2) {
        Yo.lastIndex = 0;
        const t2 = [];
        let n2;
        for (; null !== (n2 = Yo.exec(e2)); ) {
          const e3 = n2[1];
          if (n2[2]) {
            const r2 = ti(e3, n2[2]);
            t2.push([e3].concat(r2));
          } else
            t2.push([e3]);
        }
        return t2;
      }
      function ri(e2, t2) {
        const n2 = {};
        for (const e3 of t2)
          for (const t3 of e3.styles)
            n2[t3[0]] = e3.inverse ? null : t3.slice(1);
        let r2 = e2;
        for (const e3 of Object.keys(n2))
          if (Array.isArray(n2[e3])) {
            if (!(e3 in r2))
              throw new Error("Unknown Chalk style: ".concat(e3));
            r2 = n2[e3].length > 0 ? r2[e3].apply(r2, n2[e3]) : r2[e3];
          }
        return r2;
      }
      var oi = (e2, t2) => {
        const n2 = [], r2 = [];
        let o2 = [];
        if (t2.replace(Xo, (t3, i2, u2, s2, a2, c2) => {
          if (i2)
            o2.push(ei(i2));
          else if (s2) {
            const t4 = o2.join("");
            o2 = [], r2.push(0 === n2.length ? t4 : ri(e2, n2)(t4)), n2.push({ inverse: u2, styles: ni(s2) });
          } else if (a2) {
            if (0 === n2.length)
              throw new Error("Found extraneous } in Chalk template literal");
            r2.push(ri(e2, n2)(o2.join(""))), o2 = [], n2.pop();
          } else
            o2.push(c2);
        }), r2.push(o2.join("")), n2.length > 0) {
          const e3 = "Chalk template literal is missing ".concat(n2.length, " closing bracket").concat(1 === n2.length ? "" : "s", " (`}`)");
          throw new Error(e3);
        }
        return r2.join("");
      }, ii = i(function(e2) {
        const t2 = Jo.stdout, n2 = "win32" === nt.platform && !(nt.env.TERM || "").toLowerCase().startsWith("xterm"), r2 = ["ansi", "ansi", "ansi256", "ansi16m"], o2 = /* @__PURE__ */ new Set(["gray"]), i2 = /* @__PURE__ */ Object.create(null);
        function u2(e3, n3) {
          n3 = n3 || {};
          const r3 = t2 ? t2.level : 0;
          e3.level = void 0 === n3.level ? r3 : n3.level, e3.enabled = "enabled" in n3 ? n3.enabled : e3.level > 0;
        }
        function s2(e3) {
          if (!this || !(this instanceof s2) || this.template) {
            const t3 = {};
            return u2(t3, e3), t3.template = function() {
              const e4 = [].slice.call(arguments);
              return p2.apply(null, [t3.template].concat(e4));
            }, Object.setPrototypeOf(t3, s2.prototype), Object.setPrototypeOf(t3.template, t3), t3.template.constructor = s2, t3.template;
          }
          u2(this, e3);
        }
        n2 && (So.blue.open = "\x1B[94m");
        for (const e3 of Object.keys(So))
          So[e3].closeRe = new RegExp(yo(So[e3].close), "g"), i2[e3] = { get() {
            const t3 = So[e3];
            return c2.call(this, this._styles ? this._styles.concat(t3) : [t3], this._empty, e3);
          } };
        i2.visible = { get() {
          return c2.call(this, this._styles || [], true, "visible");
        } }, So.color.closeRe = new RegExp(yo(So.color.close), "g");
        for (const e3 of Object.keys(So.color.ansi))
          o2.has(e3) || (i2[e3] = { get() {
            const t3 = this.level;
            return function() {
              const n3 = So.color[r2[t3]][e3].apply(null, arguments), o3 = { open: n3, close: So.color.close, closeRe: So.color.closeRe };
              return c2.call(this, this._styles ? this._styles.concat(o3) : [o3], this._empty, e3);
            };
          } });
        So.bgColor.closeRe = new RegExp(yo(So.bgColor.close), "g");
        for (const e3 of Object.keys(So.bgColor.ansi)) {
          if (o2.has(e3))
            continue;
          i2["bg" + e3[0].toUpperCase() + e3.slice(1)] = { get() {
            const t3 = this.level;
            return function() {
              const n3 = So.bgColor[r2[t3]][e3].apply(null, arguments), o3 = { open: n3, close: So.bgColor.close, closeRe: So.bgColor.closeRe };
              return c2.call(this, this._styles ? this._styles.concat(o3) : [o3], this._empty, e3);
            };
          } };
        }
        const a2 = Object.defineProperties(() => {
        }, i2);
        function c2(e3, t3, n3) {
          const r3 = function() {
            return l2.apply(r3, arguments);
          };
          r3._styles = e3, r3._empty = t3;
          const o3 = this;
          return Object.defineProperty(r3, "level", { enumerable: true, get: () => o3.level, set(e4) {
            o3.level = e4;
          } }), Object.defineProperty(r3, "enabled", { enumerable: true, get: () => o3.enabled, set(e4) {
            o3.enabled = e4;
          } }), r3.hasGrey = this.hasGrey || "gray" === n3 || "grey" === n3, r3.__proto__ = a2, r3;
        }
        function l2() {
          const e3 = arguments, t3 = e3.length;
          let r3 = String(arguments[0]);
          if (0 === t3)
            return "";
          if (t3 > 1)
            for (let n3 = 1; n3 < t3; n3++)
              r3 += " " + e3[n3];
          if (!this.enabled || this.level <= 0 || !r3)
            return this._empty ? "" : r3;
          const o3 = So.dim.open;
          n2 && this.hasGrey && (So.dim.open = "");
          for (const e4 of this._styles.slice().reverse())
            r3 = e4.open + r3.replace(e4.closeRe, e4.open) + e4.close, r3 = r3.replace(/\r?\n/g, "".concat(e4.close, "$&").concat(e4.open));
          return So.dim.open = o3, r3;
        }
        function p2(e3, t3) {
          if (!Array.isArray(t3))
            return [].slice.call(arguments, 1).join(" ");
          const n3 = [].slice.call(arguments, 2), r3 = [t3.raw[0]];
          for (let e4 = 1; e4 < t3.length; e4++)
            r3.push(String(n3[e4 - 1]).replace(/[{}\\]/g, "\\$&")), r3.push(String(t3.raw[e4]));
          return oi(e3, r3.join(""));
        }
        Object.defineProperties(s2.prototype, i2), e2.exports = s2(), e2.exports.supportsColor = t2, e2.exports.default = e2.exports;
      }), ui = Object.defineProperty({ commonDeprecatedHandler: (e2, t2, { descriptor: n2 }) => {
        const r2 = ["".concat(ii.default.yellow("string" == typeof e2 ? n2.key(e2) : n2.pair(e2)), " is deprecated")];
        return t2 && r2.push("we now treat it as ".concat(ii.default.blue("string" == typeof t2 ? n2.key(t2) : n2.pair(t2)))), r2.join("; ") + ".";
      } }, "__esModule", { value: true }), si = i(function(e2, t2) {
        Object.defineProperty(t2, "__esModule", { value: true }), fo.__exportStar(ui, t2);
      }), ai = Object.defineProperty({ commonInvalidHandler: (e2, t2, n2) => ["Invalid ".concat(ii.default.red(n2.descriptor.key(e2)), " value."), "Expected ".concat(ii.default.blue(n2.schemas[e2].expected(n2)), ","), "but received ".concat(ii.default.red(n2.descriptor.value(t2)), ".")].join(" ") }, "__esModule", { value: true }), ci = i(function(e2, t2) {
        Object.defineProperty(t2, "__esModule", { value: true }), fo.__exportStar(ai, t2);
      }), li = [], pi = [], fi = Object.defineProperty({ levenUnknownHandler: (e2, t2, { descriptor: n2, logger: r2, schemas: o2 }) => {
        const i2 = ["Ignored unknown option ".concat(ii.default.yellow(n2.pair({ key: e2, value: t2 })), ".")], u2 = Object.keys(o2).sort().find((t3) => function(e3, t4) {
          if (e3 === t4)
            return 0;
          var n3 = e3;
          e3.length > t4.length && (e3 = t4, t4 = n3);
          var r3 = e3.length, o3 = t4.length;
          if (0 === r3)
            return o3;
          if (0 === o3)
            return r3;
          for (; r3 > 0 && e3.charCodeAt(~-r3) === t4.charCodeAt(~-o3); )
            r3--, o3--;
          if (0 === r3)
            return o3;
          for (var i3, u3, s2, a2, c2 = 0; c2 < r3 && e3.charCodeAt(c2) === t4.charCodeAt(c2); )
            c2++;
          if (o3 -= c2, 0 == (r3 -= c2))
            return o3;
          for (var l2 = 0, p2 = 0; l2 < r3; )
            pi[c2 + l2] = e3.charCodeAt(c2 + l2), li[l2] = ++l2;
          for (; p2 < o3; )
            for (i3 = t4.charCodeAt(c2 + p2), s2 = p2++, u3 = p2, l2 = 0; l2 < r3; l2++)
              a2 = i3 === pi[c2 + l2] ? s2 : s2 + 1, s2 = li[l2], u3 = li[l2] = s2 > u3 ? a2 > u3 ? u3 + 1 : a2 : a2 > s2 ? s2 + 1 : a2;
          return u3;
        }(e2, t3) < 3);
        u2 && i2.push("Did you mean ".concat(ii.default.blue(n2.key(u2)), "?")), r2.warn(i2.join(" "));
      } }, "__esModule", { value: true }), di = i(function(e2, t2) {
        Object.defineProperty(t2, "__esModule", { value: true }), fo.__exportStar(fi, t2);
      }), hi = i(function(e2, t2) {
        Object.defineProperty(t2, "__esModule", { value: true }), fo.__exportStar(si, t2), fo.__exportStar(ci, t2), fo.__exportStar(di, t2);
      });
      const mi = ["default", "expected", "validate", "deprecated", "forward", "redirect", "overlap", "preprocess", "postprocess"];
      function gi(e2, t2) {
        const n2 = new e2(t2), r2 = Object.create(n2);
        for (const e3 of mi)
          e3 in t2 && (r2[e3] = bi(t2[e3], n2, Di.prototype[e3].length));
        return r2;
      }
      var yi = gi;
      class Di {
        constructor(e2) {
          this.name = e2.name;
        }
        static create(e2) {
          return gi(this, e2);
        }
        default(e2) {
        }
        expected(e2) {
          return "nothing";
        }
        validate(e2, t2) {
          return false;
        }
        deprecated(e2, t2) {
          return false;
        }
        forward(e2, t2) {
        }
        redirect(e2, t2) {
        }
        overlap(e2, t2, n2) {
          return e2;
        }
        preprocess(e2, t2) {
          return e2;
        }
        postprocess(e2, t2) {
          return e2;
        }
      }
      var Ei = Di;
      function bi(e2, t2, n2) {
        return "function" == typeof e2 ? (...r2) => e2(...r2.slice(0, n2 - 1), t2, ...r2.slice(n2 - 1)) : () => e2;
      }
      var Ci = Object.defineProperty({ createSchema: yi, Schema: Ei }, "__esModule", { value: true });
      class vi extends Ci.Schema {
        constructor(e2) {
          super(e2), this._sourceName = e2.sourceName;
        }
        expected(e2) {
          return e2.schemas[this._sourceName].expected(e2);
        }
        validate(e2, t2) {
          return t2.schemas[this._sourceName].validate(e2, t2);
        }
        redirect(e2, t2) {
          return this._sourceName;
        }
      }
      var Ai = vi, Fi = Object.defineProperty({ AliasSchema: Ai }, "__esModule", { value: true });
      class xi extends Ci.Schema {
        expected() {
          return "anything";
        }
        validate() {
          return true;
        }
      }
      var Si = xi, wi = Object.defineProperty({ AnySchema: Si }, "__esModule", { value: true });
      class Ti extends Ci.Schema {
        constructor(e2) {
          var { valueSchema: t2, name: n2 = t2.name } = e2, r2 = fo.__rest(e2, ["valueSchema", "name"]);
          super(Object.assign({}, r2, { name: n2 })), this._valueSchema = t2;
        }
        expected(e2) {
          return "an array of ".concat(this._valueSchema.expected(e2));
        }
        validate(e2, t2) {
          if (!Array.isArray(e2))
            return false;
          const n2 = [];
          for (const r2 of e2) {
            const e3 = t2.normalizeValidateResult(this._valueSchema.validate(r2, t2), r2);
            true !== e3 && n2.push(e3.value);
          }
          return 0 === n2.length || { value: n2 };
        }
        deprecated(e2, t2) {
          const n2 = [];
          for (const r2 of e2) {
            const e3 = t2.normalizeDeprecatedResult(this._valueSchema.deprecated(r2, t2), r2);
            false !== e3 && n2.push(...e3.map(({ value: e4 }) => ({ value: [e4] })));
          }
          return n2;
        }
        forward(e2, t2) {
          const n2 = [];
          for (const r2 of e2) {
            const e3 = t2.normalizeForwardResult(this._valueSchema.forward(r2, t2), r2);
            n2.push(...e3.map(ki));
          }
          return n2;
        }
        redirect(e2, t2) {
          const n2 = [], r2 = [];
          for (const o2 of e2) {
            const e3 = t2.normalizeRedirectResult(this._valueSchema.redirect(o2, t2), o2);
            "remain" in e3 && n2.push(e3.remain), r2.push(...e3.redirect.map(ki));
          }
          return 0 === n2.length ? { redirect: r2 } : { redirect: r2, remain: n2 };
        }
        overlap(e2, t2) {
          return e2.concat(t2);
        }
      }
      var Bi = Ti;
      function ki({ from: e2, to: t2 }) {
        return { from: [e2], to: t2 };
      }
      var Ni = Object.defineProperty({ ArraySchema: Bi }, "__esModule", { value: true });
      class Pi extends Ci.Schema {
        expected() {
          return "true or false";
        }
        validate(e2) {
          return "boolean" == typeof e2;
        }
      }
      var Oi = Pi, Ii = Object.defineProperty({ BooleanSchema: Oi }, "__esModule", { value: true });
      var ji = function(e2, t2) {
        const n2 = /* @__PURE__ */ Object.create(null);
        for (const r2 of e2) {
          const e3 = r2[t2];
          if (n2[e3])
            throw new Error("Duplicate ".concat(t2, " ").concat(JSON.stringify(e3)));
          n2[e3] = r2;
        }
        return n2;
      };
      var Li = function(e2, t2) {
        const n2 = /* @__PURE__ */ new Map();
        for (const r2 of e2) {
          const e3 = r2[t2];
          if (n2.has(e3))
            throw new Error("Duplicate ".concat(t2, " ").concat(JSON.stringify(e3)));
          n2.set(e3, r2);
        }
        return n2;
      };
      var _i = function() {
        const e2 = /* @__PURE__ */ Object.create(null);
        return (t2) => {
          const n2 = JSON.stringify(t2);
          return !!e2[n2] || (e2[n2] = true, false);
        };
      };
      var Mi = function(e2, t2) {
        const n2 = [], r2 = [];
        for (const o2 of e2)
          t2(o2) ? n2.push(o2) : r2.push(o2);
        return [n2, r2];
      };
      var Ri = function(e2) {
        return e2 === Math.floor(e2);
      };
      var Vi = function(e2, t2) {
        if (e2 === t2)
          return 0;
        const n2 = typeof e2, r2 = typeof t2, o2 = ["undefined", "object", "boolean", "number", "string"];
        return n2 !== r2 ? o2.indexOf(n2) - o2.indexOf(r2) : "string" !== n2 ? Number(e2) - Number(t2) : e2.localeCompare(t2);
      };
      var $i = function(e2) {
        return void 0 === e2 ? {} : e2;
      };
      var qi = function(e2, t2) {
        return true === e2 || (false === e2 ? { value: t2 } : e2);
      };
      var Wi = function(e2, t2, n2 = false) {
        return false !== e2 && (true === e2 ? !!n2 || [{ value: t2 }] : "value" in e2 ? [e2] : 0 !== e2.length && e2);
      };
      function Ui(e2, t2) {
        return "string" == typeof e2 || "key" in e2 ? { from: t2, to: e2 } : "from" in e2 ? { from: e2.from, to: e2.to } : { from: t2, to: e2.to };
      }
      var zi = Ui;
      function Hi(e2, t2) {
        return void 0 === e2 ? [] : Array.isArray(e2) ? e2.map((e3) => Ui(e3, t2)) : [Ui(e2, t2)];
      }
      var Gi = Hi;
      var Ji = function(e2, t2) {
        const n2 = Hi("object" == typeof e2 && "redirect" in e2 ? e2.redirect : e2, t2);
        return 0 === n2.length ? { remain: t2, redirect: n2 } : "object" == typeof e2 && "remain" in e2 ? { remain: e2.remain, redirect: n2 } : { redirect: n2 };
      }, Xi = Object.defineProperty({ recordFromArray: ji, mapFromArray: Li, createAutoChecklist: _i, partition: Mi, isInt: Ri, comparePrimitive: Vi, normalizeDefaultResult: $i, normalizeValidateResult: qi, normalizeDeprecatedResult: Wi, normalizeTransferResult: zi, normalizeForwardResult: Gi, normalizeRedirectResult: Ji }, "__esModule", { value: true });
      class Yi extends Ci.Schema {
        constructor(e2) {
          super(e2), this._choices = Xi.mapFromArray(e2.choices.map((e3) => e3 && "object" == typeof e3 ? e3 : { value: e3 }), "value");
        }
        expected({ descriptor: e2 }) {
          const t2 = Array.from(this._choices.keys()).map((e3) => this._choices.get(e3)).filter((e3) => !e3.deprecated).map((e3) => e3.value).sort(Xi.comparePrimitive).map(e2.value), n2 = t2.slice(0, -2), r2 = t2.slice(-2);
          return n2.concat(r2.join(" or ")).join(", ");
        }
        validate(e2) {
          return this._choices.has(e2);
        }
        deprecated(e2) {
          const t2 = this._choices.get(e2);
          return !(!t2 || !t2.deprecated) && { value: e2 };
        }
        forward(e2) {
          const t2 = this._choices.get(e2);
          return t2 ? t2.forward : void 0;
        }
        redirect(e2) {
          const t2 = this._choices.get(e2);
          return t2 ? t2.redirect : void 0;
        }
      }
      var Ki = Yi, Qi = Object.defineProperty({ ChoiceSchema: Ki }, "__esModule", { value: true });
      class Zi extends Ci.Schema {
        expected() {
          return "a number";
        }
        validate(e2, t2) {
          return "number" == typeof e2;
        }
      }
      var eu = Zi, tu = Object.defineProperty({ NumberSchema: eu }, "__esModule", { value: true });
      class nu extends tu.NumberSchema {
        expected() {
          return "an integer";
        }
        validate(e2, t2) {
          return true === t2.normalizeValidateResult(super.validate(e2, t2), e2) && Xi.isInt(e2);
        }
      }
      var ru = nu, ou = Object.defineProperty({ IntegerSchema: ru }, "__esModule", { value: true });
      class iu extends Ci.Schema {
        expected() {
          return "a string";
        }
        validate(e2) {
          return "string" == typeof e2;
        }
      }
      var uu = iu, su = Object.defineProperty({ StringSchema: uu }, "__esModule", { value: true }), au = i(function(e2, t2) {
        Object.defineProperty(t2, "__esModule", { value: true }), fo.__exportStar(Fi, t2), fo.__exportStar(wi, t2), fo.__exportStar(Ni, t2), fo.__exportStar(Ii, t2), fo.__exportStar(Qi, t2), fo.__exportStar(ou, t2), fo.__exportStar(tu, t2), fo.__exportStar(su, t2);
      }), cu = ho.apiDescriptor, lu = fi.levenUnknownHandler, pu = ci.commonInvalidHandler, fu = ui.commonDeprecatedHandler, du = Object.defineProperty({ defaultDescriptor: cu, defaultUnknownHandler: lu, defaultInvalidHandler: pu, defaultDeprecatedHandler: fu }, "__esModule", { value: true });
      class hu {
        constructor(e2, t2) {
          const { logger: n2 = console, descriptor: r2 = du.defaultDescriptor, unknown: o2 = du.defaultUnknownHandler, invalid: i2 = du.defaultInvalidHandler, deprecated: u2 = du.defaultDeprecatedHandler } = t2 || {};
          this._utils = { descriptor: r2, logger: n2 || { warn: () => {
          } }, schemas: Xi.recordFromArray(e2, "name"), normalizeDefaultResult: Xi.normalizeDefaultResult, normalizeDeprecatedResult: Xi.normalizeDeprecatedResult, normalizeForwardResult: Xi.normalizeForwardResult, normalizeRedirectResult: Xi.normalizeRedirectResult, normalizeValidateResult: Xi.normalizeValidateResult }, this._unknownHandler = o2, this._invalidHandler = i2, this._deprecatedHandler = u2, this.cleanHistory();
        }
        cleanHistory() {
          this._hasDeprecationWarned = Xi.createAutoChecklist();
        }
        normalize(e2) {
          const t2 = {}, n2 = [e2], r2 = () => {
            for (; 0 !== n2.length; ) {
              const e3 = n2.shift(), r3 = this._applyNormalization(e3, t2);
              n2.push(...r3);
            }
          };
          r2();
          for (const e3 of Object.keys(this._utils.schemas)) {
            const r3 = this._utils.schemas[e3];
            if (!(e3 in t2)) {
              const t3 = Xi.normalizeDefaultResult(r3.default(this._utils));
              "value" in t3 && n2.push({ [e3]: t3.value });
            }
          }
          r2();
          for (const e3 of Object.keys(this._utils.schemas)) {
            const n3 = this._utils.schemas[e3];
            e3 in t2 && (t2[e3] = n3.postprocess(t2[e3], this._utils));
          }
          return t2;
        }
        _applyNormalization(e2, t2) {
          const n2 = [], [r2, o2] = Xi.partition(Object.keys(e2), (e3) => e3 in this._utils.schemas);
          for (const o3 of r2) {
            const r3 = this._utils.schemas[o3], i2 = r3.preprocess(e2[o3], this._utils), u2 = Xi.normalizeValidateResult(r3.validate(i2, this._utils), i2);
            if (true !== u2) {
              const { value: e3 } = u2, t3 = this._invalidHandler(o3, e3, this._utils);
              throw "string" == typeof t3 ? new Error(t3) : t3;
            }
            const s2 = ({ from: e3, to: t3 }) => {
              n2.push("string" == typeof t3 ? { [t3]: e3 } : { [t3.key]: t3.value });
            }, a2 = ({ value: e3, redirectTo: t3 }) => {
              const n3 = Xi.normalizeDeprecatedResult(r3.deprecated(e3, this._utils), i2, true);
              if (false !== n3)
                if (true === n3)
                  this._hasDeprecationWarned(o3) || this._utils.logger.warn(this._deprecatedHandler(o3, t3, this._utils));
                else
                  for (const { value: e4 } of n3) {
                    const n4 = { key: o3, value: e4 };
                    if (!this._hasDeprecationWarned(n4)) {
                      const r4 = "string" == typeof t3 ? { key: t3, value: e4 } : t3;
                      this._utils.logger.warn(this._deprecatedHandler(n4, r4, this._utils));
                    }
                  }
            };
            Xi.normalizeForwardResult(r3.forward(i2, this._utils), i2).forEach(s2);
            const c2 = Xi.normalizeRedirectResult(r3.redirect(i2, this._utils), i2);
            if (c2.redirect.forEach(s2), "remain" in c2) {
              const e3 = c2.remain;
              t2[o3] = o3 in t2 ? r3.overlap(t2[o3], e3, this._utils) : e3, a2({ value: e3 });
            }
            for (const { from: e3, to: t3 } of c2.redirect)
              a2({ value: e3, redirectTo: t3 });
          }
          for (const r3 of o2) {
            const o3 = e2[r3], i2 = this._unknownHandler(r3, o3, this._utils);
            if (i2)
              for (const e3 of Object.keys(i2)) {
                const r4 = { [e3]: i2[e3] };
                e3 in this._utils.schemas ? n2.push(r4) : Object.assign(t2, r4);
              }
          }
          return n2;
        }
      }
      var mu = hu, gu = Object.defineProperty({ normalize: (e2, t2, n2) => new hu(t2, n2).normalize(e2), Normalizer: mu }, "__esModule", { value: true }), yu = i(function(e2, t2) {
        Object.defineProperty(t2, "__esModule", { value: true }), fo.__exportStar(mo, t2), fo.__exportStar(hi, t2), fo.__exportStar(au, t2), fo.__exportStar(gu, t2), fo.__exportStar(Ci, t2);
      });
      const Du = [], Eu = [], bu = (e2, t2) => {
        if (e2 === t2)
          return 0;
        const n2 = e2;
        e2.length > t2.length && (e2 = t2, t2 = n2);
        let r2 = e2.length, o2 = t2.length;
        for (; r2 > 0 && e2.charCodeAt(~-r2) === t2.charCodeAt(~-o2); )
          r2--, o2--;
        let i2, u2, s2, a2, c2 = 0;
        for (; c2 < r2 && e2.charCodeAt(c2) === t2.charCodeAt(c2); )
          c2++;
        if (r2 -= c2, o2 -= c2, 0 === r2)
          return o2;
        let l2 = 0, p2 = 0;
        for (; l2 < r2; )
          Eu[l2] = e2.charCodeAt(c2 + l2), Du[l2] = ++l2;
        for (; p2 < o2; )
          for (i2 = t2.charCodeAt(c2 + p2), s2 = p2++, u2 = p2, l2 = 0; l2 < r2; l2++)
            a2 = i2 === Eu[l2] ? s2 : s2 + 1, s2 = Du[l2], u2 = Du[l2] = s2 > u2 ? a2 > u2 ? u2 + 1 : a2 : a2 > s2 ? s2 + 1 : a2;
        return u2;
      };
      var Cu = bu, vu = bu;
      Cu.default = vu;
      var Au = { aliceblue: [240, 248, 255], antiquewhite: [250, 235, 215], aqua: [0, 255, 255], aquamarine: [127, 255, 212], azure: [240, 255, 255], beige: [245, 245, 220], bisque: [255, 228, 196], black: [0, 0, 0], blanchedalmond: [255, 235, 205], blue: [0, 0, 255], blueviolet: [138, 43, 226], brown: [165, 42, 42], burlywood: [222, 184, 135], cadetblue: [95, 158, 160], chartreuse: [127, 255, 0], chocolate: [210, 105, 30], coral: [255, 127, 80], cornflowerblue: [100, 149, 237], cornsilk: [255, 248, 220], crimson: [220, 20, 60], cyan: [0, 255, 255], darkblue: [0, 0, 139], darkcyan: [0, 139, 139], darkgoldenrod: [184, 134, 11], darkgray: [169, 169, 169], darkgreen: [0, 100, 0], darkgrey: [169, 169, 169], darkkhaki: [189, 183, 107], darkmagenta: [139, 0, 139], darkolivegreen: [85, 107, 47], darkorange: [255, 140, 0], darkorchid: [153, 50, 204], darkred: [139, 0, 0], darksalmon: [233, 150, 122], darkseagreen: [143, 188, 143], darkslateblue: [72, 61, 139], darkslategray: [47, 79, 79], darkslategrey: [47, 79, 79], darkturquoise: [0, 206, 209], darkviolet: [148, 0, 211], deeppink: [255, 20, 147], deepskyblue: [0, 191, 255], dimgray: [105, 105, 105], dimgrey: [105, 105, 105], dodgerblue: [30, 144, 255], firebrick: [178, 34, 34], floralwhite: [255, 250, 240], forestgreen: [34, 139, 34], fuchsia: [255, 0, 255], gainsboro: [220, 220, 220], ghostwhite: [248, 248, 255], gold: [255, 215, 0], goldenrod: [218, 165, 32], gray: [128, 128, 128], green: [0, 128, 0], greenyellow: [173, 255, 47], grey: [128, 128, 128], honeydew: [240, 255, 240], hotpink: [255, 105, 180], indianred: [205, 92, 92], indigo: [75, 0, 130], ivory: [255, 255, 240], khaki: [240, 230, 140], lavender: [230, 230, 250], lavenderblush: [255, 240, 245], lawngreen: [124, 252, 0], lemonchiffon: [255, 250, 205], lightblue: [173, 216, 230], lightcoral: [240, 128, 128], lightcyan: [224, 255, 255], lightgoldenrodyellow: [250, 250, 210], lightgray: [211, 211, 211], lightgreen: [144, 238, 144], lightgrey: [211, 211, 211], lightpink: [255, 182, 193], lightsalmon: [255, 160, 122], lightseagreen: [32, 178, 170], lightskyblue: [135, 206, 250], lightslategray: [119, 136, 153], lightslategrey: [119, 136, 153], lightsteelblue: [176, 196, 222], lightyellow: [255, 255, 224], lime: [0, 255, 0], limegreen: [50, 205, 50], linen: [250, 240, 230], magenta: [255, 0, 255], maroon: [128, 0, 0], mediumaquamarine: [102, 205, 170], mediumblue: [0, 0, 205], mediumorchid: [186, 85, 211], mediumpurple: [147, 112, 219], mediumseagreen: [60, 179, 113], mediumslateblue: [123, 104, 238], mediumspringgreen: [0, 250, 154], mediumturquoise: [72, 209, 204], mediumvioletred: [199, 21, 133], midnightblue: [25, 25, 112], mintcream: [245, 255, 250], mistyrose: [255, 228, 225], moccasin: [255, 228, 181], navajowhite: [255, 222, 173], navy: [0, 0, 128], oldlace: [253, 245, 230], olive: [128, 128, 0], olivedrab: [107, 142, 35], orange: [255, 165, 0], orangered: [255, 69, 0], orchid: [218, 112, 214], palegoldenrod: [238, 232, 170], palegreen: [152, 251, 152], paleturquoise: [175, 238, 238], palevioletred: [219, 112, 147], papayawhip: [255, 239, 213], peachpuff: [255, 218, 185], peru: [205, 133, 63], pink: [255, 192, 203], plum: [221, 160, 221], powderblue: [176, 224, 230], purple: [128, 0, 128], rebeccapurple: [102, 51, 153], red: [255, 0, 0], rosybrown: [188, 143, 143], royalblue: [65, 105, 225], saddlebrown: [139, 69, 19], salmon: [250, 128, 114], sandybrown: [244, 164, 96], seagreen: [46, 139, 87], seashell: [255, 245, 238], sienna: [160, 82, 45], silver: [192, 192, 192], skyblue: [135, 206, 235], slateblue: [106, 90, 205], slategray: [112, 128, 144], slategrey: [112, 128, 144], snow: [255, 250, 250], springgreen: [0, 255, 127], steelblue: [70, 130, 180], tan: [210, 180, 140], teal: [0, 128, 128], thistle: [216, 191, 216], tomato: [255, 99, 71], turquoise: [64, 224, 208], violet: [238, 130, 238], wheat: [245, 222, 179], white: [255, 255, 255], whitesmoke: [245, 245, 245], yellow: [255, 255, 0], yellowgreen: [154, 205, 50] };
      const Fu = {};
      for (const e2 of Object.keys(Au))
        Fu[Au[e2]] = e2;
      const xu = { rgb: { channels: 3, labels: "rgb" }, hsl: { channels: 3, labels: "hsl" }, hsv: { channels: 3, labels: "hsv" }, hwb: { channels: 3, labels: "hwb" }, cmyk: { channels: 4, labels: "cmyk" }, xyz: { channels: 3, labels: "xyz" }, lab: { channels: 3, labels: "lab" }, lch: { channels: 3, labels: "lch" }, hex: { channels: 1, labels: ["hex"] }, keyword: { channels: 1, labels: ["keyword"] }, ansi16: { channels: 1, labels: ["ansi16"] }, ansi256: { channels: 1, labels: ["ansi256"] }, hcg: { channels: 3, labels: ["h", "c", "g"] }, apple: { channels: 3, labels: ["r16", "g16", "b16"] }, gray: { channels: 1, labels: ["gray"] } };
      var Su = xu;
      for (const e2 of Object.keys(xu)) {
        if (!("channels" in xu[e2]))
          throw new Error("missing channels property: " + e2);
        if (!("labels" in xu[e2]))
          throw new Error("missing channel labels property: " + e2);
        if (xu[e2].labels.length !== xu[e2].channels)
          throw new Error("channel and label counts mismatch: " + e2);
        const { channels: t2, labels: n2 } = xu[e2];
        delete xu[e2].channels, delete xu[e2].labels, Object.defineProperty(xu[e2], "channels", { value: t2 }), Object.defineProperty(xu[e2], "labels", { value: n2 });
      }
      function wu(e2) {
        const t2 = function() {
          const e3 = {}, t3 = Object.keys(Su);
          for (let n3 = t3.length, r2 = 0; r2 < n3; r2++)
            e3[t3[r2]] = { distance: -1, parent: null };
          return e3;
        }(), n2 = [e2];
        for (t2[e2].distance = 0; n2.length; ) {
          const e3 = n2.pop(), r2 = Object.keys(Su[e3]);
          for (let o2 = r2.length, i2 = 0; i2 < o2; i2++) {
            const o3 = r2[i2], u2 = t2[o3];
            -1 === u2.distance && (u2.distance = t2[e3].distance + 1, u2.parent = e3, n2.unshift(o3));
          }
        }
        return t2;
      }
      function Tu(e2, t2) {
        return function(n2) {
          return t2(e2(n2));
        };
      }
      function Bu(e2, t2) {
        const n2 = [t2[e2].parent, e2];
        let r2 = Su[t2[e2].parent][e2], o2 = t2[e2].parent;
        for (; t2[o2].parent; )
          n2.unshift(t2[o2].parent), r2 = Tu(Su[t2[o2].parent][o2], r2), o2 = t2[o2].parent;
        return r2.conversion = n2, r2;
      }
      xu.rgb.hsl = function(e2) {
        const t2 = e2[0] / 255, n2 = e2[1] / 255, r2 = e2[2] / 255, o2 = Math.min(t2, n2, r2), i2 = Math.max(t2, n2, r2), u2 = i2 - o2;
        let s2, a2;
        i2 === o2 ? s2 = 0 : t2 === i2 ? s2 = (n2 - r2) / u2 : n2 === i2 ? s2 = 2 + (r2 - t2) / u2 : r2 === i2 && (s2 = 4 + (t2 - n2) / u2), s2 = Math.min(60 * s2, 360), s2 < 0 && (s2 += 360);
        const c2 = (o2 + i2) / 2;
        return a2 = i2 === o2 ? 0 : c2 <= 0.5 ? u2 / (i2 + o2) : u2 / (2 - i2 - o2), [s2, 100 * a2, 100 * c2];
      }, xu.rgb.hsv = function(e2) {
        let t2, n2, r2, o2, i2;
        const u2 = e2[0] / 255, s2 = e2[1] / 255, a2 = e2[2] / 255, c2 = Math.max(u2, s2, a2), l2 = c2 - Math.min(u2, s2, a2), p2 = function(e3) {
          return (c2 - e3) / 6 / l2 + 0.5;
        };
        return 0 === l2 ? (o2 = 0, i2 = 0) : (i2 = l2 / c2, t2 = p2(u2), n2 = p2(s2), r2 = p2(a2), u2 === c2 ? o2 = r2 - n2 : s2 === c2 ? o2 = 1 / 3 + t2 - r2 : a2 === c2 && (o2 = 2 / 3 + n2 - t2), o2 < 0 ? o2 += 1 : o2 > 1 && (o2 -= 1)), [360 * o2, 100 * i2, 100 * c2];
      }, xu.rgb.hwb = function(e2) {
        const t2 = e2[0], n2 = e2[1];
        let r2 = e2[2];
        const o2 = xu.rgb.hsl(e2)[0], i2 = 1 / 255 * Math.min(t2, Math.min(n2, r2));
        return r2 = 1 - 1 / 255 * Math.max(t2, Math.max(n2, r2)), [o2, 100 * i2, 100 * r2];
      }, xu.rgb.cmyk = function(e2) {
        const t2 = e2[0] / 255, n2 = e2[1] / 255, r2 = e2[2] / 255, o2 = Math.min(1 - t2, 1 - n2, 1 - r2);
        return [100 * ((1 - t2 - o2) / (1 - o2) || 0), 100 * ((1 - n2 - o2) / (1 - o2) || 0), 100 * ((1 - r2 - o2) / (1 - o2) || 0), 100 * o2];
      }, xu.rgb.keyword = function(e2) {
        const t2 = Fu[e2];
        if (t2)
          return t2;
        let n2, r2 = 1 / 0;
        for (const t3 of Object.keys(Au)) {
          const u2 = (i2 = Au[t3], ((o2 = e2)[0] - i2[0]) ** 2 + (o2[1] - i2[1]) ** 2 + (o2[2] - i2[2]) ** 2);
          u2 < r2 && (r2 = u2, n2 = t3);
        }
        var o2, i2;
        return n2;
      }, xu.keyword.rgb = function(e2) {
        return Au[e2];
      }, xu.rgb.xyz = function(e2) {
        let t2 = e2[0] / 255, n2 = e2[1] / 255, r2 = e2[2] / 255;
        t2 = t2 > 0.04045 ? ((t2 + 0.055) / 1.055) ** 2.4 : t2 / 12.92, n2 = n2 > 0.04045 ? ((n2 + 0.055) / 1.055) ** 2.4 : n2 / 12.92, r2 = r2 > 0.04045 ? ((r2 + 0.055) / 1.055) ** 2.4 : r2 / 12.92;
        return [100 * (0.4124 * t2 + 0.3576 * n2 + 0.1805 * r2), 100 * (0.2126 * t2 + 0.7152 * n2 + 0.0722 * r2), 100 * (0.0193 * t2 + 0.1192 * n2 + 0.9505 * r2)];
      }, xu.rgb.lab = function(e2) {
        const t2 = xu.rgb.xyz(e2);
        let n2 = t2[0], r2 = t2[1], o2 = t2[2];
        n2 /= 95.047, r2 /= 100, o2 /= 108.883, n2 = n2 > 8856e-6 ? n2 ** (1 / 3) : 7.787 * n2 + 16 / 116, r2 = r2 > 8856e-6 ? r2 ** (1 / 3) : 7.787 * r2 + 16 / 116, o2 = o2 > 8856e-6 ? o2 ** (1 / 3) : 7.787 * o2 + 16 / 116;
        return [116 * r2 - 16, 500 * (n2 - r2), 200 * (r2 - o2)];
      }, xu.hsl.rgb = function(e2) {
        const t2 = e2[0] / 360, n2 = e2[1] / 100, r2 = e2[2] / 100;
        let o2, i2, u2;
        if (0 === n2)
          return u2 = 255 * r2, [u2, u2, u2];
        o2 = r2 < 0.5 ? r2 * (1 + n2) : r2 + n2 - r2 * n2;
        const s2 = 2 * r2 - o2, a2 = [0, 0, 0];
        for (let e3 = 0; e3 < 3; e3++)
          i2 = t2 + 1 / 3 * -(e3 - 1), i2 < 0 && i2++, i2 > 1 && i2--, u2 = 6 * i2 < 1 ? s2 + 6 * (o2 - s2) * i2 : 2 * i2 < 1 ? o2 : 3 * i2 < 2 ? s2 + (o2 - s2) * (2 / 3 - i2) * 6 : s2, a2[e3] = 255 * u2;
        return a2;
      }, xu.hsl.hsv = function(e2) {
        const t2 = e2[0];
        let n2 = e2[1] / 100, r2 = e2[2] / 100, o2 = n2;
        const i2 = Math.max(r2, 0.01);
        r2 *= 2, n2 *= r2 <= 1 ? r2 : 2 - r2, o2 *= i2 <= 1 ? i2 : 2 - i2;
        return [t2, 100 * (0 === r2 ? 2 * o2 / (i2 + o2) : 2 * n2 / (r2 + n2)), 100 * ((r2 + n2) / 2)];
      }, xu.hsv.rgb = function(e2) {
        const t2 = e2[0] / 60, n2 = e2[1] / 100;
        let r2 = e2[2] / 100;
        const o2 = Math.floor(t2) % 6, i2 = t2 - Math.floor(t2), u2 = 255 * r2 * (1 - n2), s2 = 255 * r2 * (1 - n2 * i2), a2 = 255 * r2 * (1 - n2 * (1 - i2));
        switch (r2 *= 255, o2) {
          case 0:
            return [r2, a2, u2];
          case 1:
            return [s2, r2, u2];
          case 2:
            return [u2, r2, a2];
          case 3:
            return [u2, s2, r2];
          case 4:
            return [a2, u2, r2];
          case 5:
            return [r2, u2, s2];
        }
      }, xu.hsv.hsl = function(e2) {
        const t2 = e2[0], n2 = e2[1] / 100, r2 = e2[2] / 100, o2 = Math.max(r2, 0.01);
        let i2, u2;
        u2 = (2 - n2) * r2;
        const s2 = (2 - n2) * o2;
        return i2 = n2 * o2, i2 /= s2 <= 1 ? s2 : 2 - s2, i2 = i2 || 0, u2 /= 2, [t2, 100 * i2, 100 * u2];
      }, xu.hwb.rgb = function(e2) {
        const t2 = e2[0] / 360;
        let n2 = e2[1] / 100, r2 = e2[2] / 100;
        const o2 = n2 + r2;
        let i2;
        o2 > 1 && (n2 /= o2, r2 /= o2);
        const u2 = Math.floor(6 * t2), s2 = 1 - r2;
        i2 = 6 * t2 - u2, 0 != (1 & u2) && (i2 = 1 - i2);
        const a2 = n2 + i2 * (s2 - n2);
        let c2, l2, p2;
        switch (u2) {
          default:
          case 6:
          case 0:
            c2 = s2, l2 = a2, p2 = n2;
            break;
          case 1:
            c2 = a2, l2 = s2, p2 = n2;
            break;
          case 2:
            c2 = n2, l2 = s2, p2 = a2;
            break;
          case 3:
            c2 = n2, l2 = a2, p2 = s2;
            break;
          case 4:
            c2 = a2, l2 = n2, p2 = s2;
            break;
          case 5:
            c2 = s2, l2 = n2, p2 = a2;
        }
        return [255 * c2, 255 * l2, 255 * p2];
      }, xu.cmyk.rgb = function(e2) {
        const t2 = e2[0] / 100, n2 = e2[1] / 100, r2 = e2[2] / 100, o2 = e2[3] / 100;
        return [255 * (1 - Math.min(1, t2 * (1 - o2) + o2)), 255 * (1 - Math.min(1, n2 * (1 - o2) + o2)), 255 * (1 - Math.min(1, r2 * (1 - o2) + o2))];
      }, xu.xyz.rgb = function(e2) {
        const t2 = e2[0] / 100, n2 = e2[1] / 100, r2 = e2[2] / 100;
        let o2, i2, u2;
        return o2 = 3.2406 * t2 + -1.5372 * n2 + -0.4986 * r2, i2 = -0.9689 * t2 + 1.8758 * n2 + 0.0415 * r2, u2 = 0.0557 * t2 + -0.204 * n2 + 1.057 * r2, o2 = o2 > 31308e-7 ? 1.055 * o2 ** (1 / 2.4) - 0.055 : 12.92 * o2, i2 = i2 > 31308e-7 ? 1.055 * i2 ** (1 / 2.4) - 0.055 : 12.92 * i2, u2 = u2 > 31308e-7 ? 1.055 * u2 ** (1 / 2.4) - 0.055 : 12.92 * u2, o2 = Math.min(Math.max(0, o2), 1), i2 = Math.min(Math.max(0, i2), 1), u2 = Math.min(Math.max(0, u2), 1), [255 * o2, 255 * i2, 255 * u2];
      }, xu.xyz.lab = function(e2) {
        let t2 = e2[0], n2 = e2[1], r2 = e2[2];
        t2 /= 95.047, n2 /= 100, r2 /= 108.883, t2 = t2 > 8856e-6 ? t2 ** (1 / 3) : 7.787 * t2 + 16 / 116, n2 = n2 > 8856e-6 ? n2 ** (1 / 3) : 7.787 * n2 + 16 / 116, r2 = r2 > 8856e-6 ? r2 ** (1 / 3) : 7.787 * r2 + 16 / 116;
        return [116 * n2 - 16, 500 * (t2 - n2), 200 * (n2 - r2)];
      }, xu.lab.xyz = function(e2) {
        let t2, n2, r2;
        n2 = (e2[0] + 16) / 116, t2 = e2[1] / 500 + n2, r2 = n2 - e2[2] / 200;
        const o2 = n2 ** 3, i2 = t2 ** 3, u2 = r2 ** 3;
        return n2 = o2 > 8856e-6 ? o2 : (n2 - 16 / 116) / 7.787, t2 = i2 > 8856e-6 ? i2 : (t2 - 16 / 116) / 7.787, r2 = u2 > 8856e-6 ? u2 : (r2 - 16 / 116) / 7.787, t2 *= 95.047, n2 *= 100, r2 *= 108.883, [t2, n2, r2];
      }, xu.lab.lch = function(e2) {
        const t2 = e2[0], n2 = e2[1], r2 = e2[2];
        let o2;
        o2 = 360 * Math.atan2(r2, n2) / 2 / Math.PI, o2 < 0 && (o2 += 360);
        return [t2, Math.sqrt(n2 * n2 + r2 * r2), o2];
      }, xu.lch.lab = function(e2) {
        const t2 = e2[0], n2 = e2[1], r2 = e2[2] / 360 * 2 * Math.PI;
        return [t2, n2 * Math.cos(r2), n2 * Math.sin(r2)];
      }, xu.rgb.ansi16 = function(e2, t2 = null) {
        const [n2, r2, o2] = e2;
        let i2 = null === t2 ? xu.rgb.hsv(e2)[2] : t2;
        if (i2 = Math.round(i2 / 50), 0 === i2)
          return 30;
        let u2 = 30 + (Math.round(o2 / 255) << 2 | Math.round(r2 / 255) << 1 | Math.round(n2 / 255));
        return 2 === i2 && (u2 += 60), u2;
      }, xu.hsv.ansi16 = function(e2) {
        return xu.rgb.ansi16(xu.hsv.rgb(e2), e2[2]);
      }, xu.rgb.ansi256 = function(e2) {
        const t2 = e2[0], n2 = e2[1], r2 = e2[2];
        if (t2 === n2 && n2 === r2)
          return t2 < 8 ? 16 : t2 > 248 ? 231 : Math.round((t2 - 8) / 247 * 24) + 232;
        return 16 + 36 * Math.round(t2 / 255 * 5) + 6 * Math.round(n2 / 255 * 5) + Math.round(r2 / 255 * 5);
      }, xu.ansi16.rgb = function(e2) {
        let t2 = e2 % 10;
        if (0 === t2 || 7 === t2)
          return e2 > 50 && (t2 += 3.5), t2 = t2 / 10.5 * 255, [t2, t2, t2];
        const n2 = 0.5 * (1 + ~~(e2 > 50));
        return [(1 & t2) * n2 * 255, (t2 >> 1 & 1) * n2 * 255, (t2 >> 2 & 1) * n2 * 255];
      }, xu.ansi256.rgb = function(e2) {
        if (e2 >= 232) {
          const t3 = 10 * (e2 - 232) + 8;
          return [t3, t3, t3];
        }
        let t2;
        e2 -= 16;
        return [Math.floor(e2 / 36) / 5 * 255, Math.floor((t2 = e2 % 36) / 6) / 5 * 255, t2 % 6 / 5 * 255];
      }, xu.rgb.hex = function(e2) {
        const t2 = (((255 & Math.round(e2[0])) << 16) + ((255 & Math.round(e2[1])) << 8) + (255 & Math.round(e2[2]))).toString(16).toUpperCase();
        return "000000".substring(t2.length) + t2;
      }, xu.hex.rgb = function(e2) {
        const t2 = e2.toString(16).match(/[a-f0-9]{6}|[a-f0-9]{3}/i);
        if (!t2)
          return [0, 0, 0];
        let n2 = t2[0];
        3 === t2[0].length && (n2 = n2.split("").map((e3) => e3 + e3).join(""));
        const r2 = parseInt(n2, 16);
        return [r2 >> 16 & 255, r2 >> 8 & 255, 255 & r2];
      }, xu.rgb.hcg = function(e2) {
        const t2 = e2[0] / 255, n2 = e2[1] / 255, r2 = e2[2] / 255, o2 = Math.max(Math.max(t2, n2), r2), i2 = Math.min(Math.min(t2, n2), r2), u2 = o2 - i2;
        let s2, a2;
        return s2 = u2 < 1 ? i2 / (1 - u2) : 0, a2 = u2 <= 0 ? 0 : o2 === t2 ? (n2 - r2) / u2 % 6 : o2 === n2 ? 2 + (r2 - t2) / u2 : 4 + (t2 - n2) / u2, a2 /= 6, a2 %= 1, [360 * a2, 100 * u2, 100 * s2];
      }, xu.hsl.hcg = function(e2) {
        const t2 = e2[1] / 100, n2 = e2[2] / 100, r2 = n2 < 0.5 ? 2 * t2 * n2 : 2 * t2 * (1 - n2);
        let o2 = 0;
        return r2 < 1 && (o2 = (n2 - 0.5 * r2) / (1 - r2)), [e2[0], 100 * r2, 100 * o2];
      }, xu.hsv.hcg = function(e2) {
        const t2 = e2[1] / 100, n2 = e2[2] / 100, r2 = t2 * n2;
        let o2 = 0;
        return r2 < 1 && (o2 = (n2 - r2) / (1 - r2)), [e2[0], 100 * r2, 100 * o2];
      }, xu.hcg.rgb = function(e2) {
        const t2 = e2[0] / 360, n2 = e2[1] / 100, r2 = e2[2] / 100;
        if (0 === n2)
          return [255 * r2, 255 * r2, 255 * r2];
        const o2 = [0, 0, 0], i2 = t2 % 1 * 6, u2 = i2 % 1, s2 = 1 - u2;
        let a2 = 0;
        switch (Math.floor(i2)) {
          case 0:
            o2[0] = 1, o2[1] = u2, o2[2] = 0;
            break;
          case 1:
            o2[0] = s2, o2[1] = 1, o2[2] = 0;
            break;
          case 2:
            o2[0] = 0, o2[1] = 1, o2[2] = u2;
            break;
          case 3:
            o2[0] = 0, o2[1] = s2, o2[2] = 1;
            break;
          case 4:
            o2[0] = u2, o2[1] = 0, o2[2] = 1;
            break;
          default:
            o2[0] = 1, o2[1] = 0, o2[2] = s2;
        }
        return a2 = (1 - n2) * r2, [255 * (n2 * o2[0] + a2), 255 * (n2 * o2[1] + a2), 255 * (n2 * o2[2] + a2)];
      }, xu.hcg.hsv = function(e2) {
        const t2 = e2[1] / 100, n2 = t2 + e2[2] / 100 * (1 - t2);
        let r2 = 0;
        return n2 > 0 && (r2 = t2 / n2), [e2[0], 100 * r2, 100 * n2];
      }, xu.hcg.hsl = function(e2) {
        const t2 = e2[1] / 100, n2 = e2[2] / 100 * (1 - t2) + 0.5 * t2;
        let r2 = 0;
        return n2 > 0 && n2 < 0.5 ? r2 = t2 / (2 * n2) : n2 >= 0.5 && n2 < 1 && (r2 = t2 / (2 * (1 - n2))), [e2[0], 100 * r2, 100 * n2];
      }, xu.hcg.hwb = function(e2) {
        const t2 = e2[1] / 100, n2 = t2 + e2[2] / 100 * (1 - t2);
        return [e2[0], 100 * (n2 - t2), 100 * (1 - n2)];
      }, xu.hwb.hcg = function(e2) {
        const t2 = e2[1] / 100, n2 = 1 - e2[2] / 100, r2 = n2 - t2;
        let o2 = 0;
        return r2 < 1 && (o2 = (n2 - r2) / (1 - r2)), [e2[0], 100 * r2, 100 * o2];
      }, xu.apple.rgb = function(e2) {
        return [e2[0] / 65535 * 255, e2[1] / 65535 * 255, e2[2] / 65535 * 255];
      }, xu.rgb.apple = function(e2) {
        return [e2[0] / 255 * 65535, e2[1] / 255 * 65535, e2[2] / 255 * 65535];
      }, xu.gray.rgb = function(e2) {
        return [e2[0] / 100 * 255, e2[0] / 100 * 255, e2[0] / 100 * 255];
      }, xu.gray.hsl = function(e2) {
        return [0, 0, e2[0]];
      }, xu.gray.hsv = xu.gray.hsl, xu.gray.hwb = function(e2) {
        return [0, 100, e2[0]];
      }, xu.gray.cmyk = function(e2) {
        return [0, 0, 0, e2[0]];
      }, xu.gray.lab = function(e2) {
        return [e2[0], 0, 0];
      }, xu.gray.hex = function(e2) {
        const t2 = 255 & Math.round(e2[0] / 100 * 255), n2 = ((t2 << 16) + (t2 << 8) + t2).toString(16).toUpperCase();
        return "000000".substring(n2.length) + n2;
      }, xu.rgb.gray = function(e2) {
        return [(e2[0] + e2[1] + e2[2]) / 3 / 255 * 100];
      };
      const ku = {};
      Object.keys(Su).forEach((e2) => {
        ku[e2] = {}, Object.defineProperty(ku[e2], "channels", { value: Su[e2].channels }), Object.defineProperty(ku[e2], "labels", { value: Su[e2].labels });
        const t2 = function(e3) {
          const t3 = wu(e3), n2 = {}, r2 = Object.keys(t3);
          for (let e4 = r2.length, o2 = 0; o2 < e4; o2++) {
            const e5 = r2[o2];
            null !== t3[e5].parent && (n2[e5] = Bu(e5, t3));
          }
          return n2;
        }(e2);
        Object.keys(t2).forEach((n2) => {
          const r2 = t2[n2];
          ku[e2][n2] = function(e3) {
            const t3 = function(...t4) {
              const n3 = t4[0];
              if (null == n3)
                return n3;
              n3.length > 1 && (t4 = n3);
              const r3 = e3(t4);
              if ("object" == typeof r3)
                for (let e4 = r3.length, t5 = 0; t5 < e4; t5++)
                  r3[t5] = Math.round(r3[t5]);
              return r3;
            };
            return "conversion" in e3 && (t3.conversion = e3.conversion), t3;
          }(r2), ku[e2][n2].raw = function(e3) {
            const t3 = function(...t4) {
              const n3 = t4[0];
              return null == n3 ? n3 : (n3.length > 1 && (t4 = n3), e3(t4));
            };
            return "conversion" in e3 && (t3.conversion = e3.conversion), t3;
          }(r2);
        });
      });
      var Nu = ku, Pu = i(function(e2) {
        const t2 = (e3, t3) => (...n3) => {
          const r3 = e3(...n3);
          return "\x1B[".concat(r3 + t3, "m");
        }, n2 = (e3, t3) => (...n3) => {
          const r3 = e3(...n3);
          return "\x1B[".concat(38 + t3, ";5;").concat(r3, "m");
        }, r2 = (e3, t3) => (...n3) => {
          const r3 = e3(...n3);
          return "\x1B[".concat(38 + t3, ";2;").concat(r3[0], ";").concat(r3[1], ";").concat(r3[2], "m");
        }, o2 = (e3) => e3, i2 = (e3, t3, n3) => [e3, t3, n3], u2 = (e3, t3, n3) => {
          Object.defineProperty(e3, t3, { get: () => {
            const r3 = n3();
            return Object.defineProperty(e3, t3, { value: r3, enumerable: true, configurable: true }), r3;
          }, enumerable: true, configurable: true });
        };
        let s2;
        const a2 = (e3, t3, n3, r3) => {
          void 0 === s2 && (s2 = Nu);
          const o3 = r3 ? 10 : 0, i3 = {};
          for (const [r4, u3] of Object.entries(s2)) {
            const s3 = "ansi16" === r4 ? "ansi" : r4;
            r4 === t3 ? i3[s3] = e3(n3, o3) : "object" == typeof u3 && (i3[s3] = e3(u3[t3], o3));
          }
          return i3;
        };
        Object.defineProperty(e2, "exports", { enumerable: true, get: function() {
          const e3 = /* @__PURE__ */ new Map(), s3 = { modifier: { reset: [0, 0], bold: [1, 22], dim: [2, 22], italic: [3, 23], underline: [4, 24], inverse: [7, 27], hidden: [8, 28], strikethrough: [9, 29] }, color: { black: [30, 39], red: [31, 39], green: [32, 39], yellow: [33, 39], blue: [34, 39], magenta: [35, 39], cyan: [36, 39], white: [37, 39], blackBright: [90, 39], redBright: [91, 39], greenBright: [92, 39], yellowBright: [93, 39], blueBright: [94, 39], magentaBright: [95, 39], cyanBright: [96, 39], whiteBright: [97, 39] }, bgColor: { bgBlack: [40, 49], bgRed: [41, 49], bgGreen: [42, 49], bgYellow: [43, 49], bgBlue: [44, 49], bgMagenta: [45, 49], bgCyan: [46, 49], bgWhite: [47, 49], bgBlackBright: [100, 49], bgRedBright: [101, 49], bgGreenBright: [102, 49], bgYellowBright: [103, 49], bgBlueBright: [104, 49], bgMagentaBright: [105, 49], bgCyanBright: [106, 49], bgWhiteBright: [107, 49] } };
          s3.color.gray = s3.color.blackBright, s3.bgColor.bgGray = s3.bgColor.bgBlackBright, s3.color.grey = s3.color.blackBright, s3.bgColor.bgGrey = s3.bgColor.bgBlackBright;
          for (const [t3, n3] of Object.entries(s3)) {
            for (const [t4, r3] of Object.entries(n3))
              s3[t4] = { open: "\x1B[".concat(r3[0], "m"), close: "\x1B[".concat(r3[1], "m") }, n3[t4] = s3[t4], e3.set(r3[0], r3[1]);
            Object.defineProperty(s3, t3, { value: n3, enumerable: false });
          }
          return Object.defineProperty(s3, "codes", { value: e3, enumerable: false }), s3.color.close = "\x1B[39m", s3.bgColor.close = "\x1B[49m", u2(s3.color, "ansi", () => a2(t2, "ansi16", o2, false)), u2(s3.color, "ansi256", () => a2(n2, "ansi256", o2, false)), u2(s3.color, "ansi16m", () => a2(r2, "rgb", i2, false)), u2(s3.bgColor, "ansi", () => a2(t2, "ansi16", o2, true)), u2(s3.bgColor, "ansi256", () => a2(n2, "ansi256", o2, true)), u2(s3.bgColor, "ansi16m", () => a2(r2, "rgb", i2, true)), s3;
        } });
      });
      function Ou() {
        return false;
      }
      function Iu() {
        throw new Error("tty.ReadStream is not implemented");
      }
      function ju() {
        throw new Error("tty.ReadStream is not implemented");
      }
      var Lu = { isatty: Ou, ReadStream: Iu, WriteStream: ju }, _u = (e2, t2 = nt.argv) => {
        const n2 = e2.startsWith("-") ? "" : 1 === e2.length ? "-" : "--", r2 = t2.indexOf(n2 + e2), o2 = t2.indexOf("--");
        return -1 !== r2 && (-1 === o2 || r2 < o2);
      }, Mu = o(Object.freeze({ __proto__: null, isatty: Ou, ReadStream: Iu, WriteStream: ju, default: Lu }));
      const { env: Ru } = nt;
      let Vu;
      function $u(e2) {
        return 0 !== e2 && { level: e2, hasBasic: true, has256: e2 >= 2, has16m: e2 >= 3 };
      }
      function qu(e2, t2) {
        if (0 === Vu)
          return 0;
        if (_u("color=16m") || _u("color=full") || _u("color=truecolor"))
          return 3;
        if (_u("color=256"))
          return 2;
        if (e2 && !t2 && void 0 === Vu)
          return 0;
        const n2 = Vu || 0;
        if ("dumb" === Ru.TERM)
          return n2;
        if ("win32" === nt.platform) {
          const e3 = Uo.release().split(".");
          return Number(e3[0]) >= 10 && Number(e3[2]) >= 10586 ? Number(e3[2]) >= 14931 ? 3 : 2 : 1;
        }
        if ("CI" in Ru)
          return ["TRAVIS", "CIRCLECI", "APPVEYOR", "GITLAB_CI", "GITHUB_ACTIONS", "BUILDKITE"].some((e3) => e3 in Ru) || "codeship" === Ru.CI_NAME ? 1 : n2;
        if ("TEAMCITY_VERSION" in Ru)
          return /^(9\.(0*[1-9]\d*)\.|\d{2,}\.)/.test(Ru.TEAMCITY_VERSION) ? 1 : 0;
        if ("truecolor" === Ru.COLORTERM)
          return 3;
        if ("TERM_PROGRAM" in Ru) {
          const e3 = parseInt((Ru.TERM_PROGRAM_VERSION || "").split(".")[0], 10);
          switch (Ru.TERM_PROGRAM) {
            case "iTerm.app":
              return e3 >= 3 ? 3 : 2;
            case "Apple_Terminal":
              return 2;
          }
        }
        return /-256(color)?$/i.test(Ru.TERM) ? 2 : /^screen|^xterm|^vt100|^vt220|^rxvt|color|ansi|cygwin|linux/i.test(Ru.TERM) || "COLORTERM" in Ru ? 1 : n2;
      }
      _u("no-color") || _u("no-colors") || _u("color=false") || _u("color=never") ? Vu = 0 : (_u("color") || _u("colors") || _u("color=true") || _u("color=always")) && (Vu = 1), "FORCE_COLOR" in Ru && (Vu = "true" === Ru.FORCE_COLOR ? 1 : "false" === Ru.FORCE_COLOR ? 0 : 0 === Ru.FORCE_COLOR.length ? 1 : Math.min(parseInt(Ru.FORCE_COLOR, 10), 3));
      var Wu = { supportsColor: function(e2) {
        return $u(qu(e2, e2 && e2.isTTY));
      }, stdout: $u(qu(true, Mu.isatty(1))), stderr: $u(qu(true, Mu.isatty(2))) };
      var Uu = { stringReplaceAll: (e2, t2, n2) => {
        let r2 = e2.indexOf(t2);
        if (-1 === r2)
          return e2;
        const o2 = t2.length;
        let i2 = 0, u2 = "";
        do {
          u2 += e2.substr(i2, r2 - i2) + t2 + n2, i2 = r2 + o2, r2 = e2.indexOf(t2, i2);
        } while (-1 !== r2);
        return u2 += e2.substr(i2), u2;
      }, stringEncaseCRLFWithFirstIndex: (e2, t2, n2, r2) => {
        let o2 = 0, i2 = "";
        do {
          const u2 = "\r" === e2[r2 - 1];
          i2 += e2.substr(o2, (u2 ? r2 - 1 : r2) - o2) + t2 + (u2 ? "\r\n" : "\n") + n2, o2 = r2 + 1, r2 = e2.indexOf("\n", o2);
        } while (-1 !== r2);
        return i2 += e2.substr(o2), i2;
      } };
      const zu = /(?:\\(u(?:[a-f\d]{4}|\{[a-f\d]{1,6}\})|x[a-f\d]{2}|.))|(?:\{(~)?(\w+(?:\([^)]*\))?(?:\.\w+(?:\([^)]*\))?)*)(?:[ \t]|(?=\r?\n)))|(\})|((?:.|[\r\n\f])+?)/gi, Hu = /(?:^|\.)(\w+)(?:\(([^)]*)\))?/g, Gu = /^(['"])((?:\\.|(?!\1)[^\\])*)\1$/, Ju = /\\(u(?:[a-f\d]{4}|{[a-f\d]{1,6}})|x[a-f\d]{2}|.)|([^\\])/gi, Xu = /* @__PURE__ */ new Map([["n", "\n"], ["r", "\r"], ["t", "	"], ["b", "\b"], ["f", "\f"], ["v", "\v"], ["0", "\0"], ["\\", "\\"], ["e", "\x1B"], ["a", "\x07"]]);
      function Yu(e2) {
        const t2 = "u" === e2[0], n2 = "{" === e2[1];
        return t2 && !n2 && 5 === e2.length || "x" === e2[0] && 3 === e2.length ? String.fromCharCode(parseInt(e2.slice(1), 16)) : t2 && n2 ? String.fromCodePoint(parseInt(e2.slice(2, -1), 16)) : Xu.get(e2) || e2;
      }
      function Ku(e2, t2) {
        const n2 = [], r2 = t2.trim().split(/\s*,\s*/g);
        let o2;
        for (const t3 of r2) {
          const r3 = Number(t3);
          if (Number.isNaN(r3)) {
            if (!(o2 = t3.match(Gu)))
              throw new Error("Invalid Chalk template style argument: ".concat(t3, " (in style '").concat(e2, "')"));
            n2.push(o2[2].replace(Ju, (e3, t4, n3) => t4 ? Yu(t4) : n3));
          } else
            n2.push(r3);
        }
        return n2;
      }
      function Qu(e2) {
        Hu.lastIndex = 0;
        const t2 = [];
        let n2;
        for (; null !== (n2 = Hu.exec(e2)); ) {
          const e3 = n2[1];
          if (n2[2]) {
            const r2 = Ku(e3, n2[2]);
            t2.push([e3].concat(r2));
          } else
            t2.push([e3]);
        }
        return t2;
      }
      function Zu(e2, t2) {
        const n2 = {};
        for (const e3 of t2)
          for (const t3 of e3.styles)
            n2[t3[0]] = e3.inverse ? null : t3.slice(1);
        let r2 = e2;
        for (const [e3, t3] of Object.entries(n2))
          if (Array.isArray(t3)) {
            if (!(e3 in r2))
              throw new Error("Unknown Chalk style: ".concat(e3));
            r2 = t3.length > 0 ? r2[e3](...t3) : r2[e3];
          }
        return r2;
      }
      var es = (e2, t2) => {
        const n2 = [], r2 = [];
        let o2 = [];
        if (t2.replace(zu, (t3, i2, u2, s2, a2, c2) => {
          if (i2)
            o2.push(Yu(i2));
          else if (s2) {
            const t4 = o2.join("");
            o2 = [], r2.push(0 === n2.length ? t4 : Zu(e2, n2)(t4)), n2.push({ inverse: u2, styles: Qu(s2) });
          } else if (a2) {
            if (0 === n2.length)
              throw new Error("Found extraneous } in Chalk template literal");
            r2.push(Zu(e2, n2)(o2.join(""))), o2 = [], n2.pop();
          } else
            o2.push(c2);
        }), r2.push(o2.join("")), n2.length > 0) {
          const e3 = "Chalk template literal is missing ".concat(n2.length, " closing bracket").concat(1 === n2.length ? "" : "s", " (`}`)");
          throw new Error(e3);
        }
        return r2.join("");
      };
      const { stdout: ts, stderr: ns } = Wu, { stringReplaceAll: rs, stringEncaseCRLFWithFirstIndex: os } = Uu, { isArray: is } = Array, us = ["ansi", "ansi", "ansi256", "ansi16m"], ss = /* @__PURE__ */ Object.create(null);
      class as {
        constructor(e2) {
          return cs(e2);
        }
      }
      const cs = (e2) => {
        const t2 = {};
        return ((e3, t3 = {}) => {
          if (t3.level && !(Number.isInteger(t3.level) && t3.level >= 0 && t3.level <= 3))
            throw new Error("The `level` option should be an integer from 0 to 3");
          const n2 = ts ? ts.level : 0;
          e3.level = void 0 === t3.level ? n2 : t3.level;
        })(t2, e2), t2.template = (...e3) => ys(t2.template, ...e3), Object.setPrototypeOf(t2, ls.prototype), Object.setPrototypeOf(t2.template, t2), t2.template.constructor = () => {
          throw new Error("`chalk.constructor()` is deprecated. Use `new chalk.Instance()` instead.");
        }, t2.template.Instance = as, t2.template;
      };
      function ls(e2) {
        return cs(e2);
      }
      for (const [e2, t2] of Object.entries(Pu))
        ss[e2] = { get() {
          const n2 = hs(this, ds(t2.open, t2.close, this._styler), this._isEmpty);
          return Object.defineProperty(this, e2, { value: n2 }), n2;
        } };
      ss.visible = { get() {
        const e2 = hs(this, this._styler, true);
        return Object.defineProperty(this, "visible", { value: e2 }), e2;
      } };
      const ps = ["rgb", "hex", "keyword", "hsl", "hsv", "hwb", "ansi", "ansi256"];
      for (const e2 of ps)
        ss[e2] = { get() {
          const { level: t2 } = this;
          return function(...n2) {
            const r2 = ds(Pu.color[us[t2]][e2](...n2), Pu.color.close, this._styler);
            return hs(this, r2, this._isEmpty);
          };
        } };
      for (const e2 of ps) {
        ss["bg" + e2[0].toUpperCase() + e2.slice(1)] = { get() {
          const { level: t2 } = this;
          return function(...n2) {
            const r2 = ds(Pu.bgColor[us[t2]][e2](...n2), Pu.bgColor.close, this._styler);
            return hs(this, r2, this._isEmpty);
          };
        } };
      }
      const fs = Object.defineProperties(() => {
      }, Object.assign({}, ss, { level: { enumerable: true, get() {
        return this._generator.level;
      }, set(e2) {
        this._generator.level = e2;
      } } })), ds = (e2, t2, n2) => {
        let r2, o2;
        return void 0 === n2 ? (r2 = e2, o2 = t2) : (r2 = n2.openAll + e2, o2 = t2 + n2.closeAll), { open: e2, close: t2, openAll: r2, closeAll: o2, parent: n2 };
      }, hs = (e2, t2, n2) => {
        const r2 = (...e3) => is(e3[0]) && is(e3[0].raw) ? ms(r2, ys(r2, ...e3)) : ms(r2, 1 === e3.length ? "" + e3[0] : e3.join(" "));
        return Object.setPrototypeOf(r2, fs), r2._generator = e2, r2._styler = t2, r2._isEmpty = n2, r2;
      }, ms = (e2, t2) => {
        if (e2.level <= 0 || !t2)
          return e2._isEmpty ? "" : t2;
        let n2 = e2._styler;
        if (void 0 === n2)
          return t2;
        const { openAll: r2, closeAll: o2 } = n2;
        if (-1 !== t2.indexOf("\x1B"))
          for (; void 0 !== n2; )
            t2 = rs(t2, n2.close, n2.open), n2 = n2.parent;
        const i2 = t2.indexOf("\n");
        return -1 !== i2 && (t2 = os(t2, o2, r2, i2)), r2 + t2 + o2;
      };
      let gs;
      const ys = (e2, ...t2) => {
        const [n2] = t2;
        if (!is(n2) || !is(n2.raw))
          return t2.join(" ");
        const r2 = t2.slice(1), o2 = [n2.raw[0]];
        for (let e3 = 1; e3 < n2.length; e3++)
          o2.push(String(r2[e3 - 1]).replace(/[{}\\]/g, "\\$&"), String(n2.raw[e3]));
        return void 0 === gs && (gs = es), gs(e2, o2.join(""));
      };
      Object.defineProperties(ls.prototype, ss);
      const Ds = ls();
      Ds.supportsColor = ts, Ds.stderr = ls({ level: ns ? ns.level : 0 }), Ds.stderr.supportsColor = ns;
      var Es = Ds;
      var bs = function(e2, t2) {
        for (var n2 = -1, r2 = t2.length, o2 = e2.length; ++n2 < r2; )
          e2[o2 + n2] = t2[n2];
        return e2;
      }, Cs = "object" == typeof r && r && r.Object === Object && r, vs = "object" == typeof self && self && self.Object === Object && self, As = (Cs || vs || Function("return this")()).Symbol, Fs = Object.prototype, xs = Fs.hasOwnProperty, Ss = Fs.toString, ws = As ? As.toStringTag : void 0;
      var Ts = function(e2) {
        var t2 = xs.call(e2, ws), n2 = e2[ws];
        try {
          e2[ws] = void 0;
          var r2 = true;
        } catch (e3) {
        }
        var o2 = Ss.call(e2);
        return r2 && (t2 ? e2[ws] = n2 : delete e2[ws]), o2;
      }, Bs = Object.prototype.toString;
      var ks = function(e2) {
        return Bs.call(e2);
      }, Ns = As ? As.toStringTag : void 0;
      var Ps = function(e2) {
        return null == e2 ? void 0 === e2 ? "[object Undefined]" : "[object Null]" : Ns && Ns in Object(e2) ? Ts(e2) : ks(e2);
      };
      var Os = function(e2) {
        return null != e2 && "object" == typeof e2;
      };
      var Is = function(e2) {
        return Os(e2) && "[object Arguments]" == Ps(e2);
      }, js = Object.prototype, Ls = js.hasOwnProperty, _s = js.propertyIsEnumerable, Ms = Is(function() {
        return arguments;
      }()) ? Is : function(e2) {
        return Os(e2) && Ls.call(e2, "callee") && !_s.call(e2, "callee");
      }, Rs = Array.isArray, Vs = As ? As.isConcatSpreadable : void 0;
      var $s = function(e2) {
        return Rs(e2) || Ms(e2) || !!(Vs && e2 && e2[Vs]);
      };
      var qs = function e2(t2, n2, r2, o2, i2) {
        var u2 = -1, s2 = t2.length;
        for (r2 || (r2 = $s), i2 || (i2 = []); ++u2 < s2; ) {
          var a2 = t2[u2];
          n2 > 0 && r2(a2) ? n2 > 1 ? e2(a2, n2 - 1, r2, o2, i2) : bs(i2, a2) : o2 || (i2[i2.length] = a2);
        }
        return i2;
      };
      var Ws = function(e2) {
        return (null == e2 ? 0 : e2.length) ? qs(e2, 1) : [];
      };
      const Us = { key: (e2) => 1 === e2.length ? "-".concat(e2) : "--".concat(e2), value: (e2) => yu.apiDescriptor.value(e2), pair: ({ key: e2, value: t2 }) => false === t2 ? "--no-".concat(e2) : true === t2 ? Us.key(e2) : "" === t2 ? "".concat(Us.key(e2), " without an argument") : "".concat(Us.key(e2), "=").concat(t2) };
      class zs extends yu.ChoiceSchema {
        constructor({ name: e2, flags: t2 }) {
          super({ name: e2, choices: t2 }), this._flags = [...t2].sort();
        }
        preprocess(e2, t2) {
          if ("string" == typeof e2 && e2.length > 0 && !this._flags.includes(e2)) {
            const n2 = this._flags.find((t3) => Cu(t3, e2) < 3);
            if (n2)
              return t2.logger.warn(["Unknown flag ".concat(Es.yellow(t2.descriptor.value(e2)), ","), "did you mean ".concat(Es.blue(t2.descriptor.value(n2)), "?")].join(" ")), n2;
          }
          return e2;
        }
        expected() {
          return "a flag";
        }
      }
      let Hs;
      function Gs(t2, n2, { logger: r2, isCLI: o2 = false, passThrough: i2 = false } = {}) {
        const u2 = i2 ? Array.isArray(i2) ? (e2, t3) => i2.includes(e2) ? { [e2]: t3 } : void 0 : (e2, t3) => ({ [e2]: t3 }) : (t3, n3, r3) => {
          const o3 = e(r3.schemas, ["_"]);
          return yu.levenUnknownHandler(t3, n3, Object.assign({}, r3, { schemas: o3 }));
        }, s2 = o2 ? Us : yu.apiDescriptor, a2 = function(e2, { isCLI: t3 }) {
          const n3 = [];
          t3 && n3.push(yu.AnySchema.create({ name: "_" }));
          for (const r3 of e2)
            n3.push(Js(r3, { isCLI: t3, optionInfos: e2 })), r3.alias && t3 && n3.push(yu.AliasSchema.create({ name: r3.alias, sourceName: r3.name }));
          return n3;
        }(n2, { isCLI: o2 }), c2 = new yu.Normalizer(a2, { logger: r2, unknown: u2, descriptor: s2 }), l2 = false !== r2;
        l2 && Hs && (c2._hasDeprecationWarned = Hs);
        const p2 = c2.normalize(t2);
        return l2 && (Hs = c2._hasDeprecationWarned), p2;
      }
      function Js(e2, { isCLI: t2, optionInfos: n2 }) {
        let r2;
        const o2 = { name: e2.name }, i2 = {};
        switch (e2.type) {
          case "int":
            r2 = yu.IntegerSchema, t2 && (o2.preprocess = (e3) => Number(e3));
            break;
          case "string":
            r2 = yu.StringSchema;
            break;
          case "choice":
            r2 = yu.ChoiceSchema, o2.choices = e2.choices.map((t3) => "object" == typeof t3 && t3.redirect ? Object.assign({}, t3, { redirect: { to: { key: e2.name, value: t3.redirect } } }) : t3);
            break;
          case "boolean":
            r2 = yu.BooleanSchema;
            break;
          case "flag":
            r2 = zs, o2.flags = Ws(n2.map((e3) => [e3.alias, e3.description && e3.name, e3.oppositeDescription && "no-".concat(e3.name)].filter(Boolean)));
            break;
          case "path":
            r2 = yu.StringSchema;
            break;
          default:
            throw new Error("Unexpected type ".concat(e2.type));
        }
        if (e2.exception ? o2.validate = (t3, n3, r3) => e2.exception(t3) || n3.validate(t3, r3) : o2.validate = (e3, t3, n3) => void 0 === e3 || t3.validate(e3, n3), e2.redirect && (i2.redirect = (t3) => t3 ? { to: { key: e2.redirect.option, value: e2.redirect.value } } : void 0), e2.deprecated && (i2.deprecated = true), t2 && !e2.array) {
          const e3 = o2.preprocess || ((e4) => e4);
          o2.preprocess = (t3, n3, r3) => n3.preprocess(e3(Array.isArray(t3) ? ke(t3) : t3), r3);
        }
        return e2.array ? yu.ArraySchema.create(Object.assign({}, t2 ? { preprocess: (e3) => Array.isArray(e3) ? e3 : [e3] } : {}, i2, { valueSchema: r2.create(o2) })) : r2.create(Object.assign({}, o2, i2));
      }
      var Xs = { normalizeApiOptions: function(e2, t2, n2) {
        return Gs(e2, t2, n2);
      }, normalizeCliOptions: function(e2, t2, n2) {
        return Gs(e2, t2, Object.assign({ isCLI: true }, n2));
      } };
      const { isNonEmptyArray: Ys } = rn;
      function Ks(e2, t2) {
        const { ignoreDecorators: n2 } = t2 || {};
        if (!n2) {
          const t3 = e2.declaration && e2.declaration.decorators || e2.decorators;
          if (Ys(t3))
            return Ks(t3[0]);
        }
        return e2.range ? e2.range[0] : e2.start;
      }
      function Qs(e2) {
        return e2.range ? e2.range[1] : e2.end;
      }
      function Zs(e2, t2) {
        return Ks(e2) === Ks(t2);
      }
      var ea = { locStart: Ks, locEnd: Qs, hasSameLocStart: Zs, hasSameLoc: function(e2, t2) {
        return Zs(e2, t2) && function(e3, t3) {
          return Qs(e3) === Qs(t3);
        }(e2, t2);
      } }, ta = Object.defineProperty({ default: /((['"])(?:(?!\2|\\).|\\(?:\r\n|[\s\S]))*(\2)?|`(?:[^`\\$]|\\[\s\S]|\$(?!\{)|\$\{(?:[^{}]|\{[^}]*\}?)*\}?)*(`)?)|(\/\/.*)|(\/\*(?:[^*]|\*(?!\/))*(\*\/)?)|(\/(?!\*)(?:\[(?:(?![\]\\]).|\\.)*\]|(?![\/\]\\]).|\\.)+\/(?:(?!\s*(?:\b|[\u0080-\uFFFF$\\'"~({]|[+\-!](?!=)|\.?\d))|[gmiyus]{1,6}\b(?![\u0080-\uFFFF$\\]|\s*(?:[+\-*%&|^<>!=?({]|\/(?![\/*])))))|(0[xX][\da-fA-F]+|0[oO][0-7]+|0[bB][01]+|(?:\d*\.\d+|\d+\.?)(?:[eE][+-]?\d+)?)|((?!\d)(?:(?!\s)[$\w\u0080-\uFFFF]|\\u[\da-fA-F]{4}|\\u\{[\da-fA-F]+\})+)|(--|\+\+|&&|\|\||=>|\.{3}|(?:[+\-\/%&|^]|\*{1,2}|<{1,2}|>{1,3}|!=?|={1,2})=?|[?~.,:;[\](){}])|(\s+)|(^$|[\s\S])/g, matchToToken: function(e2) {
        var t2 = { type: "invalid", value: e2[0], closed: void 0 };
        return e2[1] ? (t2.type = "string", t2.closed = !(!e2[3] && !e2[4])) : e2[5] ? t2.type = "comment" : e2[6] ? (t2.type = "comment", t2.closed = !!e2[7]) : e2[8] ? t2.type = "regex" : e2[9] ? t2.type = "number" : e2[10] ? t2.type = "name" : e2[11] ? t2.type = "punctuator" : e2[12] && (t2.type = "whitespace"), t2;
      } }, "__esModule", { value: true }), na = fa, ra = da, oa = function(e2) {
        let t2 = true;
        for (let n2 = 0; n2 < e2.length; n2++) {
          let r2 = e2.charCodeAt(n2);
          if (55296 == (64512 & r2) && n2 + 1 < e2.length) {
            const t3 = e2.charCodeAt(++n2);
            56320 == (64512 & t3) && (r2 = 65536 + ((1023 & r2) << 10) + (1023 & t3));
          }
          if (t2) {
            if (t2 = false, !fa(r2))
              return false;
          } else if (!da(r2))
            return false;
        }
        return !t2;
      };
      let ia = "\xAA\xB5\xBA\xC0-\xD6\xD8-\xF6\xF8-\u02C1\u02C6-\u02D1\u02E0-\u02E4\u02EC\u02EE\u0370-\u0374\u0376\u0377\u037A-\u037D\u037F\u0386\u0388-\u038A\u038C\u038E-\u03A1\u03A3-\u03F5\u03F7-\u0481\u048A-\u052F\u0531-\u0556\u0559\u0560-\u0588\u05D0-\u05EA\u05EF-\u05F2\u0620-\u064A\u066E\u066F\u0671-\u06D3\u06D5\u06E5\u06E6\u06EE\u06EF\u06FA-\u06FC\u06FF\u0710\u0712-\u072F\u074D-\u07A5\u07B1\u07CA-\u07EA\u07F4\u07F5\u07FA\u0800-\u0815\u081A\u0824\u0828\u0840-\u0858\u0860-\u086A\u08A0-\u08B4\u08B6-\u08C7\u0904-\u0939\u093D\u0950\u0958-\u0961\u0971-\u0980\u0985-\u098C\u098F\u0990\u0993-\u09A8\u09AA-\u09B0\u09B2\u09B6-\u09B9\u09BD\u09CE\u09DC\u09DD\u09DF-\u09E1\u09F0\u09F1\u09FC\u0A05-\u0A0A\u0A0F\u0A10\u0A13-\u0A28\u0A2A-\u0A30\u0A32\u0A33\u0A35\u0A36\u0A38\u0A39\u0A59-\u0A5C\u0A5E\u0A72-\u0A74\u0A85-\u0A8D\u0A8F-\u0A91\u0A93-\u0AA8\u0AAA-\u0AB0\u0AB2\u0AB3\u0AB5-\u0AB9\u0ABD\u0AD0\u0AE0\u0AE1\u0AF9\u0B05-\u0B0C\u0B0F\u0B10\u0B13-\u0B28\u0B2A-\u0B30\u0B32\u0B33\u0B35-\u0B39\u0B3D\u0B5C\u0B5D\u0B5F-\u0B61\u0B71\u0B83\u0B85-\u0B8A\u0B8E-\u0B90\u0B92-\u0B95\u0B99\u0B9A\u0B9C\u0B9E\u0B9F\u0BA3\u0BA4\u0BA8-\u0BAA\u0BAE-\u0BB9\u0BD0\u0C05-\u0C0C\u0C0E-\u0C10\u0C12-\u0C28\u0C2A-\u0C39\u0C3D\u0C58-\u0C5A\u0C60\u0C61\u0C80\u0C85-\u0C8C\u0C8E-\u0C90\u0C92-\u0CA8\u0CAA-\u0CB3\u0CB5-\u0CB9\u0CBD\u0CDE\u0CE0\u0CE1\u0CF1\u0CF2\u0D04-\u0D0C\u0D0E-\u0D10\u0D12-\u0D3A\u0D3D\u0D4E\u0D54-\u0D56\u0D5F-\u0D61\u0D7A-\u0D7F\u0D85-\u0D96\u0D9A-\u0DB1\u0DB3-\u0DBB\u0DBD\u0DC0-\u0DC6\u0E01-\u0E30\u0E32\u0E33\u0E40-\u0E46\u0E81\u0E82\u0E84\u0E86-\u0E8A\u0E8C-\u0EA3\u0EA5\u0EA7-\u0EB0\u0EB2\u0EB3\u0EBD\u0EC0-\u0EC4\u0EC6\u0EDC-\u0EDF\u0F00\u0F40-\u0F47\u0F49-\u0F6C\u0F88-\u0F8C\u1000-\u102A\u103F\u1050-\u1055\u105A-\u105D\u1061\u1065\u1066\u106E-\u1070\u1075-\u1081\u108E\u10A0-\u10C5\u10C7\u10CD\u10D0-\u10FA\u10FC-\u1248\u124A-\u124D\u1250-\u1256\u1258\u125A-\u125D\u1260-\u1288\u128A-\u128D\u1290-\u12B0\u12B2-\u12B5\u12B8-\u12BE\u12C0\u12C2-\u12C5\u12C8-\u12D6\u12D8-\u1310\u1312-\u1315\u1318-\u135A\u1380-\u138F\u13A0-\u13F5\u13F8-\u13FD\u1401-\u166C\u166F-\u167F\u1681-\u169A\u16A0-\u16EA\u16EE-\u16F8\u1700-\u170C\u170E-\u1711\u1720-\u1731\u1740-\u1751\u1760-\u176C\u176E-\u1770\u1780-\u17B3\u17D7\u17DC\u1820-\u1878\u1880-\u18A8\u18AA\u18B0-\u18F5\u1900-\u191E\u1950-\u196D\u1970-\u1974\u1980-\u19AB\u19B0-\u19C9\u1A00-\u1A16\u1A20-\u1A54\u1AA7\u1B05-\u1B33\u1B45-\u1B4B\u1B83-\u1BA0\u1BAE\u1BAF\u1BBA-\u1BE5\u1C00-\u1C23\u1C4D-\u1C4F\u1C5A-\u1C7D\u1C80-\u1C88\u1C90-\u1CBA\u1CBD-\u1CBF\u1CE9-\u1CEC\u1CEE-\u1CF3\u1CF5\u1CF6\u1CFA\u1D00-\u1DBF\u1E00-\u1F15\u1F18-\u1F1D\u1F20-\u1F45\u1F48-\u1F4D\u1F50-\u1F57\u1F59\u1F5B\u1F5D\u1F5F-\u1F7D\u1F80-\u1FB4\u1FB6-\u1FBC\u1FBE\u1FC2-\u1FC4\u1FC6-\u1FCC\u1FD0-\u1FD3\u1FD6-\u1FDB\u1FE0-\u1FEC\u1FF2-\u1FF4\u1FF6-\u1FFC\u2071\u207F\u2090-\u209C\u2102\u2107\u210A-\u2113\u2115\u2118-\u211D\u2124\u2126\u2128\u212A-\u2139\u213C-\u213F\u2145-\u2149\u214E\u2160-\u2188\u2C00-\u2C2E\u2C30-\u2C5E\u2C60-\u2CE4\u2CEB-\u2CEE\u2CF2\u2CF3\u2D00-\u2D25\u2D27\u2D2D\u2D30-\u2D67\u2D6F\u2D80-\u2D96\u2DA0-\u2DA6\u2DA8-\u2DAE\u2DB0-\u2DB6\u2DB8-\u2DBE\u2DC0-\u2DC6\u2DC8-\u2DCE\u2DD0-\u2DD6\u2DD8-\u2DDE\u3005-\u3007\u3021-\u3029\u3031-\u3035\u3038-\u303C\u3041-\u3096\u309B-\u309F\u30A1-\u30FA\u30FC-\u30FF\u3105-\u312F\u3131-\u318E\u31A0-\u31BF\u31F0-\u31FF\u3400-\u4DBF\u4E00-\u9FFC\uA000-\uA48C\uA4D0-\uA4FD\uA500-\uA60C\uA610-\uA61F\uA62A\uA62B\uA640-\uA66E\uA67F-\uA69D\uA6A0-\uA6EF\uA717-\uA71F\uA722-\uA788\uA78B-\uA7BF\uA7C2-\uA7CA\uA7F5-\uA801\uA803-\uA805\uA807-\uA80A\uA80C-\uA822\uA840-\uA873\uA882-\uA8B3\uA8F2-\uA8F7\uA8FB\uA8FD\uA8FE\uA90A-\uA925\uA930-\uA946\uA960-\uA97C\uA984-\uA9B2\uA9CF\uA9E0-\uA9E4\uA9E6-\uA9EF\uA9FA-\uA9FE\uAA00-\uAA28\uAA40-\uAA42\uAA44-\uAA4B\uAA60-\uAA76\uAA7A\uAA7E-\uAAAF\uAAB1\uAAB5\uAAB6\uAAB9-\uAABD\uAAC0\uAAC2\uAADB-\uAADD\uAAE0-\uAAEA\uAAF2-\uAAF4\uAB01-\uAB06\uAB09-\uAB0E\uAB11-\uAB16\uAB20-\uAB26\uAB28-\uAB2E\uAB30-\uAB5A\uAB5C-\uAB69\uAB70-\uABE2\uAC00-\uD7A3\uD7B0-\uD7C6\uD7CB-\uD7FB\uF900-\uFA6D\uFA70-\uFAD9\uFB00-\uFB06\uFB13-\uFB17\uFB1D\uFB1F-\uFB28\uFB2A-\uFB36\uFB38-\uFB3C\uFB3E\uFB40\uFB41\uFB43\uFB44\uFB46-\uFBB1\uFBD3-\uFD3D\uFD50-\uFD8F\uFD92-\uFDC7\uFDF0-\uFDFB\uFE70-\uFE74\uFE76-\uFEFC\uFF21-\uFF3A\uFF41-\uFF5A\uFF66-\uFFBE\uFFC2-\uFFC7\uFFCA-\uFFCF\uFFD2-\uFFD7\uFFDA-\uFFDC", ua = "\u200C\u200D\xB7\u0300-\u036F\u0387\u0483-\u0487\u0591-\u05BD\u05BF\u05C1\u05C2\u05C4\u05C5\u05C7\u0610-\u061A\u064B-\u0669\u0670\u06D6-\u06DC\u06DF-\u06E4\u06E7\u06E8\u06EA-\u06ED\u06F0-\u06F9\u0711\u0730-\u074A\u07A6-\u07B0\u07C0-\u07C9\u07EB-\u07F3\u07FD\u0816-\u0819\u081B-\u0823\u0825-\u0827\u0829-\u082D\u0859-\u085B\u08D3-\u08E1\u08E3-\u0903\u093A-\u093C\u093E-\u094F\u0951-\u0957\u0962\u0963\u0966-\u096F\u0981-\u0983\u09BC\u09BE-\u09C4\u09C7\u09C8\u09CB-\u09CD\u09D7\u09E2\u09E3\u09E6-\u09EF\u09FE\u0A01-\u0A03\u0A3C\u0A3E-\u0A42\u0A47\u0A48\u0A4B-\u0A4D\u0A51\u0A66-\u0A71\u0A75\u0A81-\u0A83\u0ABC\u0ABE-\u0AC5\u0AC7-\u0AC9\u0ACB-\u0ACD\u0AE2\u0AE3\u0AE6-\u0AEF\u0AFA-\u0AFF\u0B01-\u0B03\u0B3C\u0B3E-\u0B44\u0B47\u0B48\u0B4B-\u0B4D\u0B55-\u0B57\u0B62\u0B63\u0B66-\u0B6F\u0B82\u0BBE-\u0BC2\u0BC6-\u0BC8\u0BCA-\u0BCD\u0BD7\u0BE6-\u0BEF\u0C00-\u0C04\u0C3E-\u0C44\u0C46-\u0C48\u0C4A-\u0C4D\u0C55\u0C56\u0C62\u0C63\u0C66-\u0C6F\u0C81-\u0C83\u0CBC\u0CBE-\u0CC4\u0CC6-\u0CC8\u0CCA-\u0CCD\u0CD5\u0CD6\u0CE2\u0CE3\u0CE6-\u0CEF\u0D00-\u0D03\u0D3B\u0D3C\u0D3E-\u0D44\u0D46-\u0D48\u0D4A-\u0D4D\u0D57\u0D62\u0D63\u0D66-\u0D6F\u0D81-\u0D83\u0DCA\u0DCF-\u0DD4\u0DD6\u0DD8-\u0DDF\u0DE6-\u0DEF\u0DF2\u0DF3\u0E31\u0E34-\u0E3A\u0E47-\u0E4E\u0E50-\u0E59\u0EB1\u0EB4-\u0EBC\u0EC8-\u0ECD\u0ED0-\u0ED9\u0F18\u0F19\u0F20-\u0F29\u0F35\u0F37\u0F39\u0F3E\u0F3F\u0F71-\u0F84\u0F86\u0F87\u0F8D-\u0F97\u0F99-\u0FBC\u0FC6\u102B-\u103E\u1040-\u1049\u1056-\u1059\u105E-\u1060\u1062-\u1064\u1067-\u106D\u1071-\u1074\u1082-\u108D\u108F-\u109D\u135D-\u135F\u1369-\u1371\u1712-\u1714\u1732-\u1734\u1752\u1753\u1772\u1773\u17B4-\u17D3\u17DD\u17E0-\u17E9\u180B-\u180D\u1810-\u1819\u18A9\u1920-\u192B\u1930-\u193B\u1946-\u194F\u19D0-\u19DA\u1A17-\u1A1B\u1A55-\u1A5E\u1A60-\u1A7C\u1A7F-\u1A89\u1A90-\u1A99\u1AB0-\u1ABD\u1ABF\u1AC0\u1B00-\u1B04\u1B34-\u1B44\u1B50-\u1B59\u1B6B-\u1B73\u1B80-\u1B82\u1BA1-\u1BAD\u1BB0-\u1BB9\u1BE6-\u1BF3\u1C24-\u1C37\u1C40-\u1C49\u1C50-\u1C59\u1CD0-\u1CD2\u1CD4-\u1CE8\u1CED\u1CF4\u1CF7-\u1CF9\u1DC0-\u1DF9\u1DFB-\u1DFF\u203F\u2040\u2054\u20D0-\u20DC\u20E1\u20E5-\u20F0\u2CEF-\u2CF1\u2D7F\u2DE0-\u2DFF\u302A-\u302F\u3099\u309A\uA620-\uA629\uA66F\uA674-\uA67D\uA69E\uA69F\uA6F0\uA6F1\uA802\uA806\uA80B\uA823-\uA827\uA82C\uA880\uA881\uA8B4-\uA8C5\uA8D0-\uA8D9\uA8E0-\uA8F1\uA8FF-\uA909\uA926-\uA92D\uA947-\uA953\uA980-\uA983\uA9B3-\uA9C0\uA9D0-\uA9D9\uA9E5\uA9F0-\uA9F9\uAA29-\uAA36\uAA43\uAA4C\uAA4D\uAA50-\uAA59\uAA7B-\uAA7D\uAAB0\uAAB2-\uAAB4\uAAB7\uAAB8\uAABE\uAABF\uAAC1\uAAEB-\uAAEF\uAAF5\uAAF6\uABE3-\uABEA\uABEC\uABED\uABF0-\uABF9\uFB1E\uFE00-\uFE0F\uFE20-\uFE2F\uFE33\uFE34\uFE4D-\uFE4F\uFF10-\uFF19\uFF3F";
      const sa = new RegExp("[" + ia + "]"), aa = new RegExp("[" + ia + ua + "]");
      ia = ua = null;
      const ca = [0, 11, 2, 25, 2, 18, 2, 1, 2, 14, 3, 13, 35, 122, 70, 52, 268, 28, 4, 48, 48, 31, 14, 29, 6, 37, 11, 29, 3, 35, 5, 7, 2, 4, 43, 157, 19, 35, 5, 35, 5, 39, 9, 51, 157, 310, 10, 21, 11, 7, 153, 5, 3, 0, 2, 43, 2, 1, 4, 0, 3, 22, 11, 22, 10, 30, 66, 18, 2, 1, 11, 21, 11, 25, 71, 55, 7, 1, 65, 0, 16, 3, 2, 2, 2, 28, 43, 28, 4, 28, 36, 7, 2, 27, 28, 53, 11, 21, 11, 18, 14, 17, 111, 72, 56, 50, 14, 50, 14, 35, 349, 41, 7, 1, 79, 28, 11, 0, 9, 21, 107, 20, 28, 22, 13, 52, 76, 44, 33, 24, 27, 35, 30, 0, 3, 0, 9, 34, 4, 0, 13, 47, 15, 3, 22, 0, 2, 0, 36, 17, 2, 24, 85, 6, 2, 0, 2, 3, 2, 14, 2, 9, 8, 46, 39, 7, 3, 1, 3, 21, 2, 6, 2, 1, 2, 4, 4, 0, 19, 0, 13, 4, 159, 52, 19, 3, 21, 2, 31, 47, 21, 1, 2, 0, 185, 46, 42, 3, 37, 47, 21, 0, 60, 42, 14, 0, 72, 26, 230, 43, 117, 63, 32, 7, 3, 0, 3, 7, 2, 1, 2, 23, 16, 0, 2, 0, 95, 7, 3, 38, 17, 0, 2, 0, 29, 0, 11, 39, 8, 0, 22, 0, 12, 45, 20, 0, 35, 56, 264, 8, 2, 36, 18, 0, 50, 29, 113, 6, 2, 1, 2, 37, 22, 0, 26, 5, 2, 1, 2, 31, 15, 0, 328, 18, 190, 0, 80, 921, 103, 110, 18, 195, 2749, 1070, 4050, 582, 8634, 568, 8, 30, 114, 29, 19, 47, 17, 3, 32, 20, 6, 18, 689, 63, 129, 74, 6, 0, 67, 12, 65, 1, 2, 0, 29, 6135, 9, 1237, 43, 8, 8952, 286, 50, 2, 18, 3, 9, 395, 2309, 106, 6, 12, 4, 8, 8, 9, 5991, 84, 2, 70, 2, 1, 3, 0, 3, 1, 3, 3, 2, 11, 2, 0, 2, 6, 2, 64, 2, 3, 3, 7, 2, 6, 2, 27, 2, 3, 2, 4, 2, 0, 4, 6, 2, 339, 3, 24, 2, 24, 2, 30, 2, 24, 2, 30, 2, 24, 2, 30, 2, 24, 2, 30, 2, 24, 2, 7, 2357, 44, 11, 6, 17, 0, 370, 43, 1301, 196, 60, 67, 8, 0, 1205, 3, 2, 26, 2, 1, 2, 0, 3, 0, 2, 9, 2, 3, 2, 0, 2, 0, 7, 0, 5, 0, 2, 0, 2, 0, 2, 2, 2, 1, 2, 0, 3, 0, 2, 0, 2, 0, 2, 0, 2, 0, 2, 1, 2, 0, 3, 3, 2, 6, 2, 3, 2, 3, 2, 0, 2, 9, 2, 16, 6, 2, 2, 4, 2, 16, 4421, 42717, 35, 4148, 12, 221, 3, 5761, 15, 7472, 3104, 541, 1507, 4938], la = [509, 0, 227, 0, 150, 4, 294, 9, 1368, 2, 2, 1, 6, 3, 41, 2, 5, 0, 166, 1, 574, 3, 9, 9, 370, 1, 154, 10, 176, 2, 54, 14, 32, 9, 16, 3, 46, 10, 54, 9, 7, 2, 37, 13, 2, 9, 6, 1, 45, 0, 13, 2, 49, 13, 9, 3, 2, 11, 83, 11, 7, 0, 161, 11, 6, 9, 7, 3, 56, 1, 2, 6, 3, 1, 3, 2, 10, 0, 11, 1, 3, 6, 4, 4, 193, 17, 10, 9, 5, 0, 82, 19, 13, 9, 214, 6, 3, 8, 28, 1, 83, 16, 16, 9, 82, 12, 9, 9, 84, 14, 5, 9, 243, 14, 166, 9, 71, 5, 2, 1, 3, 3, 2, 0, 2, 1, 13, 9, 120, 6, 3, 6, 4, 0, 29, 9, 41, 6, 2, 3, 9, 0, 10, 10, 47, 15, 406, 7, 2, 7, 17, 9, 57, 21, 2, 13, 123, 5, 4, 0, 2, 1, 2, 6, 2, 0, 9, 9, 49, 4, 2, 1, 2, 4, 9, 9, 330, 3, 19306, 9, 135, 4, 60, 6, 26, 9, 1014, 0, 2, 54, 8, 3, 82, 0, 12, 1, 19628, 1, 5319, 4, 4, 5, 9, 7, 3, 6, 31, 3, 149, 2, 1418, 49, 513, 54, 5, 49, 9, 0, 15, 0, 23, 4, 2, 14, 1361, 6, 2, 16, 3, 6, 2, 1, 2, 4, 262, 6, 10, 9, 419, 13, 1495, 6, 110, 6, 6, 9, 4759, 9, 787719, 239];
      function pa(e2, t2) {
        let n2 = 65536;
        for (let r2 = 0, o2 = t2.length; r2 < o2; r2 += 2) {
          if (n2 += t2[r2], n2 > e2)
            return false;
          if (n2 += t2[r2 + 1], n2 >= e2)
            return true;
        }
        return false;
      }
      function fa(e2) {
        return e2 < 65 ? 36 === e2 : e2 <= 90 || (e2 < 97 ? 95 === e2 : e2 <= 122 || (e2 <= 65535 ? e2 >= 170 && sa.test(String.fromCharCode(e2)) : pa(e2, ca)));
      }
      function da(e2) {
        return e2 < 48 ? 36 === e2 : e2 < 58 || !(e2 < 65) && (e2 <= 90 || (e2 < 97 ? 95 === e2 : e2 <= 122 || (e2 <= 65535 ? e2 >= 170 && aa.test(String.fromCharCode(e2)) : pa(e2, ca) || pa(e2, la))));
      }
      var ha = Object.defineProperty({ isIdentifierStart: na, isIdentifierChar: ra, isIdentifierName: oa }, "__esModule", { value: true }), ma = xa, ga = Sa, ya = wa, Da = function(e2, t2) {
        return Sa(e2, t2) || wa(e2);
      }, Ea = function(e2) {
        return va.has(e2);
      };
      const ba = ["implements", "interface", "let", "package", "private", "protected", "public", "static", "yield"], Ca = ["eval", "arguments"], va = /* @__PURE__ */ new Set(["break", "case", "catch", "continue", "debugger", "default", "do", "else", "finally", "for", "function", "if", "return", "switch", "throw", "try", "var", "const", "while", "with", "new", "this", "super", "class", "extends", "export", "import", "null", "true", "false", "in", "instanceof", "typeof", "void", "delete"]), Aa = new Set(ba), Fa = new Set(Ca);
      function xa(e2, t2) {
        return t2 && "await" === e2 || "enum" === e2;
      }
      function Sa(e2, t2) {
        return xa(e2, t2) || Aa.has(e2);
      }
      function wa(e2) {
        return Fa.has(e2);
      }
      var Ta = Object.defineProperty({ isReservedWord: ma, isStrictReservedWord: ga, isStrictBindOnlyReservedWord: ya, isStrictBindReservedWord: Da, isKeyword: Ea }, "__esModule", { value: true }), Ba = i(function(e2, t2) {
        Object.defineProperty(t2, "__esModule", { value: true }), Object.defineProperty(t2, "isIdentifierName", { enumerable: true, get: function() {
          return ha.isIdentifierName;
        } }), Object.defineProperty(t2, "isIdentifierChar", { enumerable: true, get: function() {
          return ha.isIdentifierChar;
        } }), Object.defineProperty(t2, "isIdentifierStart", { enumerable: true, get: function() {
          return ha.isIdentifierStart;
        } }), Object.defineProperty(t2, "isReservedWord", { enumerable: true, get: function() {
          return Ta.isReservedWord;
        } }), Object.defineProperty(t2, "isStrictBindOnlyReservedWord", { enumerable: true, get: function() {
          return Ta.isStrictBindOnlyReservedWord;
        } }), Object.defineProperty(t2, "isStrictBindReservedWord", { enumerable: true, get: function() {
          return Ta.isStrictBindReservedWord;
        } }), Object.defineProperty(t2, "isStrictReservedWord", { enumerable: true, get: function() {
          return Ta.isStrictReservedWord;
        } }), Object.defineProperty(t2, "isKeyword", { enumerable: true, get: function() {
          return Ta.isKeyword;
        } });
      }), ka = /[|\\{}()[\]^$+*?.]/g, Na = function(e2) {
        if ("string" != typeof e2)
          throw new TypeError("Expected a string");
        return e2.replace(ka, "\\$&");
      }, Pa = { aliceblue: [240, 248, 255], antiquewhite: [250, 235, 215], aqua: [0, 255, 255], aquamarine: [127, 255, 212], azure: [240, 255, 255], beige: [245, 245, 220], bisque: [255, 228, 196], black: [0, 0, 0], blanchedalmond: [255, 235, 205], blue: [0, 0, 255], blueviolet: [138, 43, 226], brown: [165, 42, 42], burlywood: [222, 184, 135], cadetblue: [95, 158, 160], chartreuse: [127, 255, 0], chocolate: [210, 105, 30], coral: [255, 127, 80], cornflowerblue: [100, 149, 237], cornsilk: [255, 248, 220], crimson: [220, 20, 60], cyan: [0, 255, 255], darkblue: [0, 0, 139], darkcyan: [0, 139, 139], darkgoldenrod: [184, 134, 11], darkgray: [169, 169, 169], darkgreen: [0, 100, 0], darkgrey: [169, 169, 169], darkkhaki: [189, 183, 107], darkmagenta: [139, 0, 139], darkolivegreen: [85, 107, 47], darkorange: [255, 140, 0], darkorchid: [153, 50, 204], darkred: [139, 0, 0], darksalmon: [233, 150, 122], darkseagreen: [143, 188, 143], darkslateblue: [72, 61, 139], darkslategray: [47, 79, 79], darkslategrey: [47, 79, 79], darkturquoise: [0, 206, 209], darkviolet: [148, 0, 211], deeppink: [255, 20, 147], deepskyblue: [0, 191, 255], dimgray: [105, 105, 105], dimgrey: [105, 105, 105], dodgerblue: [30, 144, 255], firebrick: [178, 34, 34], floralwhite: [255, 250, 240], forestgreen: [34, 139, 34], fuchsia: [255, 0, 255], gainsboro: [220, 220, 220], ghostwhite: [248, 248, 255], gold: [255, 215, 0], goldenrod: [218, 165, 32], gray: [128, 128, 128], green: [0, 128, 0], greenyellow: [173, 255, 47], grey: [128, 128, 128], honeydew: [240, 255, 240], hotpink: [255, 105, 180], indianred: [205, 92, 92], indigo: [75, 0, 130], ivory: [255, 255, 240], khaki: [240, 230, 140], lavender: [230, 230, 250], lavenderblush: [255, 240, 245], lawngreen: [124, 252, 0], lemonchiffon: [255, 250, 205], lightblue: [173, 216, 230], lightcoral: [240, 128, 128], lightcyan: [224, 255, 255], lightgoldenrodyellow: [250, 250, 210], lightgray: [211, 211, 211], lightgreen: [144, 238, 144], lightgrey: [211, 211, 211], lightpink: [255, 182, 193], lightsalmon: [255, 160, 122], lightseagreen: [32, 178, 170], lightskyblue: [135, 206, 250], lightslategray: [119, 136, 153], lightslategrey: [119, 136, 153], lightsteelblue: [176, 196, 222], lightyellow: [255, 255, 224], lime: [0, 255, 0], limegreen: [50, 205, 50], linen: [250, 240, 230], magenta: [255, 0, 255], maroon: [128, 0, 0], mediumaquamarine: [102, 205, 170], mediumblue: [0, 0, 205], mediumorchid: [186, 85, 211], mediumpurple: [147, 112, 219], mediumseagreen: [60, 179, 113], mediumslateblue: [123, 104, 238], mediumspringgreen: [0, 250, 154], mediumturquoise: [72, 209, 204], mediumvioletred: [199, 21, 133], midnightblue: [25, 25, 112], mintcream: [245, 255, 250], mistyrose: [255, 228, 225], moccasin: [255, 228, 181], navajowhite: [255, 222, 173], navy: [0, 0, 128], oldlace: [253, 245, 230], olive: [128, 128, 0], olivedrab: [107, 142, 35], orange: [255, 165, 0], orangered: [255, 69, 0], orchid: [218, 112, 214], palegoldenrod: [238, 232, 170], palegreen: [152, 251, 152], paleturquoise: [175, 238, 238], palevioletred: [219, 112, 147], papayawhip: [255, 239, 213], peachpuff: [255, 218, 185], peru: [205, 133, 63], pink: [255, 192, 203], plum: [221, 160, 221], powderblue: [176, 224, 230], purple: [128, 0, 128], rebeccapurple: [102, 51, 153], red: [255, 0, 0], rosybrown: [188, 143, 143], royalblue: [65, 105, 225], saddlebrown: [139, 69, 19], salmon: [250, 128, 114], sandybrown: [244, 164, 96], seagreen: [46, 139, 87], seashell: [255, 245, 238], sienna: [160, 82, 45], silver: [192, 192, 192], skyblue: [135, 206, 235], slateblue: [106, 90, 205], slategray: [112, 128, 144], slategrey: [112, 128, 144], snow: [255, 250, 250], springgreen: [0, 255, 127], steelblue: [70, 130, 180], tan: [210, 180, 140], teal: [0, 128, 128], thistle: [216, 191, 216], tomato: [255, 99, 71], turquoise: [64, 224, 208], violet: [238, 130, 238], wheat: [245, 222, 179], white: [255, 255, 255], whitesmoke: [245, 245, 245], yellow: [255, 255, 0], yellowgreen: [154, 205, 50] }, Oa = i(function(e2) {
        var t2 = {};
        for (var n2 in Pa)
          Pa.hasOwnProperty(n2) && (t2[Pa[n2]] = n2);
        var r2 = e2.exports = { rgb: { channels: 3, labels: "rgb" }, hsl: { channels: 3, labels: "hsl" }, hsv: { channels: 3, labels: "hsv" }, hwb: { channels: 3, labels: "hwb" }, cmyk: { channels: 4, labels: "cmyk" }, xyz: { channels: 3, labels: "xyz" }, lab: { channels: 3, labels: "lab" }, lch: { channels: 3, labels: "lch" }, hex: { channels: 1, labels: ["hex"] }, keyword: { channels: 1, labels: ["keyword"] }, ansi16: { channels: 1, labels: ["ansi16"] }, ansi256: { channels: 1, labels: ["ansi256"] }, hcg: { channels: 3, labels: ["h", "c", "g"] }, apple: { channels: 3, labels: ["r16", "g16", "b16"] }, gray: { channels: 1, labels: ["gray"] } };
        for (var o2 in r2)
          if (r2.hasOwnProperty(o2)) {
            if (!("channels" in r2[o2]))
              throw new Error("missing channels property: " + o2);
            if (!("labels" in r2[o2]))
              throw new Error("missing channel labels property: " + o2);
            if (r2[o2].labels.length !== r2[o2].channels)
              throw new Error("channel and label counts mismatch: " + o2);
            var i2 = r2[o2].channels, u2 = r2[o2].labels;
            delete r2[o2].channels, delete r2[o2].labels, Object.defineProperty(r2[o2], "channels", { value: i2 }), Object.defineProperty(r2[o2], "labels", { value: u2 });
          }
        r2.rgb.hsl = function(e3) {
          var t3, n3, r3 = e3[0] / 255, o3 = e3[1] / 255, i3 = e3[2] / 255, u3 = Math.min(r3, o3, i3), s2 = Math.max(r3, o3, i3), a2 = s2 - u3;
          return s2 === u3 ? t3 = 0 : r3 === s2 ? t3 = (o3 - i3) / a2 : o3 === s2 ? t3 = 2 + (i3 - r3) / a2 : i3 === s2 && (t3 = 4 + (r3 - o3) / a2), (t3 = Math.min(60 * t3, 360)) < 0 && (t3 += 360), n3 = (u3 + s2) / 2, [t3, 100 * (s2 === u3 ? 0 : n3 <= 0.5 ? a2 / (s2 + u3) : a2 / (2 - s2 - u3)), 100 * n3];
        }, r2.rgb.hsv = function(e3) {
          var t3, n3, r3, o3, i3, u3 = e3[0] / 255, s2 = e3[1] / 255, a2 = e3[2] / 255, c2 = Math.max(u3, s2, a2), l2 = c2 - Math.min(u3, s2, a2), p2 = function(e4) {
            return (c2 - e4) / 6 / l2 + 0.5;
          };
          return 0 === l2 ? o3 = i3 = 0 : (i3 = l2 / c2, t3 = p2(u3), n3 = p2(s2), r3 = p2(a2), u3 === c2 ? o3 = r3 - n3 : s2 === c2 ? o3 = 1 / 3 + t3 - r3 : a2 === c2 && (o3 = 2 / 3 + n3 - t3), o3 < 0 ? o3 += 1 : o3 > 1 && (o3 -= 1)), [360 * o3, 100 * i3, 100 * c2];
        }, r2.rgb.hwb = function(e3) {
          var t3 = e3[0], n3 = e3[1], o3 = e3[2];
          return [r2.rgb.hsl(e3)[0], 100 * (1 / 255 * Math.min(t3, Math.min(n3, o3))), 100 * (o3 = 1 - 1 / 255 * Math.max(t3, Math.max(n3, o3)))];
        }, r2.rgb.cmyk = function(e3) {
          var t3, n3 = e3[0] / 255, r3 = e3[1] / 255, o3 = e3[2] / 255;
          return [100 * ((1 - n3 - (t3 = Math.min(1 - n3, 1 - r3, 1 - o3))) / (1 - t3) || 0), 100 * ((1 - r3 - t3) / (1 - t3) || 0), 100 * ((1 - o3 - t3) / (1 - t3) || 0), 100 * t3];
        }, r2.rgb.keyword = function(e3) {
          var n3 = t2[e3];
          if (n3)
            return n3;
          var r3, o3, i3, u3 = 1 / 0;
          for (var s2 in Pa)
            if (Pa.hasOwnProperty(s2)) {
              var a2 = Pa[s2], c2 = (o3 = e3, i3 = a2, Math.pow(o3[0] - i3[0], 2) + Math.pow(o3[1] - i3[1], 2) + Math.pow(o3[2] - i3[2], 2));
              c2 < u3 && (u3 = c2, r3 = s2);
            }
          return r3;
        }, r2.keyword.rgb = function(e3) {
          return Pa[e3];
        }, r2.rgb.xyz = function(e3) {
          var t3 = e3[0] / 255, n3 = e3[1] / 255, r3 = e3[2] / 255;
          return [100 * (0.4124 * (t3 = t3 > 0.04045 ? Math.pow((t3 + 0.055) / 1.055, 2.4) : t3 / 12.92) + 0.3576 * (n3 = n3 > 0.04045 ? Math.pow((n3 + 0.055) / 1.055, 2.4) : n3 / 12.92) + 0.1805 * (r3 = r3 > 0.04045 ? Math.pow((r3 + 0.055) / 1.055, 2.4) : r3 / 12.92)), 100 * (0.2126 * t3 + 0.7152 * n3 + 0.0722 * r3), 100 * (0.0193 * t3 + 0.1192 * n3 + 0.9505 * r3)];
        }, r2.rgb.lab = function(e3) {
          var t3 = r2.rgb.xyz(e3), n3 = t3[0], o3 = t3[1], i3 = t3[2];
          return o3 /= 100, i3 /= 108.883, n3 = (n3 /= 95.047) > 8856e-6 ? Math.pow(n3, 1 / 3) : 7.787 * n3 + 16 / 116, [116 * (o3 = o3 > 8856e-6 ? Math.pow(o3, 1 / 3) : 7.787 * o3 + 16 / 116) - 16, 500 * (n3 - o3), 200 * (o3 - (i3 = i3 > 8856e-6 ? Math.pow(i3, 1 / 3) : 7.787 * i3 + 16 / 116))];
        }, r2.hsl.rgb = function(e3) {
          var t3, n3, r3, o3, i3, u3 = e3[0] / 360, s2 = e3[1] / 100, a2 = e3[2] / 100;
          if (0 === s2)
            return [i3 = 255 * a2, i3, i3];
          t3 = 2 * a2 - (n3 = a2 < 0.5 ? a2 * (1 + s2) : a2 + s2 - a2 * s2), o3 = [0, 0, 0];
          for (var c2 = 0; c2 < 3; c2++)
            (r3 = u3 + 1 / 3 * -(c2 - 1)) < 0 && r3++, r3 > 1 && r3--, i3 = 6 * r3 < 1 ? t3 + 6 * (n3 - t3) * r3 : 2 * r3 < 1 ? n3 : 3 * r3 < 2 ? t3 + (n3 - t3) * (2 / 3 - r3) * 6 : t3, o3[c2] = 255 * i3;
          return o3;
        }, r2.hsl.hsv = function(e3) {
          var t3 = e3[0], n3 = e3[1] / 100, r3 = e3[2] / 100, o3 = n3, i3 = Math.max(r3, 0.01);
          return n3 *= (r3 *= 2) <= 1 ? r3 : 2 - r3, o3 *= i3 <= 1 ? i3 : 2 - i3, [t3, 100 * (0 === r3 ? 2 * o3 / (i3 + o3) : 2 * n3 / (r3 + n3)), 100 * ((r3 + n3) / 2)];
        }, r2.hsv.rgb = function(e3) {
          var t3 = e3[0] / 60, n3 = e3[1] / 100, r3 = e3[2] / 100, o3 = Math.floor(t3) % 6, i3 = t3 - Math.floor(t3), u3 = 255 * r3 * (1 - n3), s2 = 255 * r3 * (1 - n3 * i3), a2 = 255 * r3 * (1 - n3 * (1 - i3));
          switch (r3 *= 255, o3) {
            case 0:
              return [r3, a2, u3];
            case 1:
              return [s2, r3, u3];
            case 2:
              return [u3, r3, a2];
            case 3:
              return [u3, s2, r3];
            case 4:
              return [a2, u3, r3];
            case 5:
              return [r3, u3, s2];
          }
        }, r2.hsv.hsl = function(e3) {
          var t3, n3, r3, o3 = e3[0], i3 = e3[1] / 100, u3 = e3[2] / 100, s2 = Math.max(u3, 0.01);
          return r3 = (2 - i3) * u3, n3 = i3 * s2, [o3, 100 * (n3 = (n3 /= (t3 = (2 - i3) * s2) <= 1 ? t3 : 2 - t3) || 0), 100 * (r3 /= 2)];
        }, r2.hwb.rgb = function(e3) {
          var t3, n3, r3, o3, i3, u3, s2, a2 = e3[0] / 360, c2 = e3[1] / 100, l2 = e3[2] / 100, p2 = c2 + l2;
          switch (p2 > 1 && (c2 /= p2, l2 /= p2), r3 = 6 * a2 - (t3 = Math.floor(6 * a2)), 0 != (1 & t3) && (r3 = 1 - r3), o3 = c2 + r3 * ((n3 = 1 - l2) - c2), t3) {
            default:
            case 6:
            case 0:
              i3 = n3, u3 = o3, s2 = c2;
              break;
            case 1:
              i3 = o3, u3 = n3, s2 = c2;
              break;
            case 2:
              i3 = c2, u3 = n3, s2 = o3;
              break;
            case 3:
              i3 = c2, u3 = o3, s2 = n3;
              break;
            case 4:
              i3 = o3, u3 = c2, s2 = n3;
              break;
            case 5:
              i3 = n3, u3 = c2, s2 = o3;
          }
          return [255 * i3, 255 * u3, 255 * s2];
        }, r2.cmyk.rgb = function(e3) {
          var t3 = e3[0] / 100, n3 = e3[1] / 100, r3 = e3[2] / 100, o3 = e3[3] / 100;
          return [255 * (1 - Math.min(1, t3 * (1 - o3) + o3)), 255 * (1 - Math.min(1, n3 * (1 - o3) + o3)), 255 * (1 - Math.min(1, r3 * (1 - o3) + o3))];
        }, r2.xyz.rgb = function(e3) {
          var t3, n3, r3, o3 = e3[0] / 100, i3 = e3[1] / 100, u3 = e3[2] / 100;
          return n3 = -0.9689 * o3 + 1.8758 * i3 + 0.0415 * u3, r3 = 0.0557 * o3 + -0.204 * i3 + 1.057 * u3, t3 = (t3 = 3.2406 * o3 + -1.5372 * i3 + -0.4986 * u3) > 31308e-7 ? 1.055 * Math.pow(t3, 1 / 2.4) - 0.055 : 12.92 * t3, n3 = n3 > 31308e-7 ? 1.055 * Math.pow(n3, 1 / 2.4) - 0.055 : 12.92 * n3, r3 = r3 > 31308e-7 ? 1.055 * Math.pow(r3, 1 / 2.4) - 0.055 : 12.92 * r3, [255 * (t3 = Math.min(Math.max(0, t3), 1)), 255 * (n3 = Math.min(Math.max(0, n3), 1)), 255 * (r3 = Math.min(Math.max(0, r3), 1))];
        }, r2.xyz.lab = function(e3) {
          var t3 = e3[0], n3 = e3[1], r3 = e3[2];
          return n3 /= 100, r3 /= 108.883, t3 = (t3 /= 95.047) > 8856e-6 ? Math.pow(t3, 1 / 3) : 7.787 * t3 + 16 / 116, [116 * (n3 = n3 > 8856e-6 ? Math.pow(n3, 1 / 3) : 7.787 * n3 + 16 / 116) - 16, 500 * (t3 - n3), 200 * (n3 - (r3 = r3 > 8856e-6 ? Math.pow(r3, 1 / 3) : 7.787 * r3 + 16 / 116))];
        }, r2.lab.xyz = function(e3) {
          var t3, n3, r3, o3 = e3[0];
          t3 = e3[1] / 500 + (n3 = (o3 + 16) / 116), r3 = n3 - e3[2] / 200;
          var i3 = Math.pow(n3, 3), u3 = Math.pow(t3, 3), s2 = Math.pow(r3, 3);
          return n3 = i3 > 8856e-6 ? i3 : (n3 - 16 / 116) / 7.787, t3 = u3 > 8856e-6 ? u3 : (t3 - 16 / 116) / 7.787, r3 = s2 > 8856e-6 ? s2 : (r3 - 16 / 116) / 7.787, [t3 *= 95.047, n3 *= 100, r3 *= 108.883];
        }, r2.lab.lch = function(e3) {
          var t3, n3 = e3[0], r3 = e3[1], o3 = e3[2];
          return (t3 = 360 * Math.atan2(o3, r3) / 2 / Math.PI) < 0 && (t3 += 360), [n3, Math.sqrt(r3 * r3 + o3 * o3), t3];
        }, r2.lch.lab = function(e3) {
          var t3, n3 = e3[0], r3 = e3[1];
          return t3 = e3[2] / 360 * 2 * Math.PI, [n3, r3 * Math.cos(t3), r3 * Math.sin(t3)];
        }, r2.rgb.ansi16 = function(e3) {
          var t3 = e3[0], n3 = e3[1], o3 = e3[2], i3 = 1 in arguments ? arguments[1] : r2.rgb.hsv(e3)[2];
          if (0 === (i3 = Math.round(i3 / 50)))
            return 30;
          var u3 = 30 + (Math.round(o3 / 255) << 2 | Math.round(n3 / 255) << 1 | Math.round(t3 / 255));
          return 2 === i3 && (u3 += 60), u3;
        }, r2.hsv.ansi16 = function(e3) {
          return r2.rgb.ansi16(r2.hsv.rgb(e3), e3[2]);
        }, r2.rgb.ansi256 = function(e3) {
          var t3 = e3[0], n3 = e3[1], r3 = e3[2];
          return t3 === n3 && n3 === r3 ? t3 < 8 ? 16 : t3 > 248 ? 231 : Math.round((t3 - 8) / 247 * 24) + 232 : 16 + 36 * Math.round(t3 / 255 * 5) + 6 * Math.round(n3 / 255 * 5) + Math.round(r3 / 255 * 5);
        }, r2.ansi16.rgb = function(e3) {
          var t3 = e3 % 10;
          if (0 === t3 || 7 === t3)
            return e3 > 50 && (t3 += 3.5), [t3 = t3 / 10.5 * 255, t3, t3];
          var n3 = 0.5 * (1 + ~~(e3 > 50));
          return [(1 & t3) * n3 * 255, (t3 >> 1 & 1) * n3 * 255, (t3 >> 2 & 1) * n3 * 255];
        }, r2.ansi256.rgb = function(e3) {
          if (e3 >= 232) {
            var t3 = 10 * (e3 - 232) + 8;
            return [t3, t3, t3];
          }
          var n3;
          return e3 -= 16, [Math.floor(e3 / 36) / 5 * 255, Math.floor((n3 = e3 % 36) / 6) / 5 * 255, n3 % 6 / 5 * 255];
        }, r2.rgb.hex = function(e3) {
          var t3 = (((255 & Math.round(e3[0])) << 16) + ((255 & Math.round(e3[1])) << 8) + (255 & Math.round(e3[2]))).toString(16).toUpperCase();
          return "000000".substring(t3.length) + t3;
        }, r2.hex.rgb = function(e3) {
          var t3 = e3.toString(16).match(/[a-f0-9]{6}|[a-f0-9]{3}/i);
          if (!t3)
            return [0, 0, 0];
          var n3 = t3[0];
          3 === t3[0].length && (n3 = n3.split("").map(function(e4) {
            return e4 + e4;
          }).join(""));
          var r3 = parseInt(n3, 16);
          return [r3 >> 16 & 255, r3 >> 8 & 255, 255 & r3];
        }, r2.rgb.hcg = function(e3) {
          var t3, n3 = e3[0] / 255, r3 = e3[1] / 255, o3 = e3[2] / 255, i3 = Math.max(Math.max(n3, r3), o3), u3 = Math.min(Math.min(n3, r3), o3), s2 = i3 - u3;
          return t3 = s2 <= 0 ? 0 : i3 === n3 ? (r3 - o3) / s2 % 6 : i3 === r3 ? 2 + (o3 - n3) / s2 : 4 + (n3 - r3) / s2 + 4, t3 /= 6, [360 * (t3 %= 1), 100 * s2, 100 * (s2 < 1 ? u3 / (1 - s2) : 0)];
        }, r2.hsl.hcg = function(e3) {
          var t3 = e3[1] / 100, n3 = e3[2] / 100, r3 = 1, o3 = 0;
          return (r3 = n3 < 0.5 ? 2 * t3 * n3 : 2 * t3 * (1 - n3)) < 1 && (o3 = (n3 - 0.5 * r3) / (1 - r3)), [e3[0], 100 * r3, 100 * o3];
        }, r2.hsv.hcg = function(e3) {
          var t3 = e3[1] / 100, n3 = e3[2] / 100, r3 = t3 * n3, o3 = 0;
          return r3 < 1 && (o3 = (n3 - r3) / (1 - r3)), [e3[0], 100 * r3, 100 * o3];
        }, r2.hcg.rgb = function(e3) {
          var t3 = e3[0] / 360, n3 = e3[1] / 100, r3 = e3[2] / 100;
          if (0 === n3)
            return [255 * r3, 255 * r3, 255 * r3];
          var o3, i3 = [0, 0, 0], u3 = t3 % 1 * 6, s2 = u3 % 1, a2 = 1 - s2;
          switch (Math.floor(u3)) {
            case 0:
              i3[0] = 1, i3[1] = s2, i3[2] = 0;
              break;
            case 1:
              i3[0] = a2, i3[1] = 1, i3[2] = 0;
              break;
            case 2:
              i3[0] = 0, i3[1] = 1, i3[2] = s2;
              break;
            case 3:
              i3[0] = 0, i3[1] = a2, i3[2] = 1;
              break;
            case 4:
              i3[0] = s2, i3[1] = 0, i3[2] = 1;
              break;
            default:
              i3[0] = 1, i3[1] = 0, i3[2] = a2;
          }
          return o3 = (1 - n3) * r3, [255 * (n3 * i3[0] + o3), 255 * (n3 * i3[1] + o3), 255 * (n3 * i3[2] + o3)];
        }, r2.hcg.hsv = function(e3) {
          var t3 = e3[1] / 100, n3 = t3 + e3[2] / 100 * (1 - t3), r3 = 0;
          return n3 > 0 && (r3 = t3 / n3), [e3[0], 100 * r3, 100 * n3];
        }, r2.hcg.hsl = function(e3) {
          var t3 = e3[1] / 100, n3 = e3[2] / 100 * (1 - t3) + 0.5 * t3, r3 = 0;
          return n3 > 0 && n3 < 0.5 ? r3 = t3 / (2 * n3) : n3 >= 0.5 && n3 < 1 && (r3 = t3 / (2 * (1 - n3))), [e3[0], 100 * r3, 100 * n3];
        }, r2.hcg.hwb = function(e3) {
          var t3 = e3[1] / 100, n3 = t3 + e3[2] / 100 * (1 - t3);
          return [e3[0], 100 * (n3 - t3), 100 * (1 - n3)];
        }, r2.hwb.hcg = function(e3) {
          var t3 = e3[1] / 100, n3 = 1 - e3[2] / 100, r3 = n3 - t3, o3 = 0;
          return r3 < 1 && (o3 = (n3 - r3) / (1 - r3)), [e3[0], 100 * r3, 100 * o3];
        }, r2.apple.rgb = function(e3) {
          return [e3[0] / 65535 * 255, e3[1] / 65535 * 255, e3[2] / 65535 * 255];
        }, r2.rgb.apple = function(e3) {
          return [e3[0] / 255 * 65535, e3[1] / 255 * 65535, e3[2] / 255 * 65535];
        }, r2.gray.rgb = function(e3) {
          return [e3[0] / 100 * 255, e3[0] / 100 * 255, e3[0] / 100 * 255];
        }, r2.gray.hsl = r2.gray.hsv = function(e3) {
          return [0, 0, e3[0]];
        }, r2.gray.hwb = function(e3) {
          return [0, 100, e3[0]];
        }, r2.gray.cmyk = function(e3) {
          return [0, 0, 0, e3[0]];
        }, r2.gray.lab = function(e3) {
          return [e3[0], 0, 0];
        }, r2.gray.hex = function(e3) {
          var t3 = 255 & Math.round(e3[0] / 100 * 255), n3 = ((t3 << 16) + (t3 << 8) + t3).toString(16).toUpperCase();
          return "000000".substring(n3.length) + n3;
        }, r2.rgb.gray = function(e3) {
          return [(e3[0] + e3[1] + e3[2]) / 3 / 255 * 100];
        };
      });
      function Ia(e2) {
        var t2 = function() {
          for (var e3 = {}, t3 = Object.keys(Oa), n3 = t3.length, r3 = 0; r3 < n3; r3++)
            e3[t3[r3]] = { distance: -1, parent: null };
          return e3;
        }(), n2 = [e2];
        for (t2[e2].distance = 0; n2.length; )
          for (var r2 = n2.pop(), o2 = Object.keys(Oa[r2]), i2 = o2.length, u2 = 0; u2 < i2; u2++) {
            var s2 = o2[u2], a2 = t2[s2];
            -1 === a2.distance && (a2.distance = t2[r2].distance + 1, a2.parent = r2, n2.unshift(s2));
          }
        return t2;
      }
      function ja(e2, t2) {
        return function(n2) {
          return t2(e2(n2));
        };
      }
      function La(e2, t2) {
        for (var n2 = [t2[e2].parent, e2], r2 = Oa[t2[e2].parent][e2], o2 = t2[e2].parent; t2[o2].parent; )
          n2.unshift(t2[o2].parent), r2 = ja(Oa[t2[o2].parent][o2], r2), o2 = t2[o2].parent;
        return r2.conversion = n2, r2;
      }
      var _a = {};
      Object.keys(Oa).forEach(function(e2) {
        _a[e2] = {}, Object.defineProperty(_a[e2], "channels", { value: Oa[e2].channels }), Object.defineProperty(_a[e2], "labels", { value: Oa[e2].labels });
        var t2 = function(e3) {
          for (var t3 = Ia(e3), n2 = {}, r2 = Object.keys(t3), o2 = r2.length, i2 = 0; i2 < o2; i2++) {
            var u2 = r2[i2];
            null !== t3[u2].parent && (n2[u2] = La(u2, t3));
          }
          return n2;
        }(e2);
        Object.keys(t2).forEach(function(n2) {
          var r2 = t2[n2];
          _a[e2][n2] = function(e3) {
            var t3 = function(t4) {
              if (null == t4)
                return t4;
              arguments.length > 1 && (t4 = Array.prototype.slice.call(arguments));
              var n3 = e3(t4);
              if ("object" == typeof n3)
                for (var r3 = n3.length, o2 = 0; o2 < r3; o2++)
                  n3[o2] = Math.round(n3[o2]);
              return n3;
            };
            return "conversion" in e3 && (t3.conversion = e3.conversion), t3;
          }(r2), _a[e2][n2].raw = function(e3) {
            var t3 = function(t4) {
              return null == t4 ? t4 : (arguments.length > 1 && (t4 = Array.prototype.slice.call(arguments)), e3(t4));
            };
            return "conversion" in e3 && (t3.conversion = e3.conversion), t3;
          }(r2);
        });
      });
      var Ma = _a, Ra = i(function(e2) {
        const t2 = (e3, t3) => function() {
          const n3 = e3.apply(Ma, arguments);
          return "\x1B[".concat(n3 + t3, "m");
        }, n2 = (e3, t3) => function() {
          const n3 = e3.apply(Ma, arguments);
          return "\x1B[".concat(38 + t3, ";5;").concat(n3, "m");
        }, r2 = (e3, t3) => function() {
          const n3 = e3.apply(Ma, arguments);
          return "\x1B[".concat(38 + t3, ";2;").concat(n3[0], ";").concat(n3[1], ";").concat(n3[2], "m");
        };
        Object.defineProperty(e2, "exports", { enumerable: true, get: function() {
          const e3 = /* @__PURE__ */ new Map(), o2 = { modifier: { reset: [0, 0], bold: [1, 22], dim: [2, 22], italic: [3, 23], underline: [4, 24], inverse: [7, 27], hidden: [8, 28], strikethrough: [9, 29] }, color: { black: [30, 39], red: [31, 39], green: [32, 39], yellow: [33, 39], blue: [34, 39], magenta: [35, 39], cyan: [36, 39], white: [37, 39], gray: [90, 39], redBright: [91, 39], greenBright: [92, 39], yellowBright: [93, 39], blueBright: [94, 39], magentaBright: [95, 39], cyanBright: [96, 39], whiteBright: [97, 39] }, bgColor: { bgBlack: [40, 49], bgRed: [41, 49], bgGreen: [42, 49], bgYellow: [43, 49], bgBlue: [44, 49], bgMagenta: [45, 49], bgCyan: [46, 49], bgWhite: [47, 49], bgBlackBright: [100, 49], bgRedBright: [101, 49], bgGreenBright: [102, 49], bgYellowBright: [103, 49], bgBlueBright: [104, 49], bgMagentaBright: [105, 49], bgCyanBright: [106, 49], bgWhiteBright: [107, 49] } };
          o2.color.grey = o2.color.gray;
          for (const t3 of Object.keys(o2)) {
            const n3 = o2[t3];
            for (const t4 of Object.keys(n3)) {
              const r3 = n3[t4];
              o2[t4] = { open: "\x1B[".concat(r3[0], "m"), close: "\x1B[".concat(r3[1], "m") }, n3[t4] = o2[t4], e3.set(r3[0], r3[1]);
            }
            Object.defineProperty(o2, t3, { value: n3, enumerable: false }), Object.defineProperty(o2, "codes", { value: e3, enumerable: false });
          }
          const i2 = (e4) => e4, u2 = (e4, t3, n3) => [e4, t3, n3];
          o2.color.close = "\x1B[39m", o2.bgColor.close = "\x1B[49m", o2.color.ansi = { ansi: t2(i2, 0) }, o2.color.ansi256 = { ansi256: n2(i2, 0) }, o2.color.ansi16m = { rgb: r2(u2, 0) }, o2.bgColor.ansi = { ansi: t2(i2, 10) }, o2.bgColor.ansi256 = { ansi256: n2(i2, 10) }, o2.bgColor.ansi16m = { rgb: r2(u2, 10) };
          for (let e4 of Object.keys(Ma)) {
            if ("object" != typeof Ma[e4])
              continue;
            const i3 = Ma[e4];
            "ansi16" === e4 && (e4 = "ansi"), "ansi16" in i3 && (o2.color.ansi[e4] = t2(i3.ansi16, 0), o2.bgColor.ansi[e4] = t2(i3.ansi16, 10)), "ansi256" in i3 && (o2.color.ansi256[e4] = n2(i3.ansi256, 0), o2.bgColor.ansi256[e4] = n2(i3.ansi256, 10)), "rgb" in i3 && (o2.color.ansi16m[e4] = r2(i3.rgb, 0), o2.bgColor.ansi16m[e4] = r2(i3.rgb, 10));
          }
          return o2;
        } });
      });
      const Va = nt.env;
      let $a;
      function qa(e2) {
        return function(e3) {
          return 0 !== e3 && { level: e3, hasBasic: true, has256: e3 >= 2, has16m: e3 >= 3 };
        }(function(e3) {
          if (false === $a)
            return 0;
          if (Wo("color=16m") || Wo("color=full") || Wo("color=truecolor"))
            return 3;
          if (Wo("color=256"))
            return 2;
          if (e3 && !e3.isTTY && true !== $a)
            return 0;
          const t2 = $a ? 1 : 0;
          if ("win32" === nt.platform) {
            const e4 = Uo.release().split(".");
            return Number(nt.versions.node.split(".")[0]) >= 8 && Number(e4[0]) >= 10 && Number(e4[2]) >= 10586 ? Number(e4[2]) >= 14931 ? 3 : 2 : 1;
          }
          if ("CI" in Va)
            return ["TRAVIS", "CIRCLECI", "APPVEYOR", "GITLAB_CI"].some((e4) => e4 in Va) || "codeship" === Va.CI_NAME ? 1 : t2;
          if ("TEAMCITY_VERSION" in Va)
            return /^(9\.(0*[1-9]\d*)\.|\d{2,}\.)/.test(Va.TEAMCITY_VERSION) ? 1 : 0;
          if ("truecolor" === Va.COLORTERM)
            return 3;
          if ("TERM_PROGRAM" in Va) {
            const e4 = parseInt((Va.TERM_PROGRAM_VERSION || "").split(".")[0], 10);
            switch (Va.TERM_PROGRAM) {
              case "iTerm.app":
                return e4 >= 3 ? 3 : 2;
              case "Apple_Terminal":
                return 2;
            }
          }
          return /-256(color)?$/i.test(Va.TERM) ? 2 : /^screen|^xterm|^vt100|^vt220|^rxvt|color|ansi|cygwin|linux/i.test(Va.TERM) || "COLORTERM" in Va ? 1 : (Va.TERM, t2);
        }(e2));
      }
      Wo("no-color") || Wo("no-colors") || Wo("color=false") ? $a = false : (Wo("color") || Wo("colors") || Wo("color=true") || Wo("color=always")) && ($a = true), "FORCE_COLOR" in Va && ($a = 0 === Va.FORCE_COLOR.length || 0 !== parseInt(Va.FORCE_COLOR, 10));
      var Wa = { supportsColor: qa, stdout: qa(nt.stdout), stderr: qa(nt.stderr) };
      const Ua = /(?:\\(u[a-f\d]{4}|x[a-f\d]{2}|.))|(?:\{(~)?(\w+(?:\([^)]*\))?(?:\.\w+(?:\([^)]*\))?)*)(?:[ \t]|(?=\r?\n)))|(\})|((?:.|[\r\n\f])+?)/gi, za = /(?:^|\.)(\w+)(?:\(([^)]*)\))?/g, Ha = /^(['"])((?:\\.|(?!\1)[^\\])*)\1$/, Ga = /\\(u[a-f\d]{4}|x[a-f\d]{2}|.)|([^\\])/gi, Ja = /* @__PURE__ */ new Map([["n", "\n"], ["r", "\r"], ["t", "	"], ["b", "\b"], ["f", "\f"], ["v", "\v"], ["0", "\0"], ["\\", "\\"], ["e", "\x1B"], ["a", "\x07"]]);
      function Xa(e2) {
        return "u" === e2[0] && 5 === e2.length || "x" === e2[0] && 3 === e2.length ? String.fromCharCode(parseInt(e2.slice(1), 16)) : Ja.get(e2) || e2;
      }
      function Ya(e2, t2) {
        const n2 = [], r2 = t2.trim().split(/\s*,\s*/g);
        let o2;
        for (const t3 of r2)
          if (isNaN(t3)) {
            if (!(o2 = t3.match(Ha)))
              throw new Error("Invalid Chalk template style argument: ".concat(t3, " (in style '").concat(e2, "')"));
            n2.push(o2[2].replace(Ga, (e3, t4, n3) => t4 ? Xa(t4) : n3));
          } else
            n2.push(Number(t3));
        return n2;
      }
      function Ka(e2) {
        za.lastIndex = 0;
        const t2 = [];
        let n2;
        for (; null !== (n2 = za.exec(e2)); ) {
          const e3 = n2[1];
          if (n2[2]) {
            const r2 = Ya(e3, n2[2]);
            t2.push([e3].concat(r2));
          } else
            t2.push([e3]);
        }
        return t2;
      }
      function Qa(e2, t2) {
        const n2 = {};
        for (const e3 of t2)
          for (const t3 of e3.styles)
            n2[t3[0]] = e3.inverse ? null : t3.slice(1);
        let r2 = e2;
        for (const e3 of Object.keys(n2))
          if (Array.isArray(n2[e3])) {
            if (!(e3 in r2))
              throw new Error("Unknown Chalk style: ".concat(e3));
            r2 = n2[e3].length > 0 ? r2[e3].apply(r2, n2[e3]) : r2[e3];
          }
        return r2;
      }
      var Za = (e2, t2) => {
        const n2 = [], r2 = [];
        let o2 = [];
        if (t2.replace(Ua, (t3, i2, u2, s2, a2, c2) => {
          if (i2)
            o2.push(Xa(i2));
          else if (s2) {
            const t4 = o2.join("");
            o2 = [], r2.push(0 === n2.length ? t4 : Qa(e2, n2)(t4)), n2.push({ inverse: u2, styles: Ka(s2) });
          } else if (a2) {
            if (0 === n2.length)
              throw new Error("Found extraneous } in Chalk template literal");
            r2.push(Qa(e2, n2)(o2.join(""))), o2 = [], n2.pop();
          } else
            o2.push(c2);
        }), r2.push(o2.join("")), n2.length > 0) {
          const e3 = "Chalk template literal is missing ".concat(n2.length, " closing bracket").concat(1 === n2.length ? "" : "s", " (`}`)");
          throw new Error(e3);
        }
        return r2.join("");
      }, ec = i(function(e2) {
        const t2 = Wa.stdout, n2 = "win32" === nt.platform && !(nt.env.TERM || "").toLowerCase().startsWith("xterm"), r2 = ["ansi", "ansi", "ansi256", "ansi16m"], o2 = /* @__PURE__ */ new Set(["gray"]), i2 = /* @__PURE__ */ Object.create(null);
        function u2(e3, n3) {
          n3 = n3 || {};
          const r3 = t2 ? t2.level : 0;
          e3.level = void 0 === n3.level ? r3 : n3.level, e3.enabled = "enabled" in n3 ? n3.enabled : e3.level > 0;
        }
        function s2(e3) {
          if (!this || !(this instanceof s2) || this.template) {
            const t3 = {};
            return u2(t3, e3), t3.template = function() {
              const e4 = [].slice.call(arguments);
              return p2.apply(null, [t3.template].concat(e4));
            }, Object.setPrototypeOf(t3, s2.prototype), Object.setPrototypeOf(t3.template, t3), t3.template.constructor = s2, t3.template;
          }
          u2(this, e3);
        }
        n2 && (Ra.blue.open = "\x1B[94m");
        for (const e3 of Object.keys(Ra))
          Ra[e3].closeRe = new RegExp(Na(Ra[e3].close), "g"), i2[e3] = { get() {
            const t3 = Ra[e3];
            return c2.call(this, this._styles ? this._styles.concat(t3) : [t3], this._empty, e3);
          } };
        i2.visible = { get() {
          return c2.call(this, this._styles || [], true, "visible");
        } }, Ra.color.closeRe = new RegExp(Na(Ra.color.close), "g");
        for (const e3 of Object.keys(Ra.color.ansi))
          o2.has(e3) || (i2[e3] = { get() {
            const t3 = this.level;
            return function() {
              const n3 = Ra.color[r2[t3]][e3].apply(null, arguments), o3 = { open: n3, close: Ra.color.close, closeRe: Ra.color.closeRe };
              return c2.call(this, this._styles ? this._styles.concat(o3) : [o3], this._empty, e3);
            };
          } });
        Ra.bgColor.closeRe = new RegExp(Na(Ra.bgColor.close), "g");
        for (const e3 of Object.keys(Ra.bgColor.ansi)) {
          if (o2.has(e3))
            continue;
          i2["bg" + e3[0].toUpperCase() + e3.slice(1)] = { get() {
            const t3 = this.level;
            return function() {
              const n3 = Ra.bgColor[r2[t3]][e3].apply(null, arguments), o3 = { open: n3, close: Ra.bgColor.close, closeRe: Ra.bgColor.closeRe };
              return c2.call(this, this._styles ? this._styles.concat(o3) : [o3], this._empty, e3);
            };
          } };
        }
        const a2 = Object.defineProperties(() => {
        }, i2);
        function c2(e3, t3, n3) {
          const r3 = function() {
            return l2.apply(r3, arguments);
          };
          r3._styles = e3, r3._empty = t3;
          const o3 = this;
          return Object.defineProperty(r3, "level", { enumerable: true, get: () => o3.level, set(e4) {
            o3.level = e4;
          } }), Object.defineProperty(r3, "enabled", { enumerable: true, get: () => o3.enabled, set(e4) {
            o3.enabled = e4;
          } }), r3.hasGrey = this.hasGrey || "gray" === n3 || "grey" === n3, r3.__proto__ = a2, r3;
        }
        function l2() {
          const e3 = arguments, t3 = e3.length;
          let r3 = String(arguments[0]);
          if (0 === t3)
            return "";
          if (t3 > 1)
            for (let n3 = 1; n3 < t3; n3++)
              r3 += " " + e3[n3];
          if (!this.enabled || this.level <= 0 || !r3)
            return this._empty ? "" : r3;
          const o3 = Ra.dim.open;
          n2 && this.hasGrey && (Ra.dim.open = "");
          for (const e4 of this._styles.slice().reverse())
            r3 = e4.open + r3.replace(e4.closeRe, e4.open) + e4.close, r3 = r3.replace(/\r?\n/g, "".concat(e4.close, "$&").concat(e4.open));
          return Ra.dim.open = o3, r3;
        }
        function p2(e3, t3) {
          if (!Array.isArray(t3))
            return [].slice.call(arguments, 1).join(" ");
          const n3 = [].slice.call(arguments, 2), r3 = [t3.raw[0]];
          for (let e4 = 1; e4 < t3.length; e4++)
            r3.push(String(n3[e4 - 1]).replace(/[{}\\]/g, "\\$&")), r3.push(String(t3.raw[e4]));
          return Za(e3, r3.join(""));
        }
        Object.defineProperties(s2.prototype, i2), e2.exports = s2(), e2.exports.supportsColor = t2, e2.exports.default = e2.exports;
      }), tc = pc, nc = fc, rc = function(e2, t2 = {}) {
        if (pc(t2)) {
          const n2 = fc(t2);
          return function(e3, t3) {
            let n3 = "";
            for (const { type: r2, value: o2 } of lc(t3)) {
              const t4 = e3[r2];
              n3 += t4 ? o2.split(ac).map((e4) => t4(e4)).join("\n") : o2;
            }
            return n3;
          }(function(e3) {
            return { keyword: e3.cyan, capitalized: e3.yellow, jsxIdentifier: e3.yellow, punctuator: e3.yellow, number: e3.magenta, string: e3.green, regex: e3.magenta, comment: e3.grey, invalid: e3.white.bgRed.bold };
          }(n2), e2);
        }
        return e2;
      }, oc = function(e2) {
        if (e2 && e2.__esModule)
          return e2;
        if (null === e2 || "object" != typeof e2 && "function" != typeof e2)
          return { default: e2 };
        var t2 = uc();
        if (t2 && t2.has(e2))
          return t2.get(e2);
        var n2 = {}, r2 = Object.defineProperty && Object.getOwnPropertyDescriptor;
        for (var o2 in e2)
          if (Object.prototype.hasOwnProperty.call(e2, o2)) {
            var i2 = r2 ? Object.getOwnPropertyDescriptor(e2, o2) : null;
            i2 && (i2.get || i2.set) ? Object.defineProperty(n2, o2, i2) : n2[o2] = e2[o2];
          }
        n2.default = e2, t2 && t2.set(e2, n2);
        return n2;
      }(ta), ic = function(e2) {
        return e2 && e2.__esModule ? e2 : { default: e2 };
      }(ec);
      function uc() {
        if ("function" != typeof WeakMap)
          return null;
        var e2 = /* @__PURE__ */ new WeakMap();
        return uc = function() {
          return e2;
        }, e2;
      }
      const sc = /* @__PURE__ */ new Set(["as", "async", "from", "get", "of", "set"]);
      const ac = /\r\n|[\n\r\u2028\u2029]/, cc = /^[()[\]{}]$/;
      let lc;
      {
        const { matchToToken: e2 } = oc, t2 = /^[a-z][\w-]*$/i, n2 = function(e3, n3, r2) {
          if ("name" === e3.type) {
            if ((0, Ba.isKeyword)(e3.value) || (0, Ba.isStrictReservedWord)(e3.value, true) || sc.has(e3.value))
              return "keyword";
            if (t2.test(e3.value) && ("<" === r2[n3 - 1] || "</" == r2.substr(n3 - 2, 2)))
              return "jsxIdentifier";
            if (e3.value[0] !== e3.value[0].toLowerCase())
              return "capitalized";
          }
          return "punctuator" === e3.type && cc.test(e3.value) ? "bracket" : "invalid" !== e3.type || "@" !== e3.value && "#" !== e3.value ? e3.type : "punctuator";
        };
        lc = function* (t3) {
          let r2;
          for (; r2 = oc.default.exec(t3); ) {
            const o2 = e2(r2);
            yield { type: n2(o2, r2.index, t3), value: o2.value };
          }
        };
      }
      function pc(e2) {
        return !!ic.default.supportsColor || e2.forceColor;
      }
      function fc(e2) {
        return e2.forceColor ? new ic.default.constructor({ enabled: true, level: 1 }) : ic.default;
      }
      var dc = Ec, hc = function(e2, t2, n2, r2 = {}) {
        if (!yc) {
          yc = true;
          const e3 = "Passing lineNumber and colNumber is deprecated to @babel/code-frame. Please use `codeFrameColumns`.";
          if (nt.emitWarning)
            nt.emitWarning(e3, "DeprecationWarning");
          else {
            new Error(e3).name = "DeprecationWarning", console.warn(new Error(e3));
          }
        }
        n2 = Math.max(n2, 0);
        return Ec(e2, { start: { column: n2, line: t2 } }, r2);
      }, mc = function(e2) {
        if (e2 && e2.__esModule)
          return e2;
        if (null === e2 || "object" != typeof e2 && "function" != typeof e2)
          return { default: e2 };
        var t2 = gc();
        if (t2 && t2.has(e2))
          return t2.get(e2);
        var n2 = {}, r2 = Object.defineProperty && Object.getOwnPropertyDescriptor;
        for (var o2 in e2)
          if (Object.prototype.hasOwnProperty.call(e2, o2)) {
            var i2 = r2 ? Object.getOwnPropertyDescriptor(e2, o2) : null;
            i2 && (i2.get || i2.set) ? Object.defineProperty(n2, o2, i2) : n2[o2] = e2[o2];
          }
        n2.default = e2, t2 && t2.set(e2, n2);
        return n2;
      }(Object.defineProperty({ shouldHighlight: tc, getChalk: nc, default: rc }, "__esModule", { value: true }));
      function gc() {
        if ("function" != typeof WeakMap)
          return null;
        var e2 = /* @__PURE__ */ new WeakMap();
        return gc = function() {
          return e2;
        }, e2;
      }
      let yc = false;
      const Dc = /\r\n|[\n\r\u2028\u2029]/;
      function Ec(e2, t2, n2 = {}) {
        const r2 = (n2.highlightCode || n2.forceColor) && (0, mc.shouldHighlight)(n2), o2 = (0, mc.getChalk)(n2), i2 = function(e3) {
          return { gutter: e3.grey, marker: e3.red.bold, message: e3.red.bold };
        }(o2), u2 = (e3, t3) => r2 ? e3(t3) : t3, s2 = e2.split(Dc), { start: a2, end: c2, markerLines: l2 } = function(e3, t3, n3) {
          const r3 = Object.assign({ column: 0, line: -1 }, e3.start), o3 = Object.assign({}, r3, e3.end), { linesAbove: i3 = 2, linesBelow: u3 = 3 } = n3 || {}, s3 = r3.line, a3 = r3.column, c3 = o3.line, l3 = o3.column;
          let p3 = Math.max(s3 - (i3 + 1), 0), f3 = Math.min(t3.length, c3 + u3);
          -1 === s3 && (p3 = 0), -1 === c3 && (f3 = t3.length);
          const d3 = c3 - s3, h2 = {};
          if (d3)
            for (let e4 = 0; e4 <= d3; e4++) {
              const n4 = e4 + s3;
              if (a3)
                if (0 === e4) {
                  const e5 = t3[n4 - 1].length;
                  h2[n4] = [a3, e5 - a3 + 1];
                } else if (e4 === d3)
                  h2[n4] = [0, l3];
                else {
                  const r4 = t3[n4 - e4].length;
                  h2[n4] = [0, r4];
                }
              else
                h2[n4] = true;
            }
          else
            h2[s3] = a3 === l3 ? !a3 || [a3, 0] : [a3, l3 - a3];
          return { start: p3, end: f3, markerLines: h2 };
        }(t2, s2, n2), p2 = t2.start && "number" == typeof t2.start.column, f2 = String(c2).length;
        let d2 = (r2 ? (0, mc.default)(e2, n2) : e2).split(Dc).slice(a2, c2).map((e3, t3) => {
          const r3 = a2 + 1 + t3, o3 = " ".concat(r3).slice(-f2), s3 = " ".concat(o3, " |"), c3 = l2[r3], p3 = !l2[r3 + 1];
          if (c3) {
            let t4 = "";
            if (Array.isArray(c3)) {
              const r4 = e3.slice(0, Math.max(c3[0] - 1, 0)).replace(/[^\t]/g, " "), o4 = c3[1] || 1;
              t4 = ["\n ", u2(i2.gutter, s3.replace(/\d/g, " ")), " ", r4, u2(i2.marker, "^").repeat(o4)].join(""), p3 && n2.message && (t4 += " " + u2(i2.message, n2.message));
            }
            return [u2(i2.marker, ">"), u2(i2.gutter, s3), e3.length > 0 ? " ".concat(e3) : "", t4].join("");
          }
          return " ".concat(u2(i2.gutter, s3)).concat(e3.length > 0 ? " ".concat(e3) : "");
        }).join("\n");
        return n2.message && !p2 && (d2 = "".concat(" ".repeat(f2 + 1)).concat(n2.message, "\n").concat(d2)), r2 ? o2.reset(d2) : d2;
      }
      var bc = Object.defineProperty({ codeFrameColumns: dc, default: hc }, "__esModule", { value: true }), Cc = o(tr);
      const { ConfigError: vc } = uo, { locStart: Ac, locEnd: Fc } = ea, xc = Object.getOwnPropertyNames, Sc = Object.getOwnPropertyDescriptor;
      function wc(e2) {
        const t2 = {};
        for (const n2 of e2.plugins)
          if (n2.parsers)
            for (const e3 of xc(n2.parsers))
              Object.defineProperty(t2, e3, Sc(n2.parsers, e3));
        return t2;
      }
      function Tc(e2, t2 = wc(e2)) {
        if ("function" == typeof e2.parser)
          return { parse: e2.parser, astFormat: "estree", locStart: Ac, locEnd: Fc };
        if ("string" == typeof e2.parser) {
          if (Object.prototype.hasOwnProperty.call(t2, e2.parser))
            return t2[e2.parser];
          throw new vc(`Couldn't resolve parser "`.concat(e2.parser, '". Parsers must be explicitly added to the standalone bundle.'));
        }
      }
      var Bc = { parse: function(e2, t2) {
        const n2 = wc(t2), r2 = Object.keys(n2).reduce((e3, t3) => Object.defineProperty(e3, t3, { enumerable: true, get: () => n2[t3].parse }), {}), o2 = Tc(t2, n2);
        try {
          return o2.preprocess && (e2 = o2.preprocess(e2, t2)), { text: e2, ast: o2.parse(e2, r2, t2) };
        } catch (t3) {
          const { loc: n3 } = t3;
          if (n3) {
            const { codeFrameColumns: r3 } = bc;
            throw t3.codeFrame = r3(e2, n3, { highlightCode: true }), t3.message += "\n" + t3.codeFrame, t3;
          }
          throw t3.stack;
        }
      }, resolveParser: Tc };
      const { UndefinedParserError: kc } = uo, { getSupportInfo: Nc } = Mt, { resolveParser: Pc } = Bc, Oc = { astFormat: "estree", printer: {}, originalText: void 0, locStart: null, locEnd: null };
      function Ic(e2, t2) {
        const n2 = Cc.basename(e2).toLowerCase(), r2 = Nc({ plugins: t2 }).languages.filter((e3) => null !== e3.since);
        let o2 = r2.find((e3) => e3.extensions && e3.extensions.some((e4) => n2.endsWith(e4)) || e3.filenames && e3.filenames.some((e4) => e4.toLowerCase() === n2));
        if (!o2 && !n2.includes(".")) {
          const t3 = function(e3) {
            if ("string" != typeof e3)
              return "";
            let t4;
            try {
              t4 = eo.openSync(e3, "r");
            } catch (e4) {
              return "";
            }
            try {
              const e4 = new to(t4).next().toString("utf8"), n3 = e4.match(/^#!\/(?:usr\/)?bin\/env\s+(\S+)/);
              if (n3)
                return n3[1];
              const r3 = e4.match(/^#!\/(?:usr\/(?:local\/)?)?bin\/(\S+)/);
              return r3 ? r3[1] : "";
            } catch (e4) {
              return "";
            } finally {
              try {
                eo.closeSync(t4);
              } catch (e4) {
              }
            }
          }(e2);
          o2 = r2.find((e3) => e3.interpreters && e3.interpreters.includes(t3));
        }
        return o2 && o2.parsers[0];
      }
      var jc = { normalize: function(e2, t2 = {}) {
        const n2 = Object.assign({}, e2), r2 = Nc({ plugins: e2.plugins, showUnreleased: true, showDeprecated: true }).options, o2 = Object.assign({}, Oc, Ne(r2.filter((e3) => void 0 !== e3.default).map((e3) => [e3.name, e3.default])));
        if (!n2.parser)
          if (n2.filepath) {
            if (n2.parser = Ic(n2.filepath, n2.plugins), !n2.parser)
              throw new kc("No parser could be inferred for file: ".concat(n2.filepath));
          } else {
            (t2.logger || console).warn("No parser and no filepath given, using 'babel' the parser now but this will throw an error in the future. Please specify a parser or a filepath so one can be inferred."), n2.parser = "babel";
          }
        const i2 = Pc(Xs.normalizeApiOptions(n2, [r2.find((e3) => "parser" === e3.name)], { passThrough: true, logger: false }));
        n2.astFormat = i2.astFormat, n2.locEnd = i2.locEnd, n2.locStart = i2.locStart;
        const u2 = function(e3) {
          const { astFormat: t3 } = e3;
          if (!t3)
            throw new Error("getPlugin() requires astFormat to be set");
          const n3 = e3.plugins.find((e4) => e4.printers && e4.printers[t3]);
          if (!n3)
            throw new Error(`Couldn't find plugin for AST format "`.concat(t3, '"'));
          return n3;
        }(n2);
        n2.printer = u2.printers[n2.astFormat];
        const s2 = Ne(r2.filter((e3) => e3.pluginDefaults && void 0 !== e3.pluginDefaults[u2.name]).map((e3) => [e3.name, e3.pluginDefaults[u2.name]])), a2 = Object.assign({}, o2, s2);
        for (const [e3, t3] of Object.entries(a2))
          null !== n2[e3] && void 0 !== n2[e3] || (n2[e3] = t3);
        return "json" === n2.parser && (n2.trailingComma = "none"), Xs.normalizeApiOptions(n2, r2, Object.assign({ passThrough: Object.keys(Oc) }, t2));
      }, hiddenDefaults: Oc, inferParser: Ic };
      var Lc = function e2(t2, n2, r2) {
        if (Array.isArray(t2))
          return t2.map((t3) => e2(t3, n2, r2)).filter(Boolean);
        if (!t2 || "object" != typeof t2)
          return t2;
        const o2 = n2.printer.massageAstNode;
        let i2;
        i2 = o2 && o2.ignoredProperties ? o2.ignoredProperties : /* @__PURE__ */ new Set();
        const u2 = {};
        for (const [r3, o3] of Object.entries(t2))
          i2.has(r3) || "function" == typeof o3 || (u2[r3] = e2(o3, n2, t2));
        if (o2) {
          const e3 = o2(t2, u2, r2);
          if (null === e3)
            return;
          if (e3)
            return e3;
        }
        return u2;
      }, _c = "function" == typeof Object.create ? function(e2, t2) {
        e2.super_ = t2, e2.prototype = Object.create(t2.prototype, { constructor: { value: e2, enumerable: false, writable: true, configurable: true } });
      } : function(e2, t2) {
        e2.super_ = t2;
        var n2 = function() {
        };
        n2.prototype = t2.prototype, e2.prototype = new n2(), e2.prototype.constructor = e2;
      };
      function Mc(e2, t2) {
        var n2 = { seen: [], stylize: Vc };
        return arguments.length >= 3 && (n2.depth = arguments[2]), arguments.length >= 4 && (n2.colors = arguments[3]), Uc(t2) ? n2.showHidden = t2 : t2 && tl(n2, t2), Gc(n2.showHidden) && (n2.showHidden = false), Gc(n2.depth) && (n2.depth = 2), Gc(n2.colors) && (n2.colors = false), Gc(n2.customInspect) && (n2.customInspect = true), n2.colors && (n2.stylize = Rc), $c(n2, e2, n2.depth);
      }
      function Rc(e2, t2) {
        var n2 = Mc.styles[t2];
        return n2 ? "\x1B[" + Mc.colors[n2][0] + "m" + e2 + "\x1B[" + Mc.colors[n2][1] + "m" : e2;
      }
      function Vc(e2, t2) {
        return e2;
      }
      function $c(e2, t2, n2) {
        if (e2.customInspect && t2 && Qc(t2.inspect) && t2.inspect !== Mc && (!t2.constructor || t2.constructor.prototype !== t2)) {
          var r2 = t2.inspect(n2, e2);
          return Hc(r2) || (r2 = $c(e2, r2, n2)), r2;
        }
        var o2 = function(e3, t3) {
          if (Gc(t3))
            return e3.stylize("undefined", "undefined");
          if (Hc(t3)) {
            var n3 = "'" + JSON.stringify(t3).replace(/^"|"$/g, "").replace(/'/g, "\\'").replace(/\\"/g, '"') + "'";
            return e3.stylize(n3, "string");
          }
          if (r3 = t3, "number" == typeof r3)
            return e3.stylize("" + t3, "number");
          var r3;
          if (Uc(t3))
            return e3.stylize("" + t3, "boolean");
          if (zc(t3))
            return e3.stylize("null", "null");
        }(e2, t2);
        if (o2)
          return o2;
        var i2 = Object.keys(t2), u2 = function(e3) {
          var t3 = {};
          return e3.forEach(function(e4, n3) {
            t3[e4] = true;
          }), t3;
        }(i2);
        if (e2.showHidden && (i2 = Object.getOwnPropertyNames(t2)), Kc(t2) && (i2.indexOf("message") >= 0 || i2.indexOf("description") >= 0))
          return qc(t2);
        if (0 === i2.length) {
          if (Qc(t2)) {
            var s2 = t2.name ? ": " + t2.name : "";
            return e2.stylize("[Function" + s2 + "]", "special");
          }
          if (Jc(t2))
            return e2.stylize(RegExp.prototype.toString.call(t2), "regexp");
          if (Yc(t2))
            return e2.stylize(Date.prototype.toString.call(t2), "date");
          if (Kc(t2))
            return qc(t2);
        }
        var a2, c2, l2 = "", p2 = false, f2 = ["{", "}"];
        (a2 = t2, Array.isArray(a2) && (p2 = true, f2 = ["[", "]"]), Qc(t2)) && (l2 = " [Function" + (t2.name ? ": " + t2.name : "") + "]");
        return Jc(t2) && (l2 = " " + RegExp.prototype.toString.call(t2)), Yc(t2) && (l2 = " " + Date.prototype.toUTCString.call(t2)), Kc(t2) && (l2 = " " + qc(t2)), 0 !== i2.length || p2 && 0 != t2.length ? n2 < 0 ? Jc(t2) ? e2.stylize(RegExp.prototype.toString.call(t2), "regexp") : e2.stylize("[Object]", "special") : (e2.seen.push(t2), c2 = p2 ? function(e3, t3, n3, r3, o3) {
          for (var i3 = [], u3 = 0, s3 = t3.length; u3 < s3; ++u3)
            nl(t3, String(u3)) ? i3.push(Wc(e3, t3, n3, r3, String(u3), true)) : i3.push("");
          return o3.forEach(function(o4) {
            o4.match(/^\d+$/) || i3.push(Wc(e3, t3, n3, r3, o4, true));
          }), i3;
        }(e2, t2, n2, u2, i2) : i2.map(function(r3) {
          return Wc(e2, t2, n2, u2, r3, p2);
        }), e2.seen.pop(), function(e3, t3, n3) {
          if (e3.reduce(function(e4, t4) {
            return t4.indexOf("\n"), e4 + t4.replace(/\u001b\[\d\d?m/g, "").length + 1;
          }, 0) > 60)
            return n3[0] + ("" === t3 ? "" : t3 + "\n ") + " " + e3.join(",\n  ") + " " + n3[1];
          return n3[0] + t3 + " " + e3.join(", ") + " " + n3[1];
        }(c2, l2, f2)) : f2[0] + l2 + f2[1];
      }
      function qc(e2) {
        return "[" + Error.prototype.toString.call(e2) + "]";
      }
      function Wc(e2, t2, n2, r2, o2, i2) {
        var u2, s2, a2;
        if ((a2 = Object.getOwnPropertyDescriptor(t2, o2) || { value: t2[o2] }).get ? s2 = a2.set ? e2.stylize("[Getter/Setter]", "special") : e2.stylize("[Getter]", "special") : a2.set && (s2 = e2.stylize("[Setter]", "special")), nl(r2, o2) || (u2 = "[" + o2 + "]"), s2 || (e2.seen.indexOf(a2.value) < 0 ? (s2 = zc(n2) ? $c(e2, a2.value, null) : $c(e2, a2.value, n2 - 1)).indexOf("\n") > -1 && (s2 = i2 ? s2.split("\n").map(function(e3) {
          return "  " + e3;
        }).join("\n").substr(2) : "\n" + s2.split("\n").map(function(e3) {
          return "   " + e3;
        }).join("\n")) : s2 = e2.stylize("[Circular]", "special")), Gc(u2)) {
          if (i2 && o2.match(/^\d+$/))
            return s2;
          (u2 = JSON.stringify("" + o2)).match(/^"([a-zA-Z_][a-zA-Z_0-9]*)"$/) ? (u2 = u2.substr(1, u2.length - 2), u2 = e2.stylize(u2, "name")) : (u2 = u2.replace(/'/g, "\\'").replace(/\\"/g, '"').replace(/(^"|"$)/g, "'"), u2 = e2.stylize(u2, "string"));
        }
        return u2 + ": " + s2;
      }
      function Uc(e2) {
        return "boolean" == typeof e2;
      }
      function zc(e2) {
        return null === e2;
      }
      function Hc(e2) {
        return "string" == typeof e2;
      }
      function Gc(e2) {
        return void 0 === e2;
      }
      function Jc(e2) {
        return Xc(e2) && "[object RegExp]" === el(e2);
      }
      function Xc(e2) {
        return "object" == typeof e2 && null !== e2;
      }
      function Yc(e2) {
        return Xc(e2) && "[object Date]" === el(e2);
      }
      function Kc(e2) {
        return Xc(e2) && ("[object Error]" === el(e2) || e2 instanceof Error);
      }
      function Qc(e2) {
        return "function" == typeof e2;
      }
      function Zc(e2) {
        return null === e2 || "boolean" == typeof e2 || "number" == typeof e2 || "string" == typeof e2 || "symbol" == typeof e2 || void 0 === e2;
      }
      function el(e2) {
        return Object.prototype.toString.call(e2);
      }
      function tl(e2, t2) {
        if (!t2 || !Xc(t2))
          return e2;
        for (var n2 = Object.keys(t2), r2 = n2.length; r2--; )
          e2[n2[r2]] = t2[n2[r2]];
        return e2;
      }
      function nl(e2, t2) {
        return Object.prototype.hasOwnProperty.call(e2, t2);
      }
      function rl(e2, t2) {
        if (e2 === t2)
          return 0;
        for (var n2 = e2.length, r2 = t2.length, o2 = 0, i2 = Math.min(n2, r2); o2 < i2; ++o2)
          if (e2[o2] !== t2[o2]) {
            n2 = e2[o2], r2 = t2[o2];
            break;
          }
        return n2 < r2 ? -1 : r2 < n2 ? 1 : 0;
      }
      Mc.colors = { bold: [1, 22], italic: [3, 23], underline: [4, 24], inverse: [7, 27], white: [37, 39], grey: [90, 39], black: [30, 39], blue: [34, 39], cyan: [36, 39], green: [32, 39], magenta: [35, 39], red: [31, 39], yellow: [33, 39] }, Mc.styles = { special: "cyan", number: "yellow", boolean: "yellow", undefined: "grey", null: "bold", string: "green", date: "magenta", regexp: "red" };
      var ol, il = Object.prototype.hasOwnProperty, ul = Object.keys || function(e2) {
        var t2 = [];
        for (var n2 in e2)
          il.call(e2, n2) && t2.push(n2);
        return t2;
      }, sl = Array.prototype.slice;
      function al() {
        return void 0 !== ol ? ol : ol = "foo" === function() {
        }.name;
      }
      function cl(e2) {
        return Object.prototype.toString.call(e2);
      }
      function ll(e2) {
        return !Qr(e2) && ("function" == typeof Pe.ArrayBuffer && ("function" == typeof ArrayBuffer.isView ? ArrayBuffer.isView(e2) : !!e2 && (e2 instanceof DataView || !!(e2.buffer && e2.buffer instanceof ArrayBuffer))));
      }
      function pl(e2, t2) {
        e2 || yl(e2, true, t2, "==", Dl);
      }
      var fl = /\s*function\s+([^\(\s]*)\s*/;
      function dl(e2) {
        if (Qc(e2)) {
          if (al())
            return e2.name;
          var t2 = e2.toString().match(fl);
          return t2 && t2[1];
        }
      }
      function hl(e2) {
        this.name = "AssertionError", this.actual = e2.actual, this.expected = e2.expected, this.operator = e2.operator, e2.message ? (this.message = e2.message, this.generatedMessage = false) : (this.message = function(e3) {
          return ml(gl(e3.actual), 128) + " " + e3.operator + " " + ml(gl(e3.expected), 128);
        }(this), this.generatedMessage = true);
        var t2 = e2.stackStartFunction || yl;
        if (Error.captureStackTrace)
          Error.captureStackTrace(this, t2);
        else {
          var n2 = new Error();
          if (n2.stack) {
            var r2 = n2.stack, o2 = dl(t2), i2 = r2.indexOf("\n" + o2);
            if (i2 >= 0) {
              var u2 = r2.indexOf("\n", i2 + 1);
              r2 = r2.substring(u2 + 1);
            }
            this.stack = r2;
          }
        }
      }
      function ml(e2, t2) {
        return "string" == typeof e2 ? e2.length < t2 ? e2 : e2.slice(0, t2) : e2;
      }
      function gl(e2) {
        if (al() || !Qc(e2))
          return Mc(e2);
        var t2 = dl(e2);
        return "[Function" + (t2 ? ": " + t2 : "") + "]";
      }
      function yl(e2, t2, n2, r2, o2) {
        throw new hl({ message: n2, actual: e2, expected: t2, operator: r2, stackStartFunction: o2 });
      }
      function Dl(e2, t2) {
        e2 || yl(e2, true, t2, "==", Dl);
      }
      function El(e2, t2, n2) {
        e2 != t2 && yl(e2, t2, n2, "==", El);
      }
      function bl(e2, t2, n2) {
        e2 == t2 && yl(e2, t2, n2, "!=", bl);
      }
      function Cl(e2, t2, n2) {
        Al(e2, t2, false) || yl(e2, t2, n2, "deepEqual", Cl);
      }
      function vl(e2, t2, n2) {
        Al(e2, t2, true) || yl(e2, t2, n2, "deepStrictEqual", vl);
      }
      function Al(e2, t2, n2, r2) {
        if (e2 === t2)
          return true;
        if (Qr(e2) && Qr(t2))
          return 0 === rl(e2, t2);
        if (Yc(e2) && Yc(t2))
          return e2.getTime() === t2.getTime();
        if (Jc(e2) && Jc(t2))
          return e2.source === t2.source && e2.global === t2.global && e2.multiline === t2.multiline && e2.lastIndex === t2.lastIndex && e2.ignoreCase === t2.ignoreCase;
        if (null !== e2 && "object" == typeof e2 || null !== t2 && "object" == typeof t2) {
          if (ll(e2) && ll(t2) && cl(e2) === cl(t2) && !(e2 instanceof Float32Array || e2 instanceof Float64Array))
            return 0 === rl(new Uint8Array(e2.buffer), new Uint8Array(t2.buffer));
          if (Qr(e2) !== Qr(t2))
            return false;
          var o2 = (r2 = r2 || { actual: [], expected: [] }).actual.indexOf(e2);
          return -1 !== o2 && o2 === r2.expected.indexOf(t2) || (r2.actual.push(e2), r2.expected.push(t2), function(e3, t3, n3, r3) {
            if (null == e3 || null == t3)
              return false;
            if (Zc(e3) || Zc(t3))
              return e3 === t3;
            if (n3 && Object.getPrototypeOf(e3) !== Object.getPrototypeOf(t3))
              return false;
            var o3 = Fl(e3), i2 = Fl(t3);
            if (o3 && !i2 || !o3 && i2)
              return false;
            if (o3)
              return Al(e3 = sl.call(e3), t3 = sl.call(t3), n3);
            var u2, s2, a2 = ul(e3), c2 = ul(t3);
            if (a2.length !== c2.length)
              return false;
            for (a2.sort(), c2.sort(), s2 = a2.length - 1; s2 >= 0; s2--)
              if (a2[s2] !== c2[s2])
                return false;
            for (s2 = a2.length - 1; s2 >= 0; s2--)
              if (!Al(e3[u2 = a2[s2]], t3[u2], n3, r3))
                return false;
            return true;
          }(e2, t2, n2, r2));
        }
        return n2 ? e2 === t2 : e2 == t2;
      }
      function Fl(e2) {
        return "[object Arguments]" == Object.prototype.toString.call(e2);
      }
      function xl(e2, t2, n2) {
        Al(e2, t2, false) && yl(e2, t2, n2, "notDeepEqual", xl);
      }
      function Sl(e2, t2, n2) {
        Al(e2, t2, true) && yl(e2, t2, n2, "notDeepStrictEqual", Sl);
      }
      function wl(e2, t2, n2) {
        e2 !== t2 && yl(e2, t2, n2, "===", wl);
      }
      function Tl(e2, t2, n2) {
        e2 === t2 && yl(e2, t2, n2, "!==", Tl);
      }
      function Bl(e2, t2) {
        if (!e2 || !t2)
          return false;
        if ("[object RegExp]" == Object.prototype.toString.call(t2))
          return t2.test(e2);
        try {
          if (e2 instanceof t2)
            return true;
        } catch (e3) {
        }
        return !Error.isPrototypeOf(t2) && true === t2.call({}, e2);
      }
      function kl(e2, t2, n2, r2) {
        var o2;
        if ("function" != typeof t2)
          throw new TypeError('"block" argument must be a function');
        "string" == typeof n2 && (r2 = n2, n2 = null), o2 = function(e3) {
          var t3;
          try {
            e3();
          } catch (e4) {
            t3 = e4;
          }
          return t3;
        }(t2), r2 = (n2 && n2.name ? " (" + n2.name + ")." : ".") + (r2 ? " " + r2 : "."), e2 && !o2 && yl(o2, n2, "Missing expected exception" + r2);
        var i2 = "string" == typeof r2, u2 = !e2 && o2 && !n2;
        if ((!e2 && Kc(o2) && i2 && Bl(o2, n2) || u2) && yl(o2, n2, "Got unwanted exception" + r2), e2 && o2 && n2 && !Bl(o2, n2) || !e2 && o2)
          throw o2;
      }
      function Nl(e2, t2, n2) {
        kl(true, e2, t2, n2);
      }
      function Pl(e2, t2, n2) {
        kl(false, e2, t2, n2);
      }
      function Ol(e2) {
        if (e2)
          throw e2;
      }
      pl.AssertionError = hl, _c(hl, Error), pl.fail = yl, pl.ok = Dl, pl.equal = El, pl.notEqual = bl, pl.deepEqual = Cl, pl.deepStrictEqual = vl, pl.notDeepEqual = xl, pl.notDeepStrictEqual = Sl, pl.strictEqual = wl, pl.notStrictEqual = Tl, pl.throws = Nl, pl.doesNotThrow = Pl, pl.ifError = Ol;
      var Il = o(Object.freeze({ __proto__: null, default: pl, AssertionError: hl, fail: yl, ok: Dl, assert: Dl, equal: El, notEqual: bl, deepEqual: Cl, deepStrictEqual: vl, notDeepEqual: xl, notDeepStrictEqual: Sl, strictEqual: wl, notStrictEqual: Tl, throws: Nl, doesNotThrow: Pl, ifError: Ol }));
      const { builders: { line: jl, hardline: Ll, breakParent: _l, indent: Ml, lineSuffix: Rl, join: Vl, cursor: $l } } = Rn, { hasNewline: ql, skipNewline: Wl, skipSpaces: Ul, isPreviousLineEmpty: zl, addLeadingComment: Hl, addDanglingComment: Gl, addTrailingComment: Jl } = rn, Xl = /* @__PURE__ */ new WeakMap();
      function Yl(e2, t2, n2) {
        if (!e2)
          return;
        const { printer: r2, locStart: o2, locEnd: i2 } = t2;
        if (n2) {
          if (r2.canAttachComment && r2.canAttachComment(e2)) {
            let t3;
            for (t3 = n2.length - 1; t3 >= 0 && !(o2(n2[t3]) <= o2(e2) && i2(n2[t3]) <= i2(e2)); --t3)
              ;
            return void n2.splice(t3 + 1, 0, e2);
          }
        } else if (Xl.has(e2))
          return Xl.get(e2);
        const u2 = r2.getCommentChildNodes && r2.getCommentChildNodes(e2, t2) || "object" == typeof e2 && Object.entries(e2).filter(([e3]) => "enclosingNode" !== e3 && "precedingNode" !== e3 && "followingNode" !== e3 && "tokens" !== e3 && "comments" !== e3).map(([, e3]) => e3);
        if (u2) {
          n2 || (n2 = [], Xl.set(e2, n2));
          for (const e3 of u2)
            Yl(e3, t2, n2);
          return n2;
        }
      }
      function Kl(e2, t2, n2, r2) {
        const { locStart: o2, locEnd: i2 } = n2, u2 = o2(t2), s2 = i2(t2), a2 = Yl(e2, n2);
        let c2, l2, p2 = 0, f2 = a2.length;
        for (; p2 < f2; ) {
          const e3 = p2 + f2 >> 1, r3 = a2[e3], d2 = o2(r3), h2 = i2(r3);
          if (d2 <= u2 && s2 <= h2)
            return Kl(r3, t2, n2, r3);
          if (h2 <= u2)
            c2 = r3, p2 = e3 + 1;
          else {
            if (!(s2 <= d2))
              throw new Error("Comment location overlaps with node location");
            l2 = r3, f2 = e3;
          }
        }
        if (r2 && "TemplateLiteral" === r2.type) {
          const { quasis: e3 } = r2, o3 = op(e3, t2, n2);
          c2 && op(e3, c2, n2) !== o3 && (c2 = null), l2 && op(e3, l2, n2) !== o3 && (l2 = null);
        }
        return { enclosingNode: r2, precedingNode: c2, followingNode: l2 };
      }
      const Ql = () => false;
      const Zl = (e2) => !/[\S\n\u2028\u2029]/.test(e2);
      function ep(e2, t2, n2, r2) {
        const { comment: o2, precedingNode: i2 } = n2[r2], { locStart: u2, locEnd: s2 } = t2;
        let a2 = u2(o2);
        if (i2)
          for (let t3 = r2 - 1; t3 >= 0; t3--) {
            const { comment: r3, precedingNode: o3 } = n2[t3];
            if (o3 !== i2 || !Zl(e2.slice(s2(r3), a2)))
              break;
            a2 = u2(r3);
          }
        return ql(e2, a2, { backwards: true });
      }
      function tp(e2, t2, n2, r2) {
        const { comment: o2, followingNode: i2 } = n2[r2], { locStart: u2, locEnd: s2 } = t2;
        let a2 = s2(o2);
        if (i2)
          for (let t3 = r2 + 1; t3 < n2.length; t3++) {
            const { comment: r3, followingNode: o3 } = n2[t3];
            if (o3 !== i2 || !Zl(e2.slice(a2, u2(r3))))
              break;
            a2 = s2(r3);
          }
        return ql(e2, a2);
      }
      function np(e2, t2, n2) {
        const r2 = e2.length;
        if (0 === r2)
          return;
        const { precedingNode: o2, followingNode: i2, enclosingNode: u2 } = e2[0], s2 = n2.printer.getGapRegex && n2.printer.getGapRegex(u2) || /^[\s(]*$/;
        let a2, c2 = n2.locStart(i2);
        for (a2 = r2; a2 > 0; --a2) {
          const { comment: r3, precedingNode: u3, followingNode: l2 } = e2[a2 - 1];
          Il.strictEqual(u3, o2), Il.strictEqual(l2, i2);
          const p2 = t2.slice(n2.locEnd(r3), c2);
          if (!s2.test(p2))
            break;
          c2 = n2.locStart(r3);
        }
        for (const [t3, { comment: n3 }] of e2.entries())
          t3 < a2 ? Jl(o2, n3) : Hl(i2, n3);
        for (const e3 of [o2, i2])
          e3.comments && e3.comments.length > 1 && e3.comments.sort((e4, t3) => n2.locStart(e4) - n2.locStart(t3));
        e2.length = 0;
      }
      function rp(e2, t2) {
        return e2.getValue().printed = true, t2.printer.printComment(e2, t2);
      }
      function op(e2, t2, n2) {
        const r2 = n2.locStart(t2) - 1;
        for (let t3 = 1; t3 < e2.length; ++t3)
          if (r2 < n2.locStart(e2[t3]))
            return t3 - 1;
        return 0;
      }
      function ip(e2, t2, n2) {
        const r2 = e2.getValue();
        if (!r2)
          return {};
        let o2 = r2.comments || [];
        n2 && (o2 = o2.filter((e3) => !n2.has(e3)));
        const i2 = r2 === t2.cursorNode;
        if (0 === o2.length) {
          const e3 = i2 ? $l : "";
          return { leading: e3, trailing: e3 };
        }
        const u2 = [], s2 = [];
        return e2.each(() => {
          const r3 = e2.getValue();
          if (n2 && n2.has(r3))
            return;
          const { leading: o3, trailing: i3 } = r3;
          o3 ? u2.push(function(e3, t3) {
            const n3 = e3.getValue(), r4 = [rp(e3, t3)], { printer: o4, originalText: i4, locStart: u3, locEnd: s3 } = t3;
            if (o4.isBlockComment && o4.isBlockComment(n3)) {
              const e4 = ql(i4, s3(n3)) ? ql(i4, u3(n3), { backwards: true }) ? Ll : jl : " ";
              r4.push(e4);
            } else
              r4.push(Ll);
            const a2 = Wl(i4, Ul(i4, s3(n3)));
            return false !== a2 && ql(i4, a2) && r4.push(Ll), r4;
          }(e2, t2)) : i3 && s2.push(function(e3, t3) {
            const n3 = e3.getValue(), r4 = rp(e3, t3), { printer: o4, originalText: i4, locStart: u3 } = t3, s3 = o4.isBlockComment && o4.isBlockComment(n3);
            if (ql(i4, u3(n3), { backwards: true })) {
              const e4 = zl(i4, n3, u3);
              return Rl([Ll, e4 ? Ll : "", r4]);
            }
            let a2 = [" ", r4];
            return s3 || (a2 = [Rl(a2), _l]), a2;
          }(e2, t2));
        }, "comments"), i2 && (u2.unshift($l), s2.push($l)), { leading: u2, trailing: s2 };
      }
      var up = { attach: function(e2, t2, n2, r2) {
        if (!Array.isArray(e2))
          return;
        const o2 = [], { locStart: i2, locEnd: u2, printer: { handleComments: s2 = {} } } = r2, { avoidAstMutation: a2, ownLine: c2 = Ql, endOfLine: l2 = Ql, remaining: p2 = Ql } = s2, f2 = e2.map((o3, i3) => Object.assign({}, Kl(t2, o3, r2), { comment: o3, text: n2, options: r2, ast: t2, isLastComment: e2.length - 1 === i3 }));
        for (const [e3, t3] of f2.entries()) {
          const { comment: n3, precedingNode: r3, enclosingNode: s3, followingNode: d2, text: h2, options: m2, ast: g2, isLastComment: y2 } = t3;
          if ("json" === m2.parser || "json5" === m2.parser || "__js_expression" === m2.parser || "__vue_expression" === m2.parser) {
            if (i2(n3) - i2(g2) <= 0) {
              Hl(g2, n3);
              continue;
            }
            if (u2(n3) - u2(g2) >= 0) {
              Jl(g2, n3);
              continue;
            }
          }
          let D2;
          if (a2 ? D2 = [t3] : (n3.enclosingNode = s3, n3.precedingNode = r3, n3.followingNode = d2, D2 = [n3, h2, m2, g2, y2]), ep(h2, m2, f2, e3))
            n3.placement = "ownLine", c2(...D2) || (d2 ? Hl(d2, n3) : r3 ? Jl(r3, n3) : Gl(s3 || g2, n3));
          else if (tp(h2, m2, f2, e3))
            n3.placement = "endOfLine", l2(...D2) || (r3 ? Jl(r3, n3) : d2 ? Hl(d2, n3) : Gl(s3 || g2, n3));
          else if (n3.placement = "remaining", p2(...D2))
            ;
          else if (r3 && d2) {
            const e4 = o2.length;
            if (e4 > 0) {
              o2[e4 - 1].followingNode !== d2 && np(o2, h2, m2);
            }
            o2.push(t3);
          } else
            r3 ? Jl(r3, n3) : d2 ? Hl(d2, n3) : Gl(s3 || g2, n3);
        }
        if (np(o2, n2, r2), !a2)
          for (const t3 of e2)
            delete t3.precedingNode, delete t3.enclosingNode, delete t3.followingNode;
      }, printComments: function(e2, t2, n2, r2) {
        const { leading: o2, trailing: i2 } = ip(e2, n2, r2);
        return o2 || i2 ? [o2, t2, i2] : t2;
      }, printCommentsSeparately: ip, printDanglingComments: function(e2, t2, n2, r2) {
        const o2 = [], i2 = e2.getValue();
        return i2 && i2.comments ? (e2.each(() => {
          const n3 = e2.getValue();
          n3.leading || n3.trailing || r2 && !r2(n3) || o2.push(rp(e2, t2));
        }, "comments"), 0 === o2.length ? "" : n2 ? Vl(Ll, o2) : Ml([Ll, Vl(Ll, o2)])) : "";
      }, getSortedChildNodes: Yl, ensureAllCommentsPrinted: function(e2) {
        if (e2)
          for (const t2 of e2) {
            if (!t2.printed)
              throw new Error('Comment "' + t2.value.trim() + '" was not printed. Please report this error!');
            delete t2.printed;
          }
      } };
      function sp(e2, t2) {
        const n2 = ap(e2.stack, t2);
        return -1 === n2 ? null : e2.stack[n2];
      }
      function ap(e2, t2) {
        for (let n2 = e2.length - 1; n2 >= 0; n2 -= 2) {
          const r2 = e2[n2];
          if (r2 && !Array.isArray(r2) && --t2 < 0)
            return n2;
        }
        return -1;
      }
      var cp = class {
        constructor(e2) {
          this.stack = [e2];
        }
        getName() {
          const { stack: e2 } = this, { length: t2 } = e2;
          return t2 > 1 ? e2[t2 - 2] : null;
        }
        getValue() {
          return ke(this.stack);
        }
        getNode(e2 = 0) {
          return sp(this, e2);
        }
        getParentNode(e2 = 0) {
          return sp(this, e2 + 1);
        }
        call(e2, ...t2) {
          const { stack: n2 } = this, { length: r2 } = n2;
          let o2 = ke(n2);
          for (const e3 of t2)
            o2 = o2[e3], n2.push(e3, o2);
          const i2 = e2(this);
          return n2.length = r2, i2;
        }
        callParent(e2, t2 = 0) {
          const n2 = ap(this.stack, t2 + 1), r2 = this.stack.splice(n2 + 1), o2 = e2(this);
          return this.stack.push(...r2), o2;
        }
        each(e2, ...t2) {
          const { stack: n2 } = this, { length: r2 } = n2;
          let o2 = ke(n2);
          for (const e3 of t2)
            o2 = o2[e3], n2.push(e3, o2);
          for (let t3 = 0; t3 < o2.length; ++t3)
            n2.push(t3, o2[t3]), e2(this, t3, o2), n2.length -= 2;
          n2.length = r2;
        }
        map(e2, ...t2) {
          const n2 = [];
          return this.each((t3, r2, o2) => {
            n2[r2] = e2(t3, r2, o2);
          }, ...t2), n2;
        }
        try(e2) {
          const { stack: t2 } = this, n2 = [...t2];
          try {
            return e2();
          } finally {
            t2.length = 0, t2.push(...n2);
          }
        }
        match(...e2) {
          let t2 = this.stack.length - 1, n2 = null, r2 = this.stack[t2--];
          for (const o2 of e2) {
            if (void 0 === r2)
              return false;
            let e3 = null;
            if ("number" == typeof n2 && (e3 = n2, n2 = this.stack[t2--], r2 = this.stack[t2--]), o2 && !o2(r2, n2, e3))
              return false;
            n2 = this.stack[t2--], r2 = this.stack[t2--];
          }
          return true;
        }
        findAncestor(e2) {
          let t2 = this.stack.length - 1, n2 = null, r2 = this.stack[t2--];
          for (; r2; ) {
            let o2 = null;
            if ("number" == typeof n2 && (o2 = n2, n2 = this.stack[t2--], r2 = this.stack[t2--]), null !== n2 && e2(r2, n2, o2))
              return r2;
            n2 = this.stack[t2--], r2 = this.stack[t2--];
          }
        }
      };
      const { utils: { stripTrailingHardline: lp } } = Rn, { normalize: pp } = jc;
      var fp = { printSubtree: function(e2, t2, n2, r2) {
        if (n2.printer.embed && "auto" === n2.embeddedLanguageFormatting)
          return n2.printer.embed(e2, t2, (e3, t3, o2) => function(e4, t4, n3, r3, { stripTrailingHardline: o3 = false } = {}) {
            const i2 = pp(Object.assign({}, n3, t4, { parentParser: n3.parser, originalText: e4 }), { passThrough: true }), u2 = Bc.parse(e4, i2), { ast: s2 } = u2;
            e4 = u2.text;
            const a2 = s2.comments;
            delete s2.comments, up.attach(a2, s2, e4, i2), i2[Symbol.for("comments")] = a2 || [], i2[Symbol.for("tokens")] = s2.tokens || [];
            const c2 = r3(s2, i2);
            if (up.ensureAllCommentsPrinted(a2), o3)
              return "string" == typeof c2 ? c2.replace(/(?:\r?\n)*$/, "") : lp(c2);
            return c2;
          }(e3, t3, n2, r2, o2), n2);
      } };
      const { builders: { hardline: dp, addAlignmentToDoc: hp }, utils: { propagateBreaks: mp } } = Rn, { printComments: gp } = up;
      function yp(e2, t2, n2 = 0) {
        const { printer: o2 } = t2;
        o2.preprocess && (e2 = o2.preprocess(e2, t2));
        const i2 = /* @__PURE__ */ new Map(), u2 = new cp(e2);
        let s2 = a2();
        return n2 > 0 && (s2 = hp([dp, s2], n2, t2.tabWidth)), mp(s2), s2;
        function a2(e3, t3) {
          return void 0 === e3 || e3 === u2 ? c2(t3) : Array.isArray(e3) ? u2.call(() => c2(t3), ...e3) : u2.call(() => c2(t3), e3);
        }
        function c2(e3) {
          const n3 = u2.getValue(), o3 = n3 && "object" == typeof n3 && void 0 === e3;
          if (o3 && i2.has(n3))
            return i2.get(n3);
          const s3 = function(e4, t3, n4, o4) {
            const i3 = e4.getValue(), { printer: u3 } = t3;
            let s4, a3;
            if (u3.hasPrettierIgnore && u3.hasPrettierIgnore(e4))
              ({ doc: s4, printedComments: a3 } = function(e5, t4) {
                const { originalText: n5, [Symbol.for("comments")]: r2, locStart: o5, locEnd: i4 } = t4, u4 = o5(e5), s5 = i4(e5), a4 = /* @__PURE__ */ new Set();
                for (const e6 of r2)
                  o5(e6) >= u4 && i4(e6) <= s5 && (e6.printed = true, a4.add(e6));
                return { doc: n5.slice(u4, s5), printedComments: a4 };
              }(i3, t3));
            else {
              if (i3)
                try {
                  s4 = fp.printSubtree(e4, n4, t3, yp);
                } catch (e5) {
                  if (r.PRETTIER_DEBUG)
                    throw e5;
                }
              s4 || (s4 = u3.print(e4, t3, n4, o4));
            }
            u3.willPrintOwnComments && u3.willPrintOwnComments(e4, t3) || (s4 = gp(e4, s4, t3, a3));
            return s4;
          }(u2, t2, a2, e3);
          return o3 && i2.set(n3, s3), s3;
        }
      }
      var Dp = yp;
      function Ep(e2) {
        let t2 = e2.length - 1;
        for (; ; ) {
          const n2 = e2[t2];
          if (!n2 || "Program" !== n2.type && "File" !== n2.type)
            break;
          t2--;
        }
        return e2.slice(0, t2 + 1);
      }
      function bp(e2, t2, n2, r2, o2 = [], i2) {
        const { locStart: u2, locEnd: s2 } = n2, a2 = u2(e2), c2 = s2(e2);
        if (!(t2 > c2 || t2 < a2 || "rangeEnd" === i2 && t2 === a2 || "rangeStart" === i2 && t2 === c2)) {
          for (const u3 of up.getSortedChildNodes(e2, n2)) {
            const s3 = bp(u3, t2, n2, r2, [e2, ...o2], i2);
            if (s3)
              return s3;
          }
          return !r2 || r2(e2, o2[0]) ? { node: e2, parentNodes: o2 } : void 0;
        }
      }
      const Cp = /* @__PURE__ */ new Set(["ObjectExpression", "ArrayExpression", "StringLiteral", "NumericLiteral", "BooleanLiteral", "NullLiteral", "UnaryExpression", "TemplateLiteral"]), vp = /* @__PURE__ */ new Set(["OperationDefinition", "FragmentDefinition", "VariableDefinition", "TypeExtensionDefinition", "ObjectTypeDefinition", "FieldDefinition", "DirectiveDefinition", "EnumTypeDefinition", "EnumValueDefinition", "InputValueDefinition", "InputObjectTypeDefinition", "SchemaDefinition", "OperationTypeDefinition", "InterfaceTypeDefinition", "UnionTypeDefinition", "ScalarTypeDefinition"]);
      function Ap(e2, t2, n2) {
        if (!t2)
          return false;
        switch (e2.parser) {
          case "flow":
          case "babel":
          case "babel-flow":
          case "babel-ts":
          case "typescript":
          case "espree":
          case "meriyah":
            return function(e3, t3) {
              return "DeclareExportDeclaration" !== t3 && "TypeParameterDeclaration" !== e3 && ("Directive" === e3 || "TypeAlias" === e3 || "TSExportAssignment" === e3 || e3.startsWith("Declare") || e3.startsWith("TSDeclare") || e3.endsWith("Statement") || e3.endsWith("Declaration"));
            }(t2.type, n2 && n2.type);
          case "json":
          case "json5":
          case "json-stringify":
            return Cp.has(t2.type);
          case "graphql":
            return vp.has(t2.kind);
          case "vue":
            return "root" !== t2.tag;
        }
        return false;
      }
      var Fp = { calculateRange: function(e2, t2, n2) {
        let { rangeStart: r2, rangeEnd: o2, locStart: i2, locEnd: u2 } = t2;
        Il.ok(o2 > r2);
        const s2 = e2.slice(r2, o2).search(/\S/), a2 = -1 === s2;
        if (!a2)
          for (r2 += s2; o2 > r2 && !/\S/.test(e2[o2 - 1]); --o2)
            ;
        const c2 = bp(n2, r2, t2, (e3, n3) => Ap(t2, e3, n3), [], "rangeStart"), l2 = a2 ? c2 : bp(n2, o2, t2, (e3) => Ap(t2, e3), [], "rangeEnd");
        if (!c2 || !l2)
          return { rangeStart: 0, rangeEnd: 0 };
        let p2, f2;
        if ((({ parser: e3 }) => "json" === e3 || "json5" === e3 || "json-stringify" === e3)(t2)) {
          const e3 = function(e4, t3) {
            const n3 = [e4.node, ...e4.parentNodes], r3 = /* @__PURE__ */ new Set([t3.node, ...t3.parentNodes]);
            return n3.find((e5) => Cp.has(e5.type) && r3.has(e5));
          }(c2, l2);
          p2 = e3, f2 = e3;
        } else
          ({ startNode: p2, endNode: f2 } = function(e3, t3, { locStart: n3, locEnd: r3 }) {
            let o3 = e3.node, i3 = t3.node;
            if (o3 === i3)
              return { startNode: o3, endNode: i3 };
            const u3 = n3(e3.node);
            for (const e4 of Ep(t3.parentNodes)) {
              if (!(n3(e4) >= u3))
                break;
              i3 = e4;
            }
            const s3 = r3(t3.node);
            for (const t4 of Ep(e3.parentNodes)) {
              if (!(r3(t4) <= s3))
                break;
              o3 = t4;
            }
            return { startNode: o3, endNode: i3 };
          }(c2, l2, t2));
        return { rangeStart: Math.min(i2(p2), i2(f2)), rangeEnd: Math.max(u2(p2), u2(f2)) };
      }, findNodeAtOffset: bp };
      const { printer: { printDocToString: xp }, debug: { printDocToDebug: Sp } } = Rn, { getAlignmentSize: wp } = rn, { guessEndOfLine: Tp, convertEndOfLineToChars: Bp, countEndOfLineChars: kp, normalizeEndOfLine: Np } = on, Pp = jc.normalize, Op = Symbol("cursor");
      function Ip(e2, t2, n2) {
        const r2 = t2.comments;
        return r2 && (delete t2.comments, up.attach(r2, t2, e2, n2)), n2[Symbol.for("comments")] = r2 || [], n2[Symbol.for("tokens")] = t2.tokens || [], n2.originalText = e2, r2;
      }
      function jp(e2, t2, n2 = 0) {
        if (!e2 || 0 === e2.trim().length)
          return { formatted: "", cursorOffset: -1, comments: [] };
        const { ast: r2, text: o2 } = Bc.parse(e2, t2);
        if (t2.cursorOffset >= 0) {
          const e3 = Fp.findNodeAtOffset(r2, t2.cursorOffset, t2);
          e3 && e3.node && (t2.cursorNode = e3.node);
        }
        const i2 = Ip(o2, r2, t2), u2 = Dp(r2, t2, n2), s2 = xp(u2, t2);
        if (up.ensureAllCommentsPrinted(i2), n2 > 0) {
          const e3 = s2.formatted.trim();
          void 0 !== s2.cursorNodeStart && (s2.cursorNodeStart -= s2.formatted.indexOf(e3)), s2.formatted = e3 + Bp(t2.endOfLine);
        }
        if (t2.cursorOffset >= 0) {
          let e3, n3, r3, u3, a2;
          if (t2.cursorNode && s2.cursorNodeText ? (e3 = t2.locStart(t2.cursorNode), n3 = o2.slice(e3, t2.locEnd(t2.cursorNode)), r3 = t2.cursorOffset - e3, u3 = s2.cursorNodeStart, a2 = s2.cursorNodeText) : (e3 = 0, n3 = o2, r3 = t2.cursorOffset, u3 = 0, a2 = s2.formatted), n3 === a2)
            return { formatted: s2.formatted, cursorOffset: u3 + r3, comments: i2 };
          const c2 = n3.split("");
          c2.splice(r3, 0, Op);
          const l2 = a2.split(""), p2 = pe.diffArrays(c2, l2);
          let f2 = u3;
          for (const e4 of p2)
            if (e4.removed) {
              if (e4.value.includes(Op))
                break;
            } else
              f2 += e4.count;
          return { formatted: s2.formatted, cursorOffset: f2, comments: i2 };
        }
        return { formatted: s2.formatted, cursorOffset: -1, comments: i2 };
      }
      function Lp(e2, t2, n2) {
        return "number" != typeof t2 || Number.isNaN(t2) || t2 < 0 || t2 > e2.length ? n2 : t2;
      }
      function _p(e2, t2) {
        let { cursorOffset: n2, rangeStart: r2, rangeEnd: o2 } = t2;
        return n2 = Lp(e2, n2, -1), r2 = Lp(e2, r2, 0), o2 = Lp(e2, o2, e2.length), Object.assign({}, t2, { cursorOffset: n2, rangeStart: r2, rangeEnd: o2 });
      }
      function Mp(e2, t2) {
        let { cursorOffset: n2, rangeStart: r2, rangeEnd: o2, endOfLine: i2 } = _p(e2, t2);
        const u2 = "\uFEFF" === e2.charAt(0);
        if (u2 && (e2 = e2.slice(1), n2--, r2--, o2--), "auto" === i2 && (i2 = Tp(e2)), e2.includes("\r")) {
          const t3 = (t4) => kp(e2.slice(0, Math.max(t4, 0)), "\r\n");
          n2 -= t3(n2), r2 -= t3(r2), o2 -= t3(o2), e2 = Np(e2);
        }
        return { hasBOM: u2, text: e2, options: _p(e2, Object.assign({}, t2, { cursorOffset: n2, rangeStart: r2, rangeEnd: o2, endOfLine: i2 })) };
      }
      function Rp(e2, t2) {
        const n2 = Bc.resolveParser(t2);
        return !n2.hasPragma || n2.hasPragma(e2);
      }
      function Vp(e2, t2) {
        let n2, { hasBOM: r2, text: o2, options: i2 } = Mp(e2, Pp(t2));
        return i2.rangeStart >= i2.rangeEnd && "" !== o2 || i2.requirePragma && !Rp(o2, i2) ? { formatted: e2, cursorOffset: t2.cursorOffset, comments: [] } : (i2.rangeStart > 0 || i2.rangeEnd < o2.length ? n2 = function(e3, t3) {
          const { ast: n3, text: r3 } = Bc.parse(e3, t3), { rangeStart: o3, rangeEnd: i3 } = Fp.calculateRange(r3, t3, n3), u2 = r3.slice(o3, i3), s2 = Math.min(o3, r3.lastIndexOf("\n", o3) + 1), a2 = r3.slice(s2, o3).match(/^\s*/)[0], c2 = wp(a2, t3.tabWidth), l2 = jp(u2, Object.assign({}, t3, { rangeStart: 0, rangeEnd: Number.POSITIVE_INFINITY, cursorOffset: t3.cursorOffset > o3 && t3.cursorOffset < i3 ? t3.cursorOffset - o3 : -1, endOfLine: "lf" }), c2), p2 = l2.formatted.trimEnd();
          let { cursorOffset: f2 } = t3;
          f2 >= i3 ? f2 += p2.length - u2.length : l2.cursorOffset >= 0 && (f2 = l2.cursorOffset + o3);
          let d2 = r3.slice(0, o3) + p2 + r3.slice(i3);
          if ("lf" !== t3.endOfLine) {
            const e4 = Bp(t3.endOfLine);
            f2 >= 0 && "\r\n" === e4 && (f2 += kp(d2.slice(0, f2), "\n")), d2 = d2.replace(/\n/g, e4);
          }
          return { formatted: d2, cursorOffset: f2, comments: l2.comments };
        }(o2, i2) : (!i2.requirePragma && i2.insertPragma && i2.printer.insertPragma && !Rp(o2, i2) && (o2 = i2.printer.insertPragma(o2)), n2 = jp(o2, i2)), r2 && (n2.formatted = "\uFEFF" + n2.formatted, n2.cursorOffset >= 0 && n2.cursorOffset++), n2);
      }
      var $p = { formatWithCursor: Vp, parse(e2, t2, n2) {
        const { text: r2, options: o2 } = Mp(e2, Pp(t2)), i2 = Bc.parse(r2, o2);
        return n2 && (i2.ast = Lc(i2.ast, o2)), i2;
      }, formatAST(e2, t2) {
        t2 = Pp(t2);
        const n2 = Dp(e2, t2);
        return xp(n2, t2);
      }, formatDoc: (e2, t2) => Vp(Sp(e2), Object.assign({}, t2, { parser: "__js_expression" })).formatted, printToDoc(e2, t2) {
        t2 = Pp(t2);
        const { ast: n2, text: r2 } = Bc.parse(e2, t2);
        return Ip(r2, n2, t2), Dp(n2, t2);
      }, printDocToString: (e2, t2) => xp(e2, Pp(t2)) };
      const { getMaxContinuousCount: qp, getStringWidth: Wp, getAlignmentSize: Up, getIndentSize: zp, skip: Hp, skipWhitespace: Gp, skipSpaces: Jp, skipNewline: Xp, skipToLineEnd: Yp, skipEverythingButNewLine: Kp, skipInlineComment: Qp, skipTrailingComment: Zp, hasNewline: ef, hasNewlineInRange: tf, hasSpaces: nf, isNextLineEmpty: rf, isNextLineEmptyAfterIndex: of, isPreviousLineEmpty: uf, getNextNonSpaceNonCommentCharacterIndex: sf, makeString: af, addLeadingComment: cf, addDanglingComment: lf, addTrailingComment: pf } = rn;
      var ff = { getMaxContinuousCount: qp, getStringWidth: Wp, getAlignmentSize: Up, getIndentSize: zp, skip: Hp, skipWhitespace: Gp, skipSpaces: Jp, skipNewline: Xp, skipToLineEnd: Yp, skipEverythingButNewLine: Kp, skipInlineComment: Qp, skipTrailingComment: Zp, hasNewline: ef, hasNewlineInRange: tf, hasSpaces: nf, isNextLineEmpty: rf, isNextLineEmptyAfterIndex: of, isPreviousLineEmpty: uf, getNextNonSpaceNonCommentCharacterIndex: sf, makeString: af, addLeadingComment: cf, addDanglingComment: lf, addTrailingComment: pf }, df = function(t2, n2) {
        const { languageId: r2 } = t2, o2 = e(t2, ["languageId"]);
        return Object.assign({ linguistLanguageId: r2 }, o2, n2(t2));
      }, hf = i(function(e2) {
        !function() {
          function t2(e3) {
            if (null == e3)
              return false;
            switch (e3.type) {
              case "BlockStatement":
              case "BreakStatement":
              case "ContinueStatement":
              case "DebuggerStatement":
              case "DoWhileStatement":
              case "EmptyStatement":
              case "ExpressionStatement":
              case "ForInStatement":
              case "ForStatement":
              case "IfStatement":
              case "LabeledStatement":
              case "ReturnStatement":
              case "SwitchStatement":
              case "ThrowStatement":
              case "TryStatement":
              case "VariableDeclaration":
              case "WhileStatement":
              case "WithStatement":
                return true;
            }
            return false;
          }
          function n2(e3) {
            switch (e3.type) {
              case "IfStatement":
                return null != e3.alternate ? e3.alternate : e3.consequent;
              case "LabeledStatement":
              case "ForStatement":
              case "ForInStatement":
              case "WhileStatement":
              case "WithStatement":
                return e3.body;
            }
            return null;
          }
          e2.exports = { isExpression: function(e3) {
            if (null == e3)
              return false;
            switch (e3.type) {
              case "ArrayExpression":
              case "AssignmentExpression":
              case "BinaryExpression":
              case "CallExpression":
              case "ConditionalExpression":
              case "FunctionExpression":
              case "Identifier":
              case "Literal":
              case "LogicalExpression":
              case "MemberExpression":
              case "NewExpression":
              case "ObjectExpression":
              case "SequenceExpression":
              case "ThisExpression":
              case "UnaryExpression":
              case "UpdateExpression":
                return true;
            }
            return false;
          }, isStatement: t2, isIterationStatement: function(e3) {
            if (null == e3)
              return false;
            switch (e3.type) {
              case "DoWhileStatement":
              case "ForInStatement":
              case "ForStatement":
              case "WhileStatement":
                return true;
            }
            return false;
          }, isSourceElement: function(e3) {
            return t2(e3) || null != e3 && "FunctionDeclaration" === e3.type;
          }, isProblematicIfStatement: function(e3) {
            var t3;
            if ("IfStatement" !== e3.type)
              return false;
            if (null == e3.alternate)
              return false;
            t3 = e3.consequent;
            do {
              if ("IfStatement" === t3.type && null == t3.alternate)
                return true;
              t3 = n2(t3);
            } while (t3);
            return false;
          }, trailingStatement: n2 };
        }();
      }), mf = i(function(e2) {
        !function() {
          var t2, n2, r2, o2, i2, u2;
          function s2(e3) {
            return e3 <= 65535 ? String.fromCharCode(e3) : String.fromCharCode(Math.floor((e3 - 65536) / 1024) + 55296) + String.fromCharCode((e3 - 65536) % 1024 + 56320);
          }
          for (n2 = { NonAsciiIdentifierStart: /[\xAA\xB5\xBA\xC0-\xD6\xD8-\xF6\xF8-\u02C1\u02C6-\u02D1\u02E0-\u02E4\u02EC\u02EE\u0370-\u0374\u0376\u0377\u037A-\u037D\u037F\u0386\u0388-\u038A\u038C\u038E-\u03A1\u03A3-\u03F5\u03F7-\u0481\u048A-\u052F\u0531-\u0556\u0559\u0561-\u0587\u05D0-\u05EA\u05F0-\u05F2\u0620-\u064A\u066E\u066F\u0671-\u06D3\u06D5\u06E5\u06E6\u06EE\u06EF\u06FA-\u06FC\u06FF\u0710\u0712-\u072F\u074D-\u07A5\u07B1\u07CA-\u07EA\u07F4\u07F5\u07FA\u0800-\u0815\u081A\u0824\u0828\u0840-\u0858\u08A0-\u08B4\u08B6-\u08BD\u0904-\u0939\u093D\u0950\u0958-\u0961\u0971-\u0980\u0985-\u098C\u098F\u0990\u0993-\u09A8\u09AA-\u09B0\u09B2\u09B6-\u09B9\u09BD\u09CE\u09DC\u09DD\u09DF-\u09E1\u09F0\u09F1\u0A05-\u0A0A\u0A0F\u0A10\u0A13-\u0A28\u0A2A-\u0A30\u0A32\u0A33\u0A35\u0A36\u0A38\u0A39\u0A59-\u0A5C\u0A5E\u0A72-\u0A74\u0A85-\u0A8D\u0A8F-\u0A91\u0A93-\u0AA8\u0AAA-\u0AB0\u0AB2\u0AB3\u0AB5-\u0AB9\u0ABD\u0AD0\u0AE0\u0AE1\u0AF9\u0B05-\u0B0C\u0B0F\u0B10\u0B13-\u0B28\u0B2A-\u0B30\u0B32\u0B33\u0B35-\u0B39\u0B3D\u0B5C\u0B5D\u0B5F-\u0B61\u0B71\u0B83\u0B85-\u0B8A\u0B8E-\u0B90\u0B92-\u0B95\u0B99\u0B9A\u0B9C\u0B9E\u0B9F\u0BA3\u0BA4\u0BA8-\u0BAA\u0BAE-\u0BB9\u0BD0\u0C05-\u0C0C\u0C0E-\u0C10\u0C12-\u0C28\u0C2A-\u0C39\u0C3D\u0C58-\u0C5A\u0C60\u0C61\u0C80\u0C85-\u0C8C\u0C8E-\u0C90\u0C92-\u0CA8\u0CAA-\u0CB3\u0CB5-\u0CB9\u0CBD\u0CDE\u0CE0\u0CE1\u0CF1\u0CF2\u0D05-\u0D0C\u0D0E-\u0D10\u0D12-\u0D3A\u0D3D\u0D4E\u0D54-\u0D56\u0D5F-\u0D61\u0D7A-\u0D7F\u0D85-\u0D96\u0D9A-\u0DB1\u0DB3-\u0DBB\u0DBD\u0DC0-\u0DC6\u0E01-\u0E30\u0E32\u0E33\u0E40-\u0E46\u0E81\u0E82\u0E84\u0E87\u0E88\u0E8A\u0E8D\u0E94-\u0E97\u0E99-\u0E9F\u0EA1-\u0EA3\u0EA5\u0EA7\u0EAA\u0EAB\u0EAD-\u0EB0\u0EB2\u0EB3\u0EBD\u0EC0-\u0EC4\u0EC6\u0EDC-\u0EDF\u0F00\u0F40-\u0F47\u0F49-\u0F6C\u0F88-\u0F8C\u1000-\u102A\u103F\u1050-\u1055\u105A-\u105D\u1061\u1065\u1066\u106E-\u1070\u1075-\u1081\u108E\u10A0-\u10C5\u10C7\u10CD\u10D0-\u10FA\u10FC-\u1248\u124A-\u124D\u1250-\u1256\u1258\u125A-\u125D\u1260-\u1288\u128A-\u128D\u1290-\u12B0\u12B2-\u12B5\u12B8-\u12BE\u12C0\u12C2-\u12C5\u12C8-\u12D6\u12D8-\u1310\u1312-\u1315\u1318-\u135A\u1380-\u138F\u13A0-\u13F5\u13F8-\u13FD\u1401-\u166C\u166F-\u167F\u1681-\u169A\u16A0-\u16EA\u16EE-\u16F8\u1700-\u170C\u170E-\u1711\u1720-\u1731\u1740-\u1751\u1760-\u176C\u176E-\u1770\u1780-\u17B3\u17D7\u17DC\u1820-\u1877\u1880-\u1884\u1887-\u18A8\u18AA\u18B0-\u18F5\u1900-\u191E\u1950-\u196D\u1970-\u1974\u1980-\u19AB\u19B0-\u19C9\u1A00-\u1A16\u1A20-\u1A54\u1AA7\u1B05-\u1B33\u1B45-\u1B4B\u1B83-\u1BA0\u1BAE\u1BAF\u1BBA-\u1BE5\u1C00-\u1C23\u1C4D-\u1C4F\u1C5A-\u1C7D\u1C80-\u1C88\u1CE9-\u1CEC\u1CEE-\u1CF1\u1CF5\u1CF6\u1D00-\u1DBF\u1E00-\u1F15\u1F18-\u1F1D\u1F20-\u1F45\u1F48-\u1F4D\u1F50-\u1F57\u1F59\u1F5B\u1F5D\u1F5F-\u1F7D\u1F80-\u1FB4\u1FB6-\u1FBC\u1FBE\u1FC2-\u1FC4\u1FC6-\u1FCC\u1FD0-\u1FD3\u1FD6-\u1FDB\u1FE0-\u1FEC\u1FF2-\u1FF4\u1FF6-\u1FFC\u2071\u207F\u2090-\u209C\u2102\u2107\u210A-\u2113\u2115\u2119-\u211D\u2124\u2126\u2128\u212A-\u212D\u212F-\u2139\u213C-\u213F\u2145-\u2149\u214E\u2160-\u2188\u2C00-\u2C2E\u2C30-\u2C5E\u2C60-\u2CE4\u2CEB-\u2CEE\u2CF2\u2CF3\u2D00-\u2D25\u2D27\u2D2D\u2D30-\u2D67\u2D6F\u2D80-\u2D96\u2DA0-\u2DA6\u2DA8-\u2DAE\u2DB0-\u2DB6\u2DB8-\u2DBE\u2DC0-\u2DC6\u2DC8-\u2DCE\u2DD0-\u2DD6\u2DD8-\u2DDE\u2E2F\u3005-\u3007\u3021-\u3029\u3031-\u3035\u3038-\u303C\u3041-\u3096\u309D-\u309F\u30A1-\u30FA\u30FC-\u30FF\u3105-\u312D\u3131-\u318E\u31A0-\u31BA\u31F0-\u31FF\u3400-\u4DB5\u4E00-\u9FD5\uA000-\uA48C\uA4D0-\uA4FD\uA500-\uA60C\uA610-\uA61F\uA62A\uA62B\uA640-\uA66E\uA67F-\uA69D\uA6A0-\uA6EF\uA717-\uA71F\uA722-\uA788\uA78B-\uA7AE\uA7B0-\uA7B7\uA7F7-\uA801\uA803-\uA805\uA807-\uA80A\uA80C-\uA822\uA840-\uA873\uA882-\uA8B3\uA8F2-\uA8F7\uA8FB\uA8FD\uA90A-\uA925\uA930-\uA946\uA960-\uA97C\uA984-\uA9B2\uA9CF\uA9E0-\uA9E4\uA9E6-\uA9EF\uA9FA-\uA9FE\uAA00-\uAA28\uAA40-\uAA42\uAA44-\uAA4B\uAA60-\uAA76\uAA7A\uAA7E-\uAAAF\uAAB1\uAAB5\uAAB6\uAAB9-\uAABD\uAAC0\uAAC2\uAADB-\uAADD\uAAE0-\uAAEA\uAAF2-\uAAF4\uAB01-\uAB06\uAB09-\uAB0E\uAB11-\uAB16\uAB20-\uAB26\uAB28-\uAB2E\uAB30-\uAB5A\uAB5C-\uAB65\uAB70-\uABE2\uAC00-\uD7A3\uD7B0-\uD7C6\uD7CB-\uD7FB\uF900-\uFA6D\uFA70-\uFAD9\uFB00-\uFB06\uFB13-\uFB17\uFB1D\uFB1F-\uFB28\uFB2A-\uFB36\uFB38-\uFB3C\uFB3E\uFB40\uFB41\uFB43\uFB44\uFB46-\uFBB1\uFBD3-\uFD3D\uFD50-\uFD8F\uFD92-\uFDC7\uFDF0-\uFDFB\uFE70-\uFE74\uFE76-\uFEFC\uFF21-\uFF3A\uFF41-\uFF5A\uFF66-\uFFBE\uFFC2-\uFFC7\uFFCA-\uFFCF\uFFD2-\uFFD7\uFFDA-\uFFDC]/, NonAsciiIdentifierPart: /[\xAA\xB5\xBA\xC0-\xD6\xD8-\xF6\xF8-\u02C1\u02C6-\u02D1\u02E0-\u02E4\u02EC\u02EE\u0300-\u0374\u0376\u0377\u037A-\u037D\u037F\u0386\u0388-\u038A\u038C\u038E-\u03A1\u03A3-\u03F5\u03F7-\u0481\u0483-\u0487\u048A-\u052F\u0531-\u0556\u0559\u0561-\u0587\u0591-\u05BD\u05BF\u05C1\u05C2\u05C4\u05C5\u05C7\u05D0-\u05EA\u05F0-\u05F2\u0610-\u061A\u0620-\u0669\u066E-\u06D3\u06D5-\u06DC\u06DF-\u06E8\u06EA-\u06FC\u06FF\u0710-\u074A\u074D-\u07B1\u07C0-\u07F5\u07FA\u0800-\u082D\u0840-\u085B\u08A0-\u08B4\u08B6-\u08BD\u08D4-\u08E1\u08E3-\u0963\u0966-\u096F\u0971-\u0983\u0985-\u098C\u098F\u0990\u0993-\u09A8\u09AA-\u09B0\u09B2\u09B6-\u09B9\u09BC-\u09C4\u09C7\u09C8\u09CB-\u09CE\u09D7\u09DC\u09DD\u09DF-\u09E3\u09E6-\u09F1\u0A01-\u0A03\u0A05-\u0A0A\u0A0F\u0A10\u0A13-\u0A28\u0A2A-\u0A30\u0A32\u0A33\u0A35\u0A36\u0A38\u0A39\u0A3C\u0A3E-\u0A42\u0A47\u0A48\u0A4B-\u0A4D\u0A51\u0A59-\u0A5C\u0A5E\u0A66-\u0A75\u0A81-\u0A83\u0A85-\u0A8D\u0A8F-\u0A91\u0A93-\u0AA8\u0AAA-\u0AB0\u0AB2\u0AB3\u0AB5-\u0AB9\u0ABC-\u0AC5\u0AC7-\u0AC9\u0ACB-\u0ACD\u0AD0\u0AE0-\u0AE3\u0AE6-\u0AEF\u0AF9\u0B01-\u0B03\u0B05-\u0B0C\u0B0F\u0B10\u0B13-\u0B28\u0B2A-\u0B30\u0B32\u0B33\u0B35-\u0B39\u0B3C-\u0B44\u0B47\u0B48\u0B4B-\u0B4D\u0B56\u0B57\u0B5C\u0B5D\u0B5F-\u0B63\u0B66-\u0B6F\u0B71\u0B82\u0B83\u0B85-\u0B8A\u0B8E-\u0B90\u0B92-\u0B95\u0B99\u0B9A\u0B9C\u0B9E\u0B9F\u0BA3\u0BA4\u0BA8-\u0BAA\u0BAE-\u0BB9\u0BBE-\u0BC2\u0BC6-\u0BC8\u0BCA-\u0BCD\u0BD0\u0BD7\u0BE6-\u0BEF\u0C00-\u0C03\u0C05-\u0C0C\u0C0E-\u0C10\u0C12-\u0C28\u0C2A-\u0C39\u0C3D-\u0C44\u0C46-\u0C48\u0C4A-\u0C4D\u0C55\u0C56\u0C58-\u0C5A\u0C60-\u0C63\u0C66-\u0C6F\u0C80-\u0C83\u0C85-\u0C8C\u0C8E-\u0C90\u0C92-\u0CA8\u0CAA-\u0CB3\u0CB5-\u0CB9\u0CBC-\u0CC4\u0CC6-\u0CC8\u0CCA-\u0CCD\u0CD5\u0CD6\u0CDE\u0CE0-\u0CE3\u0CE6-\u0CEF\u0CF1\u0CF2\u0D01-\u0D03\u0D05-\u0D0C\u0D0E-\u0D10\u0D12-\u0D3A\u0D3D-\u0D44\u0D46-\u0D48\u0D4A-\u0D4E\u0D54-\u0D57\u0D5F-\u0D63\u0D66-\u0D6F\u0D7A-\u0D7F\u0D82\u0D83\u0D85-\u0D96\u0D9A-\u0DB1\u0DB3-\u0DBB\u0DBD\u0DC0-\u0DC6\u0DCA\u0DCF-\u0DD4\u0DD6\u0DD8-\u0DDF\u0DE6-\u0DEF\u0DF2\u0DF3\u0E01-\u0E3A\u0E40-\u0E4E\u0E50-\u0E59\u0E81\u0E82\u0E84\u0E87\u0E88\u0E8A\u0E8D\u0E94-\u0E97\u0E99-\u0E9F\u0EA1-\u0EA3\u0EA5\u0EA7\u0EAA\u0EAB\u0EAD-\u0EB9\u0EBB-\u0EBD\u0EC0-\u0EC4\u0EC6\u0EC8-\u0ECD\u0ED0-\u0ED9\u0EDC-\u0EDF\u0F00\u0F18\u0F19\u0F20-\u0F29\u0F35\u0F37\u0F39\u0F3E-\u0F47\u0F49-\u0F6C\u0F71-\u0F84\u0F86-\u0F97\u0F99-\u0FBC\u0FC6\u1000-\u1049\u1050-\u109D\u10A0-\u10C5\u10C7\u10CD\u10D0-\u10FA\u10FC-\u1248\u124A-\u124D\u1250-\u1256\u1258\u125A-\u125D\u1260-\u1288\u128A-\u128D\u1290-\u12B0\u12B2-\u12B5\u12B8-\u12BE\u12C0\u12C2-\u12C5\u12C8-\u12D6\u12D8-\u1310\u1312-\u1315\u1318-\u135A\u135D-\u135F\u1380-\u138F\u13A0-\u13F5\u13F8-\u13FD\u1401-\u166C\u166F-\u167F\u1681-\u169A\u16A0-\u16EA\u16EE-\u16F8\u1700-\u170C\u170E-\u1714\u1720-\u1734\u1740-\u1753\u1760-\u176C\u176E-\u1770\u1772\u1773\u1780-\u17D3\u17D7\u17DC\u17DD\u17E0-\u17E9\u180B-\u180D\u1810-\u1819\u1820-\u1877\u1880-\u18AA\u18B0-\u18F5\u1900-\u191E\u1920-\u192B\u1930-\u193B\u1946-\u196D\u1970-\u1974\u1980-\u19AB\u19B0-\u19C9\u19D0-\u19D9\u1A00-\u1A1B\u1A20-\u1A5E\u1A60-\u1A7C\u1A7F-\u1A89\u1A90-\u1A99\u1AA7\u1AB0-\u1ABD\u1B00-\u1B4B\u1B50-\u1B59\u1B6B-\u1B73\u1B80-\u1BF3\u1C00-\u1C37\u1C40-\u1C49\u1C4D-\u1C7D\u1C80-\u1C88\u1CD0-\u1CD2\u1CD4-\u1CF6\u1CF8\u1CF9\u1D00-\u1DF5\u1DFB-\u1F15\u1F18-\u1F1D\u1F20-\u1F45\u1F48-\u1F4D\u1F50-\u1F57\u1F59\u1F5B\u1F5D\u1F5F-\u1F7D\u1F80-\u1FB4\u1FB6-\u1FBC\u1FBE\u1FC2-\u1FC4\u1FC6-\u1FCC\u1FD0-\u1FD3\u1FD6-\u1FDB\u1FE0-\u1FEC\u1FF2-\u1FF4\u1FF6-\u1FFC\u200C\u200D\u203F\u2040\u2054\u2071\u207F\u2090-\u209C\u20D0-\u20DC\u20E1\u20E5-\u20F0\u2102\u2107\u210A-\u2113\u2115\u2119-\u211D\u2124\u2126\u2128\u212A-\u212D\u212F-\u2139\u213C-\u213F\u2145-\u2149\u214E\u2160-\u2188\u2C00-\u2C2E\u2C30-\u2C5E\u2C60-\u2CE4\u2CEB-\u2CF3\u2D00-\u2D25\u2D27\u2D2D\u2D30-\u2D67\u2D6F\u2D7F-\u2D96\u2DA0-\u2DA6\u2DA8-\u2DAE\u2DB0-\u2DB6\u2DB8-\u2DBE\u2DC0-\u2DC6\u2DC8-\u2DCE\u2DD0-\u2DD6\u2DD8-\u2DDE\u2DE0-\u2DFF\u2E2F\u3005-\u3007\u3021-\u302F\u3031-\u3035\u3038-\u303C\u3041-\u3096\u3099\u309A\u309D-\u309F\u30A1-\u30FA\u30FC-\u30FF\u3105-\u312D\u3131-\u318E\u31A0-\u31BA\u31F0-\u31FF\u3400-\u4DB5\u4E00-\u9FD5\uA000-\uA48C\uA4D0-\uA4FD\uA500-\uA60C\uA610-\uA62B\uA640-\uA66F\uA674-\uA67D\uA67F-\uA6F1\uA717-\uA71F\uA722-\uA788\uA78B-\uA7AE\uA7B0-\uA7B7\uA7F7-\uA827\uA840-\uA873\uA880-\uA8C5\uA8D0-\uA8D9\uA8E0-\uA8F7\uA8FB\uA8FD\uA900-\uA92D\uA930-\uA953\uA960-\uA97C\uA980-\uA9C0\uA9CF-\uA9D9\uA9E0-\uA9FE\uAA00-\uAA36\uAA40-\uAA4D\uAA50-\uAA59\uAA60-\uAA76\uAA7A-\uAAC2\uAADB-\uAADD\uAAE0-\uAAEF\uAAF2-\uAAF6\uAB01-\uAB06\uAB09-\uAB0E\uAB11-\uAB16\uAB20-\uAB26\uAB28-\uAB2E\uAB30-\uAB5A\uAB5C-\uAB65\uAB70-\uABEA\uABEC\uABED\uABF0-\uABF9\uAC00-\uD7A3\uD7B0-\uD7C6\uD7CB-\uD7FB\uF900-\uFA6D\uFA70-\uFAD9\uFB00-\uFB06\uFB13-\uFB17\uFB1D-\uFB28\uFB2A-\uFB36\uFB38-\uFB3C\uFB3E\uFB40\uFB41\uFB43\uFB44\uFB46-\uFBB1\uFBD3-\uFD3D\uFD50-\uFD8F\uFD92-\uFDC7\uFDF0-\uFDFB\uFE00-\uFE0F\uFE20-\uFE2F\uFE33\uFE34\uFE4D-\uFE4F\uFE70-\uFE74\uFE76-\uFEFC\uFF10-\uFF19\uFF21-\uFF3A\uFF3F\uFF41-\uFF5A\uFF66-\uFFBE\uFFC2-\uFFC7\uFFCA-\uFFCF\uFFD2-\uFFD7\uFFDA-\uFFDC]/ }, t2 = { NonAsciiIdentifierStart: /[\xAA\xB5\xBA\xC0-\xD6\xD8-\xF6\xF8-\u02C1\u02C6-\u02D1\u02E0-\u02E4\u02EC\u02EE\u0370-\u0374\u0376\u0377\u037A-\u037D\u037F\u0386\u0388-\u038A\u038C\u038E-\u03A1\u03A3-\u03F5\u03F7-\u0481\u048A-\u052F\u0531-\u0556\u0559\u0561-\u0587\u05D0-\u05EA\u05F0-\u05F2\u0620-\u064A\u066E\u066F\u0671-\u06D3\u06D5\u06E5\u06E6\u06EE\u06EF\u06FA-\u06FC\u06FF\u0710\u0712-\u072F\u074D-\u07A5\u07B1\u07CA-\u07EA\u07F4\u07F5\u07FA\u0800-\u0815\u081A\u0824\u0828\u0840-\u0858\u08A0-\u08B4\u08B6-\u08BD\u0904-\u0939\u093D\u0950\u0958-\u0961\u0971-\u0980\u0985-\u098C\u098F\u0990\u0993-\u09A8\u09AA-\u09B0\u09B2\u09B6-\u09B9\u09BD\u09CE\u09DC\u09DD\u09DF-\u09E1\u09F0\u09F1\u0A05-\u0A0A\u0A0F\u0A10\u0A13-\u0A28\u0A2A-\u0A30\u0A32\u0A33\u0A35\u0A36\u0A38\u0A39\u0A59-\u0A5C\u0A5E\u0A72-\u0A74\u0A85-\u0A8D\u0A8F-\u0A91\u0A93-\u0AA8\u0AAA-\u0AB0\u0AB2\u0AB3\u0AB5-\u0AB9\u0ABD\u0AD0\u0AE0\u0AE1\u0AF9\u0B05-\u0B0C\u0B0F\u0B10\u0B13-\u0B28\u0B2A-\u0B30\u0B32\u0B33\u0B35-\u0B39\u0B3D\u0B5C\u0B5D\u0B5F-\u0B61\u0B71\u0B83\u0B85-\u0B8A\u0B8E-\u0B90\u0B92-\u0B95\u0B99\u0B9A\u0B9C\u0B9E\u0B9F\u0BA3\u0BA4\u0BA8-\u0BAA\u0BAE-\u0BB9\u0BD0\u0C05-\u0C0C\u0C0E-\u0C10\u0C12-\u0C28\u0C2A-\u0C39\u0C3D\u0C58-\u0C5A\u0C60\u0C61\u0C80\u0C85-\u0C8C\u0C8E-\u0C90\u0C92-\u0CA8\u0CAA-\u0CB3\u0CB5-\u0CB9\u0CBD\u0CDE\u0CE0\u0CE1\u0CF1\u0CF2\u0D05-\u0D0C\u0D0E-\u0D10\u0D12-\u0D3A\u0D3D\u0D4E\u0D54-\u0D56\u0D5F-\u0D61\u0D7A-\u0D7F\u0D85-\u0D96\u0D9A-\u0DB1\u0DB3-\u0DBB\u0DBD\u0DC0-\u0DC6\u0E01-\u0E30\u0E32\u0E33\u0E40-\u0E46\u0E81\u0E82\u0E84\u0E87\u0E88\u0E8A\u0E8D\u0E94-\u0E97\u0E99-\u0E9F\u0EA1-\u0EA3\u0EA5\u0EA7\u0EAA\u0EAB\u0EAD-\u0EB0\u0EB2\u0EB3\u0EBD\u0EC0-\u0EC4\u0EC6\u0EDC-\u0EDF\u0F00\u0F40-\u0F47\u0F49-\u0F6C\u0F88-\u0F8C\u1000-\u102A\u103F\u1050-\u1055\u105A-\u105D\u1061\u1065\u1066\u106E-\u1070\u1075-\u1081\u108E\u10A0-\u10C5\u10C7\u10CD\u10D0-\u10FA\u10FC-\u1248\u124A-\u124D\u1250-\u1256\u1258\u125A-\u125D\u1260-\u1288\u128A-\u128D\u1290-\u12B0\u12B2-\u12B5\u12B8-\u12BE\u12C0\u12C2-\u12C5\u12C8-\u12D6\u12D8-\u1310\u1312-\u1315\u1318-\u135A\u1380-\u138F\u13A0-\u13F5\u13F8-\u13FD\u1401-\u166C\u166F-\u167F\u1681-\u169A\u16A0-\u16EA\u16EE-\u16F8\u1700-\u170C\u170E-\u1711\u1720-\u1731\u1740-\u1751\u1760-\u176C\u176E-\u1770\u1780-\u17B3\u17D7\u17DC\u1820-\u1877\u1880-\u18A8\u18AA\u18B0-\u18F5\u1900-\u191E\u1950-\u196D\u1970-\u1974\u1980-\u19AB\u19B0-\u19C9\u1A00-\u1A16\u1A20-\u1A54\u1AA7\u1B05-\u1B33\u1B45-\u1B4B\u1B83-\u1BA0\u1BAE\u1BAF\u1BBA-\u1BE5\u1C00-\u1C23\u1C4D-\u1C4F\u1C5A-\u1C7D\u1C80-\u1C88\u1CE9-\u1CEC\u1CEE-\u1CF1\u1CF5\u1CF6\u1D00-\u1DBF\u1E00-\u1F15\u1F18-\u1F1D\u1F20-\u1F45\u1F48-\u1F4D\u1F50-\u1F57\u1F59\u1F5B\u1F5D\u1F5F-\u1F7D\u1F80-\u1FB4\u1FB6-\u1FBC\u1FBE\u1FC2-\u1FC4\u1FC6-\u1FCC\u1FD0-\u1FD3\u1FD6-\u1FDB\u1FE0-\u1FEC\u1FF2-\u1FF4\u1FF6-\u1FFC\u2071\u207F\u2090-\u209C\u2102\u2107\u210A-\u2113\u2115\u2118-\u211D\u2124\u2126\u2128\u212A-\u2139\u213C-\u213F\u2145-\u2149\u214E\u2160-\u2188\u2C00-\u2C2E\u2C30-\u2C5E\u2C60-\u2CE4\u2CEB-\u2CEE\u2CF2\u2CF3\u2D00-\u2D25\u2D27\u2D2D\u2D30-\u2D67\u2D6F\u2D80-\u2D96\u2DA0-\u2DA6\u2DA8-\u2DAE\u2DB0-\u2DB6\u2DB8-\u2DBE\u2DC0-\u2DC6\u2DC8-\u2DCE\u2DD0-\u2DD6\u2DD8-\u2DDE\u3005-\u3007\u3021-\u3029\u3031-\u3035\u3038-\u303C\u3041-\u3096\u309B-\u309F\u30A1-\u30FA\u30FC-\u30FF\u3105-\u312D\u3131-\u318E\u31A0-\u31BA\u31F0-\u31FF\u3400-\u4DB5\u4E00-\u9FD5\uA000-\uA48C\uA4D0-\uA4FD\uA500-\uA60C\uA610-\uA61F\uA62A\uA62B\uA640-\uA66E\uA67F-\uA69D\uA6A0-\uA6EF\uA717-\uA71F\uA722-\uA788\uA78B-\uA7AE\uA7B0-\uA7B7\uA7F7-\uA801\uA803-\uA805\uA807-\uA80A\uA80C-\uA822\uA840-\uA873\uA882-\uA8B3\uA8F2-\uA8F7\uA8FB\uA8FD\uA90A-\uA925\uA930-\uA946\uA960-\uA97C\uA984-\uA9B2\uA9CF\uA9E0-\uA9E4\uA9E6-\uA9EF\uA9FA-\uA9FE\uAA00-\uAA28\uAA40-\uAA42\uAA44-\uAA4B\uAA60-\uAA76\uAA7A\uAA7E-\uAAAF\uAAB1\uAAB5\uAAB6\uAAB9-\uAABD\uAAC0\uAAC2\uAADB-\uAADD\uAAE0-\uAAEA\uAAF2-\uAAF4\uAB01-\uAB06\uAB09-\uAB0E\uAB11-\uAB16\uAB20-\uAB26\uAB28-\uAB2E\uAB30-\uAB5A\uAB5C-\uAB65\uAB70-\uABE2\uAC00-\uD7A3\uD7B0-\uD7C6\uD7CB-\uD7FB\uF900-\uFA6D\uFA70-\uFAD9\uFB00-\uFB06\uFB13-\uFB17\uFB1D\uFB1F-\uFB28\uFB2A-\uFB36\uFB38-\uFB3C\uFB3E\uFB40\uFB41\uFB43\uFB44\uFB46-\uFBB1\uFBD3-\uFD3D\uFD50-\uFD8F\uFD92-\uFDC7\uFDF0-\uFDFB\uFE70-\uFE74\uFE76-\uFEFC\uFF21-\uFF3A\uFF41-\uFF5A\uFF66-\uFFBE\uFFC2-\uFFC7\uFFCA-\uFFCF\uFFD2-\uFFD7\uFFDA-\uFFDC]|\uD800[\uDC00-\uDC0B\uDC0D-\uDC26\uDC28-\uDC3A\uDC3C\uDC3D\uDC3F-\uDC4D\uDC50-\uDC5D\uDC80-\uDCFA\uDD40-\uDD74\uDE80-\uDE9C\uDEA0-\uDED0\uDF00-\uDF1F\uDF30-\uDF4A\uDF50-\uDF75\uDF80-\uDF9D\uDFA0-\uDFC3\uDFC8-\uDFCF\uDFD1-\uDFD5]|\uD801[\uDC00-\uDC9D\uDCB0-\uDCD3\uDCD8-\uDCFB\uDD00-\uDD27\uDD30-\uDD63\uDE00-\uDF36\uDF40-\uDF55\uDF60-\uDF67]|\uD802[\uDC00-\uDC05\uDC08\uDC0A-\uDC35\uDC37\uDC38\uDC3C\uDC3F-\uDC55\uDC60-\uDC76\uDC80-\uDC9E\uDCE0-\uDCF2\uDCF4\uDCF5\uDD00-\uDD15\uDD20-\uDD39\uDD80-\uDDB7\uDDBE\uDDBF\uDE00\uDE10-\uDE13\uDE15-\uDE17\uDE19-\uDE33\uDE60-\uDE7C\uDE80-\uDE9C\uDEC0-\uDEC7\uDEC9-\uDEE4\uDF00-\uDF35\uDF40-\uDF55\uDF60-\uDF72\uDF80-\uDF91]|\uD803[\uDC00-\uDC48\uDC80-\uDCB2\uDCC0-\uDCF2]|\uD804[\uDC03-\uDC37\uDC83-\uDCAF\uDCD0-\uDCE8\uDD03-\uDD26\uDD50-\uDD72\uDD76\uDD83-\uDDB2\uDDC1-\uDDC4\uDDDA\uDDDC\uDE00-\uDE11\uDE13-\uDE2B\uDE80-\uDE86\uDE88\uDE8A-\uDE8D\uDE8F-\uDE9D\uDE9F-\uDEA8\uDEB0-\uDEDE\uDF05-\uDF0C\uDF0F\uDF10\uDF13-\uDF28\uDF2A-\uDF30\uDF32\uDF33\uDF35-\uDF39\uDF3D\uDF50\uDF5D-\uDF61]|\uD805[\uDC00-\uDC34\uDC47-\uDC4A\uDC80-\uDCAF\uDCC4\uDCC5\uDCC7\uDD80-\uDDAE\uDDD8-\uDDDB\uDE00-\uDE2F\uDE44\uDE80-\uDEAA\uDF00-\uDF19]|\uD806[\uDCA0-\uDCDF\uDCFF\uDEC0-\uDEF8]|\uD807[\uDC00-\uDC08\uDC0A-\uDC2E\uDC40\uDC72-\uDC8F]|\uD808[\uDC00-\uDF99]|\uD809[\uDC00-\uDC6E\uDC80-\uDD43]|[\uD80C\uD81C-\uD820\uD840-\uD868\uD86A-\uD86C\uD86F-\uD872][\uDC00-\uDFFF]|\uD80D[\uDC00-\uDC2E]|\uD811[\uDC00-\uDE46]|\uD81A[\uDC00-\uDE38\uDE40-\uDE5E\uDED0-\uDEED\uDF00-\uDF2F\uDF40-\uDF43\uDF63-\uDF77\uDF7D-\uDF8F]|\uD81B[\uDF00-\uDF44\uDF50\uDF93-\uDF9F\uDFE0]|\uD821[\uDC00-\uDFEC]|\uD822[\uDC00-\uDEF2]|\uD82C[\uDC00\uDC01]|\uD82F[\uDC00-\uDC6A\uDC70-\uDC7C\uDC80-\uDC88\uDC90-\uDC99]|\uD835[\uDC00-\uDC54\uDC56-\uDC9C\uDC9E\uDC9F\uDCA2\uDCA5\uDCA6\uDCA9-\uDCAC\uDCAE-\uDCB9\uDCBB\uDCBD-\uDCC3\uDCC5-\uDD05\uDD07-\uDD0A\uDD0D-\uDD14\uDD16-\uDD1C\uDD1E-\uDD39\uDD3B-\uDD3E\uDD40-\uDD44\uDD46\uDD4A-\uDD50\uDD52-\uDEA5\uDEA8-\uDEC0\uDEC2-\uDEDA\uDEDC-\uDEFA\uDEFC-\uDF14\uDF16-\uDF34\uDF36-\uDF4E\uDF50-\uDF6E\uDF70-\uDF88\uDF8A-\uDFA8\uDFAA-\uDFC2\uDFC4-\uDFCB]|\uD83A[\uDC00-\uDCC4\uDD00-\uDD43]|\uD83B[\uDE00-\uDE03\uDE05-\uDE1F\uDE21\uDE22\uDE24\uDE27\uDE29-\uDE32\uDE34-\uDE37\uDE39\uDE3B\uDE42\uDE47\uDE49\uDE4B\uDE4D-\uDE4F\uDE51\uDE52\uDE54\uDE57\uDE59\uDE5B\uDE5D\uDE5F\uDE61\uDE62\uDE64\uDE67-\uDE6A\uDE6C-\uDE72\uDE74-\uDE77\uDE79-\uDE7C\uDE7E\uDE80-\uDE89\uDE8B-\uDE9B\uDEA1-\uDEA3\uDEA5-\uDEA9\uDEAB-\uDEBB]|\uD869[\uDC00-\uDED6\uDF00-\uDFFF]|\uD86D[\uDC00-\uDF34\uDF40-\uDFFF]|\uD86E[\uDC00-\uDC1D\uDC20-\uDFFF]|\uD873[\uDC00-\uDEA1]|\uD87E[\uDC00-\uDE1D]/, NonAsciiIdentifierPart: /[\xAA\xB5\xB7\xBA\xC0-\xD6\xD8-\xF6\xF8-\u02C1\u02C6-\u02D1\u02E0-\u02E4\u02EC\u02EE\u0300-\u0374\u0376\u0377\u037A-\u037D\u037F\u0386-\u038A\u038C\u038E-\u03A1\u03A3-\u03F5\u03F7-\u0481\u0483-\u0487\u048A-\u052F\u0531-\u0556\u0559\u0561-\u0587\u0591-\u05BD\u05BF\u05C1\u05C2\u05C4\u05C5\u05C7\u05D0-\u05EA\u05F0-\u05F2\u0610-\u061A\u0620-\u0669\u066E-\u06D3\u06D5-\u06DC\u06DF-\u06E8\u06EA-\u06FC\u06FF\u0710-\u074A\u074D-\u07B1\u07C0-\u07F5\u07FA\u0800-\u082D\u0840-\u085B\u08A0-\u08B4\u08B6-\u08BD\u08D4-\u08E1\u08E3-\u0963\u0966-\u096F\u0971-\u0983\u0985-\u098C\u098F\u0990\u0993-\u09A8\u09AA-\u09B0\u09B2\u09B6-\u09B9\u09BC-\u09C4\u09C7\u09C8\u09CB-\u09CE\u09D7\u09DC\u09DD\u09DF-\u09E3\u09E6-\u09F1\u0A01-\u0A03\u0A05-\u0A0A\u0A0F\u0A10\u0A13-\u0A28\u0A2A-\u0A30\u0A32\u0A33\u0A35\u0A36\u0A38\u0A39\u0A3C\u0A3E-\u0A42\u0A47\u0A48\u0A4B-\u0A4D\u0A51\u0A59-\u0A5C\u0A5E\u0A66-\u0A75\u0A81-\u0A83\u0A85-\u0A8D\u0A8F-\u0A91\u0A93-\u0AA8\u0AAA-\u0AB0\u0AB2\u0AB3\u0AB5-\u0AB9\u0ABC-\u0AC5\u0AC7-\u0AC9\u0ACB-\u0ACD\u0AD0\u0AE0-\u0AE3\u0AE6-\u0AEF\u0AF9\u0B01-\u0B03\u0B05-\u0B0C\u0B0F\u0B10\u0B13-\u0B28\u0B2A-\u0B30\u0B32\u0B33\u0B35-\u0B39\u0B3C-\u0B44\u0B47\u0B48\u0B4B-\u0B4D\u0B56\u0B57\u0B5C\u0B5D\u0B5F-\u0B63\u0B66-\u0B6F\u0B71\u0B82\u0B83\u0B85-\u0B8A\u0B8E-\u0B90\u0B92-\u0B95\u0B99\u0B9A\u0B9C\u0B9E\u0B9F\u0BA3\u0BA4\u0BA8-\u0BAA\u0BAE-\u0BB9\u0BBE-\u0BC2\u0BC6-\u0BC8\u0BCA-\u0BCD\u0BD0\u0BD7\u0BE6-\u0BEF\u0C00-\u0C03\u0C05-\u0C0C\u0C0E-\u0C10\u0C12-\u0C28\u0C2A-\u0C39\u0C3D-\u0C44\u0C46-\u0C48\u0C4A-\u0C4D\u0C55\u0C56\u0C58-\u0C5A\u0C60-\u0C63\u0C66-\u0C6F\u0C80-\u0C83\u0C85-\u0C8C\u0C8E-\u0C90\u0C92-\u0CA8\u0CAA-\u0CB3\u0CB5-\u0CB9\u0CBC-\u0CC4\u0CC6-\u0CC8\u0CCA-\u0CCD\u0CD5\u0CD6\u0CDE\u0CE0-\u0CE3\u0CE6-\u0CEF\u0CF1\u0CF2\u0D01-\u0D03\u0D05-\u0D0C\u0D0E-\u0D10\u0D12-\u0D3A\u0D3D-\u0D44\u0D46-\u0D48\u0D4A-\u0D4E\u0D54-\u0D57\u0D5F-\u0D63\u0D66-\u0D6F\u0D7A-\u0D7F\u0D82\u0D83\u0D85-\u0D96\u0D9A-\u0DB1\u0DB3-\u0DBB\u0DBD\u0DC0-\u0DC6\u0DCA\u0DCF-\u0DD4\u0DD6\u0DD8-\u0DDF\u0DE6-\u0DEF\u0DF2\u0DF3\u0E01-\u0E3A\u0E40-\u0E4E\u0E50-\u0E59\u0E81\u0E82\u0E84\u0E87\u0E88\u0E8A\u0E8D\u0E94-\u0E97\u0E99-\u0E9F\u0EA1-\u0EA3\u0EA5\u0EA7\u0EAA\u0EAB\u0EAD-\u0EB9\u0EBB-\u0EBD\u0EC0-\u0EC4\u0EC6\u0EC8-\u0ECD\u0ED0-\u0ED9\u0EDC-\u0EDF\u0F00\u0F18\u0F19\u0F20-\u0F29\u0F35\u0F37\u0F39\u0F3E-\u0F47\u0F49-\u0F6C\u0F71-\u0F84\u0F86-\u0F97\u0F99-\u0FBC\u0FC6\u1000-\u1049\u1050-\u109D\u10A0-\u10C5\u10C7\u10CD\u10D0-\u10FA\u10FC-\u1248\u124A-\u124D\u1250-\u1256\u1258\u125A-\u125D\u1260-\u1288\u128A-\u128D\u1290-\u12B0\u12B2-\u12B5\u12B8-\u12BE\u12C0\u12C2-\u12C5\u12C8-\u12D6\u12D8-\u1310\u1312-\u1315\u1318-\u135A\u135D-\u135F\u1369-\u1371\u1380-\u138F\u13A0-\u13F5\u13F8-\u13FD\u1401-\u166C\u166F-\u167F\u1681-\u169A\u16A0-\u16EA\u16EE-\u16F8\u1700-\u170C\u170E-\u1714\u1720-\u1734\u1740-\u1753\u1760-\u176C\u176E-\u1770\u1772\u1773\u1780-\u17D3\u17D7\u17DC\u17DD\u17E0-\u17E9\u180B-\u180D\u1810-\u1819\u1820-\u1877\u1880-\u18AA\u18B0-\u18F5\u1900-\u191E\u1920-\u192B\u1930-\u193B\u1946-\u196D\u1970-\u1974\u1980-\u19AB\u19B0-\u19C9\u19D0-\u19DA\u1A00-\u1A1B\u1A20-\u1A5E\u1A60-\u1A7C\u1A7F-\u1A89\u1A90-\u1A99\u1AA7\u1AB0-\u1ABD\u1B00-\u1B4B\u1B50-\u1B59\u1B6B-\u1B73\u1B80-\u1BF3\u1C00-\u1C37\u1C40-\u1C49\u1C4D-\u1C7D\u1C80-\u1C88\u1CD0-\u1CD2\u1CD4-\u1CF6\u1CF8\u1CF9\u1D00-\u1DF5\u1DFB-\u1F15\u1F18-\u1F1D\u1F20-\u1F45\u1F48-\u1F4D\u1F50-\u1F57\u1F59\u1F5B\u1F5D\u1F5F-\u1F7D\u1F80-\u1FB4\u1FB6-\u1FBC\u1FBE\u1FC2-\u1FC4\u1FC6-\u1FCC\u1FD0-\u1FD3\u1FD6-\u1FDB\u1FE0-\u1FEC\u1FF2-\u1FF4\u1FF6-\u1FFC\u200C\u200D\u203F\u2040\u2054\u2071\u207F\u2090-\u209C\u20D0-\u20DC\u20E1\u20E5-\u20F0\u2102\u2107\u210A-\u2113\u2115\u2118-\u211D\u2124\u2126\u2128\u212A-\u2139\u213C-\u213F\u2145-\u2149\u214E\u2160-\u2188\u2C00-\u2C2E\u2C30-\u2C5E\u2C60-\u2CE4\u2CEB-\u2CF3\u2D00-\u2D25\u2D27\u2D2D\u2D30-\u2D67\u2D6F\u2D7F-\u2D96\u2DA0-\u2DA6\u2DA8-\u2DAE\u2DB0-\u2DB6\u2DB8-\u2DBE\u2DC0-\u2DC6\u2DC8-\u2DCE\u2DD0-\u2DD6\u2DD8-\u2DDE\u2DE0-\u2DFF\u3005-\u3007\u3021-\u302F\u3031-\u3035\u3038-\u303C\u3041-\u3096\u3099-\u309F\u30A1-\u30FA\u30FC-\u30FF\u3105-\u312D\u3131-\u318E\u31A0-\u31BA\u31F0-\u31FF\u3400-\u4DB5\u4E00-\u9FD5\uA000-\uA48C\uA4D0-\uA4FD\uA500-\uA60C\uA610-\uA62B\uA640-\uA66F\uA674-\uA67D\uA67F-\uA6F1\uA717-\uA71F\uA722-\uA788\uA78B-\uA7AE\uA7B0-\uA7B7\uA7F7-\uA827\uA840-\uA873\uA880-\uA8C5\uA8D0-\uA8D9\uA8E0-\uA8F7\uA8FB\uA8FD\uA900-\uA92D\uA930-\uA953\uA960-\uA97C\uA980-\uA9C0\uA9CF-\uA9D9\uA9E0-\uA9FE\uAA00-\uAA36\uAA40-\uAA4D\uAA50-\uAA59\uAA60-\uAA76\uAA7A-\uAAC2\uAADB-\uAADD\uAAE0-\uAAEF\uAAF2-\uAAF6\uAB01-\uAB06\uAB09-\uAB0E\uAB11-\uAB16\uAB20-\uAB26\uAB28-\uAB2E\uAB30-\uAB5A\uAB5C-\uAB65\uAB70-\uABEA\uABEC\uABED\uABF0-\uABF9\uAC00-\uD7A3\uD7B0-\uD7C6\uD7CB-\uD7FB\uF900-\uFA6D\uFA70-\uFAD9\uFB00-\uFB06\uFB13-\uFB17\uFB1D-\uFB28\uFB2A-\uFB36\uFB38-\uFB3C\uFB3E\uFB40\uFB41\uFB43\uFB44\uFB46-\uFBB1\uFBD3-\uFD3D\uFD50-\uFD8F\uFD92-\uFDC7\uFDF0-\uFDFB\uFE00-\uFE0F\uFE20-\uFE2F\uFE33\uFE34\uFE4D-\uFE4F\uFE70-\uFE74\uFE76-\uFEFC\uFF10-\uFF19\uFF21-\uFF3A\uFF3F\uFF41-\uFF5A\uFF66-\uFFBE\uFFC2-\uFFC7\uFFCA-\uFFCF\uFFD2-\uFFD7\uFFDA-\uFFDC]|\uD800[\uDC00-\uDC0B\uDC0D-\uDC26\uDC28-\uDC3A\uDC3C\uDC3D\uDC3F-\uDC4D\uDC50-\uDC5D\uDC80-\uDCFA\uDD40-\uDD74\uDDFD\uDE80-\uDE9C\uDEA0-\uDED0\uDEE0\uDF00-\uDF1F\uDF30-\uDF4A\uDF50-\uDF7A\uDF80-\uDF9D\uDFA0-\uDFC3\uDFC8-\uDFCF\uDFD1-\uDFD5]|\uD801[\uDC00-\uDC9D\uDCA0-\uDCA9\uDCB0-\uDCD3\uDCD8-\uDCFB\uDD00-\uDD27\uDD30-\uDD63\uDE00-\uDF36\uDF40-\uDF55\uDF60-\uDF67]|\uD802[\uDC00-\uDC05\uDC08\uDC0A-\uDC35\uDC37\uDC38\uDC3C\uDC3F-\uDC55\uDC60-\uDC76\uDC80-\uDC9E\uDCE0-\uDCF2\uDCF4\uDCF5\uDD00-\uDD15\uDD20-\uDD39\uDD80-\uDDB7\uDDBE\uDDBF\uDE00-\uDE03\uDE05\uDE06\uDE0C-\uDE13\uDE15-\uDE17\uDE19-\uDE33\uDE38-\uDE3A\uDE3F\uDE60-\uDE7C\uDE80-\uDE9C\uDEC0-\uDEC7\uDEC9-\uDEE6\uDF00-\uDF35\uDF40-\uDF55\uDF60-\uDF72\uDF80-\uDF91]|\uD803[\uDC00-\uDC48\uDC80-\uDCB2\uDCC0-\uDCF2]|\uD804[\uDC00-\uDC46\uDC66-\uDC6F\uDC7F-\uDCBA\uDCD0-\uDCE8\uDCF0-\uDCF9\uDD00-\uDD34\uDD36-\uDD3F\uDD50-\uDD73\uDD76\uDD80-\uDDC4\uDDCA-\uDDCC\uDDD0-\uDDDA\uDDDC\uDE00-\uDE11\uDE13-\uDE37\uDE3E\uDE80-\uDE86\uDE88\uDE8A-\uDE8D\uDE8F-\uDE9D\uDE9F-\uDEA8\uDEB0-\uDEEA\uDEF0-\uDEF9\uDF00-\uDF03\uDF05-\uDF0C\uDF0F\uDF10\uDF13-\uDF28\uDF2A-\uDF30\uDF32\uDF33\uDF35-\uDF39\uDF3C-\uDF44\uDF47\uDF48\uDF4B-\uDF4D\uDF50\uDF57\uDF5D-\uDF63\uDF66-\uDF6C\uDF70-\uDF74]|\uD805[\uDC00-\uDC4A\uDC50-\uDC59\uDC80-\uDCC5\uDCC7\uDCD0-\uDCD9\uDD80-\uDDB5\uDDB8-\uDDC0\uDDD8-\uDDDD\uDE00-\uDE40\uDE44\uDE50-\uDE59\uDE80-\uDEB7\uDEC0-\uDEC9\uDF00-\uDF19\uDF1D-\uDF2B\uDF30-\uDF39]|\uD806[\uDCA0-\uDCE9\uDCFF\uDEC0-\uDEF8]|\uD807[\uDC00-\uDC08\uDC0A-\uDC36\uDC38-\uDC40\uDC50-\uDC59\uDC72-\uDC8F\uDC92-\uDCA7\uDCA9-\uDCB6]|\uD808[\uDC00-\uDF99]|\uD809[\uDC00-\uDC6E\uDC80-\uDD43]|[\uD80C\uD81C-\uD820\uD840-\uD868\uD86A-\uD86C\uD86F-\uD872][\uDC00-\uDFFF]|\uD80D[\uDC00-\uDC2E]|\uD811[\uDC00-\uDE46]|\uD81A[\uDC00-\uDE38\uDE40-\uDE5E\uDE60-\uDE69\uDED0-\uDEED\uDEF0-\uDEF4\uDF00-\uDF36\uDF40-\uDF43\uDF50-\uDF59\uDF63-\uDF77\uDF7D-\uDF8F]|\uD81B[\uDF00-\uDF44\uDF50-\uDF7E\uDF8F-\uDF9F\uDFE0]|\uD821[\uDC00-\uDFEC]|\uD822[\uDC00-\uDEF2]|\uD82C[\uDC00\uDC01]|\uD82F[\uDC00-\uDC6A\uDC70-\uDC7C\uDC80-\uDC88\uDC90-\uDC99\uDC9D\uDC9E]|\uD834[\uDD65-\uDD69\uDD6D-\uDD72\uDD7B-\uDD82\uDD85-\uDD8B\uDDAA-\uDDAD\uDE42-\uDE44]|\uD835[\uDC00-\uDC54\uDC56-\uDC9C\uDC9E\uDC9F\uDCA2\uDCA5\uDCA6\uDCA9-\uDCAC\uDCAE-\uDCB9\uDCBB\uDCBD-\uDCC3\uDCC5-\uDD05\uDD07-\uDD0A\uDD0D-\uDD14\uDD16-\uDD1C\uDD1E-\uDD39\uDD3B-\uDD3E\uDD40-\uDD44\uDD46\uDD4A-\uDD50\uDD52-\uDEA5\uDEA8-\uDEC0\uDEC2-\uDEDA\uDEDC-\uDEFA\uDEFC-\uDF14\uDF16-\uDF34\uDF36-\uDF4E\uDF50-\uDF6E\uDF70-\uDF88\uDF8A-\uDFA8\uDFAA-\uDFC2\uDFC4-\uDFCB\uDFCE-\uDFFF]|\uD836[\uDE00-\uDE36\uDE3B-\uDE6C\uDE75\uDE84\uDE9B-\uDE9F\uDEA1-\uDEAF]|\uD838[\uDC00-\uDC06\uDC08-\uDC18\uDC1B-\uDC21\uDC23\uDC24\uDC26-\uDC2A]|\uD83A[\uDC00-\uDCC4\uDCD0-\uDCD6\uDD00-\uDD4A\uDD50-\uDD59]|\uD83B[\uDE00-\uDE03\uDE05-\uDE1F\uDE21\uDE22\uDE24\uDE27\uDE29-\uDE32\uDE34-\uDE37\uDE39\uDE3B\uDE42\uDE47\uDE49\uDE4B\uDE4D-\uDE4F\uDE51\uDE52\uDE54\uDE57\uDE59\uDE5B\uDE5D\uDE5F\uDE61\uDE62\uDE64\uDE67-\uDE6A\uDE6C-\uDE72\uDE74-\uDE77\uDE79-\uDE7C\uDE7E\uDE80-\uDE89\uDE8B-\uDE9B\uDEA1-\uDEA3\uDEA5-\uDEA9\uDEAB-\uDEBB]|\uD869[\uDC00-\uDED6\uDF00-\uDFFF]|\uD86D[\uDC00-\uDF34\uDF40-\uDFFF]|\uD86E[\uDC00-\uDC1D\uDC20-\uDFFF]|\uD873[\uDC00-\uDEA1]|\uD87E[\uDC00-\uDE1D]|\uDB40[\uDD00-\uDDEF]/ }, r2 = [5760, 8192, 8193, 8194, 8195, 8196, 8197, 8198, 8199, 8200, 8201, 8202, 8239, 8287, 12288, 65279], o2 = new Array(128), u2 = 0; u2 < 128; ++u2)
            o2[u2] = u2 >= 97 && u2 <= 122 || u2 >= 65 && u2 <= 90 || 36 === u2 || 95 === u2;
          for (i2 = new Array(128), u2 = 0; u2 < 128; ++u2)
            i2[u2] = u2 >= 97 && u2 <= 122 || u2 >= 65 && u2 <= 90 || u2 >= 48 && u2 <= 57 || 36 === u2 || 95 === u2;
          e2.exports = { isDecimalDigit: function(e3) {
            return 48 <= e3 && e3 <= 57;
          }, isHexDigit: function(e3) {
            return 48 <= e3 && e3 <= 57 || 97 <= e3 && e3 <= 102 || 65 <= e3 && e3 <= 70;
          }, isOctalDigit: function(e3) {
            return e3 >= 48 && e3 <= 55;
          }, isWhiteSpace: function(e3) {
            return 32 === e3 || 9 === e3 || 11 === e3 || 12 === e3 || 160 === e3 || e3 >= 5760 && r2.indexOf(e3) >= 0;
          }, isLineTerminator: function(e3) {
            return 10 === e3 || 13 === e3 || 8232 === e3 || 8233 === e3;
          }, isIdentifierStartES5: function(e3) {
            return e3 < 128 ? o2[e3] : n2.NonAsciiIdentifierStart.test(s2(e3));
          }, isIdentifierPartES5: function(e3) {
            return e3 < 128 ? i2[e3] : n2.NonAsciiIdentifierPart.test(s2(e3));
          }, isIdentifierStartES6: function(e3) {
            return e3 < 128 ? o2[e3] : t2.NonAsciiIdentifierStart.test(s2(e3));
          }, isIdentifierPartES6: function(e3) {
            return e3 < 128 ? i2[e3] : t2.NonAsciiIdentifierPart.test(s2(e3));
          } };
        }();
      }), gf = i(function(e2) {
        !function() {
          var t2 = mf;
          function n2(e3, t3) {
            return !(!t3 && "yield" === e3) && r2(e3, t3);
          }
          function r2(e3, t3) {
            if (t3 && function(e4) {
              switch (e4) {
                case "implements":
                case "interface":
                case "package":
                case "private":
                case "protected":
                case "public":
                case "static":
                case "let":
                  return true;
                default:
                  return false;
              }
            }(e3))
              return true;
            switch (e3.length) {
              case 2:
                return "if" === e3 || "in" === e3 || "do" === e3;
              case 3:
                return "var" === e3 || "for" === e3 || "new" === e3 || "try" === e3;
              case 4:
                return "this" === e3 || "else" === e3 || "case" === e3 || "void" === e3 || "with" === e3 || "enum" === e3;
              case 5:
                return "while" === e3 || "break" === e3 || "catch" === e3 || "throw" === e3 || "const" === e3 || "yield" === e3 || "class" === e3 || "super" === e3;
              case 6:
                return "return" === e3 || "typeof" === e3 || "delete" === e3 || "switch" === e3 || "export" === e3 || "import" === e3;
              case 7:
                return "default" === e3 || "finally" === e3 || "extends" === e3;
              case 8:
                return "function" === e3 || "continue" === e3 || "debugger" === e3;
              case 10:
                return "instanceof" === e3;
              default:
                return false;
            }
          }
          function o2(e3, t3) {
            return "null" === e3 || "true" === e3 || "false" === e3 || n2(e3, t3);
          }
          function i2(e3, t3) {
            return "null" === e3 || "true" === e3 || "false" === e3 || r2(e3, t3);
          }
          function u2(e3) {
            var n3, r3, o3;
            if (0 === e3.length)
              return false;
            if (o3 = e3.charCodeAt(0), !t2.isIdentifierStartES5(o3))
              return false;
            for (n3 = 1, r3 = e3.length; n3 < r3; ++n3)
              if (o3 = e3.charCodeAt(n3), !t2.isIdentifierPartES5(o3))
                return false;
            return true;
          }
          function s2(e3) {
            var n3, r3, o3, i3, u3;
            if (0 === e3.length)
              return false;
            for (u3 = t2.isIdentifierStartES6, n3 = 0, r3 = e3.length; n3 < r3; ++n3) {
              if (55296 <= (o3 = e3.charCodeAt(n3)) && o3 <= 56319) {
                if (++n3 >= r3)
                  return false;
                if (!(56320 <= (i3 = e3.charCodeAt(n3)) && i3 <= 57343))
                  return false;
                o3 = 1024 * (o3 - 55296) + (i3 - 56320) + 65536;
              }
              if (!u3(o3))
                return false;
              u3 = t2.isIdentifierPartES6;
            }
            return true;
          }
          e2.exports = { isKeywordES5: n2, isKeywordES6: r2, isReservedWordES5: o2, isReservedWordES6: i2, isRestrictedWord: function(e3) {
            return "eval" === e3 || "arguments" === e3;
          }, isIdentifierNameES5: u2, isIdentifierNameES6: s2, isIdentifierES5: function(e3, t3) {
            return u2(e3) && !o2(e3, t3);
          }, isIdentifierES6: function(e3, t3) {
            return s2(e3) && !i2(e3, t3);
          } };
        }();
      });
      const yf = i(function(e2, t2) {
        t2.ast = hf, t2.code = mf, t2.keyword = gf;
      }).keyword.isIdentifierNameES5, { getLast: Df, hasNewline: Ef, skipWhitespace: bf, isNonEmptyArray: Cf, isNextLineEmptyAfterIndex: vf } = rn, { locStart: Af, locEnd: Ff, hasSameLocStart: xf } = ea, Sf = "(?:(?=.)\\s)", wf = new RegExp("^".concat(Sf, "*:")), Tf = new RegExp("^".concat(Sf, "*::"));
      function Bf(e2) {
        return "AssignmentExpression" === e2.type || "BinaryExpression" === e2.type || "LogicalExpression" === e2.type || "NGPipeExpression" === e2.type || "ConditionalExpression" === e2.type || Uf(e2) || zf(e2) || "SequenceExpression" === e2.type || "TaggedTemplateExpression" === e2.type || "BindExpression" === e2.type || "UpdateExpression" === e2.type && !e2.prefix || "TSAsExpression" === e2.type || "TSNonNullExpression" === e2.type;
      }
      function kf(e2) {
        return "Block" === e2.type || "CommentBlock" === e2.type || "MultiLine" === e2.type;
      }
      function Nf(e2) {
        return "Line" === e2.type || "CommentLine" === e2.type || "SingleLine" === e2.type || "HashbangComment" === e2.type || "HTMLOpen" === e2.type || "HTMLClose" === e2.type;
      }
      const Pf = /* @__PURE__ */ new Set(["ExportDefaultDeclaration", "ExportDefaultSpecifier", "DeclareExportDeclaration", "ExportNamedDeclaration", "ExportAllDeclaration"]);
      function Of(e2) {
        return e2 && Pf.has(e2.type);
      }
      function If(e2) {
        return "NumericLiteral" === e2.type || "Literal" === e2.type && "number" == typeof e2.value;
      }
      function jf(e2) {
        return "StringLiteral" === e2.type || "Literal" === e2.type && "string" == typeof e2.value;
      }
      function Lf(e2) {
        return "FunctionExpression" === e2.type || "ArrowFunctionExpression" === e2.type;
      }
      function _f(e2) {
        return Uf(e2) && "Identifier" === e2.callee.type && ("async" === e2.callee.name || "inject" === e2.callee.name || "fakeAsync" === e2.callee.name);
      }
      function Mf(e2) {
        return "JSXElement" === e2.type || "JSXFragment" === e2.type;
      }
      function Rf(e2) {
        return "get" === e2.kind || "set" === e2.kind;
      }
      function Vf(e2) {
        return Rf(e2) || xf(e2, e2.value);
      }
      const $f = /* @__PURE__ */ new Set(["BinaryExpression", "LogicalExpression", "NGPipeExpression"]);
      const qf = /* @__PURE__ */ new Set(["AnyTypeAnnotation", "TSAnyKeyword", "NullLiteralTypeAnnotation", "TSNullKeyword", "ThisTypeAnnotation", "TSThisType", "NumberTypeAnnotation", "TSNumberKeyword", "VoidTypeAnnotation", "TSVoidKeyword", "BooleanTypeAnnotation", "TSBooleanKeyword", "BigIntTypeAnnotation", "TSBigIntKeyword", "SymbolTypeAnnotation", "TSSymbolKeyword", "StringTypeAnnotation", "TSStringKeyword", "BooleanLiteralTypeAnnotation", "StringLiteralTypeAnnotation", "BigIntLiteralTypeAnnotation", "NumberLiteralTypeAnnotation", "TSLiteralType", "TSTemplateLiteralType", "EmptyTypeAnnotation", "MixedTypeAnnotation", "TSNeverKeyword", "TSObjectKeyword", "TSUndefinedKeyword", "TSUnknownKeyword"]);
      const Wf = /^(skip|[fx]?(it|describe|test))$/;
      function Uf(e2) {
        return e2 && ("CallExpression" === e2.type || "OptionalCallExpression" === e2.type);
      }
      function zf(e2) {
        return e2 && ("MemberExpression" === e2.type || "OptionalMemberExpression" === e2.type);
      }
      function Hf(e2, t2) {
        return Mf(t2) ? id(t2) : ad(t2, ud.Leading, (t3) => Ef(e2, Ff(t3)));
      }
      function Gf(e2) {
        return /^(\d+|\d+\.\d+)$/.test(e2);
      }
      function Jf(e2) {
        return e2.quasis.some((e3) => e3.value.raw.includes("\n"));
      }
      function Xf(e2) {
        return e2.extra ? e2.extra.raw : e2.raw;
      }
      const Yf = { "==": true, "!=": true, "===": true, "!==": true }, Kf = { "*": true, "/": true, "%": true }, Qf = { ">>": true, ">>>": true, "<<": true };
      const Zf = {};
      for (const [e2, t2] of [["|>"], ["??"], ["||"], ["&&"], ["|"], ["^"], ["&"], ["==", "===", "!=", "!=="], ["<", ">", "<=", ">=", "in", "instanceof"], [">>", "<<", ">>>"], ["+", "-"], ["*", "/", "%"], ["**"]].entries())
        for (const n2 of t2)
          Zf[n2] = e2;
      function ed(e2) {
        return Zf[e2];
      }
      const td = /* @__PURE__ */ new WeakMap();
      function nd(e2) {
        if (td.has(e2))
          return td.get(e2);
        const t2 = [];
        return e2.this && t2.push(e2.this), Array.isArray(e2.parameters) ? t2.push(...e2.parameters) : Array.isArray(e2.params) && t2.push(...e2.params), e2.rest && t2.push(e2.rest), td.set(e2, t2), t2;
      }
      const rd = /* @__PURE__ */ new WeakMap();
      function od(e2) {
        return "prettier-ignore" === e2.value.trim() && !e2.unignore;
      }
      function id(e2) {
        return e2 && (e2.prettierIgnore || ad(e2, ud.PrettierIgnore));
      }
      const ud = { Leading: 2, Trailing: 4, Dangling: 8, Block: 16, Line: 32, PrettierIgnore: 64, First: 128, Last: 256 }, sd = (e2, t2) => {
        if ("function" == typeof e2 && (t2 = e2, e2 = 0), e2 || t2)
          return (n2, r2, o2) => !(e2 & ud.Leading && !n2.leading || e2 & ud.Trailing && !n2.trailing || e2 & ud.Dangling && (n2.leading || n2.trailing) || e2 & ud.Block && !kf(n2) || e2 & ud.Line && !Nf(n2) || e2 & ud.First && 0 !== r2 || e2 & ud.Last && r2 !== o2.length - 1 || e2 & ud.PrettierIgnore && !od(n2) || t2 && !t2(n2));
      };
      function ad(e2, t2, n2) {
        if (!e2 || !Cf(e2.comments))
          return false;
        const r2 = sd(t2, n2);
        return !r2 || e2.comments.some(r2);
      }
      function cd(e2, t2, n2) {
        if (!e2 || !Array.isArray(e2.comments))
          return [];
        const r2 = sd(t2, n2);
        return r2 ? e2.comments.filter(r2) : e2.comments;
      }
      function ld(e2) {
        return Uf(e2) || "NewExpression" === e2.type || "ImportExpression" === e2.type;
      }
      var pd = { getFunctionParameters: nd, iterateFunctionParametersPath: function(e2, t2) {
        const n2 = e2.getValue();
        let r2 = 0;
        const o2 = (e3) => t2(e3, r2++);
        n2.this && e2.call(o2, "this"), Array.isArray(n2.parameters) ? e2.each(o2, "parameters") : Array.isArray(n2.params) && e2.each(o2, "params"), n2.rest && e2.call(o2, "rest");
      }, getCallArguments: function(e2) {
        if (rd.has(e2))
          return rd.get(e2);
        const t2 = "ImportExpression" === e2.type ? [e2.source] : e2.arguments;
        return rd.set(e2, t2), t2;
      }, iterateCallArgumentsPath: function(e2, t2) {
        "ImportExpression" === e2.getValue().type ? e2.call((e3) => t2(e3, 0), "source") : e2.each(t2, "arguments");
      }, hasRestParameter: function(e2) {
        if (e2.rest)
          return true;
        const t2 = nd(e2);
        return t2.length > 0 && "RestElement" === Df(t2).type;
      }, getLeftSidePathName: function(e2, t2) {
        if (t2.expressions)
          return ["expressions", 0];
        if (t2.left)
          return ["left"];
        if (t2.test)
          return ["test"];
        if (t2.object)
          return ["object"];
        if (t2.callee)
          return ["callee"];
        if (t2.tag)
          return ["tag"];
        if (t2.argument)
          return ["argument"];
        if (t2.expression)
          return ["expression"];
        throw new Error("Unexpected node has no left side.");
      }, getParentExportDeclaration: function(e2) {
        const t2 = e2.getParentNode();
        return "declaration" === e2.getName() && Of(t2) ? t2 : null;
      }, getTypeScriptMappedTypeModifier: function(e2, t2) {
        return "+" === e2 ? "+" + t2 : "-" === e2 ? "-" + t2 : t2;
      }, hasFlowAnnotationComment: function(e2) {
        return e2 && kf(e2[0]) && Tf.test(e2[0].value);
      }, hasFlowShorthandAnnotationComment: function(e2) {
        return e2.extra && e2.extra.parenthesized && Cf(e2.trailingComments) && kf(e2.trailingComments[0]) && wf.test(e2.trailingComments[0].value);
      }, hasLeadingOwnLineComment: Hf, hasNakedLeftSide: Bf, hasNode: function e2(t2, n2) {
        if (!t2 || "object" != typeof t2)
          return false;
        if (Array.isArray(t2))
          return t2.some((t3) => e2(t3, n2));
        const r2 = n2(t2);
        return "boolean" == typeof r2 ? r2 : Object.values(t2).some((t3) => e2(t3, n2));
      }, hasIgnoreComment: function(e2) {
        return id(e2.getValue());
      }, hasNodeIgnoreComment: id, identity: function(e2) {
        return e2;
      }, isBinaryish: function(e2) {
        return $f.has(e2.type);
      }, isBlockComment: kf, isCallLikeExpression: ld, isLineComment: Nf, isPrettierIgnoreComment: od, isCallExpression: Uf, isMemberExpression: zf, isExportDeclaration: Of, isFlowAnnotationComment: function(e2, t2) {
        const n2 = Af(t2), r2 = bf(e2, Ff(t2));
        return false !== r2 && "/*" === e2.slice(n2, n2 + 2) && "*/" === e2.slice(r2, r2 + 2);
      }, isFunctionCompositionArgs: function(e2) {
        if (e2.length <= 1)
          return false;
        let t2 = 0;
        for (const n2 of e2)
          if (Lf(n2)) {
            if (t2 += 1, t2 > 1)
              return true;
          } else if (Uf(n2)) {
            for (const e3 of n2.arguments)
              if (Lf(e3))
                return true;
          }
        return false;
      }, isFunctionNotation: Vf, isFunctionOrArrowExpression: Lf, isGetterOrSetter: Rf, isJestEachTemplateLiteral: function(e2, t2) {
        const n2 = /^[fx]?(describe|it|test)$/;
        return "TaggedTemplateExpression" === t2.type && t2.quasi === e2 && "MemberExpression" === t2.tag.type && "Identifier" === t2.tag.property.type && "each" === t2.tag.property.name && ("Identifier" === t2.tag.object.type && n2.test(t2.tag.object.name) || "MemberExpression" === t2.tag.object.type && "Identifier" === t2.tag.object.property.type && ("only" === t2.tag.object.property.name || "skip" === t2.tag.object.property.name) && "Identifier" === t2.tag.object.object.type && n2.test(t2.tag.object.object.name));
      }, isJsxNode: Mf, isLiteral: function(e2) {
        return "BooleanLiteral" === e2.type || "DirectiveLiteral" === e2.type || "Literal" === e2.type || "NullLiteral" === e2.type || "NumericLiteral" === e2.type || "BigIntLiteral" === e2.type || "DecimalLiteral" === e2.type || "RegExpLiteral" === e2.type || "StringLiteral" === e2.type || "TemplateLiteral" === e2.type || "TSTypeLiteral" === e2.type || "JSXText" === e2.type;
      }, isLongCurriedCallExpression: function(e2) {
        const t2 = e2.getValue(), n2 = e2.getParentNode();
        return Uf(t2) && Uf(n2) && n2.callee === t2 && t2.arguments.length > n2.arguments.length && n2.arguments.length > 0;
      }, isSimpleCallArgument: function e2(t2, n2) {
        if (n2 >= 2)
          return false;
        const r2 = (t3) => e2(t3, n2 + 1), o2 = "Literal" === t2.type && "regex" in t2 && t2.regex.pattern || "RegExpLiteral" === t2.type && t2.pattern;
        return !(o2 && o2.length > 5) && ("Literal" === t2.type || "BigIntLiteral" === t2.type || "DecimalLiteral" === t2.type || "BooleanLiteral" === t2.type || "NullLiteral" === t2.type || "NumericLiteral" === t2.type || "RegExpLiteral" === t2.type || "StringLiteral" === t2.type || "Identifier" === t2.type || "ThisExpression" === t2.type || "Super" === t2.type || "PrivateName" === t2.type || "PrivateIdentifier" === t2.type || "ArgumentPlaceholder" === t2.type || "Import" === t2.type || ("TemplateLiteral" === t2.type ? t2.quasis.every((e3) => !e3.value.raw.includes("\n")) && t2.expressions.every(r2) : "ObjectExpression" === t2.type ? t2.properties.every((e3) => !e3.computed && (e3.shorthand || e3.value && r2(e3.value))) : "ArrayExpression" === t2.type ? t2.elements.every((e3) => null === e3 || r2(e3)) : "ImportExpression" === t2.type ? r2(t2.source) : ld(t2) ? e2(t2.callee, n2) && t2.arguments.every(r2) : zf(t2) ? e2(t2.object, n2) && e2(t2.property, n2) : "UnaryExpression" !== t2.type || "!" !== t2.operator && "-" !== t2.operator ? "TSNonNullExpression" === t2.type && e2(t2.expression, n2) : e2(t2.argument, n2)));
      }, isMemberish: function(e2) {
        return zf(e2) || "BindExpression" === e2.type && Boolean(e2.object);
      }, isNumericLiteral: If, isSignedNumericLiteral: function(e2) {
        return "UnaryExpression" === e2.type && ("+" === e2.operator || "-" === e2.operator) && If(e2.argument);
      }, isObjectType: function(e2) {
        return "ObjectTypeAnnotation" === e2.type || "TSTypeLiteral" === e2.type;
      }, isObjectTypePropertyAFunction: function(e2) {
        return !("ObjectTypeProperty" !== e2.type && "ObjectTypeInternalSlot" !== e2.type || "FunctionTypeAnnotation" !== e2.value.type || e2.static || Vf(e2));
      }, isSimpleType: function(e2) {
        return !!e2 && (!("GenericTypeAnnotation" !== e2.type && "TSTypeReference" !== e2.type || e2.typeParameters) || !!qf.has(e2.type));
      }, isSimpleNumber: Gf, isSimpleTemplateLiteral: function(e2) {
        let t2 = "expressions";
        "TSTemplateLiteralType" === e2.type && (t2 = "types");
        const n2 = e2[t2];
        return 0 !== n2.length && n2.every((e3) => {
          if (ad(e3))
            return false;
          if ("Identifier" === e3.type || "ThisExpression" === e3.type)
            return true;
          if (zf(e3)) {
            let t3 = e3;
            for (; zf(t3); ) {
              if ("Identifier" !== t3.property.type && "Literal" !== t3.property.type && "StringLiteral" !== t3.property.type && "NumericLiteral" !== t3.property.type)
                return false;
              if (t3 = t3.object, ad(t3))
                return false;
            }
            return "Identifier" === t3.type || "ThisExpression" === t3.type;
          }
          return false;
        });
      }, isStringLiteral: jf, isStringPropSafeToUnquote: function(e2, t2) {
        return "json" !== t2.parser && jf(e2.key) && Xf(e2.key).slice(1, -1) === e2.key.value && (yf(e2.key.value) && !(("typescript" === t2.parser || "babel-ts" === t2.parser) && "ClassProperty" === e2.type) || Gf(e2.key.value) && String(Number(e2.key.value)) === e2.key.value && ("babel" === t2.parser || "espree" === t2.parser || "meriyah" === t2.parser));
      }, isTemplateOnItsOwnLine: function(e2, t2) {
        return ("TemplateLiteral" === e2.type && Jf(e2) || "TaggedTemplateExpression" === e2.type && Jf(e2.quasi)) && !Ef(t2, Af(e2), { backwards: true });
      }, isTestCall: function e2(t2, n2) {
        if ("CallExpression" !== t2.type)
          return false;
        if (1 === t2.arguments.length) {
          if (_f(t2) && n2 && e2(n2))
            return Lf(t2.arguments[0]);
          if (function(e3) {
            return "Identifier" === e3.callee.type && /^(before|after)(Each|All)$/.test(e3.callee.name) && 1 === e3.arguments.length;
          }(t2))
            return _f(t2.arguments[0]);
        } else if ((2 === t2.arguments.length || 3 === t2.arguments.length) && ("Identifier" === t2.callee.type && Wf.test(t2.callee.name) || function(e3) {
          return zf(e3.callee) && "Identifier" === e3.callee.object.type && "Identifier" === e3.callee.property.type && Wf.test(e3.callee.object.name) && ("only" === e3.callee.property.name || "skip" === e3.callee.property.name);
        }(t2)) && (function(e3) {
          return "TemplateLiteral" === e3.type;
        }(t2.arguments[0]) || jf(t2.arguments[0])))
          return !(t2.arguments[2] && !If(t2.arguments[2])) && ((2 === t2.arguments.length ? Lf(t2.arguments[1]) : function(e3) {
            return "FunctionExpression" === e3.type || "ArrowFunctionExpression" === e3.type && "BlockStatement" === e3.body.type;
          }(t2.arguments[1]) && nd(t2.arguments[1]).length <= 1) || _f(t2.arguments[1]));
        return false;
      }, isTheOnlyJsxElementInMarkdown: function(e2, t2) {
        if ("markdown" !== e2.parentParser && "mdx" !== e2.parentParser)
          return false;
        const n2 = t2.getNode();
        if (!n2.expression || !Mf(n2.expression))
          return false;
        const r2 = t2.getParentNode();
        return "Program" === r2.type && 1 === r2.body.length;
      }, isTSXFile: function(e2) {
        return e2.filepath && /\.tsx$/i.test(e2.filepath);
      }, isTypeAnnotationAFunction: function(e2) {
        return !("TypeAnnotation" !== e2.type && "TSTypeAnnotation" !== e2.type || "FunctionTypeAnnotation" !== e2.typeAnnotation.type || e2.static || xf(e2, e2.typeAnnotation));
      }, isNextLineEmpty: (e2, { originalText: t2 }) => vf(t2, Ff(e2)), needsHardlineAfterDanglingComment: function(e2) {
        if (!ad(e2))
          return false;
        const t2 = Df(cd(e2, ud.Dangling));
        return t2 && !kf(t2);
      }, rawText: Xf, returnArgumentHasLeadingComment: function(e2, t2) {
        if (Hf(e2.originalText, t2))
          return true;
        if (Bf(t2)) {
          let r2, o2 = t2;
          for (; r2 = (n2 = o2).expressions ? n2.expressions[0] : n2.left || n2.test || n2.callee || n2.object || n2.tag || n2.argument || n2.expression; )
            if (o2 = r2, Hf(e2.originalText, o2))
              return true;
        }
        var n2;
        return false;
      }, shouldPrintComma: function(e2, t2 = "es5") {
        return "es5" === e2.trailingComma && "es5" === t2 || "all" === e2.trailingComma && ("all" === t2 || "es5" === t2);
      }, isBitwiseOperator: function(e2) {
        return Boolean(Qf[e2]) || "|" === e2 || "^" === e2 || "&" === e2;
      }, shouldFlatten: function(e2, t2) {
        return ed(t2) === ed(e2) && ("**" !== e2 && ((!Yf[e2] || !Yf[t2]) && (!("%" === t2 && Kf[e2] || "%" === e2 && Kf[t2]) && ((t2 === e2 || !Kf[t2] || !Kf[e2]) && (!Qf[e2] || !Qf[t2])))));
      }, startsWithNoLookaheadToken: function e2(t2, n2) {
        switch ((t2 = function(e3) {
          for (; e3.left; )
            e3 = e3.left;
          return e3;
        }(t2)).type) {
          case "FunctionExpression":
          case "ClassExpression":
          case "DoExpression":
            return n2;
          case "ObjectExpression":
            return true;
          case "MemberExpression":
          case "OptionalMemberExpression":
            return e2(t2.object, n2);
          case "TaggedTemplateExpression":
            return "FunctionExpression" !== t2.tag.type && e2(t2.tag, n2);
          case "CallExpression":
          case "OptionalCallExpression":
            return "FunctionExpression" !== t2.callee.type && e2(t2.callee, n2);
          case "ConditionalExpression":
            return e2(t2.test, n2);
          case "UpdateExpression":
            return !t2.prefix && e2(t2.argument, n2);
          case "BindExpression":
            return t2.object && e2(t2.object, n2);
          case "SequenceExpression":
            return e2(t2.expressions[0], n2);
          case "TSAsExpression":
          case "TSNonNullExpression":
            return e2(t2.expression, n2);
          default:
            return false;
        }
      }, getPrecedence: ed, hasComment: ad, getComments: cd, CommentCheckFlags: ud };
      const { getStringWidth: fd, getIndentSize: dd } = rn, { builders: { join: hd, hardline: md, softline: gd, group: yd, indent: Dd, align: Ed, lineSuffixBoundary: bd, addAlignmentToDoc: Cd }, printer: { printDocToString: vd }, utils: { mapDoc: Ad } } = Rn, { isBinaryish: Fd, isJestEachTemplateLiteral: xd, isSimpleTemplateLiteral: Sd, hasComment: wd, isMemberExpression: Td } = pd;
      function Bd(e2) {
        return e2.replace(/([\\`]|\${)/g, "\\$1");
      }
      var kd = { printTemplateLiteral: function(e2, t2, n2) {
        const r2 = e2.getValue();
        if ("TemplateLiteral" === r2.type && xd(r2, e2.getParentNode())) {
          const r3 = function(e3, t3, n3) {
            const r4 = e3.getNode(), o3 = r4.quasis[0].value.raw.trim().split(/\s*\|\s*/);
            if (o3.length > 1 || o3.some((e4) => e4.length > 0)) {
              t3.__inJestEach = true;
              const i3 = e3.map(n3, "expressions");
              t3.__inJestEach = false;
              const u3 = [], s3 = i3.map((e4) => "${" + vd(e4, Object.assign({}, t3, { printWidth: Number.POSITIVE_INFINITY, endOfLine: "lf" })).formatted + "}"), a2 = [{ hasLineBreak: false, cells: [] }];
              for (let e4 = 1; e4 < r4.quasis.length; e4++) {
                const t4 = ke(a2), n4 = s3[e4 - 1];
                t4.cells.push(n4), n4.includes("\n") && (t4.hasLineBreak = true), r4.quasis[e4].value.raw.includes("\n") && a2.push({ hasLineBreak: false, cells: [] });
              }
              const c2 = Math.max(o3.length, ...a2.map((e4) => e4.cells.length)), l2 = Array.from({ length: c2 }).fill(0), p2 = [{ cells: o3 }, ...a2.filter((e4) => e4.cells.length > 0)];
              for (const { cells: e4 } of p2.filter((e5) => !e5.hasLineBreak))
                for (const [t4, n4] of e4.entries())
                  l2[t4] = Math.max(l2[t4], fd(n4));
              return u3.push(bd, "`", Dd([md, hd(md, p2.map((e4) => hd(" | ", e4.cells.map((t4, n4) => e4.hasLineBreak ? t4 : t4 + " ".repeat(l2[n4] - fd(t4))))))]), md, "`"), u3;
            }
          }(e2, n2, t2);
          if (r3)
            return r3;
        }
        let o2 = "expressions";
        "TSTemplateLiteralType" === r2.type && (o2 = "types");
        const i2 = [];
        let u2 = e2.map(t2, o2);
        const s2 = Sd(r2);
        return s2 && (u2 = u2.map((e3) => vd(e3, Object.assign({}, n2, { printWidth: Number.POSITIVE_INFINITY })).formatted)), i2.push(bd, "`"), e2.each((e3) => {
          const a2 = e3.getName();
          if (i2.push(t2()), a2 < u2.length) {
            const { tabWidth: t3 } = n2, c2 = e3.getValue(), l2 = dd(c2.value.raw, t3);
            let p2 = u2[a2];
            if (!s2) {
              const e4 = r2[o2][a2];
              (wd(e4) || Td(e4) || "ConditionalExpression" === e4.type || "SequenceExpression" === e4.type || "TSAsExpression" === e4.type || Fd(e4)) && (p2 = [Dd([gd, p2]), gd]);
            }
            const f2 = 0 === l2 && c2.value.raw.endsWith("\n") ? Ed(Number.NEGATIVE_INFINITY, p2) : Cd(p2, l2, t3);
            i2.push(yd(["${", f2, bd, "}"]));
          }
        }, "quasis"), i2.push("`"), i2;
      }, printTemplateExpressions: function(e2, t2) {
        return e2.map((e3) => function(e4, t3) {
          const n2 = e4.getValue();
          let r2 = t3();
          return wd(n2) && (r2 = yd([Dd([gd, r2]), gd])), ["${", r2, bd, "}"];
        }(e3, t2), "expressions");
      }, escapeTemplateCharacters: function(e2, t2) {
        return Ad(e2, (e3) => "string" == typeof e3 ? t2 ? e3.replace(/(\\*)`/g, "$1$1\\`") : Bd(e3) : e3);
      }, uncookTemplateElementValue: Bd };
      const { builders: { indent: Nd, softline: Pd, literalline: Od, dedentToRoot: Id } } = Rn, { escapeTemplateCharacters: jd } = kd;
      var Ld = function(e2, t2, n2) {
        let r2 = e2.getValue().quasis[0].value.raw.replace(/((?:\\\\)*)\\`/g, (e3, t3) => "\\".repeat(t3.length / 2) + "`");
        const o2 = function(e3) {
          const t3 = e3.match(/^([^\S\n]*)\S/m);
          return null === t3 ? "" : t3[1];
        }(r2), i2 = "" !== o2;
        i2 && (r2 = r2.replace(new RegExp("^".concat(o2), "gm"), ""));
        const u2 = jd(n2(r2, { parser: "markdown", __inJsTemplate: true }, { stripTrailingHardline: true }), true);
        return ["`", i2 ? Nd([Pd, u2]) : [Od, Id(u2)], Pd, "`"];
      };
      const { isNonEmptyArray: _d } = rn, { builders: { indent: Md, hardline: Rd, softline: Vd }, utils: { mapDoc: $d, replaceNewlinesWithLiterallines: qd, cleanDoc: Wd } } = Rn, { printTemplateExpressions: Ud } = kd;
      var zd = function(e2, t2, n2) {
        const r2 = e2.getValue(), o2 = r2.quasis.map((e3) => e3.value.raw);
        let i2 = 0;
        return function(e3, t3, n3) {
          if (1 === t3.quasis.length && !t3.quasis[0].value.raw.trim())
            return "``";
          const r3 = function(e4, t4) {
            if (!_d(t4))
              return e4;
            let n4 = 0;
            const r4 = $d(Wd(e4), (e5) => "string" == typeof e5 && e5.includes("@prettier-placeholder") ? e5.split(/@prettier-placeholder-(\d+)-id/).map((e6, r5) => r5 % 2 == 0 ? qd(e6) : (n4++, t4[e6])) : e5);
            return t4.length === n4 ? r4 : null;
          }(e3, n3);
          if (!r3)
            throw new Error("Couldn't insert all the expressions");
          return ["`", Md([Rd, r3]), Vd, "`"];
        }(n2(o2.reduce((e3, t3, n3) => 0 === n3 ? t3 : e3 + "@prettier-placeholder-" + i2++ + "-id" + t3, ""), { parser: "scss" }, { stripTrailingHardline: true }), r2, Ud(e2, t2));
      };
      const { builders: { indent: Hd, join: Gd, hardline: Jd } } = Rn, { escapeTemplateCharacters: Xd, printTemplateExpressions: Yd } = kd;
      function Kd(e2) {
        const t2 = [];
        let n2 = false;
        const r2 = e2.map((e3) => e3.trim());
        for (const [e3, o2] of r2.entries())
          "" !== o2 && ("" === r2[e3 - 1] && n2 ? t2.push([Jd, o2]) : t2.push(o2), n2 = true);
        return 0 === t2.length ? null : Gd(Jd, t2);
      }
      var Qd = function(e2, t2, n2) {
        const r2 = e2.getValue(), o2 = r2.quasis.length;
        if (1 === o2 && "" === r2.quasis[0].value.raw.trim())
          return "``";
        const i2 = Yd(e2, t2), u2 = [];
        for (let e3 = 0; e3 < o2; e3++) {
          const t3 = 0 === e3, s2 = e3 === o2 - 1, a2 = r2.quasis[e3].value.cooked, c2 = a2.split("\n"), l2 = c2.length, p2 = i2[e3], f2 = l2 > 2 && "" === c2[0].trim() && "" === c2[1].trim(), d2 = l2 > 2 && "" === c2[l2 - 1].trim() && "" === c2[l2 - 2].trim(), h2 = c2.every((e4) => /^\s*(?:#[^\n\r]*)?$/.test(e4));
          if (!s2 && /#[^\n\r]*$/.test(c2[l2 - 1]))
            return null;
          let m2 = null;
          m2 = h2 ? Kd(c2) : n2(a2, { parser: "graphql" }, { stripTrailingHardline: true }), m2 ? (m2 = Xd(m2, false), !t3 && f2 && u2.push(""), u2.push(m2), !s2 && d2 && u2.push("")) : t3 || s2 || !f2 || u2.push(""), p2 && u2.push(p2);
        }
        return ["`", Hd([Jd, Gd(Jd, u2)]), Jd, "`"];
      };
      const { builders: { indent: Zd, line: eh, hardline: th, group: nh }, utils: { mapDoc: rh } } = Rn, { printTemplateExpressions: oh, uncookTemplateElementValue: ih } = kd;
      let uh = 0;
      var sh = function(e2, t2, n2, r2, { parser: o2 }) {
        const i2 = e2.getValue(), u2 = uh;
        uh = uh + 1 >>> 0;
        const s2 = (e3) => "PRETTIER_HTML_PLACEHOLDER_".concat(e3, "_").concat(u2, "_IN_JS"), a2 = i2.quasis.map((e3, t3, n3) => t3 === n3.length - 1 ? e3.value.cooked : e3.value.cooked + s2(t3)).join(""), c2 = oh(e2, t2);
        if (0 === c2.length && 0 === a2.trim().length)
          return "``";
        const l2 = new RegExp(s2("(\\d+)"), "g");
        let p2 = 0;
        const f2 = n2(a2, { parser: o2, __onHtmlRoot(e3) {
          p2 = e3.children.length;
        } }, { stripTrailingHardline: true }), d2 = rh(f2, (e3) => {
          if ("string" != typeof e3)
            return e3;
          const t3 = [], n3 = e3.split(l2);
          for (let e4 = 0; e4 < n3.length; e4++) {
            let o3 = n3[e4];
            if (e4 % 2 == 0) {
              o3 && (o3 = ih(o3), r2.__embeddedInHtml && (o3 = o3.replace(/<\/(script)\b/gi, "<\\/$1")), t3.push(o3));
              continue;
            }
            const i3 = Number(o3);
            t3.push(c2[i3]);
          }
          return t3;
        }), h2 = /^\s/.test(a2) ? " " : "", m2 = /\s$/.test(a2) ? " " : "", g2 = "ignore" === r2.htmlWhitespaceSensitivity ? th : h2 && m2 ? eh : null;
        return nh(g2 ? ["`", Zd([g2, nh(d2)]), g2, "`"] : ["`", h2, p2 > 1 ? Zd(nh(d2)) : nh(d2), m2, "`"]);
      };
      const { hasComment: ah, CommentCheckFlags: ch } = pd;
      function lh(e2) {
        return function(e3) {
          const t2 = e3.getValue(), n2 = e3.getParentNode(), r2 = e3.getParentNode(1);
          return r2 && t2.quasis && "JSXExpressionContainer" === n2.type && "JSXElement" === r2.type && "style" === r2.openingElement.name.name && r2.openingElement.attributes.some((e4) => "jsx" === e4.name.name) || n2 && "TaggedTemplateExpression" === n2.type && "Identifier" === n2.tag.type && "css" === n2.tag.name || n2 && "TaggedTemplateExpression" === n2.type && "MemberExpression" === n2.tag.type && "css" === n2.tag.object.name && ("global" === n2.tag.property.name || "resolve" === n2.tag.property.name);
        }(e2) || function(e3) {
          const t2 = e3.getParentNode();
          if (!t2 || "TaggedTemplateExpression" !== t2.type)
            return false;
          const { tag: n2 } = t2;
          switch (n2.type) {
            case "MemberExpression":
              return fh(n2.object) || dh(n2);
            case "CallExpression":
              return fh(n2.callee) || "MemberExpression" === n2.callee.type && ("MemberExpression" === n2.callee.object.type && (fh(n2.callee.object.object) || dh(n2.callee.object)) || "CallExpression" === n2.callee.object.type && fh(n2.callee.object.callee));
            case "Identifier":
              return "css" === n2.name;
            default:
              return false;
          }
        }(e2) || function(e3) {
          const t2 = e3.getParentNode(), n2 = e3.getParentNode(1);
          return n2 && "JSXExpressionContainer" === t2.type && "JSXAttribute" === n2.type && "JSXIdentifier" === n2.name.type && "css" === n2.name.name;
        }(e2) || function(e3) {
          return e3.match((e4) => "TemplateLiteral" === e4.type, (e4, t2) => "ArrayExpression" === e4.type && "elements" === t2, (e4, t2) => ("Property" === e4.type || "ObjectProperty" === e4.type) && "Identifier" === e4.key.type && "styles" === e4.key.name && "value" === t2, ...ph);
        }(e2) ? "css" : function(e3) {
          const t2 = e3.getValue(), n2 = e3.getParentNode();
          return hh(t2, "GraphQL") || n2 && ("TaggedTemplateExpression" === n2.type && ("MemberExpression" === n2.tag.type && "graphql" === n2.tag.object.name && "experimental" === n2.tag.property.name || "Identifier" === n2.tag.type && ("gql" === n2.tag.name || "graphql" === n2.tag.name)) || "CallExpression" === n2.type && "Identifier" === n2.callee.type && "graphql" === n2.callee.name);
        }(e2) ? "graphql" : function(e3) {
          return hh(e3.getValue(), "HTML") || e3.match((e4) => "TemplateLiteral" === e4.type, (e4, t2) => "TaggedTemplateExpression" === e4.type && "Identifier" === e4.tag.type && "html" === e4.tag.name && "quasi" === t2);
        }(e2) ? "html" : function(e3) {
          return e3.match((e4) => "TemplateLiteral" === e4.type, (e4, t2) => ("Property" === e4.type || "ObjectProperty" === e4.type) && "Identifier" === e4.key.type && "template" === e4.key.name && "value" === t2, ...ph);
        }(e2) ? "angular" : function(e3) {
          const t2 = e3.getValue(), n2 = e3.getParentNode();
          return n2 && "TaggedTemplateExpression" === n2.type && 1 === t2.quasis.length && "Identifier" === n2.tag.type && ("md" === n2.tag.name || "markdown" === n2.tag.name);
        }(e2) ? "markdown" : void 0;
      }
      const ph = [(e2, t2) => "ObjectExpression" === e2.type && "properties" === t2, (e2, t2) => "CallExpression" === e2.type && "Identifier" === e2.callee.type && "Component" === e2.callee.name && "arguments" === t2, (e2, t2) => "Decorator" === e2.type && "expression" === t2];
      function fh(e2) {
        return "Identifier" === e2.type && "styled" === e2.name;
      }
      function dh(e2) {
        return /^[A-Z]/.test(e2.object.name) && "extend" === e2.property.name;
      }
      function hh(e2, t2) {
        return ah(e2, ch.Block | ch.Leading, ({ value: e3 }) => e3 === " ".concat(t2, " "));
      }
      var mh = function(e2, t2, n2, r2) {
        const o2 = e2.getValue();
        if ("TemplateLiteral" !== o2.type || function({ quasis: e3 }) {
          return e3.some(({ value: { cooked: e4 } }) => null === e4);
        }(o2))
          return;
        const i2 = lh(e2);
        return i2 ? "markdown" === i2 ? Ld(e2, t2, n2) : "css" === i2 ? zd(e2, t2, n2) : "graphql" === i2 ? Qd(e2, t2, n2) : "html" === i2 || "angular" === i2 ? sh(e2, t2, n2, r2, { parser: i2 }) : void 0 : void 0;
      };
      const { isBlockComment: gh } = pd, yh = /* @__PURE__ */ new Set(["range", "raw", "comments", "leadingComments", "trailingComments", "innerComments", "extra", "start", "end", "loc", "flags", "errors", "tokens"]), Dh = (e2) => {
        for (const t2 of e2.quasis)
          delete t2.value;
      };
      function Eh(e2, t2, n2) {
        if ("Program" === e2.type && delete t2.sourceType, "BigIntLiteral" !== e2.type && "BigIntLiteralTypeAnnotation" !== e2.type || t2.value && (t2.value = t2.value.toLowerCase()), "BigIntLiteral" !== e2.type && "Literal" !== e2.type || t2.bigint && (t2.bigint = t2.bigint.toLowerCase()), "DecimalLiteral" === e2.type && (t2.value = Number(t2.value)), "EmptyStatement" === e2.type)
          return null;
        if ("JSXText" === e2.type)
          return null;
        if ("JSXExpressionContainer" === e2.type && ("Literal" === e2.expression.type || "StringLiteral" === e2.expression.type) && " " === e2.expression.value)
          return null;
        if ("Property" !== e2.type && "ObjectProperty" !== e2.type && "MethodDefinition" !== e2.type && "ClassProperty" !== e2.type && "ClassMethod" !== e2.type && "PropertyDefinition" !== e2.type && "TSDeclareMethod" !== e2.type && "TSPropertySignature" !== e2.type && "ObjectTypeProperty" !== e2.type || "object" != typeof e2.key || !e2.key || "Literal" !== e2.key.type && "NumericLiteral" !== e2.key.type && "StringLiteral" !== e2.key.type && "Identifier" !== e2.key.type || delete t2.key, "JSXElement" === e2.type && "style" === e2.openingElement.name.name && e2.openingElement.attributes.some((e3) => "jsx" === e3.name.name))
          for (const { type: e3, expression: n3 } of t2.children)
            "JSXExpressionContainer" === e3 && "TemplateLiteral" === n3.type && Dh(n3);
        "JSXAttribute" === e2.type && "css" === e2.name.name && "JSXExpressionContainer" === e2.value.type && "TemplateLiteral" === e2.value.expression.type && Dh(t2.value.expression), "JSXAttribute" === e2.type && e2.value && "Literal" === e2.value.type && /["']|&quot;|&apos;/.test(e2.value.value) && (t2.value.value = t2.value.value.replace(/["']|&quot;|&apos;/g, '"'));
        const r2 = e2.expression || e2.callee;
        if ("Decorator" === e2.type && "CallExpression" === r2.type && "Component" === r2.callee.name && 1 === r2.arguments.length) {
          const n3 = e2.expression.arguments[0].properties;
          for (const [e3, r3] of t2.expression.arguments[0].properties.entries())
            switch (n3[e3].key.name) {
              case "styles":
                "ArrayExpression" === r3.value.type && Dh(r3.value.elements[0]);
                break;
              case "template":
                "TemplateLiteral" === r3.value.type && Dh(r3.value);
            }
        }
        if ("TaggedTemplateExpression" !== e2.type || "MemberExpression" !== e2.tag.type && ("Identifier" !== e2.tag.type || "gql" !== e2.tag.name && "graphql" !== e2.tag.name && "css" !== e2.tag.name && "md" !== e2.tag.name && "markdown" !== e2.tag.name && "html" !== e2.tag.name) && "CallExpression" !== e2.tag.type || Dh(t2.quasi), "TemplateLiteral" === e2.type) {
          (e2.leadingComments && e2.leadingComments.some((e3) => gh(e3) && ["GraphQL", "HTML"].some((t3) => e3.value === " ".concat(t3, " "))) || "CallExpression" === n2.type && "graphql" === n2.callee.name || !e2.leadingComments) && Dh(t2);
        }
        return "InterpreterDirective" === e2.type && (t2.value = t2.value.trimEnd()), "TSIntersectionType" !== e2.type && "TSUnionType" !== e2.type || 1 !== e2.types.length ? void 0 : t2.types[0];
      }
      Eh.ignoredProperties = yh;
      var bh = Eh;
      const Ch = (e2) => {
        if ("string" != typeof e2)
          throw new TypeError("Expected a string");
        const t2 = e2.match(/(?:\r?\n)/g) || [];
        if (0 === t2.length)
          return;
        const n2 = t2.filter((e3) => "\r\n" === e3).length;
        return n2 > t2.length - n2 ? "\r\n" : "\n";
      };
      var vh = Ch;
      vh.graceful = (e2) => "string" == typeof e2 && Ch(e2) || "\n";
      var Ah = function(e2) {
        const t2 = e2.match(Ph);
        return t2 ? t2[0].trimLeft() : "";
      }, Fh = function(e2) {
        const t2 = e2.match(Ph);
        return t2 && t2[0] ? e2.substring(t2[0].length) : e2;
      }, xh = function(e2) {
        return Rh(e2).pragmas;
      }, Sh = Rh, wh = function({ comments: e2 = "", pragmas: t2 = {} }) {
        const n2 = (0, Bh().default)(e2) || Th().EOL, r2 = " *", o2 = Object.keys(t2), i2 = o2.map((e3) => Vh(e3, t2[e3])).reduce((e3, t3) => e3.concat(t3), []).map((e3) => " * " + e3 + n2).join("");
        if (!e2) {
          if (0 === o2.length)
            return "";
          if (1 === o2.length && !Array.isArray(t2[o2[0]])) {
            const e3 = t2[o2[0]];
            return "".concat("/**", " ").concat(Vh(o2[0], e3)[0]).concat(" */");
          }
        }
        const u2 = e2.split(n2).map((e3) => "".concat(r2, " ").concat(e3)).join(n2) + n2;
        return "/**" + n2 + (e2 ? u2 : "") + (e2 && o2.length ? r2 + n2 : "") + i2 + " */";
      };
      function Th() {
        const e2 = Uo;
        return Th = function() {
          return e2;
        }, e2;
      }
      function Bh() {
        const e2 = function(e3) {
          return e3 && e3.__esModule ? e3 : { default: e3 };
        }(vh);
        return Bh = function() {
          return e2;
        }, e2;
      }
      const kh = /\*\/$/, Nh = /^\/\*\*/, Ph = /^\s*(\/\*\*?(.|\r?\n)*?\*\/)/, Oh = /(^|\s+)\/\/([^\r\n]*)/g, Ih = /^(\r?\n)+/, jh = /(?:^|\r?\n) *(@[^\r\n]*?) *\r?\n *(?![^@\r\n]*\/\/[^]*)([^@\r\n\s][^@\r\n]+?) *\r?\n/g, Lh = /(?:^|\r?\n) *@(\S+) *([^\r\n]*)/g, _h = /(\r?\n|^) *\* ?/g, Mh = [];
      function Rh(e2) {
        const t2 = (0, Bh().default)(e2) || Th().EOL;
        e2 = e2.replace(Nh, "").replace(kh, "").replace(_h, "$1");
        let n2 = "";
        for (; n2 !== e2; )
          n2 = e2, e2 = e2.replace(jh, "".concat(t2, "$1 $2").concat(t2));
        e2 = e2.replace(Ih, "").trimRight();
        const r2 = /* @__PURE__ */ Object.create(null), o2 = e2.replace(Lh, "").replace(Ih, "").trimRight();
        let i2;
        for (; i2 = Lh.exec(e2); ) {
          const e3 = i2[2].replace(Oh, "");
          "string" == typeof r2[i2[1]] || Array.isArray(r2[i2[1]]) ? r2[i2[1]] = Mh.concat(r2[i2[1]], e3) : r2[i2[1]] = e3;
        }
        return { comments: o2, pragmas: r2 };
      }
      function Vh(e2, t2) {
        return Mh.concat(t2).map((t3) => "@".concat(e2, " ").concat(t3).trim());
      }
      var $h = Object.defineProperty({ extract: Ah, strip: Fh, parse: xh, parseWithComments: Sh, print: wh }, "__esModule", { value: true });
      const { parseWithComments: qh, strip: Wh, extract: Uh, print: zh } = $h, { getShebang: Hh } = rn, { normalizeEndOfLine: Gh } = on;
      function Jh(e2) {
        const t2 = Hh(e2);
        t2 && (e2 = e2.slice(t2.length + 1));
        const n2 = Uh(e2), { pragmas: r2, comments: o2 } = qh(n2);
        return { shebang: t2, text: e2, pragmas: r2, comments: o2 };
      }
      var Xh = { hasPragma: function(e2) {
        const t2 = Object.keys(Jh(e2).pragmas);
        return t2.includes("prettier") || t2.includes("format");
      }, insertPragma: function(e2) {
        const { shebang: t2, text: n2, pragmas: r2, comments: o2 } = Jh(e2), i2 = Wh(n2), u2 = zh({ pragmas: Object.assign({ format: "" }, r2), comments: o2.trimStart() });
        return (t2 ? "".concat(t2, "\n") : "") + Gh(u2) + (i2.startsWith("\n") ? "\n" : "\n\n") + i2;
      } };
      const { getLast: Yh, hasNewline: Kh, getNextNonSpaceNonCommentCharacterIndexWithStartIndex: Qh, getNextNonSpaceNonCommentCharacter: Zh, hasNewlineInRange: em, addLeadingComment: tm, addTrailingComment: nm, addDanglingComment: rm, getNextNonSpaceNonCommentCharacterIndex: om, isNonEmptyArray: im } = rn, { isBlockComment: um, getFunctionParameters: sm, isPrettierIgnoreComment: am, isJsxNode: cm, hasFlowShorthandAnnotationComment: lm, hasFlowAnnotationComment: pm, hasIgnoreComment: fm, isCallLikeExpression: dm, getCallArguments: hm, isCallExpression: mm, isMemberExpression: gm } = pd, { locStart: ym, locEnd: Dm } = ea;
      function Em(e2, t2) {
        const n2 = (e2.body || e2.properties).find(({ type: e3 }) => "EmptyStatement" !== e3);
        n2 ? tm(n2, t2) : rm(e2, t2);
      }
      function bm(e2, t2) {
        "BlockStatement" === e2.type ? Em(e2, t2) : tm(e2, t2);
      }
      function Cm({ comment: e2, followingNode: t2 }) {
        return !(!t2 || !Ym(e2)) && (tm(t2, e2), true);
      }
      function vm({ comment: e2, precedingNode: t2, enclosingNode: n2, followingNode: r2, text: o2 }) {
        if (!n2 || "IfStatement" !== n2.type || !r2)
          return false;
        return ")" === Zh(o2, e2, Dm) ? (nm(t2, e2), true) : t2 === n2.consequent && r2 === n2.alternate ? ("BlockStatement" === t2.type ? nm(t2, e2) : rm(n2, e2), true) : "BlockStatement" === r2.type ? (Em(r2, e2), true) : "IfStatement" === r2.type ? (bm(r2.consequent, e2), true) : n2.consequent === r2 && (tm(r2, e2), true);
      }
      function Am({ comment: e2, precedingNode: t2, enclosingNode: n2, followingNode: r2, text: o2 }) {
        if (!n2 || "WhileStatement" !== n2.type || !r2)
          return false;
        return ")" === Zh(o2, e2, Dm) ? (nm(t2, e2), true) : "BlockStatement" === r2.type ? (Em(r2, e2), true) : n2.body === r2 && (tm(r2, e2), true);
      }
      function Fm({ comment: e2, precedingNode: t2, enclosingNode: n2, followingNode: r2 }) {
        return !(!n2 || "TryStatement" !== n2.type && "CatchClause" !== n2.type || !r2) && ("CatchClause" === n2.type && t2 ? (nm(t2, e2), true) : "BlockStatement" === r2.type ? (Em(r2, e2), true) : "TryStatement" === r2.type ? (bm(r2.finalizer, e2), true) : "CatchClause" === r2.type && (bm(r2.body, e2), true));
      }
      function xm({ comment: e2, enclosingNode: t2, followingNode: n2 }) {
        return !(!gm(t2) || !n2 || "Identifier" !== n2.type) && (tm(t2, e2), true);
      }
      function Sm({ comment: e2, precedingNode: t2, enclosingNode: n2, followingNode: r2, text: o2 }) {
        const i2 = t2 && !em(o2, Dm(t2), ym(e2));
        return !(t2 && i2 || !n2 || "ConditionalExpression" !== n2.type && "TSConditionalType" !== n2.type || !r2) && (tm(r2, e2), true);
      }
      function wm({ comment: e2, precedingNode: t2, enclosingNode: n2 }) {
        return !(!n2 || "ObjectProperty" !== n2.type && "Property" !== n2.type || !n2.shorthand || n2.key !== t2 || "AssignmentPattern" !== n2.value.type) && (nm(n2.value.left, e2), true);
      }
      function Tm({ comment: e2, precedingNode: t2, enclosingNode: n2, followingNode: r2 }) {
        if (n2 && ("ClassDeclaration" === n2.type || "ClassExpression" === n2.type || "DeclareClass" === n2.type || "DeclareInterface" === n2.type || "InterfaceDeclaration" === n2.type || "TSInterfaceDeclaration" === n2.type)) {
          if (im(n2.decorators) && (!r2 || "Decorator" !== r2.type))
            return nm(Yh(n2.decorators), e2), true;
          if (n2.body && r2 === n2.body)
            return Em(n2.body, e2), true;
          if (r2) {
            for (const o2 of ["implements", "extends", "mixins"])
              if (n2[o2] && r2 === n2[o2][0])
                return !t2 || t2 !== n2.id && t2 !== n2.typeParameters && t2 !== n2.superClass ? rm(n2, e2, o2) : nm(t2, e2), true;
          }
        }
        return false;
      }
      function Bm({ comment: e2, precedingNode: t2, enclosingNode: n2, text: r2 }) {
        return (n2 && t2 && ("Property" === n2.type || "TSDeclareMethod" === n2.type || "TSAbstractMethodDefinition" === n2.type) && "Identifier" === t2.type && n2.key === t2 && ":" !== Zh(r2, t2, Dm) || !(!t2 || !n2 || "Decorator" !== t2.type || "ClassMethod" !== n2.type && "ClassProperty" !== n2.type && "PropertyDefinition" !== n2.type && "TSAbstractClassProperty" !== n2.type && "TSAbstractMethodDefinition" !== n2.type && "TSDeclareMethod" !== n2.type && "MethodDefinition" !== n2.type)) && (nm(t2, e2), true);
      }
      function km({ comment: e2, precedingNode: t2, enclosingNode: n2, text: r2 }) {
        return "(" === Zh(r2, e2, Dm) && (!(!t2 || !n2 || "FunctionDeclaration" !== n2.type && "FunctionExpression" !== n2.type && "ClassMethod" !== n2.type && "MethodDefinition" !== n2.type && "ObjectMethod" !== n2.type) && (nm(t2, e2), true));
      }
      function Nm({ comment: e2, enclosingNode: t2, text: n2 }) {
        if (!t2 || "ArrowFunctionExpression" !== t2.type)
          return false;
        const r2 = om(n2, e2, Dm);
        return false !== r2 && "=>" === n2.slice(r2, r2 + 2) && (rm(t2, e2), true);
      }
      function Pm({ comment: e2, enclosingNode: t2, text: n2 }) {
        return ")" === Zh(n2, e2, Dm) && (t2 && (Xm(t2) && 0 === sm(t2).length || dm(t2) && 0 === hm(t2).length) ? (rm(t2, e2), true) : !(!t2 || "MethodDefinition" !== t2.type && "TSAbstractMethodDefinition" !== t2.type || 0 !== sm(t2.value).length) && (rm(t2.value, e2), true));
      }
      function Om({ comment: e2, precedingNode: t2, enclosingNode: n2, followingNode: r2, text: o2 }) {
        if (t2 && "FunctionTypeParam" === t2.type && n2 && "FunctionTypeAnnotation" === n2.type && r2 && "FunctionTypeParam" !== r2.type)
          return nm(t2, e2), true;
        if (t2 && ("Identifier" === t2.type || "AssignmentPattern" === t2.type) && n2 && Xm(n2) && ")" === Zh(o2, e2, Dm))
          return nm(t2, e2), true;
        if (n2 && "FunctionDeclaration" === n2.type && r2 && "BlockStatement" === r2.type) {
          const t3 = (() => {
            const e3 = sm(n2);
            if (e3.length > 0)
              return Qh(o2, Dm(Yh(e3)));
            const t4 = Qh(o2, Dm(n2.id));
            return false !== t4 && Qh(o2, t4 + 1);
          })();
          if (ym(e2) > t3)
            return Em(r2, e2), true;
        }
        return false;
      }
      function Im({ comment: e2, enclosingNode: t2 }) {
        return !(!t2 || "ImportSpecifier" !== t2.type) && (tm(t2, e2), true);
      }
      function jm({ comment: e2, enclosingNode: t2 }) {
        return !(!t2 || "LabeledStatement" !== t2.type) && (tm(t2, e2), true);
      }
      function Lm({ comment: e2, enclosingNode: t2 }) {
        return !(!t2 || "ContinueStatement" !== t2.type && "BreakStatement" !== t2.type || t2.label) && (nm(t2, e2), true);
      }
      function _m({ comment: e2, precedingNode: t2, enclosingNode: n2 }) {
        return !!(mm(n2) && t2 && n2.callee === t2 && n2.arguments.length > 0) && (tm(n2.arguments[0], e2), true);
      }
      function Mm({ comment: e2, precedingNode: t2, enclosingNode: n2, followingNode: r2 }) {
        return !n2 || "UnionTypeAnnotation" !== n2.type && "TSUnionType" !== n2.type ? (r2 && ("UnionTypeAnnotation" === r2.type || "TSUnionType" === r2.type) && am(e2) && (r2.types[0].prettierIgnore = true, e2.unignore = true), false) : (am(e2) && (r2.prettierIgnore = true, e2.unignore = true), !!t2 && (nm(t2, e2), true));
      }
      function Rm({ comment: e2, enclosingNode: t2 }) {
        return !(!t2 || "Property" !== t2.type && "ObjectProperty" !== t2.type) && (tm(t2, e2), true);
      }
      function Vm({ comment: e2, enclosingNode: t2, followingNode: n2, ast: r2, isLastComment: o2 }) {
        return r2 && r2.body && 0 === r2.body.length ? (o2 ? rm(r2, e2) : tm(r2, e2), true) : t2 && "Program" === t2.type && 0 === t2.body.length && t2.directives && 0 === t2.directives.length ? (o2 ? rm(t2, e2) : tm(t2, e2), true) : !(!n2 || "Program" !== n2.type || 0 !== n2.body.length || !t2 || "ModuleExpression" !== t2.type) && (rm(n2, e2), true);
      }
      function $m({ comment: e2, enclosingNode: t2 }) {
        return !(!t2 || "ForInStatement" !== t2.type && "ForOfStatement" !== t2.type) && (tm(t2, e2), true);
      }
      function qm({ comment: e2, precedingNode: t2, enclosingNode: n2, text: r2 }) {
        return !!(t2 && "ImportSpecifier" === t2.type && n2 && "ImportDeclaration" === n2.type && Kh(r2, Dm(e2))) && (nm(t2, e2), true);
      }
      function Wm({ comment: e2, enclosingNode: t2 }) {
        return !(!t2 || "AssignmentPattern" !== t2.type) && (tm(t2, e2), true);
      }
      function Um({ comment: e2, enclosingNode: t2 }) {
        return !(!t2 || "TypeAlias" !== t2.type) && (tm(t2, e2), true);
      }
      function zm({ comment: e2, enclosingNode: t2, followingNode: n2 }) {
        return !(!t2 || "VariableDeclarator" !== t2.type && "AssignmentExpression" !== t2.type || !n2 || "ObjectExpression" !== n2.type && "ArrayExpression" !== n2.type && "TemplateLiteral" !== n2.type && "TaggedTemplateExpression" !== n2.type && !um(e2)) && (tm(n2, e2), true);
      }
      function Hm({ comment: e2, enclosingNode: t2, followingNode: n2, text: r2 }) {
        return !(n2 || !t2 || "TSMethodSignature" !== t2.type && "TSDeclareFunction" !== t2.type && "TSAbstractMethodDefinition" !== t2.type || ";" !== Zh(r2, e2, Dm)) && (nm(t2, e2), true);
      }
      function Gm({ comment: e2, enclosingNode: t2, followingNode: n2 }) {
        if (am(e2) && t2 && "TSMappedType" === t2.type && n2 && "TSTypeParameter" === n2.type && n2.constraint)
          return t2.prettierIgnore = true, e2.unignore = true, true;
      }
      function Jm({ comment: e2, precedingNode: t2, enclosingNode: n2, followingNode: r2 }) {
        return !(!n2 || "TSMappedType" !== n2.type) && (r2 && "TSTypeParameter" === r2.type && r2.name ? (tm(r2.name, e2), true) : !(!t2 || "TSTypeParameter" !== t2.type || !t2.constraint) && (nm(t2.constraint, e2), true));
      }
      function Xm(e2) {
        return "ArrowFunctionExpression" === e2.type || "FunctionExpression" === e2.type || "FunctionDeclaration" === e2.type || "ObjectMethod" === e2.type || "ClassMethod" === e2.type || "TSDeclareFunction" === e2.type || "TSCallSignatureDeclaration" === e2.type || "TSConstructSignatureDeclaration" === e2.type || "TSMethodSignature" === e2.type || "TSConstructorType" === e2.type || "TSFunctionType" === e2.type || "TSDeclareMethod" === e2.type;
      }
      function Ym(e2) {
        return um(e2) && "*" === e2.value[0] && /@type\b/.test(e2.value);
      }
      var Km = { handleOwnLineComment: function(e2) {
        return [Gm, Om, xm, vm, Am, Fm, Tm, Im, $m, Mm, Vm, qm, Wm, Bm, jm].some((t2) => t2(e2));
      }, handleEndOfLineComment: function(e2) {
        return [Cm, Om, Sm, Im, vm, Am, Fm, Tm, jm, _m, Rm, Vm, Um, zm].some((t2) => t2(e2));
      }, handleRemainingComment: function(e2) {
        return [Gm, vm, Am, wm, Pm, Bm, Vm, Nm, km, Jm, Lm, Hm].some((t2) => t2(e2));
      }, isTypeCastComment: Ym, getCommentChildNodes: function(e2, t2) {
        if (("typescript" === t2.parser || "flow" === t2.parser || "espree" === t2.parser || "meriyah" === t2.parser) && "MethodDefinition" === e2.type && e2.value && "FunctionExpression" === e2.value.type && 0 === sm(e2.value).length && !e2.value.returnType && !im(e2.value.typeParameters) && e2.value.body)
          return [...e2.decorators || [], e2.key, e2.value.body];
      }, willPrintOwnComments: function(e2) {
        const t2 = e2.getValue(), n2 = e2.getParentNode();
        return (t2 && (cm(t2) || lm(t2) || mm(n2) && (pm(t2.leadingComments) || pm(t2.trailingComments))) || n2 && ("JSXSpreadAttribute" === n2.type || "JSXSpreadChild" === n2.type || "UnionTypeAnnotation" === n2.type || "TSUnionType" === n2.type || ("ClassDeclaration" === n2.type || "ClassExpression" === n2.type) && n2.superClass === t2)) && (!fm(e2) || "UnionTypeAnnotation" === n2.type || "TSUnionType" === n2.type);
      } };
      const { getFunctionParameters: Qm, getLeftSidePathName: Zm, hasFlowShorthandAnnotationComment: eg, hasNakedLeftSide: tg, hasNode: ng, isBitwiseOperator: rg, startsWithNoLookaheadToken: og, shouldFlatten: ig, getPrecedence: ug, isCallExpression: sg, isMemberExpression: ag } = pd;
      function cg(e2, t2) {
        const n2 = e2.getParentNode();
        if (!n2)
          return false;
        const r2 = e2.getName(), o2 = e2.getNode();
        if (t2.__isInHtmlInterpolation && !t2.bracketSpacing && function(e3) {
          switch (e3.type) {
            case "ObjectExpression":
              return true;
            default:
              return false;
          }
        }(o2) && lg(e2))
          return true;
        if (function(e3) {
          return "BlockStatement" === e3.type || "BreakStatement" === e3.type || "ClassBody" === e3.type || "ClassDeclaration" === e3.type || "ClassMethod" === e3.type || "ClassProperty" === e3.type || "PropertyDefinition" === e3.type || "ClassPrivateProperty" === e3.type || "ContinueStatement" === e3.type || "DebuggerStatement" === e3.type || "DeclareClass" === e3.type || "DeclareExportAllDeclaration" === e3.type || "DeclareExportDeclaration" === e3.type || "DeclareFunction" === e3.type || "DeclareInterface" === e3.type || "DeclareModule" === e3.type || "DeclareModuleExports" === e3.type || "DeclareVariable" === e3.type || "DoWhileStatement" === e3.type || "EnumDeclaration" === e3.type || "ExportAllDeclaration" === e3.type || "ExportDefaultDeclaration" === e3.type || "ExportNamedDeclaration" === e3.type || "ExpressionStatement" === e3.type || "ForInStatement" === e3.type || "ForOfStatement" === e3.type || "ForStatement" === e3.type || "FunctionDeclaration" === e3.type || "IfStatement" === e3.type || "ImportDeclaration" === e3.type || "InterfaceDeclaration" === e3.type || "LabeledStatement" === e3.type || "MethodDefinition" === e3.type || "ReturnStatement" === e3.type || "SwitchStatement" === e3.type || "ThrowStatement" === e3.type || "TryStatement" === e3.type || "TSDeclareFunction" === e3.type || "TSEnumDeclaration" === e3.type || "TSImportEqualsDeclaration" === e3.type || "TSInterfaceDeclaration" === e3.type || "TSModuleDeclaration" === e3.type || "TSNamespaceExportDeclaration" === e3.type || "TypeAlias" === e3.type || "VariableDeclaration" === e3.type || "WhileStatement" === e3.type || "WithStatement" === e3.type;
        }(o2))
          return false;
        if ("flow" !== t2.parser && eg(e2.getValue()))
          return true;
        if ("Identifier" === o2.type)
          return !!(o2.extra && o2.extra.parenthesized && /^PRETTIER_HTML_PLACEHOLDER_\d+_\d+_IN_JS$/.test(o2.name)) || "left" === r2 && "async" === o2.name && "ForOfStatement" === n2.type && !n2.await;
        switch (n2.type) {
          case "ParenthesizedExpression":
            return false;
          case "ClassDeclaration":
          case "ClassExpression":
            if ("superClass" === r2 && ("ArrowFunctionExpression" === o2.type || "AssignmentExpression" === o2.type || "AwaitExpression" === o2.type || "BinaryExpression" === o2.type || "ConditionalExpression" === o2.type || "LogicalExpression" === o2.type || "NewExpression" === o2.type || "ObjectExpression" === o2.type || "ParenthesizedExpression" === o2.type || "SequenceExpression" === o2.type || "TaggedTemplateExpression" === o2.type || "UnaryExpression" === o2.type || "UpdateExpression" === o2.type || "YieldExpression" === o2.type || "TSNonNullExpression" === o2.type))
              return true;
            break;
          case "ExportDefaultDeclaration":
            return pg(e2, t2) || "SequenceExpression" === o2.type;
          case "Decorator":
            if ("expression" === r2) {
              let e3 = false, t3 = false, n3 = o2;
              for (; n3; )
                switch (n3.type) {
                  case "MemberExpression":
                    t3 = true, n3 = n3.object;
                    break;
                  case "CallExpression":
                    if (t3 || e3)
                      return true;
                    e3 = true, n3 = n3.callee;
                    break;
                  case "Identifier":
                    return false;
                  default:
                    return true;
                }
              return true;
            }
            break;
          case "ExpressionStatement":
            if (og(o2, true))
              return true;
            break;
          case "ArrowFunctionExpression":
            if ("body" === r2 && "SequenceExpression" !== o2.type && og(o2, false))
              return true;
        }
        switch (o2.type) {
          case "UpdateExpression":
            if ("UnaryExpression" === n2.type)
              return o2.prefix && ("++" === o2.operator && "+" === n2.operator || "--" === o2.operator && "-" === n2.operator);
          case "UnaryExpression":
            switch (n2.type) {
              case "UnaryExpression":
                return o2.operator === n2.operator && ("+" === o2.operator || "-" === o2.operator);
              case "BindExpression":
                return true;
              case "MemberExpression":
              case "OptionalMemberExpression":
                return "object" === r2;
              case "TaggedTemplateExpression":
                return true;
              case "NewExpression":
              case "CallExpression":
              case "OptionalCallExpression":
                return "callee" === r2;
              case "BinaryExpression":
                return "left" === r2 && "**" === n2.operator;
              case "TSNonNullExpression":
                return true;
              default:
                return false;
            }
          case "BinaryExpression":
            if ("UpdateExpression" === n2.type || "PipelineTopicExpression" === n2.type && "|>" === o2.operator)
              return true;
            if ("in" === o2.operator && function(e3) {
              let t3 = 0, n3 = e3.getValue();
              for (; n3; ) {
                const r3 = e3.getParentNode(t3++);
                if (r3 && "ForStatement" === r3.type && r3.init === n3)
                  return true;
                n3 = r3;
              }
              return false;
            }(e2))
              return true;
            if ("|>" === o2.operator && o2.extra && o2.extra.parenthesized) {
              const t3 = e2.getParentNode(1);
              if ("BinaryExpression" === t3.type && "|>" === t3.operator)
                return true;
            }
          case "TSTypeAssertion":
          case "TSAsExpression":
          case "LogicalExpression":
            switch (n2.type) {
              case "TSAsExpression":
                return "TSAsExpression" !== o2.type;
              case "ConditionalExpression":
                return "TSAsExpression" === o2.type;
              case "CallExpression":
              case "NewExpression":
              case "OptionalCallExpression":
                return "callee" === r2;
              case "ClassExpression":
              case "ClassDeclaration":
                return "superClass" === r2;
              case "TSTypeAssertion":
              case "TaggedTemplateExpression":
              case "UnaryExpression":
              case "JSXSpreadAttribute":
              case "SpreadElement":
              case "SpreadProperty":
              case "BindExpression":
              case "AwaitExpression":
              case "TSNonNullExpression":
              case "UpdateExpression":
                return true;
              case "MemberExpression":
              case "OptionalMemberExpression":
                return "object" === r2;
              case "AssignmentExpression":
              case "AssignmentPattern":
                return "left" === r2 && ("TSTypeAssertion" === o2.type || "TSAsExpression" === o2.type);
              case "LogicalExpression":
                if ("LogicalExpression" === o2.type)
                  return n2.operator !== o2.operator;
              case "BinaryExpression": {
                const { operator: e3, type: t3 } = o2;
                if (!e3 && "TSTypeAssertion" !== t3)
                  return true;
                const i2 = ug(e3), u2 = n2.operator, s2 = ug(u2);
                return s2 > i2 || ("right" === r2 && s2 === i2 || (s2 === i2 && !ig(u2, e3) || (s2 < i2 && "%" === e3 ? "+" === u2 || "-" === u2 : !!rg(u2))));
              }
              default:
                return false;
            }
          case "SequenceExpression":
            switch (n2.type) {
              case "ReturnStatement":
              case "ForStatement":
                return false;
              case "ExpressionStatement":
                return "expression" !== r2;
              case "ArrowFunctionExpression":
                return "body" !== r2;
              default:
                return true;
            }
          case "YieldExpression":
            if ("UnaryExpression" === n2.type || "AwaitExpression" === n2.type || "TSAsExpression" === n2.type || "TSNonNullExpression" === n2.type)
              return true;
            if ("expression" === r2 && o2.argument && "PipelinePrimaryTopicReference" === o2.argument.type && "PipelineTopicExpression" === n2.type)
              return true;
          case "AwaitExpression":
            switch (n2.type) {
              case "TaggedTemplateExpression":
              case "UnaryExpression":
              case "LogicalExpression":
              case "SpreadElement":
              case "SpreadProperty":
              case "TSAsExpression":
              case "TSNonNullExpression":
              case "BindExpression":
                return true;
              case "MemberExpression":
              case "OptionalMemberExpression":
                return "object" === r2;
              case "NewExpression":
              case "CallExpression":
              case "OptionalCallExpression":
                return "callee" === r2;
              case "ConditionalExpression":
                return "test" === r2;
              case "BinaryExpression":
                return !(!o2.argument && "|>" === n2.operator);
              default:
                return false;
            }
          case "TSJSDocFunctionType":
          case "TSConditionalType":
            if ("extendsType" === r2 && "TSConditionalType" === n2.type)
              return true;
          case "TSFunctionType":
          case "TSConstructorType":
            if ("checkType" === r2 && "TSConditionalType" === n2.type)
              return true;
          case "TSUnionType":
          case "TSIntersectionType":
            if (("TSUnionType" === n2.type || "TSIntersectionType" === n2.type) && n2.types.length > 1 && (!o2.types || o2.types.length > 1))
              return true;
          case "TSInferType":
            if ("TSInferType" === o2.type && "TSRestType" === n2.type)
              return false;
          case "TSTypeOperator":
            return "TSArrayType" === n2.type || "TSOptionalType" === n2.type || "TSRestType" === n2.type || "objectType" === r2 && "TSIndexedAccessType" === n2.type || "TSTypeOperator" === n2.type || "TSTypeAnnotation" === n2.type && /^TSJSDoc/.test(e2.getParentNode(1).type);
          case "ArrayTypeAnnotation":
            return "NullableTypeAnnotation" === n2.type;
          case "IntersectionTypeAnnotation":
          case "UnionTypeAnnotation":
            return "ArrayTypeAnnotation" === n2.type || "NullableTypeAnnotation" === n2.type || "IntersectionTypeAnnotation" === n2.type || "UnionTypeAnnotation" === n2.type;
          case "NullableTypeAnnotation":
            return "ArrayTypeAnnotation" === n2.type;
          case "FunctionTypeAnnotation": {
            const t3 = "NullableTypeAnnotation" === n2.type ? e2.getParentNode(1) : n2;
            return "UnionTypeAnnotation" === t3.type || "IntersectionTypeAnnotation" === t3.type || "ArrayTypeAnnotation" === t3.type || "NullableTypeAnnotation" === t3.type || "FunctionTypeParam" === n2.type && null === n2.name && Qm(o2).some((e3) => e3.typeAnnotation && "NullableTypeAnnotation" === e3.typeAnnotation.type);
          }
          case "OptionalIndexedAccessType":
            return "objectType" === r2 && "IndexedAccessType" === n2.type;
          case "StringLiteral":
          case "NumericLiteral":
          case "Literal":
            if ("string" == typeof o2.value && "ExpressionStatement" === n2.type && !n2.directive) {
              const t3 = e2.getParentNode(1);
              return "Program" === t3.type || "BlockStatement" === t3.type;
            }
            return "object" === r2 && "MemberExpression" === n2.type && "number" == typeof o2.value;
          case "AssignmentExpression": {
            const t3 = e2.getParentNode(1);
            return "body" === r2 && "ArrowFunctionExpression" === n2.type || ("key" !== r2 || "ClassProperty" !== n2.type && "PropertyDefinition" !== n2.type || !n2.computed) && (("init" !== r2 && "update" !== r2 || "ForStatement" !== n2.type) && ("ExpressionStatement" === n2.type ? "ObjectPattern" === o2.left.type : ("key" !== r2 || "TSPropertySignature" !== n2.type) && ("AssignmentExpression" !== n2.type && (("SequenceExpression" !== n2.type || !t3 || "ForStatement" !== t3.type || t3.init !== n2 && t3.update !== n2) && (("value" !== r2 || "Property" !== n2.type || !t3 || "ObjectPattern" !== t3.type || !t3.properties.includes(n2)) && "NGChainedExpression" !== n2.type)))));
          }
          case "ConditionalExpression":
            switch (n2.type) {
              case "TaggedTemplateExpression":
              case "UnaryExpression":
              case "SpreadElement":
              case "SpreadProperty":
              case "BinaryExpression":
              case "LogicalExpression":
              case "NGPipeExpression":
              case "ExportDefaultDeclaration":
              case "AwaitExpression":
              case "JSXSpreadAttribute":
              case "TSTypeAssertion":
              case "TypeCastExpression":
              case "TSAsExpression":
              case "TSNonNullExpression":
                return true;
              case "NewExpression":
              case "CallExpression":
              case "OptionalCallExpression":
                return "callee" === r2;
              case "ConditionalExpression":
                return "test" === r2;
              case "MemberExpression":
              case "OptionalMemberExpression":
                return "object" === r2;
              default:
                return false;
            }
          case "FunctionExpression":
            switch (n2.type) {
              case "NewExpression":
              case "CallExpression":
              case "OptionalCallExpression":
                return "callee" === r2;
              case "TaggedTemplateExpression":
                return true;
              default:
                return false;
            }
          case "ArrowFunctionExpression":
            switch (n2.type) {
              case "PipelineTopicExpression":
                return Boolean(o2.extra && o2.extra.parenthesized);
              case "BinaryExpression":
                return "|>" !== n2.operator || o2.extra && o2.extra.parenthesized;
              case "NewExpression":
              case "CallExpression":
              case "OptionalCallExpression":
                return "callee" === r2;
              case "MemberExpression":
              case "OptionalMemberExpression":
                return "object" === r2;
              case "TSAsExpression":
              case "TSNonNullExpression":
              case "BindExpression":
              case "TaggedTemplateExpression":
              case "UnaryExpression":
              case "LogicalExpression":
              case "AwaitExpression":
              case "TSTypeAssertion":
                return true;
              case "ConditionalExpression":
                return "test" === r2;
              default:
                return false;
            }
          case "ClassExpression":
            switch (n2.type) {
              case "NewExpression":
                return "callee" === r2;
              default:
                return false;
            }
          case "OptionalMemberExpression":
          case "OptionalCallExpression": {
            const t3 = e2.getParentNode(1);
            if ("object" === r2 && "MemberExpression" === n2.type || "callee" === r2 && ("CallExpression" === n2.type || "NewExpression" === n2.type) || "TSNonNullExpression" === n2.type && "MemberExpression" === t3.type && t3.object === n2)
              return true;
          }
          case "CallExpression":
          case "MemberExpression":
          case "TaggedTemplateExpression":
          case "TSNonNullExpression":
            if ("callee" === r2 && ("BindExpression" === n2.type || "NewExpression" === n2.type)) {
              let e3 = o2;
              for (; e3; )
                switch (e3.type) {
                  case "CallExpression":
                  case "OptionalCallExpression":
                    return true;
                  case "MemberExpression":
                  case "OptionalMemberExpression":
                  case "BindExpression":
                    e3 = e3.object;
                    break;
                  case "TaggedTemplateExpression":
                    e3 = e3.tag;
                    break;
                  case "TSNonNullExpression":
                    e3 = e3.expression;
                    break;
                  default:
                    return false;
                }
            }
            return false;
          case "BindExpression":
            return "callee" === r2 && ("BindExpression" === n2.type || "NewExpression" === n2.type) || "object" === r2 && ag(n2);
          case "NGPipeExpression":
            return !("NGRoot" === n2.type || "NGMicrosyntaxExpression" === n2.type || "ObjectProperty" === n2.type && (!o2.extra || !o2.extra.parenthesized) || "ArrayExpression" === n2.type || sg(n2) && n2.arguments[r2] === o2 || "right" === r2 && "NGPipeExpression" === n2.type || "property" === r2 && "MemberExpression" === n2.type || "AssignmentExpression" === n2.type);
          case "JSXFragment":
          case "JSXElement":
            return "callee" === r2 || "left" === r2 && "BinaryExpression" === n2.type && "<" === n2.operator || "ArrayExpression" !== n2.type && "ArrowFunctionExpression" !== n2.type && "AssignmentExpression" !== n2.type && "AssignmentPattern" !== n2.type && "BinaryExpression" !== n2.type && "NewExpression" !== n2.type && "ConditionalExpression" !== n2.type && "ExpressionStatement" !== n2.type && "JsExpressionRoot" !== n2.type && "JSXAttribute" !== n2.type && "JSXElement" !== n2.type && "JSXExpressionContainer" !== n2.type && "JSXFragment" !== n2.type && "LogicalExpression" !== n2.type && "ObjectProperty" !== n2.type && !sg(n2) && "Property" !== n2.type && "ReturnStatement" !== n2.type && "ThrowStatement" !== n2.type && "TypeCastExpression" !== n2.type && "VariableDeclarator" !== n2.type && "YieldExpression" !== n2.type;
          case "TypeAnnotation":
            return "returnType" === r2 && "ArrowFunctionExpression" === n2.type && function(e3) {
              return ng(e3, (e4) => "ObjectTypeAnnotation" === e4.type && ng(e4, (e5) => "FunctionTypeAnnotation" === e5.type || void 0) || void 0);
            }(o2);
        }
        return false;
      }
      function lg(e2) {
        const t2 = e2.getValue(), n2 = e2.getParentNode(), r2 = e2.getName();
        switch (n2.type) {
          case "NGPipeExpression":
            if ("number" == typeof r2 && n2.arguments[r2] === t2 && n2.arguments.length - 1 === r2)
              return e2.callParent(lg);
            break;
          case "ObjectProperty":
            if ("value" === r2) {
              const t3 = e2.getParentNode(1);
              return ke(t3.properties) === n2;
            }
            break;
          case "BinaryExpression":
          case "LogicalExpression":
            if ("right" === r2)
              return e2.callParent(lg);
            break;
          case "ConditionalExpression":
            if ("alternate" === r2)
              return e2.callParent(lg);
            break;
          case "UnaryExpression":
            if (n2.prefix)
              return e2.callParent(lg);
        }
        return false;
      }
      function pg(e2, t2) {
        const n2 = e2.getValue(), r2 = e2.getParentNode();
        return "FunctionExpression" === n2.type || "ClassExpression" === n2.type ? "ExportDefaultDeclaration" === r2.type || !cg(e2, t2) : !(!tg(n2) || "ExportDefaultDeclaration" !== r2.type && cg(e2, t2)) && e2.call((e3) => pg(e3, t2), ...Zm(e2, n2));
      }
      var fg = cg;
      var dg = function(e2, t2) {
        switch (t2.parser) {
          case "json":
          case "json5":
          case "json-stringify":
          case "__js_expression":
          case "__vue_expression":
            return Object.assign({}, e2, { type: t2.parser.startsWith("__") ? "JsExpressionRoot" : "JsonRoot", node: e2, comments: [], rootMarker: t2.rootMarker });
          default:
            return e2;
        }
      };
      const { builders: { join: hg, line: mg, group: gg, softline: yg, indent: Dg } } = Rn;
      var Eg = { isVueEventBindingExpression: function e2(t2) {
        switch (t2.type) {
          case "MemberExpression":
            switch (t2.property.type) {
              case "Identifier":
              case "NumericLiteral":
              case "StringLiteral":
                return e2(t2.object);
            }
            return false;
          case "Identifier":
            return true;
          default:
            return false;
        }
      }, printHtmlBinding: function(e2, t2, n2) {
        const r2 = e2.getValue();
        if (t2.__onHtmlBindingRoot && null === e2.getName() && t2.__onHtmlBindingRoot(r2, t2), "File" === r2.type)
          return t2.__isVueForBindingLeft ? e2.call((e3) => {
            const t3 = hg([",", mg], e3.map(n2, "params")), { params: r3 } = e3.getValue();
            return 1 === r3.length ? t3 : ["(", Dg([yg, gg(t3)]), yg, ")"];
          }, "program", "body", 0) : t2.__isVueBindings ? e2.call((e3) => hg([",", mg], e3.map(n2, "params")), "program", "body", 0) : void 0;
      } };
      const { printComments: bg } = up, { getLast: Cg } = rn, { builders: { join: vg, line: Ag, softline: Fg, group: xg, indent: Sg, align: wg, ifBreak: Tg, indentIfBreak: Bg }, utils: { cleanDoc: kg, getDocParts: Ng, isConcat: Pg } } = Rn, { hasLeadingOwnLineComment: Og, isBinaryish: Ig, isJsxNode: jg, shouldFlatten: Lg, hasComment: _g, CommentCheckFlags: Mg, isCallExpression: Rg, isMemberExpression: Vg } = pd;
      let $g = 0;
      function qg(e2, t2, n2, r2, o2) {
        let i2 = [];
        const u2 = e2.getValue();
        if (Ig(u2)) {
          Lg(u2.operator, u2.left.operator) ? i2 = [...i2, ...e2.call((e3) => qg(e3, t2, n2, true, o2), "left")] : i2.push(xg(t2("left")));
          const s2 = Wg(u2), a2 = ("|>" === u2.operator || "NGPipeExpression" === u2.type || "|" === u2.operator && "__vue_expression" === n2.parser) && !Og(n2.originalText, u2.right), c2 = "NGPipeExpression" === u2.type ? "|" : u2.operator, l2 = "NGPipeExpression" === u2.type && u2.arguments.length > 0 ? xg(Sg([Fg, ": ", vg([Fg, ":", Tg(" ")], e2.map(t2, "arguments").map((e3) => wg(2, xg(e3))))])) : "", p2 = s2 ? [c2, " ", t2("right"), l2] : [a2 ? Ag : "", c2, a2 ? " " : Ag, t2("right"), l2], f2 = e2.getParentNode(), d2 = _g(u2.left, Mg.Trailing | Mg.Line), h2 = d2 || !(o2 && "LogicalExpression" === u2.type) && f2.type !== u2.type && u2.left.type !== u2.type && u2.right.type !== u2.type;
          if (i2.push(a2 ? "" : " ", h2 ? xg(p2, { shouldBreak: d2 }) : p2), r2 && _g(u2)) {
            const t3 = kg(bg(e2, i2, n2));
            i2 = Pg(t3) || "fill" === t3.type ? Ng(t3) : [t3];
          }
        } else
          i2.push(xg(t2()));
        return i2;
      }
      function Wg(e2) {
        return "LogicalExpression" === e2.type && ("ObjectExpression" === e2.right.type && e2.right.properties.length > 0 || ("ArrayExpression" === e2.right.type && e2.right.elements.length > 0 || !!jg(e2.right)));
      }
      var Ug = { printBinaryishExpression: function(e2, t2, n2) {
        const r2 = e2.getValue(), o2 = e2.getParentNode(), i2 = e2.getParentNode(1), u2 = r2 !== o2.body && ("IfStatement" === o2.type || "WhileStatement" === o2.type || "SwitchStatement" === o2.type || "DoWhileStatement" === o2.type), s2 = qg(e2, n2, t2, false, u2);
        if (u2)
          return s2;
        if (Rg(o2) && o2.callee === r2 || "UnaryExpression" === o2.type || Vg(o2) && !o2.computed)
          return xg([Sg([Fg, ...s2]), Fg]);
        const a2 = "ReturnStatement" === o2.type || "ThrowStatement" === o2.type || "JSXExpressionContainer" === o2.type && "JSXAttribute" === i2.type || "|" !== r2.operator && "JsExpressionRoot" === o2.type || "NGPipeExpression" !== r2.type && ("NGRoot" === o2.type && "__ng_binding" === t2.parser || "NGMicrosyntaxExpression" === o2.type && "NGMicrosyntax" === i2.type && 1 === i2.body.length) || r2 === o2.body && "ArrowFunctionExpression" === o2.type || r2 !== o2.body && "ForStatement" === o2.type || "ConditionalExpression" === o2.type && "ReturnStatement" !== i2.type && "ThrowStatement" !== i2.type && !Rg(i2) || "TemplateLiteral" === o2.type, c2 = "AssignmentExpression" === o2.type || "VariableDeclarator" === o2.type || "ClassProperty" === o2.type || "PropertyDefinition" === o2.type || "TSAbstractClassProperty" === o2.type || "ClassPrivateProperty" === o2.type || "ObjectProperty" === o2.type || "Property" === o2.type, l2 = Ig(r2.left) && Lg(r2.operator, r2.left.operator);
        if (a2 || Wg(r2) && !l2 || !Wg(r2) && c2)
          return xg(s2);
        if (0 === s2.length)
          return "";
        const p2 = jg(r2.right), f2 = s2.findIndex((e3) => "string" != typeof e3 && !Array.isArray(e3) && "group" === e3.type), d2 = s2.slice(0, -1 === f2 ? 1 : f2 + 1), h2 = s2.slice(d2.length, p2 ? -1 : void 0), m2 = Symbol("logicalChain-" + ++$g), g2 = xg([...d2, Sg(h2)], { id: m2 });
        if (!p2)
          return g2;
        const y2 = Cg(s2);
        return xg([g2, Bg(y2, { groupId: m2 })]);
      }, shouldInlineLogicalExpression: Wg };
      const { builders: { join: zg, line: Hg, group: Gg } } = Rn, { hasNode: Jg, hasComment: Xg, getComments: Yg } = pd, { printBinaryishExpression: Kg } = Ug;
      function Qg(e2, t2, n2) {
        return "NGMicrosyntaxKeyedExpression" === e2.type && "of" === e2.key.name && 1 === t2 && "NGMicrosyntaxLet" === n2.body[0].type && null === n2.body[0].value;
      }
      var Zg = { printAngular: function(e2, t2, n2) {
        const r2 = e2.getValue();
        switch (r2.type) {
          case "NGRoot":
            return [n2("node"), Xg(r2.node) ? " //" + Yg(r2.node)[0].value.trimEnd() : ""];
          case "NGPipeExpression":
            return Kg(e2, t2, n2);
          case "NGChainedExpression":
            return Gg(zg([";", Hg], e2.map((e3) => function(e4) {
              return Jg(e4.getValue(), (e5) => {
                switch (e5.type) {
                  case void 0:
                    return false;
                  case "CallExpression":
                  case "OptionalCallExpression":
                  case "AssignmentExpression":
                    return true;
                }
              });
            }(e3) ? n2() : ["(", n2(), ")"], "expressions")));
          case "NGEmptyExpression":
            return "";
          case "NGQuotedExpression":
            return [r2.prefix, ": ", r2.value.trim()];
          case "NGMicrosyntax":
            return e2.map((e3, t3) => [0 === t3 ? "" : Qg(e3.getValue(), t3, r2) ? " " : [";", Hg], n2()], "body");
          case "NGMicrosyntaxKey":
            return /^[$_a-z][\w$]*(-[$_a-z][\w$])*$/i.test(r2.name) ? r2.name : JSON.stringify(r2.name);
          case "NGMicrosyntaxExpression":
            return [n2("expression"), null === r2.alias ? "" : [" as ", n2("alias")]];
          case "NGMicrosyntaxKeyedExpression": {
            const t3 = e2.getName(), o2 = e2.getParentNode(), i2 = Qg(r2, t3, o2) || (1 === t3 && ("then" === r2.key.name || "else" === r2.key.name) || 2 === t3 && "else" === r2.key.name && "NGMicrosyntaxKeyedExpression" === o2.body[t3 - 1].type && "then" === o2.body[t3 - 1].key.name) && "NGMicrosyntaxExpression" === o2.body[0].type;
            return [n2("key"), i2 ? " " : ": ", n2("expression")];
          }
          case "NGMicrosyntaxLet":
            return ["let ", n2("key"), null === r2.value ? "" : [" = ", n2("value")]];
          case "NGMicrosyntaxAs":
            return [n2("key"), " as ", n2("alias")];
        }
      } };
      const { printComments: ey, printDanglingComments: ty } = up, { builders: { line: ny, hardline: ry, softline: oy, group: iy, indent: uy, conditionalGroup: sy, fill: ay, ifBreak: cy, lineSuffixBoundary: ly, join: py }, utils: { willBreak: fy } } = Rn, { getLast: dy, getPreferredQuote: hy } = rn, { isJsxNode: my, rawText: gy, isLiteral: yy, isCallExpression: Dy, isStringLiteral: Ey, isBinaryish: by, hasComment: Cy, CommentCheckFlags: vy, hasNodeIgnoreComment: Ay } = pd, { willPrintOwnComments: Fy } = Km, xy = (e2) => "" === e2 || e2 === ny || e2 === ry || e2 === oy;
      function Sy(e2, t2, n2) {
        const r2 = e2.getValue();
        if ("JSXElement" === r2.type && function(e3) {
          if (0 === e3.children.length)
            return true;
          if (e3.children.length > 1)
            return false;
          const t3 = e3.children[0];
          return yy(t3) && !Iy(t3);
        }(r2))
          return [n2("openingElement"), n2("closingElement")];
        const o2 = "JSXElement" === r2.type ? n2("openingElement") : n2("openingFragment"), i2 = "JSXElement" === r2.type ? n2("closingElement") : n2("closingFragment");
        if (1 === r2.children.length && "JSXExpressionContainer" === r2.children[0].type && ("TemplateLiteral" === r2.children[0].expression.type || "TaggedTemplateExpression" === r2.children[0].expression.type))
          return [o2, ...e2.map(n2, "children"), i2];
        r2.children = r2.children.map((e3) => function(e4) {
          return "JSXExpressionContainer" === e4.type && yy(e4.expression) && " " === e4.expression.value && !Cy(e4.expression);
        }(e3) ? { type: "JSXText", value: " ", raw: " " } : e3);
        const u2 = r2.children.filter(my).length > 0, s2 = r2.children.filter((e3) => "JSXExpressionContainer" === e3.type).length > 1, a2 = "JSXElement" === r2.type && r2.openingElement.attributes.length > 1;
        let c2 = fy(o2) || u2 || a2 || s2;
        const l2 = "mdx" === e2.getParentNode().rootMarker, p2 = t2.singleQuote ? "{' '}" : '{" "}', f2 = l2 ? " " : cy([p2, oy], " "), d2 = function(e3, t3, n3, r3, o3) {
          const i3 = [];
          return e3.each((e4, t4, u3) => {
            const s3 = e4.getValue();
            if (yy(s3)) {
              const e5 = gy(s3);
              if (Iy(s3)) {
                const n4 = e5.split(Ny);
                if ("" === n4[0]) {
                  if (i3.push(""), n4.shift(), /\n/.test(n4[0])) {
                    const e6 = u3[t4 + 1];
                    i3.push(Ty(o3, n4[1], s3, e6));
                  } else
                    i3.push(r3);
                  n4.shift();
                }
                let a3;
                if ("" === dy(n4) && (n4.pop(), a3 = n4.pop()), 0 === n4.length)
                  return;
                for (const [e6, t5] of n4.entries())
                  e6 % 2 == 1 ? i3.push(ny) : i3.push(t5);
                if (void 0 !== a3)
                  if (/\n/.test(a3)) {
                    const e6 = u3[t4 + 1];
                    i3.push(Ty(o3, dy(i3), s3, e6));
                  } else
                    i3.push(r3);
                else {
                  const e6 = u3[t4 + 1];
                  i3.push(wy(o3, dy(i3), s3, e6));
                }
              } else
                /\n/.test(e5) ? e5.match(/\n/g).length > 1 && i3.push("", ry) : i3.push("", r3);
            } else {
              const e5 = n3();
              i3.push(e5);
              const r4 = u3[t4 + 1];
              if (r4 && Iy(r4)) {
                const e6 = Oy(gy(r4)).split(Ny)[0];
                i3.push(wy(o3, e6, s3, r4));
              } else
                i3.push(ry);
            }
          }, "children"), i3;
        }(e2, 0, n2, f2, r2.openingElement && r2.openingElement.name && "fbt" === r2.openingElement.name.name), h2 = r2.children.some((e3) => Iy(e3));
        for (let e3 = d2.length - 2; e3 >= 0; e3--) {
          const t3 = "" === d2[e3] && "" === d2[e3 + 1], n3 = d2[e3] === ry && "" === d2[e3 + 1] && d2[e3 + 2] === ry, r3 = (d2[e3] === oy || d2[e3] === ry) && "" === d2[e3 + 1] && d2[e3 + 2] === f2, o3 = d2[e3] === f2 && "" === d2[e3 + 1] && (d2[e3 + 2] === oy || d2[e3 + 2] === ry), i3 = d2[e3] === f2 && "" === d2[e3 + 1] && d2[e3 + 2] === f2, u3 = d2[e3] === oy && "" === d2[e3 + 1] && d2[e3 + 2] === ry || d2[e3] === ry && "" === d2[e3 + 1] && d2[e3 + 2] === oy;
          n3 && h2 || t3 || r3 || i3 || u3 ? d2.splice(e3, 2) : o3 && d2.splice(e3 + 1, 2);
        }
        for (; d2.length > 0 && xy(dy(d2)); )
          d2.pop();
        for (; d2.length > 1 && xy(d2[0]) && xy(d2[1]); )
          d2.shift(), d2.shift();
        const m2 = [];
        for (const [e3, t3] of d2.entries()) {
          if (t3 === f2) {
            if (1 === e3 && "" === d2[e3 - 1]) {
              if (2 === d2.length) {
                m2.push(p2);
                continue;
              }
              m2.push([p2, ry]);
              continue;
            }
            if (e3 === d2.length - 1) {
              m2.push(p2);
              continue;
            }
            if ("" === d2[e3 - 1] && d2[e3 - 2] === ry) {
              m2.push(p2);
              continue;
            }
          }
          m2.push(t3), fy(t3) && (c2 = true);
        }
        const g2 = h2 ? ay(m2) : iy(m2, { shouldBreak: true });
        if (l2)
          return g2;
        const y2 = iy([o2, uy([ry, g2]), ry, i2]);
        return c2 ? y2 : sy([iy([o2, ...d2, i2]), y2]);
      }
      function wy(e2, t2, n2, r2) {
        return e2 ? "" : "JSXElement" === n2.type && !n2.closingElement || r2 && "JSXElement" === r2.type && !r2.closingElement ? 1 === t2.length ? oy : ry : oy;
      }
      function Ty(e2, t2, n2, r2) {
        return e2 ? ry : 1 === t2.length ? "JSXElement" === n2.type && !n2.closingElement || r2 && "JSXElement" === r2.type && !r2.closingElement ? ry : oy : ry;
      }
      function By(e2, t2, n2) {
        return function(e3, t3, n3) {
          const r2 = e3.getParentNode();
          if (!r2)
            return t3;
          if ({ ArrayExpression: true, JSXAttribute: true, JSXElement: true, JSXExpressionContainer: true, JSXFragment: true, ExpressionStatement: true, CallExpression: true, OptionalCallExpression: true, ConditionalExpression: true, JsExpressionRoot: true }[r2.type])
            return t3;
          const o2 = e3.match(void 0, (e4) => "ArrowFunctionExpression" === e4.type, Dy, (e4) => "JSXExpressionContainer" === e4.type), i2 = fg(e3, n3);
          return iy([i2 ? "" : cy("("), uy([oy, t3]), oy, i2 ? "" : cy(")")], { shouldBreak: o2 });
        }(e2, ey(e2, Sy(e2, t2, n2), t2), t2);
      }
      function ky(e2, t2, n2) {
        const r2 = e2.getValue();
        return ["{", e2.call((e3) => {
          const r3 = ["...", n2()], o2 = e3.getValue();
          return Cy(o2) && Fy(e3) ? [uy([oy, ey(e3, r3, t2)]), oy] : r3;
        }, "JSXSpreadAttribute" === r2.type ? "argument" : "expression"), "}"];
      }
      const Ny = new RegExp("([ \n\r	]+)"), Py = new RegExp("[^ \n\r	]"), Oy = (e2) => e2.replace(new RegExp("(?:^" + Ny.source + "|" + Ny.source + "$)"), "");
      function Iy(e2) {
        return yy(e2) && (Py.test(gy(e2)) || !/\n/.test(gy(e2)));
      }
      var jy = { hasJsxIgnoreComment: function(e2) {
        const t2 = e2.getValue(), n2 = e2.getParentNode();
        if (!(n2 && t2 && my(t2) && my(n2)))
          return false;
        let r2 = null;
        for (let e3 = n2.children.indexOf(t2); e3 > 0; e3--) {
          const t3 = n2.children[e3 - 1];
          if ("JSXText" !== t3.type || Iy(t3)) {
            r2 = t3;
            break;
          }
        }
        return r2 && "JSXExpressionContainer" === r2.type && "JSXEmptyExpression" === r2.expression.type && Ay(r2.expression);
      }, printJsx: function(e2, t2, n2) {
        const r2 = e2.getValue();
        switch (r2.type) {
          case "JSXAttribute":
            return function(e3, t3, n3) {
              const r3 = e3.getValue(), o2 = [];
              if (o2.push(n3("name")), r3.value) {
                let e4;
                if (Ey(r3.value)) {
                  let n4 = gy(r3.value).replace(/&apos;/g, "'").replace(/&quot;/g, '"');
                  const o3 = hy(n4, t3.jsxSingleQuote ? "'" : '"'), i2 = "'" === o3 ? "&apos;" : "&quot;";
                  n4 = n4.slice(1, -1).replace(new RegExp(o3, "g"), i2), e4 = [o3, n4, o3];
                } else
                  e4 = n3("value");
                o2.push("=", e4);
              }
              return o2;
            }(e2, t2, n2);
          case "JSXIdentifier":
            return String(r2.name);
          case "JSXNamespacedName":
            return py(":", [n2("namespace"), n2("name")]);
          case "JSXMemberExpression":
            return py(".", [n2("object"), n2("property")]);
          case "JSXSpreadAttribute":
            return ky(e2, t2, n2);
          case "JSXSpreadChild":
            return ky(e2, t2, n2);
          case "JSXExpressionContainer":
            return function(e3, t3, n3) {
              const r3 = e3.getValue(), o2 = e3.getParentNode(0), i2 = "JSXEmptyExpression" === r3.expression.type || !Cy(r3.expression) && ("ArrayExpression" === r3.expression.type || "ObjectExpression" === r3.expression.type || "ArrowFunctionExpression" === r3.expression.type || Dy(r3.expression) || "FunctionExpression" === r3.expression.type || "TemplateLiteral" === r3.expression.type || "TaggedTemplateExpression" === r3.expression.type || "DoExpression" === r3.expression.type || my(o2) && ("ConditionalExpression" === r3.expression.type || by(r3.expression)));
              return iy(i2 ? ["{", n3("expression"), ly, "}"] : ["{", uy([oy, n3("expression")]), oy, ly, "}"]);
            }(e2, 0, n2);
          case "JSXFragment":
          case "JSXElement":
            return By(e2, t2, n2);
          case "JSXOpeningElement":
            return function(e3, t3, n3) {
              const r3 = e3.getValue(), o2 = r3.name && Cy(r3.name) || r3.typeParameters && Cy(r3.typeParameters);
              if (r3.selfClosing && 0 === r3.attributes.length && !o2)
                return ["<", n3("name"), n3("typeParameters"), " />"];
              if (r3.attributes && 1 === r3.attributes.length && r3.attributes[0].value && Ey(r3.attributes[0].value) && !r3.attributes[0].value.value.includes("\n") && !o2 && !Cy(r3.attributes[0]))
                return iy(["<", n3("name"), n3("typeParameters"), " ", ...e3.map(n3, "attributes"), r3.selfClosing ? " />" : ">"]);
              const i2 = r3.attributes.length > 0 && Cy(dy(r3.attributes), vy.Trailing), u2 = 0 === r3.attributes.length && !o2 || t3.jsxBracketSameLine && (!o2 || r3.attributes.length > 0) && !i2, s2 = r3.attributes && r3.attributes.some((e4) => e4.value && Ey(e4.value) && e4.value.value.includes("\n"));
              return iy(["<", n3("name"), n3("typeParameters"), uy(e3.map(() => [ny, n3()], "attributes")), r3.selfClosing ? ny : u2 ? ">" : oy, r3.selfClosing ? "/>" : u2 ? "" : ">"], { shouldBreak: s2 });
            }(e2, t2, n2);
          case "JSXClosingElement":
            return function(e3, t3, n3) {
              const r3 = e3.getValue(), o2 = [];
              o2.push("</");
              const i2 = n3("name");
              return Cy(r3.name, vy.Leading | vy.Line) ? o2.push(uy([ry, i2]), ry) : Cy(r3.name, vy.Leading | vy.Block) ? o2.push(" ", i2) : o2.push(i2), o2.push(">"), o2;
            }(e2, 0, n2);
          case "JSXOpeningFragment":
          case "JSXClosingFragment":
            return function(e3, t3) {
              const n3 = e3.getValue(), r3 = Cy(n3), o2 = Cy(n3, vy.Line), i2 = "JSXOpeningFragment" === n3.type;
              return [i2 ? "<" : "</", uy([o2 ? ry : r3 && !i2 ? " " : "", ty(e3, t3, true)]), o2 ? ry : "", ">"];
            }(e2, t2);
          case "JSXEmptyExpression":
            return function(e3, t3) {
              const n3 = e3.getValue(), r3 = Cy(n3, vy.Line);
              return [ty(e3, t3, !r3), r3 ? ry : ""];
            }(e2, t2);
          case "JSXText":
            throw new Error("JSXTest should be handled by JSXElement");
        }
      } };
      const { isNonEmptyArray: Ly } = rn, { builders: { indent: _y, join: My, line: Ry } } = Rn, { isFlowAnnotationComment: Vy } = pd;
      var $y = { printOptionalToken: function(e2) {
        const t2 = e2.getValue();
        return !t2.optional || "Identifier" === t2.type && t2 === e2.getParentNode().key ? "" : "OptionalCallExpression" === t2.type || "OptionalMemberExpression" === t2.type && t2.computed ? "?." : "?";
      }, printFunctionTypeParameters: function(e2, t2, n2) {
        const r2 = e2.getValue();
        return r2.typeArguments ? n2("typeArguments") : r2.typeParameters ? n2("typeParameters") : "";
      }, printBindExpressionCallee: function(e2, t2, n2) {
        return ["::", n2("callee")];
      }, printTypeScriptModifiers: function(e2, t2, n2) {
        const r2 = e2.getValue();
        return Ly(r2.modifiers) ? [My(" ", e2.map(n2, "modifiers")), " "] : "";
      }, printTypeAnnotation: function(e2, t2, n2) {
        const r2 = e2.getValue();
        if (!r2.typeAnnotation)
          return "";
        const o2 = e2.getParentNode(), i2 = r2.definite || o2 && "VariableDeclarator" === o2.type && o2.definite, u2 = "DeclareFunction" === o2.type && o2.id === r2;
        return Vy(t2.originalText, r2.typeAnnotation) ? [" /*: ", n2("typeAnnotation"), " */"] : [u2 ? "" : i2 ? "!: " : ": ", n2("typeAnnotation")];
      }, adjustClause: function(e2, t2, n2) {
        return "EmptyStatement" === e2.type ? ";" : "BlockStatement" === e2.type || n2 ? [" ", t2] : _y([Ry, t2]);
      } };
      const { printDanglingComments: qy } = up, { builders: { line: Wy, softline: Uy, hardline: zy, group: Hy, indent: Gy, ifBreak: Jy, fill: Xy } } = Rn, { getLast: Yy, hasNewline: Ky } = rn, { shouldPrintComma: Qy, hasComment: Zy, CommentCheckFlags: eD, isNextLineEmpty: tD, isNumericLiteral: nD, isSignedNumericLiteral: rD } = pd, { locStart: oD } = ea, { printOptionalToken: iD, printTypeAnnotation: uD } = $y;
      function sD(e2, t2) {
        return e2.elements.length > 1 && e2.elements.every((e3) => e3 && (nD(e3) || rD(e3) && !Zy(e3.argument)) && !Zy(e3, eD.Trailing | eD.Line, (e4) => !Ky(t2.originalText, oD(e4), { backwards: true })));
      }
      function aD(e2, t2, n2, r2) {
        const o2 = [];
        let i2 = [];
        return e2.each((e3) => {
          o2.push(i2, Hy(r2())), i2 = [",", Wy], e3.getValue() && tD(e3.getValue(), t2) && i2.push(Uy);
        }, n2), o2;
      }
      function cD(e2, t2, n2, r2) {
        const o2 = [];
        return e2.each((e3, i2, u2) => {
          const s2 = i2 === u2.length - 1;
          o2.push([n2(), s2 ? r2 : ","]), s2 || o2.push(tD(e3.getValue(), t2) ? [zy, zy] : Zy(u2[i2 + 1], eD.Leading | eD.Line) ? zy : Wy);
        }, "elements"), Xy(o2);
      }
      var lD = { printArray: function(e2, t2, n2) {
        const r2 = e2.getValue(), o2 = [], i2 = "TupleExpression" === r2.type ? "#[" : "[";
        if (0 === r2.elements.length)
          Zy(r2, eD.Dangling) ? o2.push(Hy([i2, qy(e2, t2), Uy, "]"])) : o2.push(i2, "]");
        else {
          const u2 = Yy(r2.elements), s2 = !(u2 && "RestElement" === u2.type), a2 = null === u2, c2 = Symbol("array"), l2 = !t2.__inJestEach && r2.elements.length > 1 && r2.elements.every((e3, t3, n3) => {
            const r3 = e3 && e3.type;
            if ("ArrayExpression" !== r3 && "ObjectExpression" !== r3)
              return false;
            const o3 = n3[t3 + 1];
            if (o3 && r3 !== o3.type)
              return false;
            const i3 = "ArrayExpression" === r3 ? "elements" : "properties";
            return e3[i3] && e3[i3].length > 1;
          }), p2 = sD(r2, t2), f2 = s2 ? a2 ? "," : Qy(t2) ? p2 ? Jy(",", "", { groupId: c2 }) : Jy(",") : "" : "";
          o2.push(Hy([i2, Gy([Uy, p2 ? cD(e2, t2, n2, f2) : [aD(e2, t2, "elements", n2), f2], qy(e2, t2, true)]), Uy, "]"], { shouldBreak: l2, id: c2 }));
        }
        return o2.push(iD(e2), uD(e2, t2, n2)), o2;
      }, printArrayItems: aD, isConciselyPrintedArray: sD };
      const { printDanglingComments: pD } = up, { getLast: fD, getPenultimate: dD } = rn, { getFunctionParameters: hD, hasComment: mD, CommentCheckFlags: gD, isFunctionCompositionArgs: yD, isJsxNode: DD, isLongCurriedCallExpression: ED, shouldPrintComma: bD, getCallArguments: CD, iterateCallArgumentsPath: vD, isNextLineEmpty: AD, isCallExpression: FD } = pd, { builders: { line: xD, hardline: SD, softline: wD, group: TD, indent: BD, conditionalGroup: kD, ifBreak: ND, breakParent: PD }, utils: { willBreak: OD } } = Rn, { ArgExpansionBailout: ID } = uo, { isConciselyPrintedArray: jD } = lD;
      function LD(e2, t2 = false) {
        return "ObjectExpression" === e2.type && (e2.properties.length > 0 || mD(e2)) || "ArrayExpression" === e2.type && (e2.elements.length > 0 || mD(e2)) || "TSTypeAssertion" === e2.type && LD(e2.expression) || "TSAsExpression" === e2.type && LD(e2.expression) || "FunctionExpression" === e2.type || "ArrowFunctionExpression" === e2.type && (!e2.returnType || !e2.returnType.typeAnnotation || "TSTypeReference" !== e2.returnType.typeAnnotation.type || "BlockStatement" === (n2 = e2.body).type && (n2.body.some((e3) => "EmptyStatement" !== e3.type) || mD(n2, gD.Dangling))) && ("BlockStatement" === e2.body.type || "ArrowFunctionExpression" === e2.body.type && LD(e2.body, true) || "ObjectExpression" === e2.body.type || "ArrayExpression" === e2.body.type || !t2 && (FD(e2.body) || "ConditionalExpression" === e2.body.type) || DD(e2.body)) || "DoExpression" === e2.type || "ModuleExpression" === e2.type;
        var n2;
      }
      var _D = function(e2, t2, n2) {
        const r2 = e2.getValue(), o2 = "ImportExpression" === r2.type, i2 = CD(r2);
        if (0 === i2.length)
          return ["(", pD(e2, t2, true), ")"];
        if (function(e3) {
          return 2 === e3.length && "ArrowFunctionExpression" === e3[0].type && 0 === hD(e3[0]).length && "BlockStatement" === e3[0].body.type && "ArrayExpression" === e3[1].type && !e3.some((e4) => mD(e4));
        }(i2))
          return ["(", n2(["arguments", 0]), ", ", n2(["arguments", 1]), ")"];
        let u2 = false, s2 = false;
        const a2 = i2.length - 1, c2 = [];
        vD(e2, (e3, r3) => {
          const o3 = e3.getNode(), i3 = [n2()];
          r3 === a2 || (AD(o3, t2) ? (0 === r3 && (s2 = true), u2 = true, i3.push(",", SD, SD)) : i3.push(",", xD)), c2.push(i3);
        });
        const l2 = o2 || r2.callee && "Import" === r2.callee.type || !bD(t2, "all") ? "" : ",";
        function p2() {
          return TD(["(", BD([xD, ...c2]), l2, xD, ")"], { shouldBreak: true });
        }
        if (u2 || "Decorator" !== e2.getParentNode().type && yD(i2))
          return p2();
        const f2 = function(e3) {
          if (2 !== e3.length)
            return false;
          const [t3, n3] = e3;
          if ("ModuleExpression" === t3.type && function(e4) {
            return "ObjectExpression" === e4.type && 1 === e4.properties.length && "ObjectProperty" === e4.properties[0].type && "Identifier" === e4.properties[0].key.type && "type" === e4.properties[0].key.name && "StringLiteral" === e4.properties[0].value.type && "module" === e4.properties[0].value.value;
          }(n3))
            return true;
          return !mD(t3) && ("FunctionExpression" === t3.type || "ArrowFunctionExpression" === t3.type && "BlockStatement" === t3.body.type) && "FunctionExpression" !== n3.type && "ArrowFunctionExpression" !== n3.type && "ConditionalExpression" !== n3.type && !LD(n3);
        }(i2), d2 = function(e3, t3) {
          const n3 = fD(e3), r3 = dD(e3);
          return !mD(n3, gD.Leading) && !mD(n3, gD.Trailing) && LD(n3) && (!r3 || r3.type !== n3.type) && (2 !== e3.length || "ArrowFunctionExpression" !== r3.type || "ArrayExpression" !== n3.type) && !(e3.length > 1 && "ArrayExpression" === n3.type && jD(n3, t3));
        }(i2, t2);
        if (f2 || d2) {
          if (f2 ? c2.slice(1).some(OD) : c2.slice(0, -1).some(OD))
            return p2();
          let t3 = [];
          try {
            e2.try(() => {
              vD(e2, (e3, r3) => {
                f2 && 0 === r3 && (t3 = [[n2([], { expandFirstArg: true }), c2.length > 1 ? "," : "", s2 ? SD : xD, s2 ? SD : ""], ...c2.slice(1)]), d2 && r3 === a2 && (t3 = [...c2.slice(0, -1), n2([], { expandLastArg: true })]);
              });
            });
          } catch (e3) {
            if (e3 instanceof ID)
              return p2();
            throw e3;
          }
          return [c2.some(OD) ? PD : "", kD([["(", ...t3, ")"], f2 ? ["(", TD(t3[0], { shouldBreak: true }), ...t3.slice(1), ")"] : ["(", ...c2.slice(0, -1), TD(fD(t3), { shouldBreak: true }), ")"], p2()])];
        }
        const h2 = ["(", BD([wD, ...c2]), ND(l2), wD, ")"];
        return ED(e2) ? h2 : TD(h2, { shouldBreak: c2.some(OD) || u2 });
      };
      const { builders: { softline: MD, group: RD, indent: VD, label: $D } } = Rn, { isNumericLiteral: qD, isMemberExpression: WD, isCallExpression: UD } = pd, { printOptionalToken: zD } = $y;
      function HD(e2, t2, n2) {
        const r2 = n2("property"), o2 = e2.getValue(), i2 = zD(e2);
        return o2.computed ? !o2.property || qD(o2.property) ? [i2, "[", r2, "]"] : RD([i2, "[", VD([MD, r2]), MD, "]"]) : [i2, ".", r2];
      }
      var GD = { printMemberExpression: function(e2, t2, n2) {
        const r2 = e2.getValue(), o2 = e2.getParentNode();
        let i2, u2 = 0;
        do {
          i2 = e2.getParentNode(u2), u2++;
        } while (i2 && (WD(i2) || "TSNonNullExpression" === i2.type));
        const s2 = n2("object"), a2 = HD(e2, t2, n2), c2 = i2 && ("NewExpression" === i2.type || "BindExpression" === i2.type || "AssignmentExpression" === i2.type && "Identifier" !== i2.left.type) || r2.computed || "Identifier" === r2.object.type && "Identifier" === r2.property.type && !WD(o2) || ("AssignmentExpression" === o2.type || "VariableDeclarator" === o2.type) && (UD(r2.object) && r2.object.arguments.length > 0 || "TSNonNullExpression" === r2.object.type && UD(r2.object.expression) && r2.object.expression.arguments.length > 0 || "member-chain" === s2.label);
        return $D("member-chain" === s2.label ? "member-chain" : "member", [s2, c2 ? a2 : RD(VD([MD, a2]))]);
      }, printMemberLookup: HD };
      const { printComments: JD } = up, { getLast: XD, isNextLineEmptyAfterIndex: YD, getNextNonSpaceNonCommentCharacterIndex: KD } = rn, { isCallExpression: QD, isMemberExpression: ZD, isFunctionOrArrowExpression: eE, isLongCurriedCallExpression: tE, isMemberish: nE, isNumericLiteral: rE, isSimpleCallArgument: oE, hasComment: iE, CommentCheckFlags: uE, isNextLineEmpty: sE } = pd, { locEnd: aE } = ea, { builders: { join: cE, hardline: lE, group: pE, indent: fE, conditionalGroup: dE, breakParent: hE, label: mE }, utils: { willBreak: gE } } = Rn, { printMemberLookup: yE } = GD, { printOptionalToken: DE, printFunctionTypeParameters: EE, printBindExpressionCallee: bE } = $y;
      var CE = function(e2, t2, n2) {
        const r2 = e2.getParentNode(), o2 = !r2 || "ExpressionStatement" === r2.type, i2 = [];
        function u2(e3) {
          const { originalText: n3 } = t2, r3 = KD(n3, e3, aE);
          return ")" === n3.charAt(r3) ? false !== r3 && YD(n3, r3 + 1) : sE(e3, t2);
        }
        function s2(e3) {
          const r3 = e3.getValue();
          QD(r3) && (nE(r3.callee) || QD(r3.callee)) ? (i2.unshift({ node: r3, printed: [JD(e3, [DE(e3), EE(e3, t2, n2), _D(e3, t2, n2)], t2), u2(r3) ? lE : ""] }), e3.call((e4) => s2(e4), "callee")) : nE(r3) ? (i2.unshift({ node: r3, needsParens: fg(e3, t2), printed: JD(e3, ZD(r3) ? yE(e3, t2, n2) : bE(e3, t2, n2), t2) }), e3.call((e4) => s2(e4), "object")) : "TSNonNullExpression" === r3.type ? (i2.unshift({ node: r3, printed: JD(e3, "!", t2) }), e3.call((e4) => s2(e4), "expression")) : i2.unshift({ node: r3, printed: n2() });
        }
        const a2 = e2.getValue();
        i2.unshift({ node: a2, printed: [DE(e2), EE(e2, t2, n2), _D(e2, t2, n2)] }), a2.callee && e2.call((e3) => s2(e3), "callee");
        const c2 = [];
        let l2 = [i2[0]], p2 = 1;
        for (; p2 < i2.length && ("TSNonNullExpression" === i2[p2].node.type || QD(i2[p2].node) || ZD(i2[p2].node) && i2[p2].node.computed && rE(i2[p2].node.property)); ++p2)
          l2.push(i2[p2]);
        if (!QD(i2[0].node))
          for (; p2 + 1 < i2.length && (nE(i2[p2].node) && nE(i2[p2 + 1].node)); ++p2)
            l2.push(i2[p2]);
        c2.push(l2), l2 = [];
        let f2 = false;
        for (; p2 < i2.length; ++p2) {
          if (f2 && nE(i2[p2].node)) {
            if (i2[p2].node.computed && rE(i2[p2].node.property)) {
              l2.push(i2[p2]);
              continue;
            }
            c2.push(l2), l2 = [], f2 = false;
          }
          (QD(i2[p2].node) || "ImportExpression" === i2[p2].node.type) && (f2 = true), l2.push(i2[p2]), iE(i2[p2].node, uE.Trailing) && (c2.push(l2), l2 = [], f2 = false);
        }
        function d2(e3) {
          return /^[A-Z]|^[$_]+$/.test(e3);
        }
        l2.length > 0 && c2.push(l2);
        const h2 = c2.length >= 2 && !iE(c2[1][0].node) && function(e3) {
          const n3 = e3[1].length > 0 && e3[1][0].node.computed;
          if (1 === e3[0].length) {
            const r4 = e3[0][0].node;
            return "ThisExpression" === r4.type || "Identifier" === r4.type && (d2(r4.name) || o2 && function(e4) {
              return e4.length <= t2.tabWidth;
            }(r4.name) || n3);
          }
          const r3 = XD(e3[0]).node;
          return ZD(r3) && "Identifier" === r3.property.type && (d2(r3.property.name) || n3);
        }(c2);
        function m2(e3) {
          const t3 = e3.map((e4) => e4.printed);
          return e3.length > 0 && XD(e3).needsParens ? ["(", ...t3, ")"] : t3;
        }
        const g2 = c2.map(m2), y2 = g2, D2 = h2 ? 3 : 2, E2 = Ws(c2), b2 = E2.slice(1, -1).some((e3) => iE(e3.node, uE.Leading)) || E2.slice(0, -1).some((e3) => iE(e3.node, uE.Trailing)) || c2[D2] && iE(c2[D2][0].node, uE.Leading);
        if (c2.length <= D2 && !b2)
          return tE(e2) ? y2 : pE(y2);
        const C2 = XD(c2[h2 ? 1 : 0]).node, v2 = !QD(C2) && u2(C2), A4 = [m2(c2[0]), h2 ? c2.slice(1, 2).map(m2) : "", v2 ? lE : "", function(e3) {
          return 0 === e3.length ? "" : fE(pE([lE, cE(lE, e3.map(m2))]));
        }(c2.slice(h2 ? 2 : 1))], F2 = i2.map(({ node: e3 }) => e3).filter(QD);
        let x2;
        return x2 = b2 || F2.length > 2 && F2.some((e3) => !e3.arguments.every((e4) => oE(e4, 0))) || g2.slice(0, -1).some(gE) || function() {
          const e3 = XD(XD(c2)).node, t3 = XD(g2);
          return QD(e3) && gE(t3) && F2.slice(0, -1).some((e4) => e4.arguments.some(eE));
        }() ? pE(A4) : [gE(y2) || v2 ? hE : "", dE([y2, A4])], mE("member-chain", x2);
      };
      const { builders: { join: vE, group: AE } } = Rn, { getCallArguments: FE, hasFlowAnnotationComment: xE, isCallExpression: SE, isMemberish: wE, isStringLiteral: TE, isTemplateOnItsOwnLine: BE, isTestCall: kE, iterateCallArgumentsPath: NE } = pd, { printOptionalToken: PE, printFunctionTypeParameters: OE } = $y;
      var IE = { printCallExpression: function(e2, t2, n2) {
        const r2 = e2.getValue(), o2 = e2.getParentNode(), i2 = "NewExpression" === r2.type, u2 = "ImportExpression" === r2.type, s2 = PE(e2), a2 = FE(r2);
        if (a2.length > 0 && (!u2 && !i2 && function(e3, t3) {
          if ("Identifier" !== e3.callee.type)
            return false;
          if ("require" === e3.callee.name)
            return true;
          if ("define" === e3.callee.name) {
            const n3 = FE(e3);
            return "ExpressionStatement" === t3.type && (1 === n3.length || 2 === n3.length && "ArrayExpression" === n3[0].type || 3 === n3.length && TE(n3[0]) && "ArrayExpression" === n3[1].type);
          }
          return false;
        }(r2, o2) || 1 === a2.length && BE(a2[0], t2.originalText) || !i2 && kE(r2, o2))) {
          const r3 = [];
          return NE(e2, () => {
            r3.push(n2());
          }), [i2 ? "new " : "", n2("callee"), s2, OE(e2, t2, n2), "(", vE(", ", r3), ")"];
        }
        const c2 = ("babel" === t2.parser || "babel-flow" === t2.parser) && r2.callee && "Identifier" === r2.callee.type && xE(r2.callee.trailingComments);
        if (c2 && (r2.callee.trailingComments[0].printed = true), !u2 && !i2 && wE(r2.callee) && !e2.call((e3) => fg(e3, t2), "callee"))
          return CE(e2, t2, n2);
        const l2 = [i2 ? "new " : "", u2 ? "import" : n2("callee"), s2, c2 ? "/*:: ".concat(r2.callee.trailingComments[0].value.slice(2).trim(), " */") : "", OE(e2, t2, n2), _D(e2, t2, n2)];
        return u2 || SE(r2.callee) ? AE(l2) : l2;
      } };
      const { isNonEmptyArray: jE, getStringWidth: LE } = rn, { builders: { line: _E, group: ME, indent: RE, indentIfBreak: VE }, utils: { cleanDoc: $E } } = Rn, { hasLeadingOwnLineComment: qE, isBinaryish: WE, isStringLiteral: UE, isLiteral: zE, isNumericLiteral: HE, isCallExpression: GE, isMemberExpression: JE, getCallArguments: XE, rawText: YE, hasComment: KE, isSignedNumericLiteral: QE } = pd, { shouldInlineLogicalExpression: ZE } = Ug, { printCallExpression: eb } = IE;
      function tb(e2, t2, n2, r2, o2, i2) {
        const u2 = function(e3, t3, n3, r3, o3) {
          const i3 = e3.getValue(), u3 = i3[o3];
          if (!u3)
            return "only-left";
          const s3 = !nb(u3);
          if (e3.match(nb, rb, (e4) => !s3 || "ExpressionStatement" !== e4.type && "VariableDeclaration" !== e4.type))
            return s3 ? "ArrowFunctionExpression" === u3.type && "ArrowFunctionExpression" === u3.body.type ? "chain-tail-arrow-chain" : "chain-tail" : "chain";
          if (!s3 && nb(u3.right) || qE(t3.originalText, u3))
            return "break-after-operator";
          if ("CallExpression" === u3.type && "require" === u3.callee.name || "json5" === t3.parser || "json" === t3.parser)
            return "never-break-after-operator";
          if (function(e4) {
            if (rb(e4)) {
              const t4 = e4.left || e4.id;
              return "ObjectPattern" === t4.type && t4.properties.length > 2 && t4.properties.some((e5) => ("ObjectProperty" === e5.type || "Property" === e5.type) && (!e5.shorthand || e5.value && "AssignmentPattern" === e5.value.type));
            }
            return false;
          }(i3))
            return "break-lhs";
          const a2 = function(e4, t4, n4) {
            if ("ObjectProperty" !== e4.type && "Property" !== e4.type)
              return false;
            t4 = $E(t4);
            const r4 = 3;
            return "string" == typeof t4 && LE(t4) < n4.tabWidth + r4;
          }(i3, r3, t3);
          if (e3.call(() => function(e4, t4, n4, r4) {
            const o4 = e4.getValue();
            if (WE(o4) && !ZE(o4))
              return true;
            switch (o4.type) {
              case "StringLiteralTypeAnnotation":
              case "SequenceExpression":
                return true;
              case "ConditionalExpression": {
                const { test: e5 } = o4;
                return WE(e5) && !ZE(e5);
              }
              case "ClassExpression":
                return jE(o4.decorators);
            }
            if (r4)
              return false;
            let i4 = o4;
            const u4 = [];
            for (; ; )
              if ("UnaryExpression" === i4.type)
                i4 = i4.argument, u4.push("argument");
              else {
                if ("TSNonNullExpression" !== i4.type)
                  break;
                i4 = i4.expression, u4.push("expression");
              }
            if (UE(i4) || e4.call(() => ob(e4, t4, n4), ...u4))
              return true;
            return false;
          }(e3, t3, n3, a2), o3))
            return "break-after-operator";
          if (a2 || "TemplateLiteral" === u3.type || "TaggedTemplateExpression" === u3.type || "BooleanLiteral" === u3.type || HE(u3) || "ClassExpression" === u3.type)
            return "never-break-after-operator";
          return "fluid";
        }(e2, t2, n2, r2, i2), s2 = n2(i2, { assignmentLayout: u2 });
        switch (u2) {
          case "break-after-operator":
            return ME([ME(r2), o2, ME(RE([_E, s2]))]);
          case "never-break-after-operator":
            return ME([ME(r2), o2, " ", s2]);
          case "fluid": {
            const e3 = Symbol("assignment");
            return ME([ME(r2), o2, ME(RE(_E), { id: e3 }), VE(s2, { groupId: e3 })]);
          }
          case "break-lhs":
            return ME([r2, o2, " ", ME(s2)]);
          case "chain":
            return [ME(r2), o2, _E, s2];
          case "chain-tail":
            return [ME(r2), o2, RE([_E, s2])];
          case "chain-tail-arrow-chain":
            return [ME(r2), o2, s2];
          case "only-left":
            return r2;
        }
      }
      function nb(e2) {
        return "AssignmentExpression" === e2.type;
      }
      function rb(e2) {
        return nb(e2) || "VariableDeclarator" === e2.type;
      }
      function ob(e2, t2, n2, r2 = false) {
        const o2 = e2.getValue(), i2 = () => ob(e2, t2, n2, true);
        if ("TSNonNullExpression" === o2.type)
          return e2.call(i2, "expression");
        if (GE(o2)) {
          if ("member-chain" === eb(e2, t2, n2).label)
            return false;
          const r3 = XE(o2);
          return !!(0 === r3.length || 1 === r3.length && function(e3, { printWidth: t3 }) {
            if (KE(e3))
              return false;
            const n3 = 0.25 * t3;
            if ("ThisExpression" === e3.type || "Identifier" === e3.type && e3.name.length <= n3 || QE(e3) && !KE(e3.argument))
              return true;
            const r4 = "Literal" === e3.type && "regex" in e3 && e3.regex.pattern || "RegExpLiteral" === e3.type && e3.pattern;
            if (r4)
              return r4.length <= n3;
            if (UE(e3))
              return YE(e3).length <= n3;
            if ("TemplateLiteral" === e3.type)
              return 0 === e3.expressions.length && e3.quasis[0].value.raw.length <= n3 && !e3.quasis[0].value.raw.includes("\n");
            return zE(e3);
          }(r3[0], t2)) && e2.call(i2, "callee");
        }
        return JE(o2) ? e2.call(i2, "object") : r2 && ("Identifier" === o2.type || "ThisExpression" === o2.type);
      }
      var ib = { printVariableDeclarator: function(e2, t2, n2) {
        return tb(e2, t2, n2, n2("id"), " =", "init");
      }, printAssignmentExpression: function(e2, t2, n2) {
        const r2 = e2.getValue();
        return tb(e2, t2, n2, n2("left"), [" ", r2.operator], "right");
      }, printAssignment: tb };
      const { getNextNonSpaceNonCommentCharacter: ub } = rn, { printDanglingComments: sb } = up, { builders: { line: ab, hardline: cb, softline: lb, group: pb, indent: fb, ifBreak: db }, utils: { removeLines: hb, willBreak: mb } } = Rn, { getFunctionParameters: gb, iterateFunctionParametersPath: yb, isSimpleType: Db, isTestCall: Eb, isTypeAnnotationAFunction: bb, isObjectType: Cb, isObjectTypePropertyAFunction: vb, hasRestParameter: Ab, shouldPrintComma: Fb, hasComment: xb, isNextLineEmpty: Sb } = pd, { locEnd: wb } = ea, { ArgExpansionBailout: Tb } = uo, { printFunctionTypeParameters: Bb } = $y;
      function kb(e2) {
        if (!e2)
          return false;
        const t2 = gb(e2);
        if (1 !== t2.length)
          return false;
        const [n2] = t2;
        return !xb(n2) && ("ObjectPattern" === n2.type || "ArrayPattern" === n2.type || "Identifier" === n2.type && n2.typeAnnotation && ("TypeAnnotation" === n2.typeAnnotation.type || "TSTypeAnnotation" === n2.typeAnnotation.type) && Cb(n2.typeAnnotation.typeAnnotation) || "FunctionTypeParam" === n2.type && Cb(n2.typeAnnotation) || "AssignmentPattern" === n2.type && ("ObjectPattern" === n2.left.type || "ArrayPattern" === n2.left.type) && ("Identifier" === n2.right.type || "ObjectExpression" === n2.right.type && 0 === n2.right.properties.length || "ArrayExpression" === n2.right.type && 0 === n2.right.elements.length));
      }
      var Nb = { printFunctionParameters: function(e2, t2, n2, r2, o2) {
        const i2 = e2.getValue(), u2 = gb(i2), s2 = o2 ? Bb(e2, n2, t2) : "";
        if (0 === u2.length)
          return [s2, "(", sb(e2, n2, true, (e3) => ")" === ub(n2.originalText, e3, wb)), ")"];
        const a2 = e2.getParentNode(), c2 = Eb(a2), l2 = kb(i2), p2 = [];
        if (yb(e2, (e3, r3) => {
          const o3 = r3 === u2.length - 1;
          o3 && i2.rest && p2.push("..."), p2.push(t2()), o3 || (p2.push(","), c2 || l2 ? p2.push(" ") : Sb(u2[r3], n2) ? p2.push(cb, cb) : p2.push(ab));
        }), r2) {
          if (mb(s2) || mb(p2))
            throw new Tb();
          return pb([hb(s2), "(", hb(p2), ")"]);
        }
        const f2 = u2.every((e3) => !e3.decorators);
        return l2 && f2 || c2 ? [s2, "(", ...p2, ")"] : (vb(a2) || bb(a2) || "TypeAlias" === a2.type || "UnionTypeAnnotation" === a2.type || "TSUnionType" === a2.type || "IntersectionTypeAnnotation" === a2.type || "FunctionTypeAnnotation" === a2.type && a2.returnType === i2) && 1 === u2.length && null === u2[0].name && i2.this !== u2[0] && u2[0].typeAnnotation && null === i2.typeParameters && Db(u2[0].typeAnnotation) && !i2.rest ? "always" === n2.arrowParens ? ["(", ...p2, ")"] : p2 : [s2, "(", fb([lb, ...p2]), db(!Ab(i2) && Fb(n2, "all") ? "," : ""), lb, ")"];
      }, shouldHugFunctionParameters: kb, shouldGroupFunctionParameters: function(e2, t2) {
        const n2 = function(e3) {
          let t3;
          return e3.returnType ? (t3 = e3.returnType, t3.typeAnnotation && (t3 = t3.typeAnnotation)) : e3.typeAnnotation && (t3 = e3.typeAnnotation), t3;
        }(e2);
        if (!n2)
          return false;
        const r2 = e2.typeParameters && e2.typeParameters.params;
        if (r2) {
          if (r2.length > 1)
            return false;
          if (1 === r2.length) {
            const e3 = r2[0];
            if (e3.constraint || e3.default)
              return false;
          }
        }
        return 1 === gb(e2).length && (Cb(n2) || mb(t2));
      } };
      const { printComments: Pb, printDanglingComments: Ob } = up, { getLast: Ib } = rn, { builders: { group: jb, join: Lb, line: _b, softline: Mb, indent: Rb, align: Vb, ifBreak: $b } } = Rn, { locStart: qb } = ea, { isSimpleType: Wb, isObjectType: Ub, hasLeadingOwnLineComment: zb, isObjectTypePropertyAFunction: Hb, shouldPrintComma: Gb } = pd, { printAssignment: Jb } = ib, { printFunctionParameters: Xb, shouldGroupFunctionParameters: Yb } = Nb, { printArrayItems: Kb } = lD;
      function Qb(e2) {
        if (Wb(e2) || Ub(e2))
          return true;
        if ("UnionTypeAnnotation" === e2.type || "TSUnionType" === e2.type) {
          const t2 = e2.types.filter((e3) => "VoidTypeAnnotation" === e3.type || "TSVoidKeyword" === e3.type || "NullLiteralTypeAnnotation" === e3.type || "TSNullKeyword" === e3.type).length, n2 = e2.types.some((e3) => "ObjectTypeAnnotation" === e3.type || "TSTypeLiteral" === e3.type || "GenericTypeAnnotation" === e3.type || "TSTypeReference" === e3.type);
          if (e2.types.length - 1 === t2 && n2)
            return true;
        }
        return false;
      }
      var Zb = { printOpaqueType: function(e2, t2, n2) {
        const r2 = t2.semi ? ";" : "", o2 = e2.getValue(), i2 = [];
        return i2.push("opaque type ", n2("id"), n2("typeParameters")), o2.supertype && i2.push(": ", n2("supertype")), o2.impltype && i2.push(" = ", n2("impltype")), i2.push(r2), i2;
      }, printTypeAlias: function(e2, t2, n2) {
        const r2 = t2.semi ? ";" : "", o2 = e2.getValue(), i2 = [];
        o2.declare && i2.push("declare "), i2.push("type ", n2("id"), n2("typeParameters"));
        const u2 = "TSTypeAliasDeclaration" === o2.type ? "typeAnnotation" : "right";
        return [Jb(e2, t2, n2, i2, " =", u2), r2];
      }, printIntersectionType: function(e2, t2, n2) {
        const r2 = e2.getValue(), o2 = e2.map(n2, "types"), i2 = [];
        let u2 = false;
        for (let e3 = 0; e3 < o2.length; ++e3)
          0 === e3 ? i2.push(o2[e3]) : Ub(r2.types[e3 - 1]) && Ub(r2.types[e3]) ? i2.push([" & ", u2 ? Rb(o2[e3]) : o2[e3]]) : Ub(r2.types[e3 - 1]) || Ub(r2.types[e3]) ? (e3 > 1 && (u2 = true), i2.push(" & ", e3 > 1 ? Rb(o2[e3]) : o2[e3])) : i2.push(Rb([" &", _b, o2[e3]]));
        return jb(i2);
      }, printUnionType: function(e2, t2, n2) {
        const r2 = e2.getValue(), o2 = e2.getParentNode(), i2 = !("TypeParameterInstantiation" === o2.type || "TSTypeParameterInstantiation" === o2.type || "GenericTypeAnnotation" === o2.type || "TSTypeReference" === o2.type || "TSTypeAssertion" === o2.type || "TupleTypeAnnotation" === o2.type || "TSTupleType" === o2.type || "FunctionTypeParam" === o2.type && !o2.name && e2.getParentNode(1).this !== o2 || ("TypeAlias" === o2.type || "VariableDeclarator" === o2.type || "TSTypeAliasDeclaration" === o2.type) && zb(t2.originalText, r2)), u2 = Qb(r2), s2 = e2.map((e3) => {
          let r3 = n2();
          return u2 || (r3 = Vb(2, r3)), Pb(e3, r3, t2);
        }, "types");
        if (u2)
          return Lb(" | ", s2);
        const a2 = i2 && !zb(t2.originalText, r2), c2 = [$b([a2 ? _b : "", "| "]), Lb([_b, "| "], s2)];
        return fg(e2, t2) ? jb([Rb(c2), Mb]) : "TupleTypeAnnotation" === o2.type && o2.types.length > 1 || "TSTupleType" === o2.type && o2.elementTypes.length > 1 ? jb([Rb([$b(["(", Mb]), c2]), Mb, $b(")")]) : jb(i2 ? Rb(c2) : c2);
      }, printFunctionType: function(e2, t2, n2) {
        const r2 = e2.getValue(), o2 = [], i2 = e2.getParentNode(0), u2 = e2.getParentNode(1), s2 = e2.getParentNode(2);
        let a2 = "TSFunctionType" === r2.type || !(("ObjectTypeProperty" === i2.type || "ObjectTypeInternalSlot" === i2.type) && !i2.variance && !i2.optional && qb(i2) === qb(r2) || "ObjectTypeCallProperty" === i2.type || s2 && "DeclareFunction" === s2.type), c2 = a2 && ("TypeAnnotation" === i2.type || "TSTypeAnnotation" === i2.type);
        const l2 = c2 && a2 && ("TypeAnnotation" === i2.type || "TSTypeAnnotation" === i2.type) && "ArrowFunctionExpression" === u2.type;
        Hb(i2) && (a2 = true, c2 = true), l2 && o2.push("(");
        const p2 = Xb(e2, n2, t2, false, true), f2 = r2.returnType || r2.predicate || r2.typeAnnotation ? [a2 ? " => " : ": ", n2("returnType"), n2("predicate"), n2("typeAnnotation")] : "", d2 = Yb(r2, f2);
        return o2.push(d2 ? jb(p2) : p2), f2 && o2.push(f2), l2 && o2.push(")"), jb(o2);
      }, printTupleType: function(e2, t2, n2) {
        const r2 = e2.getValue(), o2 = "TSTupleType" === r2.type ? "elementTypes" : "types", i2 = r2[o2].length > 0 && "TSRestType" === Ib(r2[o2]).type;
        return jb(["[", Rb([Mb, Kb(e2, t2, o2, n2)]), $b(Gb(t2, "all") && !i2 ? "," : ""), Ob(e2, t2, true), Mb, "]"]);
      }, printIndexedAccessType: function(e2, t2, n2) {
        const r2 = e2.getValue(), o2 = "OptionalIndexedAccessType" === r2.type && r2.optional ? "?.[" : "[";
        return [n2("objectType"), o2, n2("indexType"), "]"];
      }, shouldHugType: Qb };
      const { printDanglingComments: eC } = up, { builders: { join: tC, line: nC, hardline: rC, softline: oC, group: iC, indent: uC, ifBreak: sC } } = Rn, { isTestCall: aC, hasComment: cC, CommentCheckFlags: lC, isTSXFile: pC, shouldPrintComma: fC, getFunctionParameters: dC } = pd, { createGroupIdMapper: hC } = rn, { shouldHugType: mC } = Zb, gC = hC("typeParameters");
      function yC(e2, t2) {
        const n2 = e2.getValue();
        if (!cC(n2, lC.Dangling))
          return "";
        const r2 = !cC(n2, lC.Line), o2 = eC(e2, t2, r2);
        return r2 ? o2 : [o2, rC];
      }
      var DC = { printTypeParameter: function(e2, t2, n2) {
        const r2 = e2.getValue(), o2 = [], i2 = e2.getParentNode();
        return "TSMappedType" === i2.type ? (o2.push("[", n2("name")), r2.constraint && o2.push(" in ", n2("constraint")), i2.nameType && o2.push(" as ", e2.callParent(() => n2("nameType"))), o2.push("]"), o2) : (r2.variance && o2.push(n2("variance")), o2.push(n2("name")), r2.bound && o2.push(": ", n2("bound")), r2.constraint && o2.push(" extends ", n2("constraint")), r2.default && o2.push(" = ", n2("default")), o2);
      }, printTypeParameters: function(e2, t2, n2, r2) {
        const o2 = e2.getValue();
        if (!o2[r2])
          return "";
        if (!Array.isArray(o2[r2]))
          return n2(r2);
        const i2 = e2.getNode(2);
        if (i2 && aC(i2) || 0 === o2[r2].length || 1 === o2[r2].length && (mC(o2[r2][0]) || "NullableTypeAnnotation" === o2[r2][0].type))
          return ["<", tC(", ", e2.map(n2, r2)), yC(e2, t2), ">"];
        const u2 = "TSTypeParameterInstantiation" === o2.type ? "" : 1 === dC(o2).length && pC(t2) && !o2[r2][0].constraint && "ArrowFunctionExpression" === e2.getParentNode().type ? "," : fC(t2, "all") ? sC(",") : "";
        return iC(["<", uC([oC, tC([",", nC], e2.map(n2, r2))]), u2, oC, ">"], { id: gC(o2) });
      }, getTypeParametersGroupId: gC };
      const { printComments: EC } = up, { printString: bC, printNumber: CC } = rn, { isNumericLiteral: vC, isSimpleNumber: AC, isStringLiteral: FC23, isStringPropSafeToUnquote: xC, rawText: SC } = pd, { printAssignment: wC } = ib, TC = /* @__PURE__ */ new WeakMap();
      function BC(e2, t2, n2) {
        const r2 = e2.getNode();
        if (r2.computed)
          return ["[", n2("key"), "]"];
        const o2 = e2.getParentNode(), { key: i2 } = r2;
        if ("ClassPrivateProperty" === r2.type && "Identifier" === i2.type)
          return ["#", n2("key")];
        if ("consistent" === t2.quoteProps && !TC.has(o2)) {
          const e3 = (o2.properties || o2.body || o2.members).some((e4) => !e4.computed && e4.key && FC23(e4.key) && !xC(e4, t2));
          TC.set(o2, e3);
        }
        if (("Identifier" === i2.type || vC(i2) && AC(CC(SC(i2))) && String(i2.value) === CC(SC(i2)) && "typescript" !== t2.parser && "babel-ts" !== t2.parser) && ("json" === t2.parser || "consistent" === t2.quoteProps && TC.get(o2))) {
          const n3 = bC(JSON.stringify("Identifier" === i2.type ? i2.name : i2.value.toString()), t2);
          return e2.call((e3) => EC(e3, n3, t2), "key");
        }
        return xC(r2, t2) && ("as-needed" === t2.quoteProps || "consistent" === t2.quoteProps && !TC.get(o2)) ? e2.call((e3) => EC(e3, /^\d/.test(i2.value) ? CC(i2.value) : i2.value, t2), "key") : n2("key");
      }
      var kC = { printProperty: function(e2, t2, n2) {
        return e2.getValue().shorthand ? n2("value") : wC(e2, t2, n2, BC(e2, t2, n2), ":", "value");
      }, printPropertyKey: BC };
      const { printDanglingComments: NC, printCommentsSeparately: PC } = up, { getNextNonSpaceNonCommentCharacterIndex: OC } = rn, { builders: { line: IC, softline: jC, group: LC, indent: _C, ifBreak: MC, hardline: RC, join: VC, indentIfBreak: $C } } = Rn, { getFunctionParameters: qC, hasLeadingOwnLineComment: WC, isFlowAnnotationComment: UC, isJsxNode: zC, isTemplateOnItsOwnLine: HC, shouldPrintComma: GC, startsWithNoLookaheadToken: JC, returnArgumentHasLeadingComment: XC, isBinaryish: YC, isLineComment: KC, hasComment: QC, getComments: ZC, CommentCheckFlags: ev, isCallLikeExpression: tv } = pd, { locEnd: nv } = ea, { printFunctionParameters: rv, shouldGroupFunctionParameters: ov } = Nb, { printPropertyKey: iv } = kC, { printFunctionTypeParameters: uv } = $y;
      function sv(e2, t2, n2) {
        const r2 = e2.getNode(), o2 = rv(e2, n2, t2), i2 = cv(e2, n2, t2), u2 = ov(r2, i2), s2 = [uv(e2, t2, n2), LC([u2 ? LC(o2) : o2, i2])];
        return r2.body ? s2.push(" ", n2("body")) : s2.push(t2.semi ? ";" : ""), s2;
      }
      function av(e2, t2) {
        if ("always" === t2.arrowParens)
          return false;
        if ("avoid" === t2.arrowParens) {
          return function(e3) {
            const t3 = qC(e3);
            return !(1 !== t3.length || e3.typeParameters || QC(e3, ev.Dangling) || "Identifier" !== t3[0].type || t3[0].typeAnnotation || QC(t3[0]) || t3[0].optional || e3.predicate || e3.returnType);
          }(e2.getValue());
        }
        return false;
      }
      function cv(e2, t2, n2) {
        const r2 = e2.getValue(), o2 = t2("returnType");
        if (r2.returnType && UC(n2.originalText, r2.returnType))
          return [" /*: ", o2, " */"];
        const i2 = [o2];
        return r2.returnType && r2.returnType.typeAnnotation && i2.unshift(": "), r2.predicate && i2.push(r2.returnType ? " " : ": ", t2("predicate")), i2;
      }
      function lv(e2, t2, n2) {
        const r2 = e2.getValue(), o2 = t2.semi ? ";" : "", i2 = [];
        r2.argument && (XC(t2, r2.argument) ? i2.push([" (", _C([RC, n2("argument")]), RC, ")"]) : YC(r2.argument) || "SequenceExpression" === r2.argument.type ? i2.push(LC([MC(" (", " "), _C([jC, n2("argument")]), jC, MC(")")])) : i2.push(" ", n2("argument")));
        const u2 = ZC(r2), s2 = ke(u2), a2 = s2 && KC(s2);
        return a2 && i2.push(o2), QC(r2, ev.Dangling) && i2.push(" ", NC(e2, t2, true)), a2 || i2.push(o2), i2;
      }
      var pv = { printFunctionDeclaration: function(e2, t2, n2, r2) {
        const o2 = e2.getValue(), i2 = [];
        "TSDeclareFunction" === o2.type && o2.declare && i2.push("declare "), o2.async && i2.push("async "), o2.generator ? i2.push("function* ") : i2.push("function "), o2.id && i2.push(t2("id"));
        const u2 = rv(e2, t2, n2, r2), s2 = cv(e2, t2, n2), a2 = ov(o2, s2);
        return i2.push(uv(e2, n2, t2), LC([a2 ? LC(u2) : u2, s2]), o2.body ? " " : "", t2("body")), !n2.semi || !o2.declare && o2.body || i2.push(";"), i2;
      }, printArrowFunctionExpression: function(e2, t2, n2, r2) {
        let o2 = e2.getValue();
        const i2 = [], u2 = [];
        let s2 = false;
        if (function a3() {
          const c3 = function(e3, t3, n3, r3) {
            const o3 = [];
            e3.getValue().async && o3.push("async "), av(e3, t3) ? o3.push(n3(["params", 0])) : o3.push(LC([rv(e3, n3, t3, r3 && (r3.expandLastArg || r3.expandFirstArg), true), cv(e3, n3, t3)]));
            const i3 = NC(e3, t3, true, (e4) => {
              const n4 = OC(t3.originalText, e4, nv);
              return false !== n4 && "=>" === t3.originalText.slice(n4, n4 + 2);
            });
            return i3 && o3.push(" ", i3), o3;
          }(e2, t2, n2, r2);
          if (0 === i2.length)
            i2.push(c3);
          else {
            const { leading: n3, trailing: r3 } = PC(e2, t2);
            i2.push([n3, c3]), u2.unshift(r3);
          }
          s2 = s2 || o2.returnType && qC(o2).length > 0 || o2.typeParameters || qC(o2).some((e3) => "Identifier" !== e3.type), "ArrowFunctionExpression" !== o2.body.type || r2 && r2.expandLastArg ? u2.unshift(n2("body", r2)) : (o2 = o2.body, e2.call(a3, "body"));
        }(), i2.length > 1)
          return function(e3, t3, n3, r3, o3, i3) {
            const u3 = e3.getName(), s3 = e3.getParentNode(), a3 = tv(s3) && "callee" === u3, c3 = Boolean(t3 && t3.assignmentLayout), l3 = "BlockStatement" !== i3.body.type && "ObjectExpression" !== i3.body.type, p3 = a3 && l3 || t3 && "chain-tail-arrow-chain" === t3.assignmentLayout, f2 = Symbol("arrow-chain");
            return LC([LC(_C([a3 || c3 ? jC : "", LC(VC([" =>", IC], n3), { shouldBreak: r3 })]), { id: f2, shouldBreak: p3 }), " =>", $C(l3 ? _C([IC, o3]) : [" ", o3], { groupId: f2 }), a3 ? MC(jC, "", { groupId: f2 }) : ""]);
          }(e2, r2, i2, s2, u2, o2);
        const a2 = i2;
        if (a2.push(" =>"), !WC(t2.originalText, o2.body) && ("ArrayExpression" === o2.body.type || "ObjectExpression" === o2.body.type || "BlockStatement" === o2.body.type || zC(o2.body) || HC(o2.body, t2.originalText) || "ArrowFunctionExpression" === o2.body.type || "DoExpression" === o2.body.type))
          return LC([...a2, " ", u2]);
        if ("SequenceExpression" === o2.body.type)
          return LC([...a2, LC([" (", _C([jC, u2]), jC, ")"])]);
        const c2 = (r2 && r2.expandLastArg || "JSXExpressionContainer" === e2.getParentNode().type) && !QC(o2), l2 = r2 && r2.expandLastArg && GC(t2, "all"), p2 = "ConditionalExpression" === o2.body.type && !JC(o2.body, false);
        return LC([...a2, LC([_C([IC, p2 ? MC("", "(") : "", u2, p2 ? MC("", ")") : ""]), c2 ? [MC(l2 ? "," : ""), jC] : ""])]);
      }, printMethod: function(e2, t2, n2) {
        const r2 = e2.getNode(), { kind: o2 } = r2, i2 = r2.value || r2, u2 = [];
        return o2 && "init" !== o2 && "method" !== o2 && "constructor" !== o2 ? (Il.ok("get" === o2 || "set" === o2), u2.push(o2, " ")) : i2.async && u2.push("async "), i2.generator && u2.push("*"), u2.push(iv(e2, t2, n2), r2.optional || r2.key.optional ? "?" : ""), r2 === i2 ? u2.push(sv(e2, t2, n2)) : "FunctionExpression" === i2.type ? u2.push(e2.call((e3) => sv(e3, t2, n2), "value")) : u2.push(n2("value")), u2;
      }, printReturnStatement: function(e2, t2, n2) {
        return ["return", lv(e2, t2, n2)];
      }, printThrowStatement: function(e2, t2, n2) {
        return ["throw", lv(e2, t2, n2)];
      }, printMethodInternal: sv, shouldPrintParamsWithoutParens: av };
      const { isNonEmptyArray: fv, hasNewline: dv } = rn, { builders: { line: hv, hardline: mv, join: gv, breakParent: yv, group: Dv } } = Rn, { locStart: Ev, locEnd: bv } = ea, { getParentExportDeclaration: Cv } = pd;
      function vv(e2, t2) {
        return e2.decorators.some((e3) => dv(t2.originalText, bv(e3)));
      }
      function Av(e2) {
        if ("ExportDefaultDeclaration" !== e2.type && "ExportNamedDeclaration" !== e2.type && "DeclareExportDeclaration" !== e2.type)
          return false;
        const t2 = e2.declaration && e2.declaration.decorators;
        return fv(t2) && Ev(e2, { ignoreDecorators: true }) > Ev(t2[0]);
      }
      var Fv = { printDecorators: function(e2, t2, n2) {
        const r2 = e2.getValue(), { decorators: o2 } = r2;
        if (!fv(o2) || Av(e2.getParentNode()))
          return;
        const i2 = "ClassExpression" === r2.type || "ClassDeclaration" === r2.type || vv(r2, t2);
        return [Cv(e2) ? mv : i2 ? yv : "", gv(hv, e2.map(n2, "decorators")), hv];
      }, printClassMemberDecorators: function(e2, t2, n2) {
        const r2 = e2.getValue();
        return Dv([gv(hv, e2.map(n2, "decorators")), vv(r2, t2) ? mv : hv]);
      }, printDecoratorsBeforeExport: function(e2, t2, n2) {
        return [gv(mv, e2.map(n2, "declaration", "decorators")), mv];
      }, hasDecoratorsBeforeExport: Av };
      const { isNonEmptyArray: xv, createGroupIdMapper: Sv } = rn, { printComments: wv, printDanglingComments: Tv } = up, { builders: { join: Bv, line: kv, hardline: Nv, softline: Pv, group: Ov, indent: Iv, ifBreak: jv } } = Rn, { hasComment: Lv, CommentCheckFlags: _v } = pd, { getTypeParametersGroupId: Mv } = DC, { printMethod: Rv } = pv, { printOptionalToken: Vv, printTypeAnnotation: $v } = $y, { printPropertyKey: qv } = kC, { printAssignment: Wv } = ib, { printClassMemberDecorators: Uv } = Fv;
      const zv = Sv("heritageGroup");
      function Hv(e2) {
        return e2.typeParameters && !Lv(e2.typeParameters, _v.Trailing | _v.Line) && !function(e3) {
          return ["superClass", "extends", "mixins", "implements"].filter((t2) => Boolean(e3[t2])).length > 1;
        }(e2);
      }
      function Gv(e2, t2, n2, r2) {
        const o2 = e2.getValue();
        if (!xv(o2[r2]))
          return "";
        const i2 = Tv(e2, t2, true, ({ marker: e3 }) => e3 === r2);
        return [Hv(o2) ? jv(" ", kv, { groupId: Mv(o2.typeParameters) }) : kv, i2, i2 && Nv, r2, Ov(Iv([kv, Bv([",", kv], e2.map(n2, r2))]))];
      }
      function Jv(e2, t2, n2) {
        const r2 = n2("superClass");
        return "AssignmentExpression" === e2.getParentNode().type ? Ov(jv(["(", Iv([Pv, r2]), Pv, ")"], r2)) : r2;
      }
      var Xv = { printClass: function(e2, t2, n2) {
        const r2 = e2.getValue(), o2 = [];
        r2.declare && o2.push("declare "), r2.abstract && o2.push("abstract "), o2.push("class");
        const i2 = r2.id && Lv(r2.id, _v.Trailing) || r2.superClass && Lv(r2.superClass) || xv(r2.extends) || xv(r2.mixins) || xv(r2.implements), u2 = [], s2 = [];
        if (r2.id && u2.push(" ", n2("id")), u2.push(n2("typeParameters")), r2.superClass) {
          const r3 = ["extends ", Jv(e2, t2, n2), n2("superTypeParameters")], o3 = e2.call((e3) => wv(e3, r3, t2), "superClass");
          i2 ? s2.push(kv, Ov(o3)) : s2.push(" ", o3);
        } else
          s2.push(Gv(e2, t2, n2, "extends"));
        if (s2.push(Gv(e2, t2, n2, "mixins"), Gv(e2, t2, n2, "implements")), i2) {
          let e3;
          e3 = Hv(r2) ? [...u2, Iv(s2)] : Iv([...u2, s2]), o2.push(Ov(e3, { id: zv(r2) }));
        } else
          o2.push(...u2, ...s2);
        return o2.push(" ", n2("body")), o2;
      }, printClassMethod: function(e2, t2, n2) {
        const r2 = e2.getValue(), o2 = [];
        return xv(r2.decorators) && o2.push(Uv(e2, t2, n2)), r2.accessibility && o2.push(r2.accessibility + " "), r2.readonly && o2.push("readonly "), r2.declare && o2.push("declare "), r2.static && o2.push("static "), r2.override && o2.push("override "), ("TSAbstractMethodDefinition" === r2.type || r2.abstract) && o2.push("abstract "), o2.push(Rv(e2, t2, n2)), o2;
      }, printClassProperty: function(e2, t2, n2) {
        const r2 = e2.getValue(), o2 = [], i2 = t2.semi ? ";" : "";
        return xv(r2.decorators) && o2.push(Uv(e2, t2, n2)), r2.accessibility && o2.push(r2.accessibility + " "), r2.declare && o2.push("declare "), r2.static && o2.push("static "), r2.override && o2.push("override "), ("TSAbstractClassProperty" === r2.type || r2.abstract) && o2.push("abstract "), r2.readonly && o2.push("readonly "), r2.variance && o2.push(n2("variance")), o2.push(qv(e2, t2, n2), Vv(e2), $v(e2, t2, n2)), [Wv(e2, t2, n2, o2, " =", "value"), i2];
      }, printHardlineAfterHeritage: function(e2) {
        return jv(Nv, "", { groupId: zv(e2) });
      } };
      const { isNonEmptyArray: Yv } = rn, { builders: { join: Kv, line: Qv, group: Zv, indent: eA, ifBreak: tA } } = Rn, { hasComment: nA, identity: rA, CommentCheckFlags: oA } = pd, { getTypeParametersGroupId: iA } = DC, { printTypeScriptModifiers: uA } = $y;
      var sA = { printInterface: function(e2, t2, n2) {
        const r2 = e2.getValue(), o2 = [];
        r2.declare && o2.push("declare "), "TSInterfaceDeclaration" === r2.type && o2.push(r2.abstract ? "abstract " : "", uA(e2, t2, n2)), o2.push("interface");
        const i2 = [], u2 = [];
        "InterfaceTypeAnnotation" !== r2.type && i2.push(" ", n2("id"), n2("typeParameters"));
        const s2 = r2.typeParameters && !nA(r2.typeParameters, oA.Trailing | oA.Line);
        return Yv(r2.extends) && u2.push(s2 ? tA(" ", Qv, { groupId: iA(r2.typeParameters) }) : Qv, "extends ", (1 === r2.extends.length ? rA : eA)(Kv([",", Qv], e2.map(n2, "extends")))), r2.id && nA(r2.id, oA.Trailing) || Yv(r2.extends) ? s2 ? o2.push(Zv([...i2, eA(u2)])) : o2.push(Zv(eA([...i2, ...u2]))) : o2.push(...i2, ...u2), o2.push(" ", n2("body")), Zv(o2);
      } };
      const { isNonEmptyArray: aA } = rn, { builders: { softline: cA, group: lA, indent: pA, join: fA, line: dA, ifBreak: hA, hardline: mA } } = Rn, { printDanglingComments: gA } = up, { hasComment: yA, CommentCheckFlags: DA, shouldPrintComma: EA, needsHardlineAfterDanglingComment: bA } = pd, { locStart: CA, hasSameLoc: vA } = ea, { hasDecoratorsBeforeExport: AA, printDecoratorsBeforeExport: FA } = Fv;
      function xA(e2, t2, n2) {
        const r2 = e2.getValue();
        if (!r2.source)
          return "";
        const o2 = [];
        return wA(r2, t2) || o2.push(" from"), o2.push(" ", n2("source")), o2;
      }
      function SA(e2, t2, n2) {
        const r2 = e2.getValue();
        if (wA(r2, t2))
          return "";
        const o2 = [" "];
        if (aA(r2.specifiers)) {
          const i2 = [], u2 = [];
          if (e2.each(() => {
            const t3 = e2.getValue().type;
            if ("ExportNamespaceSpecifier" === t3 || "ExportDefaultSpecifier" === t3 || "ImportNamespaceSpecifier" === t3 || "ImportDefaultSpecifier" === t3)
              i2.push(n2());
            else {
              if ("ExportSpecifier" !== t3 && "ImportSpecifier" !== t3)
                throw new Error("Unknown specifier type ".concat(JSON.stringify(t3)));
              u2.push(n2());
            }
          }, "specifiers"), o2.push(fA(", ", i2)), u2.length > 0) {
            i2.length > 0 && o2.push(", ");
            u2.length > 1 || i2.length > 0 || r2.specifiers.some((e3) => yA(e3)) ? o2.push(lA(["{", pA([t2.bracketSpacing ? dA : cA, fA([",", dA], u2)]), hA(EA(t2) ? "," : ""), t2.bracketSpacing ? dA : cA, "}"])) : o2.push(["{", t2.bracketSpacing ? " " : "", ...u2, t2.bracketSpacing ? " " : "", "}"]);
          }
        } else
          o2.push("{}");
        return o2;
      }
      function wA(e2, t2) {
        const { type: n2, importKind: r2, source: o2, specifiers: i2 } = e2;
        return "ImportDeclaration" === n2 && !aA(i2) && "type" !== r2 && !/{\s*}/.test(t2.originalText.slice(CA(e2), CA(o2)));
      }
      function TA(e2, t2, n2) {
        const r2 = e2.getNode();
        return aA(r2.assertions) ? [" assert {", t2.bracketSpacing ? " " : "", fA(", ", e2.map(n2, "assertions")), t2.bracketSpacing ? " " : "", "}"] : "";
      }
      var BA = { printImportDeclaration: function(e2, t2, n2) {
        const r2 = e2.getValue(), o2 = t2.semi ? ";" : "", i2 = [], { importKind: u2 } = r2;
        return i2.push("import"), u2 && "value" !== u2 && i2.push(" ", u2), i2.push(SA(e2, t2, n2), xA(e2, t2, n2), TA(e2, t2, n2), o2), i2;
      }, printExportDeclaration: function(e2, t2, n2) {
        const r2 = e2.getValue(), o2 = [];
        AA(r2) && o2.push(FA(e2, t2, n2));
        const { type: i2, exportKind: u2, declaration: s2 } = r2;
        return o2.push("export"), (r2.default || "ExportDefaultDeclaration" === i2) && o2.push(" default"), yA(r2, DA.Dangling) && (o2.push(" ", gA(e2, t2, true)), bA(r2) && o2.push(mA)), s2 ? o2.push(" ", n2("declaration")) : o2.push("type" === u2 ? " type" : "", SA(e2, t2, n2), xA(e2, t2, n2), TA(e2, t2, n2)), function(e3, t3) {
          if (!t3.semi)
            return false;
          const { type: n3, declaration: r3 } = e3, o3 = e3.default || "ExportDefaultDeclaration" === n3;
          if (!r3)
            return true;
          const { type: i3 } = r3;
          if (o3 && "ClassDeclaration" !== i3 && "FunctionDeclaration" !== i3 && "TSInterfaceDeclaration" !== i3 && "DeclareClass" !== i3 && "DeclareFunction" !== i3 && "TSDeclareFunction" !== i3 && "EnumDeclaration" !== i3)
            return true;
          return false;
        }(r2, t2) && o2.push(";"), o2;
      }, printExportAllDeclaration: function(e2, t2, n2) {
        const r2 = e2.getValue(), o2 = t2.semi ? ";" : "", i2 = [], { exportKind: u2, exported: s2 } = r2;
        return i2.push("export"), "type" === u2 && i2.push(" type"), i2.push(" *"), s2 && i2.push(" as ", n2("exported")), i2.push(xA(e2, t2, n2), TA(e2, t2, n2), o2), i2;
      }, printModuleSpecifier: function(e2, t2, n2) {
        const r2 = e2.getNode(), { type: o2, importKind: i2 } = r2, u2 = [];
        "ImportSpecifier" === o2 && i2 && u2.push(i2, " ");
        const s2 = o2.startsWith("Import"), a2 = s2 ? "imported" : "local", c2 = s2 ? "local" : "exported";
        let l2 = "", p2 = "";
        return "ExportNamespaceSpecifier" === o2 || "ImportNamespaceSpecifier" === o2 ? l2 = "*" : r2[a2] && (l2 = n2(a2)), !r2[c2] || r2[a2] && vA(r2[a2], r2[c2]) || (p2 = n2(c2)), u2.push(l2, l2 && p2 ? " as " : "", p2), u2;
      } };
      const { getParentExportDeclaration: kA } = pd, { printClass: NA } = Xv, { printOpaqueType: PA, printTypeAlias: OA, printIntersectionType: IA, printUnionType: jA, printFunctionType: LA, printTupleType: _A, printIndexedAccessType: MA } = Zb, { printInterface: RA } = sA, { printTypeParameters: VA } = DC, { printExportDeclaration: $A, printExportAllDeclaration: qA } = BA;
      function WA(e2, t2) {
        const n2 = kA(e2);
        return n2 ? (Il.strictEqual(n2.type, "DeclareExportDeclaration"), t2) : ["declare ", t2];
      }
      var UA = { printFlow: function(e2, t2, n2) {
        const r2 = e2.getValue(), o2 = t2.semi ? ";" : "";
        switch (r2.type) {
          case "DeclareClass":
            return WA(e2, NA(e2, t2, n2));
          case "DeclareFunction":
            return WA(e2, ["function ", n2("id"), r2.predicate ? " " : "", n2("predicate"), o2]);
          case "DeclareModule":
            return WA(e2, ["module ", n2("id"), " ", n2("body")]);
          case "DeclareModuleExports":
            return WA(e2, ["module.exports", ": ", n2("typeAnnotation"), o2]);
          case "DeclareVariable":
            return WA(e2, ["var ", n2("id"), o2]);
          case "DeclareOpaqueType":
            return WA(e2, PA(e2, t2, n2));
          case "DeclareInterface":
            return WA(e2, RA(e2, t2, n2));
          case "DeclareTypeAlias":
            return WA(e2, OA(e2, t2, n2));
          case "DeclareExportDeclaration":
            return WA(e2, $A(e2, t2, n2));
          case "DeclareExportAllDeclaration":
            return WA(e2, qA(e2, t2, n2));
          case "OpaqueType":
            return PA(e2, t2, n2);
          case "TypeAlias":
            return OA(e2, t2, n2);
          case "IntersectionTypeAnnotation":
            return IA(e2, t2, n2);
          case "UnionTypeAnnotation":
            return jA(e2, t2, n2);
          case "FunctionTypeAnnotation":
            return LA(e2, t2, n2);
          case "TupleTypeAnnotation":
            return _A(e2, t2, n2);
          case "GenericTypeAnnotation":
            return [n2("id"), VA(e2, t2, n2, "typeParameters")];
          case "IndexedAccessType":
          case "OptionalIndexedAccessType":
            return MA(e2, t2, n2);
          case "TypeAnnotation":
            return n2("typeAnnotation");
        }
      } };
      const { hasNewlineInRange: zA } = rn, { isJsxNode: HA, isBlockComment: GA, getComments: JA, isCallExpression: XA, isMemberExpression: YA } = pd, { locStart: KA, locEnd: QA } = ea, { builders: { line: ZA, softline: eF, group: tF, indent: nF, align: rF, ifBreak: oF, dedent: iF, breakParent: uF } } = Rn;
      function sF(e2, t2, n2) {
        const r2 = e2.getValue(), o2 = "ConditionalExpression" === r2.type, i2 = o2 ? "alternate" : "falseType", u2 = e2.getParentNode(), s2 = o2 ? n2("test") : [n2("checkType"), " ", "extends", " ", n2("extendsType")];
        return u2.type === r2.type && u2[i2] === r2 ? rF(2, s2) : s2;
      }
      const aF = /* @__PURE__ */ new Map([["AssignmentExpression", "right"], ["VariableDeclarator", "init"], ["ReturnStatement", "argument"], ["ThrowStatement", "argument"], ["UnaryExpression", "argument"], ["YieldExpression", "argument"]]);
      var cF = { printTernary: function(e2, t2, n2) {
        const r2 = e2.getValue(), o2 = "ConditionalExpression" === r2.type, i2 = o2 ? "consequent" : "trueType", u2 = o2 ? "alternate" : "falseType", s2 = o2 ? ["test"] : ["checkType", "extendsType"], a2 = r2[i2], c2 = r2[u2], l2 = [];
        let p2 = false;
        const f2 = e2.getParentNode(), d2 = f2.type === r2.type && s2.some((e3) => f2[e3] === r2);
        let h2, m2, g2 = f2.type === r2.type && !d2, y2 = 0;
        do {
          m2 = h2 || r2, h2 = e2.getParentNode(y2), y2++;
        } while (h2 && h2.type === r2.type && s2.every((e3) => h2[e3] !== m2));
        const D2 = h2 || f2, E2 = m2;
        if (o2 && (HA(r2[s2[0]]) || HA(a2) || HA(c2) || function(e3) {
          const t3 = [e3];
          for (let e4 = 0; e4 < t3.length; e4++) {
            const n3 = t3[e4];
            for (const e5 of ["test", "consequent", "alternate"]) {
              const r3 = n3[e5];
              if (HA(r3))
                return true;
              "ConditionalExpression" === r3.type && t3.push(r3);
            }
          }
          return false;
        }(E2))) {
          p2 = true, g2 = true;
          const e3 = (e4) => [oF("("), nF([eF, e4]), eF, oF(")")], t3 = (e4) => "NullLiteral" === e4.type || "Literal" === e4.type && null === e4.value || "Identifier" === e4.type && "undefined" === e4.name;
          l2.push(" ? ", t3(a2) ? n2(i2) : e3(n2(i2)), " : ", c2.type === r2.type || t3(c2) ? n2(u2) : e3(n2(u2)));
        } else {
          const e3 = [ZA, "? ", a2.type === r2.type ? oF("", "(") : "", rF(2, n2(i2)), a2.type === r2.type ? oF("", ")") : "", ZA, ": ", c2.type === r2.type ? n2(u2) : rF(2, n2(u2))];
          l2.push(f2.type !== r2.type || f2[u2] === r2 || d2 ? e3 : t2.useTabs ? iF(nF(e3)) : rF(Math.max(0, t2.tabWidth - 2), e3));
        }
        const b2 = Ws([...s2.map((e3) => JA(r2[e3])), JA(a2), JA(c2)]).some((e3) => GA(e3) && zA(t2.originalText, KA(e3), QA(e3))), C2 = !p2 && (YA(f2) || "NGPipeExpression" === f2.type && f2.left === r2) && !f2.computed, v2 = function(e3) {
          const t3 = e3.getValue();
          if ("ConditionalExpression" !== t3.type)
            return false;
          let n3, r3 = t3;
          for (let t4 = 0; !n3; t4++) {
            const o3 = e3.getParentNode(t4);
            XA(o3) && o3.callee === r3 || YA(o3) && o3.object === r3 || "TSNonNullExpression" === o3.type && o3.expression === r3 ? r3 = o3 : "NewExpression" === o3.type && o3.callee === r3 || "TSAsExpression" === o3.type && o3.expression === r3 ? (n3 = e3.getParentNode(t4 + 1), r3 = o3) : n3 = o3;
          }
          return r3 !== t3 && n3[aF.get(n3.type)] === r3;
        }(e2), A4 = (F2 = [sF(e2, 0, n2), g2 ? l2 : nF(l2), o2 && C2 && !v2 ? eF : ""], f2 === D2 ? tF(F2, { shouldBreak: b2 }) : b2 ? [F2, uF] : F2);
        var F2;
        return d2 || v2 ? tF([nF([eF, A4]), eF]) : A4;
      } };
      const { printDanglingComments: lF } = up, { builders: { line: pF, softline: fF, group: dF, indent: hF, ifBreak: mF, hardline: gF } } = Rn, { getLast: yF, hasNewlineInRange: DF, hasNewline: EF, isNonEmptyArray: bF } = rn, { shouldPrintComma: CF, hasComment: vF, getComments: AF, CommentCheckFlags: FF, isNextLineEmpty: xF } = pd, { locStart: SF, locEnd: wF } = ea, { printOptionalToken: TF, printTypeAnnotation: BF } = $y, { shouldHugFunctionParameters: kF } = Nb, { shouldHugType: NF } = Zb, { printHardlineAfterHeritage: PF } = Xv;
      var OF = { printObject: function(e2, t2, n2) {
        const r2 = t2.semi ? ";" : "", o2 = e2.getValue();
        let i2;
        i2 = "TSTypeLiteral" === o2.type ? "members" : "TSInterfaceBody" === o2.type ? "body" : "properties";
        const u2 = "ObjectTypeAnnotation" === o2.type, s2 = [i2];
        u2 && s2.push("indexers", "callProperties", "internalSlots");
        const a2 = s2.map((e3) => o2[e3][0]).sort((e3, t3) => SF(e3) - SF(t3))[0], c2 = e2.getParentNode(0), l2 = u2 && c2 && ("InterfaceDeclaration" === c2.type || "DeclareInterface" === c2.type || "DeclareClass" === c2.type) && "body" === e2.getName(), p2 = "TSInterfaceBody" === o2.type || l2 || "ObjectPattern" === o2.type && "FunctionDeclaration" !== c2.type && "FunctionExpression" !== c2.type && "ArrowFunctionExpression" !== c2.type && "ObjectMethod" !== c2.type && "ClassMethod" !== c2.type && "ClassPrivateMethod" !== c2.type && "AssignmentPattern" !== c2.type && "CatchClause" !== c2.type && o2.properties.some((e3) => e3.value && ("ObjectPattern" === e3.value.type || "ArrayPattern" === e3.value.type)) || "ObjectPattern" !== o2.type && a2 && DF(t2.originalText, SF(o2), SF(a2)), f2 = l2 ? ";" : "TSInterfaceBody" === o2.type || "TSTypeLiteral" === o2.type ? mF(r2, ";") : ",", d2 = "RecordExpression" === o2.type ? "#{" : o2.exact ? "{|" : "{", h2 = o2.exact ? "|}" : "}", m2 = [];
        for (const t3 of s2)
          e2.each((e3) => {
            const t4 = e3.getValue();
            m2.push({ node: t4, printed: n2(), loc: SF(t4) });
          }, t3);
        s2.length > 1 && m2.sort((e3, t3) => e3.loc - t3.loc);
        let g2 = [];
        const y2 = m2.map((e3) => {
          const n3 = [...g2, dF(e3.printed)];
          return g2 = [f2, pF], "TSPropertySignature" !== e3.node.type && "TSMethodSignature" !== e3.node.type && "TSConstructSignatureDeclaration" !== e3.node.type || !vF(e3.node, FF.PrettierIgnore) || g2.shift(), xF(e3.node, t2) && g2.push(gF), n3;
        });
        if (o2.inexact) {
          let n3;
          if (vF(o2, FF.Dangling)) {
            const r3 = vF(o2, FF.Line);
            n3 = [lF(e2, t2, true), r3 || EF(t2.originalText, wF(yF(AF(o2)))) ? gF : pF, "..."];
          } else
            n3 = ["..."];
          y2.push([...g2, ...n3]);
        }
        const D2 = yF(o2[i2]), E2 = !(o2.inexact || D2 && "RestElement" === D2.type || D2 && ("TSPropertySignature" === D2.type || "TSCallSignatureDeclaration" === D2.type || "TSMethodSignature" === D2.type || "TSConstructSignatureDeclaration" === D2.type) && vF(D2, FF.PrettierIgnore));
        let b2;
        if (0 === y2.length) {
          if (!vF(o2, FF.Dangling))
            return [d2, h2, BF(e2, t2, n2)];
          b2 = dF([d2, lF(e2, t2), fF, h2, TF(e2), BF(e2, t2, n2)]);
        } else
          b2 = [l2 && bF(o2.properties) ? PF(c2) : "", d2, hF([t2.bracketSpacing ? pF : fF, ...y2]), mF(E2 && ("," !== f2 || CF(t2)) ? f2 : ""), t2.bracketSpacing ? pF : fF, h2, TF(e2), BF(e2, t2, n2)];
        return e2.match((e3) => "ObjectPattern" === e3.type && !e3.decorators, (e3, t3, n3) => kF(e3) && ("params" === t3 || "parameters" === t3 || "this" === t3 || "rest" === t3) && 0 === n3) || e2.match(NF, (e3, t3) => "typeAnnotation" === t3, (e3, t3) => "typeAnnotation" === t3, (e3, t3, n3) => kF(e3) && ("params" === t3 || "parameters" === t3 || "this" === t3 || "rest" === t3) && 0 === n3) || !p2 && e2.match((e3) => "ObjectPattern" === e3.type, (e3) => "AssignmentExpression" === e3.type || "VariableDeclarator" === e3.type) ? b2 : dF(b2, { shouldBreak: p2 });
      } };
      const { builders: { hardline: IF } } = Rn, { getLeftSidePathName: jF, hasNakedLeftSide: LF, isJsxNode: _F, isTheOnlyJsxElementInMarkdown: MF, hasComment: RF, CommentCheckFlags: VF, isNextLineEmpty: $F } = pd, { shouldPrintParamsWithoutParens: qF } = pv;
      function WF(e2, t2, n2, r2) {
        const o2 = e2.getValue(), i2 = [], u2 = "ClassBody" === o2.type, s2 = function(e3) {
          for (let t3 = e3.length - 1; t3 >= 0; t3--) {
            const n3 = e3[t3];
            if ("EmptyStatement" !== n3.type)
              return n3;
          }
        }(o2[r2]);
        return e2.each((e3, r3, o3) => {
          const a2 = e3.getValue();
          if ("EmptyStatement" === a2.type)
            return;
          const c2 = n2();
          t2.semi || u2 || MF(t2, e3) || !function(e4, t3) {
            if ("ExpressionStatement" !== e4.getNode().type)
              return false;
            return e4.call((e5) => UF(e5, t3), "expression");
          }(e3, t2) ? i2.push(c2) : RF(a2, VF.Leading) ? i2.push(n2([], { needsSemi: true })) : i2.push(";", c2), !t2.semi && u2 && zF(a2) && function(e4, t3) {
            const n3 = e4.key && e4.key.name;
            if (!("static" !== n3 && "get" !== n3 && "set" !== n3 || e4.value || e4.typeAnnotation))
              return true;
            if (!t3)
              return false;
            if (t3.static || t3.accessibility)
              return false;
            if (!t3.computed) {
              const e5 = t3.key && t3.key.name;
              if ("in" === e5 || "instanceof" === e5)
                return true;
            }
            switch (t3.type) {
              case "ClassProperty":
              case "PropertyDefinition":
              case "TSAbstractClassProperty":
                return t3.computed;
              case "MethodDefinition":
              case "TSAbstractMethodDefinition":
              case "ClassMethod":
              case "ClassPrivateMethod": {
                if ((t3.value ? t3.value.async : t3.async) || "get" === t3.kind || "set" === t3.kind)
                  return false;
                const e5 = t3.value ? t3.value.generator : t3.generator;
                return !(!t3.computed && !e5);
              }
              case "TSIndexSignature":
                return true;
            }
            return false;
          }(a2, o3[r3 + 1]) && i2.push(";"), a2 !== s2 && (i2.push(IF), $F(a2, t2) && i2.push(IF));
        }, r2), i2;
      }
      function UF(e2, t2) {
        const n2 = e2.getValue();
        switch (n2.type) {
          case "ParenthesizedExpression":
          case "TypeCastExpression":
          case "ArrayExpression":
          case "ArrayPattern":
          case "TemplateLiteral":
          case "TemplateElement":
          case "RegExpLiteral":
            return true;
          case "ArrowFunctionExpression":
            if (!qF(e2, t2))
              return true;
            break;
          case "UnaryExpression": {
            const { prefix: e3, operator: t3 } = n2;
            if (e3 && ("+" === t3 || "-" === t3))
              return true;
            break;
          }
          case "BindExpression":
            if (!n2.object)
              return true;
            break;
          case "Literal":
            if (n2.regex)
              return true;
            break;
          default:
            if (_F(n2))
              return true;
        }
        return !!fg(e2, t2) || !!LF(n2) && e2.call((e3) => UF(e3, t2), ...jF(e2, n2));
      }
      const zF = ({ type: e2 }) => "ClassProperty" === e2 || "PropertyDefinition" === e2 || "ClassPrivateProperty" === e2;
      var HF = { printBody: function(e2, t2, n2) {
        return WF(e2, t2, n2, "body");
      }, printSwitchCaseConsequent: function(e2, t2, n2) {
        return WF(e2, t2, n2, "consequent");
      } };
      const { printDanglingComments: GF } = up, { isNonEmptyArray: JF } = rn, { builders: { hardline: XF, indent: YF } } = Rn, { hasComment: KF, CommentCheckFlags: QF, isNextLineEmpty: ZF } = pd, { printHardlineAfterHeritage: ex } = Xv, { printBody: tx } = HF;
      function nx(e2, t2, n2) {
        const r2 = e2.getValue(), o2 = JF(r2.directives), i2 = r2.body.some((e3) => "EmptyStatement" !== e3.type), u2 = KF(r2, QF.Dangling);
        if (!o2 && !i2 && !u2)
          return "";
        const s2 = [];
        if (o2 && e2.each((e3, r3, o3) => {
          s2.push(n2()), (r3 < o3.length - 1 || i2 || u2) && (s2.push(XF), ZF(e3.getValue(), t2) && s2.push(XF));
        }, "directives"), i2 && s2.push(tx(e2, t2, n2)), u2 && s2.push(GF(e2, t2, true)), "Program" === r2.type) {
          const t3 = e2.getParentNode();
          t3 && "ModuleExpression" === t3.type || s2.push(XF);
        }
        return s2;
      }
      var rx = { printBlock: function(e2, t2, n2) {
        const r2 = e2.getValue(), o2 = [];
        if ("StaticBlock" === r2.type && o2.push("static "), "ClassBody" === r2.type && JF(r2.body)) {
          const t3 = e2.getParentNode();
          o2.push(ex(t3));
        }
        o2.push("{");
        const i2 = nx(e2, t2, n2);
        if (i2)
          o2.push(YF([XF, i2]), XF);
        else {
          const t3 = e2.getParentNode(), n3 = e2.getParentNode(1);
          "ArrowFunctionExpression" === t3.type || "FunctionExpression" === t3.type || "FunctionDeclaration" === t3.type || "ObjectMethod" === t3.type || "ClassMethod" === t3.type || "ClassPrivateMethod" === t3.type || "ForStatement" === t3.type || "WhileStatement" === t3.type || "DoWhileStatement" === t3.type || "DoExpression" === t3.type || "CatchClause" === t3.type && !n3.finalizer || "TSModuleDeclaration" === t3.type || "TSDeclareFunction" === t3.type || "StaticBlock" === r2.type || "ClassBody" === r2.type || o2.push(XF);
        }
        return o2.push("}"), o2;
      }, printBlockBody: nx };
      const { printDanglingComments: ox } = up, { hasNewlineInRange: ix } = rn, { builders: { join: ux, line: sx, hardline: ax, softline: cx, group: lx, indent: px, conditionalGroup: fx, ifBreak: dx } } = Rn, { isLiteral: hx, getTypeScriptMappedTypeModifier: mx, shouldPrintComma: gx, isCallExpression: yx, isMemberExpression: Dx } = pd, { locStart: Ex, locEnd: bx } = ea, { printOptionalToken: Cx, printTypeScriptModifiers: vx } = $y, { printTernary: Ax } = cF, { printFunctionParameters: Fx, shouldGroupFunctionParameters: xx } = Nb, { printTemplateLiteral: Sx } = kd, { printArrayItems: wx } = lD, { printObject: Tx } = OF, { printClassProperty: Bx, printClassMethod: kx } = Xv, { printTypeParameter: Nx, printTypeParameters: Px } = DC, { printPropertyKey: Ox } = kC, { printFunctionDeclaration: Ix, printMethodInternal: jx } = pv, { printInterface: Lx } = sA, { printBlock: _x } = rx, { printTypeAlias: Mx, printIntersectionType: Rx, printUnionType: Vx, printFunctionType: $x, printTupleType: qx, printIndexedAccessType: Wx } = Zb;
      var Ux = { printTypescript: function(e2, t2, n2) {
        const r2 = e2.getValue(), o2 = t2.semi ? ";" : "", i2 = [];
        switch (r2.type) {
          case "TSTypeAssertion": {
            const e3 = !("ArrayExpression" === r2.expression.type || "ObjectExpression" === r2.expression.type), t3 = lx(["<", px([cx, n2("typeAnnotation")]), cx, ">"]), o3 = [dx("("), px([cx, n2("expression")]), cx, dx(")")];
            return e3 ? fx([[t3, n2("expression")], [t3, lx(o3, { shouldBreak: true })], [t3, n2("expression")]]) : lx([t3, n2("expression")]);
          }
          case "TSDeclareFunction":
            return Ix(e2, n2, t2);
          case "TSExportAssignment":
            return ["export = ", n2("expression"), o2];
          case "TSModuleBlock":
            return _x(e2, t2, n2);
          case "TSInterfaceBody":
          case "TSTypeLiteral":
            return Tx(e2, t2, n2);
          case "TSTypeAliasDeclaration":
            return Mx(e2, t2, n2);
          case "TSQualifiedName":
            return ux(".", [n2("left"), n2("right")]);
          case "TSAbstractMethodDefinition":
          case "TSDeclareMethod":
            return kx(e2, t2, n2);
          case "TSAbstractClassProperty":
            return Bx(e2, t2, n2);
          case "TSInterfaceHeritage":
          case "TSExpressionWithTypeArguments":
            return i2.push(n2("expression")), r2.typeParameters && i2.push(n2("typeParameters")), i2;
          case "TSTemplateLiteralType":
            return Sx(e2, n2, t2);
          case "TSNamedTupleMember":
            return [n2("label"), r2.optional ? "?" : "", ": ", n2("elementType")];
          case "TSRestType":
            return ["...", n2("typeAnnotation")];
          case "TSOptionalType":
            return [n2("typeAnnotation"), "?"];
          case "TSInterfaceDeclaration":
            return Lx(e2, t2, n2);
          case "TSClassImplements":
            return [n2("expression"), n2("typeParameters")];
          case "TSTypeParameterDeclaration":
          case "TSTypeParameterInstantiation":
            return Px(e2, t2, n2, "params");
          case "TSTypeParameter":
          case "TypeParameter":
            return Nx(e2, t2, n2);
          case "TypeofTypeAnnotation":
            return ["typeof ", n2("argument")];
          case "TSAbstractKeyword":
            return "abstract";
          case "TSAsyncKeyword":
            return "async";
          case "TSDeclareKeyword":
            return "declare";
          case "TSExportKeyword":
            return "export";
          case "TSNeverKeyword":
            return "never";
          case "TSObjectKeyword":
            return "object";
          case "TSProtectedKeyword":
            return "protected";
          case "TSPrivateKeyword":
            return "private";
          case "TSPublicKeyword":
            return "public";
          case "TSReadonlyKeyword":
            return "readonly";
          case "TSStaticKeyword":
            return "static";
          case "TSUndefinedKeyword":
            return "undefined";
          case "TSUnknownKeyword":
            return "unknown";
          case "TSIntrinsicKeyword":
            return "intrinsic";
          case "TSAsExpression": {
            i2.push(n2("expression"), " as ", n2("typeAnnotation"));
            const t3 = e2.getParentNode();
            return yx(t3) && t3.callee === r2 || Dx(t3) && t3.object === r2 ? lx([px([cx, ...i2]), cx]) : i2;
          }
          case "TSArrayType":
            return [n2("elementType"), "[]"];
          case "TSPropertySignature":
            return r2.export && i2.push("export "), r2.accessibility && i2.push(r2.accessibility + " "), r2.static && i2.push("static "), r2.readonly && i2.push("readonly "), i2.push(Ox(e2, t2, n2), Cx(e2)), r2.typeAnnotation && i2.push(": ", n2("typeAnnotation")), r2.initializer && i2.push(" = ", n2("initializer")), i2;
          case "TSParameterProperty":
            return r2.accessibility && i2.push(r2.accessibility + " "), r2.export && i2.push("export "), r2.static && i2.push("static "), r2.readonly && i2.push("readonly "), i2.push(n2("parameter")), i2;
          case "TSTypeQuery":
            return ["typeof ", n2("exprName")];
          case "TSIndexSignature": {
            const i3 = e2.getParentNode(), u2 = r2.parameters.length > 1 ? dx(gx(t2) ? "," : "") : "", s2 = lx([px([cx, ux([", ", cx], e2.map(n2, "parameters"))]), u2, cx]);
            return [r2.export ? "export " : "", r2.accessibility ? [r2.accessibility, " "] : "", r2.static ? "static " : "", r2.readonly ? "readonly " : "", r2.declare ? "declare " : "", "[", r2.parameters ? s2 : "", r2.typeAnnotation ? "]: " : "]", r2.typeAnnotation ? n2("typeAnnotation") : "", "ClassBody" === i3.type ? o2 : ""];
          }
          case "TSTypePredicate":
            return [r2.asserts ? "asserts " : "", n2("parameterName"), r2.typeAnnotation ? [" is ", n2("typeAnnotation")] : ""];
          case "TSNonNullExpression":
            return [n2("expression"), "!"];
          case "TSImportType":
            return [r2.isTypeOf ? "typeof " : "", "import(", n2(r2.parameter ? "parameter" : "argument"), ")", r2.qualifier ? [".", n2("qualifier")] : "", Px(e2, t2, n2, "typeParameters")];
          case "TSLiteralType":
            return n2("literal");
          case "TSIndexedAccessType":
            return Wx(e2, t2, n2);
          case "TSConstructSignatureDeclaration":
          case "TSCallSignatureDeclaration":
          case "TSConstructorType":
            if ("TSConstructorType" === r2.type && r2.abstract && i2.push("abstract "), "TSCallSignatureDeclaration" !== r2.type && i2.push("new "), i2.push(lx(Fx(e2, n2, t2, false, true))), r2.returnType || r2.typeAnnotation) {
              const e3 = "TSConstructorType" === r2.type;
              i2.push(e3 ? " => " : ": ", n2("returnType"), n2("typeAnnotation"));
            }
            return i2;
          case "TSTypeOperator":
            return [r2.operator, " ", n2("typeAnnotation")];
          case "TSMappedType": {
            const i3 = ix(t2.originalText, Ex(r2), bx(r2));
            return lx(["{", px([t2.bracketSpacing ? sx : cx, r2.readonly ? [mx(r2.readonly, "readonly"), " "] : "", vx(e2, t2, n2), n2("typeParameter"), r2.optional ? mx(r2.optional, "?") : "", r2.typeAnnotation ? ": " : "", n2("typeAnnotation"), dx(o2)]), ox(e2, t2, true), t2.bracketSpacing ? sx : cx, "}"], { shouldBreak: i3 });
          }
          case "TSMethodSignature": {
            const o3 = r2.kind && "method" !== r2.kind ? "".concat(r2.kind, " ") : "";
            i2.push(r2.accessibility ? [r2.accessibility, " "] : "", o3, r2.export ? "export " : "", r2.static ? "static " : "", r2.readonly ? "readonly " : "", r2.abstract ? "abstract " : "", r2.declare ? "declare " : "", r2.computed ? "[" : "", n2("key"), r2.computed ? "]" : "", Cx(e2));
            const u2 = Fx(e2, n2, t2, false, true), s2 = r2.returnType ? "returnType" : "typeAnnotation", a2 = r2[s2], c2 = a2 ? n2(s2) : "", l2 = xx(r2, c2);
            return i2.push(l2 ? lx(u2) : u2), a2 && i2.push(": ", lx(c2)), lx(i2);
          }
          case "TSNamespaceExportDeclaration":
            return i2.push("export as namespace ", n2("id")), t2.semi && i2.push(";"), lx(i2);
          case "TSEnumDeclaration":
            return r2.declare && i2.push("declare "), r2.modifiers && i2.push(vx(e2, t2, n2)), r2.const && i2.push("const "), i2.push("enum ", n2("id"), " "), 0 === r2.members.length ? i2.push(lx(["{", ox(e2, t2), cx, "}"])) : i2.push(lx(["{", px([ax, wx(e2, t2, "members", n2), gx(t2, "es5") ? "," : ""]), ox(e2, t2, true), ax, "}"])), i2;
          case "TSEnumMember":
            return i2.push(n2("id")), r2.initializer && i2.push(" = ", n2("initializer")), i2;
          case "TSImportEqualsDeclaration":
            return r2.isExport && i2.push("export "), i2.push("import "), r2.importKind && "value" !== r2.importKind && i2.push(r2.importKind, " "), i2.push(n2("id"), " = ", n2("moduleReference")), t2.semi && i2.push(";"), lx(i2);
          case "TSExternalModuleReference":
            return ["require(", n2("expression"), ")"];
          case "TSModuleDeclaration": {
            const u2 = e2.getParentNode(), s2 = hx(r2.id), a2 = "TSModuleDeclaration" === u2.type, c2 = r2.body && "TSModuleDeclaration" === r2.body.type;
            if (a2)
              i2.push(".");
            else {
              r2.declare && i2.push("declare "), i2.push(vx(e2, t2, n2));
              const o3 = t2.originalText.slice(Ex(r2), Ex(r2.id));
              "Identifier" === r2.id.type && "global" === r2.id.name && !/namespace|module/.test(o3) || i2.push(s2 || /(^|\s)module(\s|$)/.test(o3) ? "module " : "namespace ");
            }
            return i2.push(n2("id")), c2 ? i2.push(n2("body")) : r2.body ? i2.push(" ", lx(n2("body"))) : i2.push(o2), i2;
          }
          case "TSPrivateIdentifier":
            return r2.escapedText;
          case "TSConditionalType":
            return Ax(e2, t2, n2);
          case "TSInferType":
            return ["infer", " ", n2("typeParameter")];
          case "TSIntersectionType":
            return Rx(e2, t2, n2);
          case "TSUnionType":
            return Vx(e2, t2, n2);
          case "TSFunctionType":
            return $x(e2, t2, n2);
          case "TSTupleType":
            return qx(e2, t2, n2);
          case "TSTypeReference":
            return [n2("typeName"), Px(e2, t2, n2, "typeParameters")];
          case "TSTypeAnnotation":
            return n2("typeAnnotation");
          case "TSEmptyBodyFunctionExpression":
            return jx(e2, t2, n2);
          case "TSJSDocAllType":
            return "*";
          case "TSJSDocUnknownType":
            return "?";
          case "TSJSDocNullableType":
            return ["?", n2("typeAnnotation")];
          case "TSJSDocNonNullableType":
            return ["!", n2("typeAnnotation")];
          case "TSJSDocFunctionType":
            return ["function(", "): ", n2("typeAnnotation")];
        }
      } };
      const { hasNewline: zx } = rn, { builders: { join: Hx, hardline: Gx }, utils: { replaceNewlinesWithLiterallines: Jx } } = Rn, { isLineComment: Xx, isBlockComment: Yx } = pd, { locStart: Kx, locEnd: Qx } = ea;
      var Zx = { printComment: function(e2, t2) {
        const n2 = e2.getValue();
        if (Xx(n2))
          return t2.originalText.slice(Kx(n2), Qx(n2)).trimEnd();
        if (Yx(n2)) {
          if (function(e4) {
            const t3 = "*".concat(e4.value, "*").split("\n");
            return t3.length > 1 && t3.every((e5) => "*" === e5.trim()[0]);
          }(n2)) {
            const e4 = function(e5) {
              const t3 = e5.value.split("\n");
              return ["/*", Hx(Gx, t3.map((e6, n3) => 0 === n3 ? e6.trimEnd() : " " + (n3 < t3.length - 1 ? e6.trim() : e6.trimStart()))), "*/"];
            }(n2);
            return n2.trailing && !zx(t2.originalText, Kx(n2), { backwards: true }) ? [Gx, e4] : e4;
          }
          const e3 = Qx(n2), r2 = "*-/" === t2.originalText.slice(e3 - 3, e3);
          return ["/*", Jx(n2.value), r2 ? "*-/" : "*/"];
        }
        throw new Error("Not a comment: " + JSON.stringify(n2));
      } };
      const { printString: eS, printNumber: tS } = rn;
      function nS(e2) {
        return e2.toLowerCase();
      }
      function rS({ pattern: e2, flags: t2 }) {
        return t2 = t2.split("").sort().join(""), "/".concat(e2, "/").concat(t2);
      }
      var oS = { printLiteral: function(e2, t2) {
        const n2 = e2.getNode();
        switch (n2.type) {
          case "RegExpLiteral":
            return rS(n2);
          case "BigIntLiteral":
            return nS(n2.bigint || n2.extra.raw);
          case "NumericLiteral":
            return tS(n2.extra.raw);
          case "StringLiteral":
            return eS(n2.extra.raw, t2);
          case "NullLiteral":
            return "null";
          case "BooleanLiteral":
            return String(n2.value);
          case "DecimalLiteral":
            return tS(n2.value) + "m";
          case "Literal": {
            if (n2.regex)
              return rS(n2.regex);
            if (n2.bigint)
              return nS(n2.raw);
            const { value: e3 } = n2;
            return "number" == typeof e3 ? tS(n2.raw) : "string" == typeof e3 ? eS(n2.raw, t2) : String(e3);
          }
        }
      } };
      const { printDanglingComments: iS } = up, { hasNewline: uS, printString: sS, printNumber: aS } = rn, { builders: { join: cS, line: lS, hardline: pS, softline: fS, literalline: dS, group: hS, indent: mS } } = Rn, { insertPragma: gS } = Xh, { getCallArguments: yS, hasFlowShorthandAnnotationComment: DS, hasComment: ES, CommentCheckFlags: bS, isFunctionNotation: CS, isGetterOrSetter: vS, isTheOnlyJsxElementInMarkdown: AS, isBlockComment: FS, isLineComment: xS, isNextLineEmpty: SS, needsHardlineAfterDanglingComment: wS, rawText: TS, shouldPrintComma: BS, hasIgnoreComment: kS, isCallExpression: NS, isMemberExpression: PS } = pd, { locStart: OS, locEnd: IS } = ea, { printHtmlBinding: jS, isVueEventBindingExpression: LS } = Eg, { printAngular: _S } = Zg, { printJsx: MS, hasJsxIgnoreComment: RS } = jy, { printFlow: VS } = UA, { printTypescript: $S } = Ux, { printOptionalToken: qS, printBindExpressionCallee: WS, printTypeAnnotation: US, adjustClause: zS } = $y, { printImportDeclaration: HS, printExportDeclaration: GS, printExportAllDeclaration: JS, printModuleSpecifier: XS } = BA, { printTernary: YS } = cF, { printTemplateLiteral: KS } = kd, { printArray: QS, printArrayItems: ZS } = lD, { printObject: ew } = OF, { printClass: tw, printClassMethod: nw, printClassProperty: rw } = Xv, { printTypeParameters: ow } = DC, { printPropertyKey: iw, printProperty: uw } = kC, { printFunctionDeclaration: sw, printArrowFunctionExpression: aw, printMethod: cw, printReturnStatement: lw, printThrowStatement: pw } = pv, { printCallExpression: fw } = IE, { printInterface: dw } = sA, { printVariableDeclarator: hw, printAssignmentExpression: mw } = ib, { printBinaryishExpression: gw } = Ug, { printSwitchCaseConsequent: yw } = HF, { printMemberExpression: Dw } = GD, { printBlock: Ew, printBlockBody: bw } = rx, { printComment: Cw } = Zx, { printLiteral: vw } = oS, { printDecorators: Aw } = Fv;
      function Fw(e2, t2) {
        const n2 = TS(e2), r2 = n2.slice(1, -1);
        if (r2.includes('"') || r2.includes("'"))
          return n2;
        const o2 = t2.singleQuote ? "'" : '"';
        return o2 + r2 + o2;
      }
      var xw = { preprocess: dg, print: function(e2, t2, n2, r2) {
        const o2 = function(e3, t3, n3, r3) {
          const o3 = e3.getValue(), i3 = t3.semi ? ";" : "";
          if (!o3)
            return "";
          if ("string" == typeof o3)
            return o3;
          for (const r4 of [vw, jS, _S, MS, VS, $S]) {
            const o4 = r4(e3, t3, n3);
            if (void 0 !== o4)
              return o4;
          }
          let u3 = [];
          switch (o3.type) {
            case "JsExpressionRoot":
              return n3("node");
            case "JsonRoot":
              return [n3("node"), pS];
            case "File":
              return o3.program && o3.program.interpreter && u3.push(n3(["program", "interpreter"])), u3.push(n3("program")), u3;
            case "Program":
              return bw(e3, t3, n3);
            case "EmptyStatement":
              return "";
            case "ExpressionStatement":
              if (o3.directive)
                return [Fw(o3.expression, t3), i3];
              if ("__vue_event_binding" === t3.parser) {
                const t4 = e3.getParentNode();
                if ("Program" === t4.type && 1 === t4.body.length && t4.body[0] === o3)
                  return [n3("expression"), LS(o3.expression) ? ";" : ""];
              }
              return [n3("expression"), AS(t3, e3) ? "" : i3];
            case "ParenthesizedExpression":
              return !ES(o3.expression) && ("ObjectExpression" === o3.expression.type || "ArrayExpression" === o3.expression.type) ? ["(", n3("expression"), ")"] : hS(["(", mS([fS, n3("expression")]), fS, ")"]);
            case "AssignmentExpression":
              return mw(e3, t3, n3);
            case "VariableDeclarator":
              return hw(e3, t3, n3);
            case "BinaryExpression":
            case "LogicalExpression":
              return gw(e3, t3, n3);
            case "AssignmentPattern":
              return [n3("left"), " = ", n3("right")];
            case "OptionalMemberExpression":
            case "MemberExpression":
              return Dw(e3, t3, n3);
            case "MetaProperty":
              return [n3("meta"), ".", n3("property")];
            case "BindExpression":
              return o3.object && u3.push(n3("object")), u3.push(hS(mS([fS, WS(e3, t3, n3)]))), u3;
            case "Identifier":
              return [o3.name, qS(e3), US(e3, t3, n3)];
            case "V8IntrinsicIdentifier":
              return ["%", o3.name];
            case "SpreadElement":
            case "SpreadElementPattern":
            case "SpreadProperty":
            case "SpreadPropertyPattern":
            case "RestElement":
            case "ObjectTypeSpreadProperty":
              return ["...", n3("argument"), US(e3, t3, n3)];
            case "FunctionDeclaration":
            case "FunctionExpression": {
              let o4 = false;
              if (r3 && r3.expandLastArg) {
                const t4 = e3.getParentNode();
                NS(t4) && yS(t4).length > 1 && (o4 = true);
              }
              return sw(e3, n3, t3, o4);
            }
            case "ArrowFunctionExpression":
              return aw(e3, t3, n3, r3);
            case "YieldExpression":
              return u3.push("yield"), o3.delegate && u3.push("*"), o3.argument && u3.push(" ", n3("argument")), u3;
            case "AwaitExpression":
              if (u3.push("await"), o3.argument) {
                u3.push(" ", n3("argument"));
                const t4 = e3.getParentNode();
                if (NS(t4) && t4.callee === o3 || PS(t4) && t4.object === o3) {
                  u3 = [mS([fS, ...u3]), fS];
                  const t5 = e3.findAncestor((e4) => "AwaitExpression" === e4.type || "BlockStatement" === e4.type);
                  if (!t5 || "AwaitExpression" !== t5.type)
                    return hS(u3);
                }
              }
              return u3;
            case "ExportDefaultDeclaration":
            case "ExportNamedDeclaration":
              return GS(e3, t3, n3);
            case "ExportAllDeclaration":
              return JS(e3, t3, n3);
            case "ImportDeclaration":
              return HS(e3, t3, n3);
            case "ImportSpecifier":
            case "ExportSpecifier":
            case "ImportNamespaceSpecifier":
            case "ExportNamespaceSpecifier":
            case "ImportDefaultSpecifier":
            case "ExportDefaultSpecifier":
              return XS(e3, t3, n3);
            case "ImportAttribute":
              return [n3("key"), ": ", n3("value")];
            case "Import":
              return "import";
            case "BlockStatement":
            case "StaticBlock":
            case "ClassBody":
              return Ew(e3, t3, n3);
            case "ThrowStatement":
              return pw(e3, t3, n3);
            case "ReturnStatement":
              return lw(e3, t3, n3);
            case "NewExpression":
            case "ImportExpression":
            case "OptionalCallExpression":
            case "CallExpression":
              return fw(e3, t3, n3);
            case "ObjectTypeInternalSlot":
              return [o3.static ? "static " : "", "[[", n3("id"), "]]", qS(e3), o3.method ? "" : ": ", n3("value")];
            case "ObjectExpression":
            case "ObjectPattern":
            case "ObjectTypeAnnotation":
            case "RecordExpression":
              return ew(e3, t3, n3);
            case "ObjectProperty":
            case "Property":
              return o3.method || "get" === o3.kind || "set" === o3.kind ? cw(e3, t3, n3) : uw(e3, t3, n3);
            case "ObjectMethod":
              return cw(e3, t3, n3);
            case "Decorator":
              return ["@", n3("expression")];
            case "ArrayExpression":
            case "ArrayPattern":
            case "TupleExpression":
              return QS(e3, t3, n3);
            case "SequenceExpression": {
              const t4 = e3.getParentNode(0);
              if ("ExpressionStatement" === t4.type || "ForStatement" === t4.type) {
                const t5 = [];
                return e3.each((e4, r4) => {
                  0 === r4 ? t5.push(n3()) : t5.push(",", mS([lS, n3()]));
                }, "expressions"), hS(t5);
              }
              return hS(cS([",", lS], e3.map(n3, "expressions")));
            }
            case "ThisExpression":
              return "this";
            case "Super":
              return "super";
            case "Directive":
              return [n3("value"), i3];
            case "DirectiveLiteral":
              return Fw(o3, t3);
            case "UnaryExpression":
              return u3.push(o3.operator), /[a-z]$/.test(o3.operator) && u3.push(" "), ES(o3.argument) ? u3.push(hS(["(", mS([fS, n3("argument")]), fS, ")"])) : u3.push(n3("argument")), u3;
            case "UpdateExpression":
              return u3.push(n3("argument"), o3.operator), o3.prefix && u3.reverse(), u3;
            case "ConditionalExpression":
              return YS(e3, t3, n3);
            case "VariableDeclaration": {
              const t4 = e3.map(n3, "declarations"), r4 = e3.getParentNode(), s3 = "ForStatement" === r4.type || "ForInStatement" === r4.type || "ForOfStatement" === r4.type, a3 = o3.declarations.some((e4) => e4.init);
              let c2;
              return 1 !== t4.length || ES(o3.declarations[0]) ? t4.length > 0 && (c2 = mS(t4[0])) : c2 = t4[0], u3 = [o3.declare ? "declare " : "", o3.kind, c2 ? [" ", c2] : "", mS(t4.slice(1).map((e4) => [",", a3 && !s3 ? pS : lS, e4]))], s3 && r4.body !== o3 || u3.push(i3), hS(u3);
            }
            case "WithStatement":
              return hS(["with (", n3("object"), ")", zS(o3.body, n3("body"))]);
            case "IfStatement": {
              const r4 = zS(o3.consequent, n3("consequent")), i4 = hS(["if (", hS([mS([fS, n3("test")]), fS]), ")", r4]);
              if (u3.push(i4), o3.alternate) {
                const r5 = ES(o3.consequent, bS.Trailing | bS.Line) || wS(o3), i5 = "BlockStatement" === o3.consequent.type && !r5;
                u3.push(i5 ? " " : pS), ES(o3, bS.Dangling) && u3.push(iS(e3, t3, true), r5 ? pS : " "), u3.push("else", hS(zS(o3.alternate, n3("alternate"), "IfStatement" === o3.alternate.type)));
              }
              return u3;
            }
            case "ForStatement": {
              const r4 = zS(o3.body, n3("body")), i4 = iS(e3, t3, true), u4 = i4 ? [i4, fS] : "";
              return o3.init || o3.test || o3.update ? [u4, hS(["for (", hS([mS([fS, n3("init"), ";", lS, n3("test"), ";", lS, n3("update")]), fS]), ")", r4])] : [u4, hS(["for (;;)", r4])];
            }
            case "WhileStatement":
              return hS(["while (", hS([mS([fS, n3("test")]), fS]), ")", zS(o3.body, n3("body"))]);
            case "ForInStatement":
              return hS(["for (", n3("left"), " in ", n3("right"), ")", zS(o3.body, n3("body"))]);
            case "ForOfStatement":
              return hS(["for", o3.await ? " await" : "", " (", n3("left"), " of ", n3("right"), ")", zS(o3.body, n3("body"))]);
            case "DoWhileStatement": {
              const e4 = zS(o3.body, n3("body"));
              return u3 = [hS(["do", e4])], "BlockStatement" === o3.body.type ? u3.push(" ") : u3.push(pS), u3.push("while (", hS([mS([fS, n3("test")]), fS]), ")", i3), u3;
            }
            case "DoExpression":
              return [o3.async ? "async " : "", "do ", n3("body")];
            case "BreakStatement":
              return u3.push("break"), o3.label && u3.push(" ", n3("label")), u3.push(i3), u3;
            case "ContinueStatement":
              return u3.push("continue"), o3.label && u3.push(" ", n3("label")), u3.push(i3), u3;
            case "LabeledStatement":
              return "EmptyStatement" === o3.body.type ? [n3("label"), ":;"] : [n3("label"), ": ", n3("body")];
            case "TryStatement":
              return ["try ", n3("block"), o3.handler ? [" ", n3("handler")] : "", o3.finalizer ? [" finally ", n3("finalizer")] : ""];
            case "CatchClause":
              if (o3.param) {
                const e4 = ES(o3.param, (e5) => !FS(e5) || e5.leading && uS(t3.originalText, IS(e5)) || e5.trailing && uS(t3.originalText, OS(e5), { backwards: true })), r4 = n3("param");
                return ["catch ", e4 ? ["(", mS([fS, r4]), fS, ") "] : ["(", r4, ") "], n3("body")];
              }
              return ["catch ", n3("body")];
            case "SwitchStatement":
              return [hS(["switch (", mS([fS, n3("discriminant")]), fS, ")"]), " {", o3.cases.length > 0 ? mS([pS, cS(pS, e3.map((e4, r4, o4) => {
                const i4 = e4.getValue();
                return [n3(), r4 !== o4.length - 1 && SS(i4, t3) ? pS : ""];
              }, "cases"))]) : "", pS, "}"];
            case "SwitchCase": {
              o3.test ? u3.push("case ", n3("test"), ":") : u3.push("default:");
              const r4 = o3.consequent.filter((e4) => "EmptyStatement" !== e4.type);
              if (r4.length > 0) {
                const o4 = yw(e3, t3, n3);
                u3.push(1 === r4.length && "BlockStatement" === r4[0].type ? [" ", o4] : mS([pS, o4]));
              }
              return u3;
            }
            case "DebuggerStatement":
              return ["debugger", i3];
            case "ClassDeclaration":
            case "ClassExpression":
              return tw(e3, t3, n3);
            case "ClassMethod":
            case "ClassPrivateMethod":
            case "MethodDefinition":
              return nw(e3, t3, n3);
            case "ClassProperty":
            case "PropertyDefinition":
            case "ClassPrivateProperty":
              return rw(e3, t3, n3);
            case "TemplateElement":
              return cS(dS, o3.value.raw.split(/\r?\n/g));
            case "TemplateLiteral":
              return KS(e3, n3, t3);
            case "TaggedTemplateExpression":
              return [n3("tag"), n3("typeParameters"), n3("quasi")];
            case "Node":
            case "Printable":
            case "SourceLocation":
            case "Position":
            case "Statement":
            case "Function":
            case "Pattern":
            case "Expression":
            case "Declaration":
            case "Specifier":
            case "NamedSpecifier":
            case "Comment":
            case "MemberTypeAnnotation":
            case "Type":
              throw new Error("unprintable type: " + JSON.stringify(o3.type));
            case "ExistsTypeAnnotation":
              return "*";
            case "EmptyTypeAnnotation":
              return "empty";
            case "MixedTypeAnnotation":
              return "mixed";
            case "ArrayTypeAnnotation":
              return [n3("elementType"), "[]"];
            case "BooleanLiteralTypeAnnotation":
              return String(o3.value);
            case "EnumDeclaration":
              return ["enum ", n3("id"), " ", n3("body")];
            case "EnumBooleanBody":
            case "EnumNumberBody":
            case "EnumStringBody":
            case "EnumSymbolBody":
              if ("EnumSymbolBody" === o3.type || o3.explicitType) {
                let e4 = null;
                switch (o3.type) {
                  case "EnumBooleanBody":
                    e4 = "boolean";
                    break;
                  case "EnumNumberBody":
                    e4 = "number";
                    break;
                  case "EnumStringBody":
                    e4 = "string";
                    break;
                  case "EnumSymbolBody":
                    e4 = "symbol";
                }
                u3.push("of ", e4, " ");
              }
              if (0 !== o3.members.length || o3.hasUnknownMembers) {
                const r4 = o3.members.length > 0 ? [pS, ZS(e3, t3, "members", n3), o3.hasUnknownMembers || BS(t3) ? "," : ""] : [];
                u3.push(hS(["{", mS([...r4, ...o3.hasUnknownMembers ? [pS, "..."] : []]), iS(e3, t3, true), pS, "}"]));
              } else
                u3.push(hS(["{", iS(e3, t3), fS, "}"]));
              return u3;
            case "EnumBooleanMember":
            case "EnumNumberMember":
            case "EnumStringMember":
              return [n3("id"), " = ", "object" == typeof o3.init ? n3("init") : String(o3.init)];
            case "EnumDefaultedMember":
              return n3("id");
            case "FunctionTypeParam": {
              const t4 = o3.name ? n3("name") : e3.getParentNode().this === o3 ? "this" : "";
              return [t4, qS(e3), t4 ? ": " : "", n3("typeAnnotation")];
            }
            case "InterfaceDeclaration":
            case "InterfaceTypeAnnotation":
              return dw(e3, t3, n3);
            case "ClassImplements":
            case "InterfaceExtends":
              return [n3("id"), n3("typeParameters")];
            case "NullableTypeAnnotation":
              return ["?", n3("typeAnnotation")];
            case "Variance": {
              const { kind: e4 } = o3;
              return Il.ok("plus" === e4 || "minus" === e4), "plus" === e4 ? "+" : "-";
            }
            case "ObjectTypeCallProperty":
              return o3.static && u3.push("static "), u3.push(n3("value")), u3;
            case "ObjectTypeIndexer":
              return [o3.variance ? n3("variance") : "", "[", n3("id"), o3.id ? ": " : "", n3("key"), "]: ", n3("value")];
            case "ObjectTypeProperty": {
              let r4 = "";
              return o3.proto ? r4 = "proto " : o3.static && (r4 = "static "), [r4, vS(o3) ? o3.kind + " " : "", o3.variance ? n3("variance") : "", iw(e3, t3, n3), qS(e3), CS(o3) ? "" : ": ", n3("value")];
            }
            case "QualifiedTypeIdentifier":
              return [n3("qualification"), ".", n3("id")];
            case "StringLiteralTypeAnnotation":
              return sS(TS(o3), t3);
            case "NumberLiteralTypeAnnotation":
              Il.strictEqual(typeof o3.value, "number");
            case "BigIntLiteralTypeAnnotation":
              return o3.extra ? aS(o3.extra.raw) : aS(o3.raw);
            case "TypeCastExpression":
              return ["(", n3("expression"), US(e3, t3, n3), ")"];
            case "TypeParameterDeclaration":
            case "TypeParameterInstantiation": {
              const r4 = ow(e3, t3, n3, "params");
              if ("flow" === t3.parser) {
                const e4 = OS(o3), n4 = IS(o3), i4 = t3.originalText.lastIndexOf("/*", e4), u4 = t3.originalText.indexOf("*/", n4);
                if (-1 !== i4 && -1 !== u4) {
                  const e5 = t3.originalText.slice(i4 + 2, u4).trim();
                  if (e5.startsWith("::") && !e5.includes("/*") && !e5.includes("*/"))
                    return ["/*:: ", r4, " */"];
                }
              }
              return r4;
            }
            case "InferredPredicate":
              return "%checks";
            case "DeclaredPredicate":
              return ["%checks(", n3("value"), ")"];
            case "AnyTypeAnnotation":
            case "TSAnyKeyword":
              return "any";
            case "BooleanTypeAnnotation":
            case "TSBooleanKeyword":
              return "boolean";
            case "BigIntTypeAnnotation":
            case "TSBigIntKeyword":
              return "bigint";
            case "TSConstKeyword":
              return "const";
            case "NullLiteralTypeAnnotation":
            case "TSNullKeyword":
              return "null";
            case "NumberTypeAnnotation":
            case "TSNumberKeyword":
              return "number";
            case "SymbolTypeAnnotation":
            case "TSSymbolKeyword":
              return "symbol";
            case "StringTypeAnnotation":
            case "TSStringKeyword":
              return "string";
            case "VoidTypeAnnotation":
            case "TSVoidKeyword":
              return "void";
            case "ThisTypeAnnotation":
            case "TSThisType":
              return "this";
            case "PrivateIdentifier":
              return ["#", n3("name")];
            case "PrivateName":
              return ["#", n3("id")];
            case "InterpreterDirective":
              return u3.push("#!", o3.value, pS), SS(o3, t3) && u3.push(pS), u3;
            case "PipelineBareFunction":
              return n3("callee");
            case "PipelineTopicExpression":
              return n3("expression");
            case "PipelinePrimaryTopicReference":
              return "#";
            case "ArgumentPlaceholder":
              return "?";
            case "ModuleExpression": {
              u3.push("module {");
              const e4 = n3("body");
              return e4 && u3.push(mS([pS, e4]), pS), u3.push("}"), u3;
            }
            default:
              throw new Error("unknown type: " + JSON.stringify(o3.type));
          }
        }(e2, t2, n2, r2);
        if (!o2)
          return "";
        const i2 = e2.getValue(), { type: u2 } = i2;
        if ("ClassMethod" === u2 || "ClassPrivateMethod" === u2 || "ClassProperty" === u2 || "PropertyDefinition" === u2 || "TSAbstractClassProperty" === u2 || "ClassPrivateProperty" === u2 || "MethodDefinition" === u2 || "TSAbstractMethodDefinition" === u2 || "TSDeclareMethod" === u2)
          return o2;
        const s2 = Aw(e2, t2, n2);
        if (s2)
          return hS([...s2, o2]);
        if (!fg(e2, t2))
          return r2 && r2.needsSemi ? [";", o2] : o2;
        const a2 = [r2 && r2.needsSemi ? ";(" : "(", o2];
        if (DS(i2)) {
          const [e3] = i2.trailingComments;
          a2.push(" /*", e3.value.trimStart(), "*/"), e3.printed = true;
        }
        return a2.push(")"), a2;
      }, embed: mh, insertPragma: gS, massageAstNode: bh, hasPrettierIgnore: (e2) => kS(e2) || RS(e2), willPrintOwnComments: Km.willPrintOwnComments, canAttachComment: function(e2) {
        return e2.type && !FS(e2) && !xS(e2) && "EmptyStatement" !== e2.type && "TemplateElement" !== e2.type && "Import" !== e2.type && "TSEmptyBodyFunctionExpression" !== e2.type;
      }, printComment: Cw, isBlockComment: FS, handleComments: { avoidAstMutation: true, ownLine: Km.handleOwnLineComment, endOfLine: Km.handleEndOfLineComment, remaining: Km.handleRemainingComment }, getCommentChildNodes: Km.getCommentChildNodes };
      const { builders: { hardline: Sw, indent: ww, join: Tw } } = Rn;
      const Bw = /* @__PURE__ */ new Set(["start", "end", "extra", "loc", "comments", "leadingComments", "trailingComments", "innerComments", "errors", "range", "tokens"]);
      function kw(e2, t2) {
        const { type: n2 } = e2;
        if ("ObjectProperty" !== n2 || "Identifier" !== e2.key.type) {
          if ("UnaryExpression" === n2 && "+" === e2.operator)
            return t2.argument;
          if ("ArrayExpression" !== n2)
            return "TemplateLiteral" === n2 ? { type: "StringLiteral", value: e2.quasis[0].value.cooked } : void 0;
          for (const [n3, r2] of e2.elements.entries())
            null === r2 && t2.elements.splice(n3, 0, { type: "NullLiteral" });
        } else
          t2.key = { type: "StringLiteral", value: e2.key.name };
      }
      kw.ignoredProperties = Bw;
      var Nw = { preprocess: dg, print: function(e2, t2, n2) {
        const r2 = e2.getValue();
        switch (r2.type) {
          case "JsonRoot":
            return [n2("node"), Sw];
          case "ArrayExpression": {
            if (0 === r2.elements.length)
              return "[]";
            const t3 = e2.map(() => null === e2.getValue() ? "null" : n2(), "elements");
            return ["[", ww([Sw, Tw([",", Sw], t3)]), Sw, "]"];
          }
          case "ObjectExpression":
            return 0 === r2.properties.length ? "{}" : ["{", ww([Sw, Tw([",", Sw], e2.map(n2, "properties"))]), Sw, "}"];
          case "ObjectProperty":
            return [n2("key"), ": ", n2("value")];
          case "UnaryExpression":
            return ["+" === r2.operator ? "" : r2.operator, n2("argument")];
          case "NullLiteral":
            return "null";
          case "BooleanLiteral":
            return r2.value ? "true" : "false";
          case "StringLiteral":
          case "NumericLiteral":
            return JSON.stringify(r2.value);
          case "Identifier": {
            const t3 = e2.getParentNode();
            return t3 && "ObjectProperty" === t3.type && t3.key === r2 ? JSON.stringify(r2.name) : r2.name;
          }
          case "TemplateLiteral":
            return n2(["quasis", 0]);
          case "TemplateElement":
            return JSON.stringify(r2.value.cooked);
          default:
            throw new Error("unknown type: " + JSON.stringify(r2.type));
        }
      }, massageAstNode: kw };
      const Pw = "Common";
      var Ow = { bracketSpacing: { since: "0.0.0", category: Pw, type: "boolean", default: true, description: "Print spaces between brackets.", oppositeDescription: "Do not print spaces between brackets." }, singleQuote: { since: "0.0.0", category: Pw, type: "boolean", default: false, description: "Use single quotes instead of double quotes." }, proseWrap: { since: "1.8.2", category: Pw, type: "choice", default: [{ since: "1.8.2", value: true }, { since: "1.9.0", value: "preserve" }], description: "How to wrap prose.", choices: [{ since: "1.9.0", value: "always", description: "Wrap prose if it exceeds the print width." }, { since: "1.9.0", value: "never", description: "Do not wrap prose." }, { since: "1.9.0", value: "preserve", description: "Wrap prose as-is." }] } };
      const Iw = "JavaScript";
      var jw = { arrowParens: { since: "1.9.0", category: Iw, type: "choice", default: [{ since: "1.9.0", value: "avoid" }, { since: "2.0.0", value: "always" }], description: "Include parentheses around a sole arrow function parameter.", choices: [{ value: "always", description: "Always include parens. Example: `(x) => x`" }, { value: "avoid", description: "Omit parens when possible. Example: `x => x`" }] }, bracketSpacing: Ow.bracketSpacing, jsxBracketSameLine: { since: "0.17.0", category: Iw, type: "boolean", default: false, description: "Put > on the last line instead of at a new line." }, semi: { since: "1.0.0", category: Iw, type: "boolean", default: true, description: "Print semicolons.", oppositeDescription: "Do not print semicolons, except at the beginning of lines which may need them." }, singleQuote: Ow.singleQuote, jsxSingleQuote: { since: "1.15.0", category: Iw, type: "boolean", default: false, description: "Use single quotes in JSX." }, quoteProps: { since: "1.17.0", category: Iw, type: "choice", default: "as-needed", description: "Change when properties in objects are quoted.", choices: [{ value: "as-needed", description: "Only add quotes around object properties where required." }, { value: "consistent", description: "If at least one property in an object requires quotes, quote all properties." }, { value: "preserve", description: "Respect the input use of quotes in object properties." }] }, trailingComma: { since: "0.0.0", category: Iw, type: "choice", default: [{ since: "0.0.0", value: false }, { since: "0.19.0", value: "none" }, { since: "2.0.0", value: "es5" }], description: "Print trailing commas wherever possible when multi-line.", choices: [{ value: "es5", description: "Trailing commas where valid in ES5 (objects, arrays, etc.)" }, { value: "none", description: "No trailing commas." }, { value: "all", description: "Trailing commas wherever possible (including function arguments)." }] } }, Lw = { name: "JavaScript", type: "programming", tmScope: "source.js", aceMode: "javascript", codemirrorMode: "javascript", codemirrorMimeType: "text/javascript", color: "#f1e05a", aliases: ["js", "node"], extensions: [".js", "._js", ".bones", ".cjs", ".es", ".es6", ".frag", ".gs", ".jake", ".jsb", ".jscad", ".jsfl", ".jsm", ".jss", ".jsx", ".mjs", ".njs", ".pac", ".sjs", ".ssjs", ".xsjs", ".xsjslib"], filenames: ["Jakefile"], interpreters: ["chakra", "d8", "gjs", "js", "node", "nodejs", "qjs", "rhino", "v8", "v8-shell"], languageId: 183 }, _w = { name: "TypeScript", type: "programming", color: "#2b7489", aliases: ["ts"], interpreters: ["deno", "ts-node"], extensions: [".ts"], tmScope: "source.ts", aceMode: "typescript", codemirrorMode: "javascript", codemirrorMimeType: "application/typescript", languageId: 378 }, Mw = { name: "TSX", type: "programming", group: "TypeScript", extensions: [".tsx"], tmScope: "source.tsx", aceMode: "javascript", codemirrorMode: "jsx", codemirrorMimeType: "text/jsx", languageId: 94901924 }, Rw = { name: "JSON", type: "data", tmScope: "source.json", aceMode: "json", codemirrorMode: "javascript", codemirrorMimeType: "application/json", extensions: [".json", ".avsc", ".geojson", ".gltf", ".har", ".ice", ".JSON-tmLanguage", ".jsonl", ".mcmeta", ".tfstate", ".tfstate.backup", ".topojson", ".webapp", ".webmanifest", ".yy", ".yyp"], filenames: [".arcconfig", ".htmlhintrc", ".tern-config", ".tern-project", ".watchmanconfig", "Pipfile.lock", "composer.lock", "mcmod.info"], languageId: 174 }, Vw = { name: "JSON with Comments", type: "data", group: "JSON", tmScope: "source.js", aceMode: "javascript", codemirrorMode: "javascript", codemirrorMimeType: "text/javascript", aliases: ["jsonc"], extensions: [".jsonc", ".sublime-build", ".sublime-commands", ".sublime-completions", ".sublime-keymap", ".sublime-macro", ".sublime-menu", ".sublime-mousemap", ".sublime-project", ".sublime-settings", ".sublime-theme", ".sublime-workspace", ".sublime_metrics", ".sublime_session"], filenames: [".babelrc", ".eslintrc.json", ".jscsrc", ".jshintrc", ".jslintrc", "devcontainer.json", "jsconfig.json", "language-configuration.json", "tsconfig.json", "tslint.json"], languageId: 423 }, $w = { name: "JSON5", type: "data", extensions: [".json5"], tmScope: "source.js", aceMode: "javascript", codemirrorMode: "javascript", codemirrorMimeType: "application/json", languageId: 175 };
      var qw = { languages: [df(Lw, (e2) => ({ since: "0.0.0", parsers: ["babel", "espree", "meriyah", "babel-flow", "babel-ts", "flow", "typescript"], vscodeLanguageIds: ["javascript", "mongo"], extensions: [...e2.extensions.filter((e3) => ".jsx" !== e3), ".wxs"] })), df(Lw, () => ({ name: "Flow", since: "0.0.0", parsers: ["flow", "babel-flow"], vscodeLanguageIds: ["javascript"], aliases: [], filenames: [], extensions: [".js.flow"] })), df(Lw, () => ({ name: "JSX", since: "0.0.0", parsers: ["babel", "babel-flow", "babel-ts", "flow", "typescript", "espree", "meriyah"], vscodeLanguageIds: ["javascriptreact"], aliases: void 0, filenames: void 0, extensions: [".jsx"], group: "JavaScript", interpreters: void 0, tmScope: "source.js.jsx", aceMode: "javascript", codemirrorMode: "jsx", codemirrorMimeType: "text/jsx", color: void 0 })), df(_w, () => ({ since: "1.4.0", parsers: ["typescript", "babel-ts"], vscodeLanguageIds: ["typescript"] })), df(Mw, () => ({ since: "1.4.0", parsers: ["typescript", "babel-ts"], vscodeLanguageIds: ["typescriptreact"] })), df(Rw, () => ({ name: "JSON.stringify", since: "1.13.0", parsers: ["json-stringify"], vscodeLanguageIds: ["json"], extensions: [], filenames: ["package.json", "package-lock.json", "composer.json"] })), df(Rw, (e2) => ({ since: "1.5.0", parsers: ["json"], vscodeLanguageIds: ["json"], extensions: e2.extensions.filter((e3) => ".jsonl" !== e3) })), df(Vw, (e2) => ({ since: "1.5.0", parsers: ["json"], vscodeLanguageIds: ["jsonc"], filenames: [...e2.filenames, ".eslintrc"] })), df($w, () => ({ since: "1.13.0", parsers: ["json5"], vscodeLanguageIds: ["json5"] }))], options: jw, printers: { estree: xw, "estree-json": Nw }, parsers: { get babel() {
        return {}.parsers.babel;
      }, get "babel-flow"() {
        return {}.parsers["babel-flow"];
      }, get "babel-ts"() {
        return {}.parsers["babel-ts"];
      }, get json() {
        return {}.parsers.json;
      }, get json5() {
        return {}.parsers.json5;
      }, get "json-stringify"() {
        return {}.parsers["json-stringify"];
      }, get __js_expression() {
        return {}.parsers.__js_expression;
      }, get __vue_expression() {
        return {}.parsers.__vue_expression;
      }, get __vue_event_binding() {
        return {}.parsers.__vue_event_binding;
      }, get flow() {
        return {}.parsers.flow;
      }, get typescript() {
        return {}.parsers.typescript;
      }, get __ng_action() {
        return {}.parsers.__ng_action;
      }, get __ng_binding() {
        return {}.parsers.__ng_binding;
      }, get __ng_interpolation() {
        return {}.parsers.__ng_interpolation;
      }, get __ng_directive() {
        return {}.parsers.__ng_directive;
      }, get espree() {
        return {}.parsers.espree;
      }, get meriyah() {
        return {}.parsers.meriyah;
      } } };
      const { isFrontMatterNode: Ww } = rn, Uw = /* @__PURE__ */ new Set(["raw", "raws", "sourceIndex", "source", "before", "after", "trailingComma"]);
      function zw(e2, t2, n2) {
        if (Ww(e2) && "yaml" === e2.lang && delete t2.value, "css-comment" === e2.type && "css-root" === n2.type && n2.nodes.length > 0) {
          if ((n2.nodes[0] === e2 || Ww(n2.nodes[0]) && n2.nodes[1] === e2) && (delete t2.text, /^\*\s*@(format|prettier)\s*$/.test(e2.text)))
            return null;
          if ("css-root" === n2.type && ke(n2.nodes) === e2)
            return null;
        }
        if ("value-root" === e2.type && delete t2.text, "media-query" !== e2.type && "media-query-list" !== e2.type && "media-feature-expression" !== e2.type || delete t2.value, "css-rule" === e2.type && delete t2.params, "selector-combinator" === e2.type && (t2.value = t2.value.replace(/\s+/g, " ")), "media-feature" === e2.type && (t2.value = t2.value.replace(/ /g, "")), ("value-word" === e2.type && (e2.isColor && e2.isHex || ["initial", "inherit", "unset", "revert"].includes(t2.value.replace().toLowerCase())) || "media-feature" === e2.type || "selector-root-invalid" === e2.type || "selector-pseudo" === e2.type) && (t2.value = t2.value.toLowerCase()), "css-decl" === e2.type && (t2.prop = t2.prop.toLowerCase()), "css-atrule" !== e2.type && "css-import" !== e2.type || (t2.name = t2.name.toLowerCase()), "value-number" === e2.type && (t2.unit = t2.unit.toLowerCase()), "media-feature" !== e2.type && "media-keyword" !== e2.type && "media-type" !== e2.type && "media-unknown" !== e2.type && "media-url" !== e2.type && "media-value" !== e2.type && "selector-attribute" !== e2.type && "selector-string" !== e2.type && "selector-class" !== e2.type && "selector-combinator" !== e2.type && "value-string" !== e2.type || !t2.value || (t2.value = t2.value.replace(/'/g, '"').replace(/\\([^\dA-Fa-f])/g, "$1")), "selector-attribute" === e2.type && (t2.attribute = t2.attribute.trim(), t2.namespace && "string" == typeof t2.namespace && (t2.namespace = t2.namespace.trim(), 0 === t2.namespace.length && (t2.namespace = true)), t2.value && (t2.value = t2.value.trim().replace(/^["']|["']$/g, ""), delete t2.quoted)), "media-value" !== e2.type && "media-type" !== e2.type && "value-number" !== e2.type && "selector-root-invalid" !== e2.type && "selector-class" !== e2.type && "selector-combinator" !== e2.type && "selector-tag" !== e2.type || !t2.value || (t2.value = t2.value.replace(/([\d+.Ee-]+)([A-Za-z]*)/g, (e3, t3, n3) => {
          const r2 = Number(t3);
          return Number.isNaN(r2) ? e3 : r2 + n3.toLowerCase();
        })), "selector-tag" === e2.type) {
          const n3 = e2.value.toLowerCase();
          ["from", "to"].includes(n3) && (t2.value = n3);
        }
        "css-atrule" === e2.type && "supports" === e2.name.toLowerCase() && delete t2.value, "selector-unknown" === e2.type && delete t2.value;
      }
      zw.ignoredProperties = Uw;
      var Hw = zw;
      const { builders: { hardline: Gw, markAsRoot: Jw } } = Rn;
      var Xw = function(e2, t2) {
        if ("yaml" === e2.lang) {
          const n2 = e2.value.trim(), r2 = n2 ? t2(n2, { parser: "yaml" }, { stripTrailingHardline: true }) : "";
          return Jw([e2.startDelimiter, Gw, r2, r2 ? Gw : "", e2.endDelimiter]);
        }
      };
      const { builders: { hardline: Yw } } = Rn;
      var Kw = function(e2, t2, n2) {
        const r2 = e2.getValue();
        if ("front-matter" === r2.type) {
          const e3 = Xw(r2, n2);
          return e3 ? [e3, Yw] : "";
        }
      };
      const Qw = new RegExp("^(?<startDelimiter>-{3}|\\+{3})(?<language>[^\\n]*)\\n(?:|(?<value>[\\S\\s]*?)\\n)(?<endDelimiter>\\k<startDelimiter>|\\.{3})[^\\S\\n]*(?:\\n|$)");
      var Zw = function(e2) {
        const t2 = e2.match(Qw);
        if (!t2)
          return { content: e2 };
        const { startDelimiter: n2, language: r2, value: o2 = "", endDelimiter: i2 } = t2.groups;
        let u2 = r2.trim() || "yaml";
        if ("+++" === n2 && (u2 = "toml"), "yaml" !== u2 && n2 !== i2)
          return { content: e2 };
        const [s2] = t2;
        return { frontMatter: { type: "front-matter", lang: u2, value: o2, startDelimiter: n2, endDelimiter: i2, raw: s2.replace(/\n$/, "") }, content: s2.replace(/[^\n]/g, " ") + e2.slice(s2.length) };
      };
      var eT = { hasPragma: function(e2) {
        return Xh.hasPragma(Zw(e2).content);
      }, insertPragma: function(e2) {
        const { frontMatter: t2, content: n2 } = Zw(e2);
        return (t2 ? t2.raw + "\n\n" : "") + Xh.insertPragma(n2);
      } };
      const { isNonEmptyArray: tT } = rn, nT = /* @__PURE__ */ new Set(["red", "green", "blue", "alpha", "a", "rgb", "hue", "h", "saturation", "s", "lightness", "l", "whiteness", "w", "blackness", "b", "tint", "shade", "blend", "blenda", "contrast", "hsl", "hsla", "hwb", "hwba"]);
      function rT(e2, t2) {
        const n2 = Array.isArray(t2) ? t2 : [t2];
        let r2, o2 = -1;
        for (; r2 = e2.getParentNode(++o2); )
          if (n2.includes(r2.type))
            return o2;
        return -1;
      }
      function oT(e2, t2) {
        const n2 = rT(e2, t2);
        return -1 === n2 ? null : e2.getParentNode(n2);
      }
      function iT(e2) {
        return "value-operator" === e2.type && "*" === e2.value;
      }
      function uT(e2) {
        return "value-operator" === e2.type && "/" === e2.value;
      }
      function sT(e2) {
        return "value-operator" === e2.type && "+" === e2.value;
      }
      function aT(e2) {
        return "value-operator" === e2.type && "-" === e2.value;
      }
      function cT(e2) {
        return "value-operator" === e2.type && "%" === e2.value;
      }
      function lT(e2) {
        return "value-comma_group" === e2.type && e2.groups && e2.groups[1] && "value-colon" === e2.groups[1].type;
      }
      function pT(e2) {
        return "value-paren_group" === e2.type && e2.groups && e2.groups[0] && lT(e2.groups[0]);
      }
      function fT(e2) {
        return e2 && "value-colon" === e2.type;
      }
      var dT = { getAncestorCounter: rT, getAncestorNode: oT, getPropOfDeclNode: function(e2) {
        const t2 = oT(e2, "css-decl");
        return t2 && t2.prop && t2.prop.toLowerCase();
      }, hasSCSSInterpolation: function(e2) {
        if (tT(e2)) {
          for (let t2 = e2.length - 1; t2 > 0; t2--)
            if ("word" === e2[t2].type && "{" === e2[t2].value && "word" === e2[t2 - 1].type && e2[t2 - 1].value.endsWith("#"))
              return true;
        }
        return false;
      }, hasStringOrFunction: function(e2) {
        if (tT(e2)) {
          for (let t2 = 0; t2 < e2.length; t2++)
            if ("string" === e2[t2].type || "func" === e2[t2].type)
              return true;
        }
        return false;
      }, maybeToLowerCase: function(e2) {
        return e2.includes("$") || e2.includes("@") || e2.includes("#") || e2.startsWith("%") || e2.startsWith("--") || e2.startsWith(":--") || e2.includes("(") && e2.includes(")") ? e2 : e2.toLowerCase();
      }, insideValueFunctionNode: function(e2, t2) {
        const n2 = oT(e2, "value-func");
        return n2 && n2.value && n2.value.toLowerCase() === t2;
      }, insideICSSRuleNode: function(e2) {
        const t2 = oT(e2, "css-rule");
        return t2 && t2.raws && t2.raws.selector && (t2.raws.selector.startsWith(":import") || t2.raws.selector.startsWith(":export"));
      }, insideAtRuleNode: function(e2, t2) {
        const n2 = Array.isArray(t2) ? t2 : [t2], r2 = oT(e2, "css-atrule");
        return r2 && n2.includes(r2.name.toLowerCase());
      }, insideURLFunctionInImportAtRuleNode: function(e2) {
        const t2 = e2.getValue(), n2 = oT(e2, "css-atrule");
        return n2 && "import" === n2.name && "url" === t2.groups[0].value && 2 === t2.groups.length;
      }, isKeyframeAtRuleKeywords: function(e2, t2) {
        const n2 = oT(e2, "css-atrule");
        return n2 && n2.name && n2.name.toLowerCase().endsWith("keyframes") && ["from", "to"].includes(t2.toLowerCase());
      }, isWideKeywords: function(e2) {
        return ["initial", "inherit", "unset", "revert"].includes(e2.toLowerCase());
      }, isSCSS: function(e2, t2) {
        return "less" === e2 || "scss" === e2 ? "scss" === e2 : /(\w\s*:\s*[^:}]+|#){|@import[^\n]+(?:url|,)/.test(t2);
      }, isSCSSVariable: function(e2) {
        return Boolean(e2 && "word" === e2.type && e2.value.startsWith("$"));
      }, isLastNode: function(e2, t2) {
        const n2 = e2.getParentNode();
        if (!n2)
          return false;
        const { nodes: r2 } = n2;
        return r2 && r2.indexOf(t2) === r2.length - 1;
      }, isLessParser: function(e2) {
        return "css" === e2.parser || "less" === e2.parser;
      }, isSCSSControlDirectiveNode: function(e2) {
        return "css-atrule" === e2.type && ["if", "else", "for", "each", "while"].includes(e2.name);
      }, isDetachedRulesetDeclarationNode: function(e2) {
        return !!e2.selector && ("string" == typeof e2.selector && /^@.+:.*$/.test(e2.selector) || e2.selector.value && /^@.+:.*$/.test(e2.selector.value));
      }, isRelationalOperatorNode: function(e2) {
        return "value-word" === e2.type && ["<", ">", "<=", ">="].includes(e2.value);
      }, isEqualityOperatorNode: function(e2) {
        return "value-word" === e2.type && ["==", "!="].includes(e2.value);
      }, isMultiplicationNode: iT, isDivisionNode: uT, isAdditionNode: sT, isSubtractionNode: aT, isModuloNode: cT, isMathOperatorNode: function(e2) {
        return iT(e2) || uT(e2) || sT(e2) || aT(e2) || cT(e2);
      }, isEachKeywordNode: function(e2) {
        return "value-word" === e2.type && "in" === e2.value;
      }, isForKeywordNode: function(e2) {
        return "value-word" === e2.type && ["from", "through", "end"].includes(e2.value);
      }, isURLFunctionNode: function(e2) {
        return "value-func" === e2.type && "url" === e2.value.toLowerCase();
      }, isIfElseKeywordNode: function(e2) {
        return "value-word" === e2.type && ["and", "or", "not"].includes(e2.value);
      }, hasComposesNode: function(e2) {
        return e2.value && "value-root" === e2.value.type && e2.value.group && "value-value" === e2.value.group.type && "composes" === e2.prop.toLowerCase();
      }, hasParensAroundNode: function(e2) {
        return e2.value && e2.value.group && e2.value.group.group && "value-paren_group" === e2.value.group.group.type && null !== e2.value.group.group.open && null !== e2.value.group.group.close;
      }, hasEmptyRawBefore: function(e2) {
        return e2.raws && "" === e2.raws.before;
      }, isSCSSNestedPropertyNode: function(e2) {
        return !!e2.selector && e2.selector.replace(/\/\*.*?\*\//, "").replace(/\/\/.*?\n/, "").trim().endsWith(":");
      }, isDetachedRulesetCallNode: function(e2) {
        return e2.raws && e2.raws.params && /^\(\s*\)$/.test(e2.raws.params);
      }, isTemplatePlaceholderNode: function(e2) {
        return e2.name.startsWith("prettier-placeholder");
      }, isTemplatePropNode: function(e2) {
        return e2.prop.startsWith("@prettier-placeholder");
      }, isPostcssSimpleVarNode: function(e2, t2) {
        return "$$" === e2.value && "value-func" === e2.type && t2 && "value-word" === t2.type && !t2.raws.before;
      }, isKeyValuePairNode: lT, isKeyValuePairInParenGroupNode: pT, isKeyInValuePairNode: function(e2, t2) {
        if (!lT(t2))
          return false;
        const { groups: n2 } = t2, r2 = n2.indexOf(e2);
        return -1 !== r2 && fT(n2[r2 + 1]);
      }, isSCSSMapItemNode: function(e2) {
        const t2 = e2.getValue();
        if (0 === t2.groups.length)
          return false;
        const n2 = e2.getParentNode(1);
        if (!(pT(t2) || n2 && pT(n2)))
          return false;
        const r2 = oT(e2, "css-decl");
        return !!(r2 && r2.prop && r2.prop.startsWith("$")) || (!!pT(n2) || "value-func" === n2.type);
      }, isInlineValueCommentNode: function(e2) {
        return "value-comment" === e2.type && e2.inline;
      }, isHashNode: function(e2) {
        return "value-word" === e2.type && "#" === e2.value;
      }, isLeftCurlyBraceNode: function(e2) {
        return "value-word" === e2.type && "{" === e2.value;
      }, isRightCurlyBraceNode: function(e2) {
        return "value-word" === e2.type && "}" === e2.value;
      }, isWordNode: function(e2) {
        return ["value-word", "value-atword"].includes(e2.type);
      }, isColonNode: fT, isMediaAndSupportsKeywords: function(e2) {
        return e2.value && ["not", "and", "or"].includes(e2.value.toLowerCase());
      }, isColorAdjusterFuncNode: function(e2) {
        return "value-func" === e2.type && nT.has(e2.value.toLowerCase());
      }, lastLineHasInlineComment: function(e2) {
        return /\/\//.test(e2.split(/[\n\r]/).pop());
      }, stringifyNode: function e2(t2) {
        if (t2.groups) {
          return (t2.open && t2.open.value ? t2.open.value : "") + t2.groups.reduce((n3, r3, o2) => n3 + e2(r3) + ("comma_group" === t2.groups[0].type && o2 !== t2.groups.length - 1 ? "," : ""), "") + (t2.close && t2.close.value ? t2.close.value : "");
        }
        const n2 = t2.raws && t2.raws.before ? t2.raws.before : "", r2 = t2.raws && t2.raws.quote ? t2.raws.quote : "";
        return n2 + r2 + ("atword" === t2.type ? "@" : "") + (t2.value ? t2.value : "") + r2 + (t2.unit ? t2.unit : "") + (t2.group ? e2(t2.group) : "") + (t2.raws && t2.raws.after ? t2.raws.after : "");
      }, isAtWordPlaceholderNode: function(e2) {
        return e2 && "value-atword" === e2.type && e2.value.startsWith("prettier-placeholder-");
      } }, hT = function(e2, t2) {
        let n2 = 0;
        for (let r2 = 0; r2 < e2.line - 1; ++r2)
          n2 = t2.indexOf("\n", n2) + 1;
        return n2 + e2.column;
      };
      const { getLast: mT, skipEverythingButNewLine: gT } = rn;
      function yT(e2, t2) {
        return "number" == typeof e2.sourceIndex ? e2.sourceIndex : e2.source ? hT(e2.source.start, t2) - 1 : null;
      }
      function DT(e2, t2) {
        if ("css-comment" === e2.type && e2.inline)
          return gT(t2, e2.source.startOffset);
        const n2 = e2.nodes && mT(e2.nodes);
        return n2 && e2.source && !e2.source.end && (e2 = n2), e2.source && e2.source.end ? hT(e2.source.end, t2) : null;
      }
      function ET(e2, t2, n2) {
        e2.source && (e2.source.startOffset = yT(e2, n2) + t2, e2.source.endOffset = DT(e2, n2) + t2);
        for (const r2 in e2) {
          const o2 = e2[r2];
          "source" !== r2 && o2 && "object" == typeof o2 && ET(o2, t2, n2);
        }
      }
      function bT(e2) {
        let t2 = e2.source.startOffset;
        return "string" == typeof e2.prop && (t2 += e2.prop.length), "css-atrule" === e2.type && "string" == typeof e2.name && (t2 += 1 + e2.name.length + e2.raws.afterName.match(/^\s*:?\s*/)[0].length), "css-atrule" !== e2.type && e2.raws && "string" == typeof e2.raws.between && (t2 += e2.raws.between.length), t2;
      }
      var CT = { locStart: function(e2) {
        return e2.source.startOffset;
      }, locEnd: function(e2) {
        return e2.source.endOffset;
      }, calculateLoc: function e2(t2, n2) {
        t2.source && (t2.source.startOffset = yT(t2, n2), t2.source.endOffset = DT(t2, n2));
        for (const r2 in t2) {
          const o2 = t2[r2];
          "source" !== r2 && o2 && "object" == typeof o2 && ("value-root" === o2.type || "value-unknown" === o2.type ? ET(o2, bT(t2), o2.text || o2.value) : e2(o2, n2));
        }
      }, replaceQuotesInInlineComments: function(e2) {
        let t2, n2 = "initial", r2 = "initial", o2 = false;
        const i2 = [];
        for (let u2 = 0; u2 < e2.length; u2++) {
          const s2 = e2[u2];
          switch (n2) {
            case "initial":
              if ("'" === s2) {
                n2 = "single-quotes";
                continue;
              }
              if ('"' === s2) {
                n2 = "double-quotes";
                continue;
              }
              if (("u" === s2 || "U" === s2) && "url(" === e2.slice(u2, u2 + 4).toLowerCase()) {
                n2 = "url", u2 += 3;
                continue;
              }
              if ("*" === s2 && "/" === e2[u2 - 1]) {
                n2 = "comment-block";
                continue;
              }
              if ("/" === s2 && "/" === e2[u2 - 1]) {
                n2 = "comment-inline", t2 = u2 - 1;
                continue;
              }
              continue;
            case "single-quotes":
              if ("'" === s2 && "\\" !== e2[u2 - 1] && (n2 = r2, r2 = "initial"), "\n" === s2 || "\r" === s2)
                return e2;
              continue;
            case "double-quotes":
              if ('"' === s2 && "\\" !== e2[u2 - 1] && (n2 = r2, r2 = "initial"), "\n" === s2 || "\r" === s2)
                return e2;
              continue;
            case "url":
              if (")" === s2 && (n2 = "initial"), "\n" === s2 || "\r" === s2)
                return e2;
              if ("'" === s2) {
                n2 = "single-quotes", r2 = "url";
                continue;
              }
              if ('"' === s2) {
                n2 = "double-quotes", r2 = "url";
                continue;
              }
              continue;
            case "comment-block":
              "/" === s2 && "*" === e2[u2 - 1] && (n2 = "initial");
              continue;
            case "comment-inline":
              '"' !== s2 && "'" !== s2 && "*" !== s2 || (o2 = true), "\n" !== s2 && "\r" !== s2 || (o2 && i2.push([t2, u2]), n2 = "initial", o2 = false);
              continue;
          }
        }
        for (const [t3, n3] of i2)
          e2 = e2.slice(0, t3) + e2.slice(t3, n3).replace(/["'*]/g, " ") + e2.slice(n3);
        return e2;
      } };
      const { printNumber: vT, printString: AT, hasNewline: FT, isFrontMatterNode: xT, isNextLineEmpty: ST, isNonEmptyArray: wT } = rn, { builders: { join: TT2, line: BT, hardline: kT, softline: NT, group: PT, fill: OT, indent: IT, dedent: jT, ifBreak: LT, breakParent: _T }, utils: { removeLines: MT, getDocParts: RT } } = Rn, { insertPragma: VT } = eT, { getAncestorNode: $T, getPropOfDeclNode: qT, maybeToLowerCase: WT, insideValueFunctionNode: UT, insideICSSRuleNode: zT, insideAtRuleNode: HT, insideURLFunctionInImportAtRuleNode: GT, isKeyframeAtRuleKeywords: JT, isWideKeywords: XT, isSCSS: YT, isLastNode: KT, isLessParser: QT, isSCSSControlDirectiveNode: ZT, isDetachedRulesetDeclarationNode: eB, isRelationalOperatorNode: tB, isEqualityOperatorNode: nB, isMultiplicationNode: rB, isDivisionNode: oB, isAdditionNode: iB, isSubtractionNode: uB, isMathOperatorNode: sB, isEachKeywordNode: aB, isForKeywordNode: cB, isURLFunctionNode: lB, isIfElseKeywordNode: pB, hasComposesNode: fB, hasParensAroundNode: dB, hasEmptyRawBefore: hB, isKeyValuePairNode: mB, isKeyInValuePairNode: gB, isDetachedRulesetCallNode: yB, isTemplatePlaceholderNode: DB, isTemplatePropNode: EB, isPostcssSimpleVarNode: bB, isSCSSMapItemNode: CB, isInlineValueCommentNode: vB, isHashNode: AB, isLeftCurlyBraceNode: FB, isRightCurlyBraceNode: xB, isWordNode: SB, isColonNode: wB, isMediaAndSupportsKeywords: TB, isColorAdjusterFuncNode: BB, lastLineHasInlineComment: kB, isAtWordPlaceholderNode: NB } = dT, { locStart: PB, locEnd: OB } = CT;
      function IB(e2) {
        return "es5" === e2.trailingComma || "all" === e2.trailingComma;
      }
      function jB(e2, t2, n2) {
        const r2 = [];
        return e2.each((e3, o2, i2) => {
          const u2 = i2[o2 - 1];
          if (u2 && "css-comment" === u2.type && "prettier-ignore" === u2.text.trim()) {
            const n3 = e3.getValue();
            r2.push(t2.originalText.slice(PB(n3), OB(n3)));
          } else
            r2.push(n2());
          o2 !== i2.length - 1 && ("css-comment" === i2[o2 + 1].type && !FT(t2.originalText, PB(i2[o2 + 1]), { backwards: true }) && !xT(i2[o2]) || "css-atrule" === i2[o2 + 1].type && "else" === i2[o2 + 1].name && "css-comment" !== i2[o2].type ? r2.push(" ") : (r2.push(t2.__isHTMLStyleAttribute ? BT : kT), ST(t2.originalText, e3.getValue(), OB) && !xT(i2[o2]) && r2.push(kT)));
        }, "nodes"), r2;
      }
      const LB = /(["'])(?:(?!\1)[^\\]|\\[\S\s])*\1/g, _B = new RegExp(LB.source + "|" + "(".concat(/[$@]?[A-Z_a-z\u0080-\uFFFF][\w\u0080-\uFFFF-]*/g.source, ")?") + "(".concat(/(?:\d*\.\d+|\d+\.?)(?:[Ee][+-]?\d+)?/g.source, ")") + "(".concat(/[A-Za-z]+/g.source, ")?"), "g");
      function MB(e2, t2) {
        return e2.replace(LB, (e3) => AT(e3, t2));
      }
      function RB(e2, t2) {
        const n2 = t2.singleQuote ? "'" : '"';
        return e2.includes('"') || e2.includes("'") ? e2 : n2 + e2 + n2;
      }
      function VB(e2) {
        return e2.replace(_B, (e3, t2, n2, r2, o2) => !n2 && r2 ? $B(r2) + WT(o2 || "") : e3);
      }
      function $B(e2) {
        return vT(e2).replace(/\.0(?=$|e)/, "");
      }
      var qB = { print: function(e2, t2, n2) {
        const r2 = e2.getValue();
        if (!r2)
          return "";
        if ("string" == typeof r2)
          return r2;
        switch (r2.type) {
          case "front-matter":
            return [r2.raw, kT];
          case "css-root": {
            const o2 = jB(e2, t2, n2), i2 = r2.raws.after.trim();
            return [o2, i2 ? " ".concat(i2) : "", RT(o2).length > 0 ? kT : ""];
          }
          case "css-comment": {
            const e3 = r2.inline || r2.raws.inline, n3 = t2.originalText.slice(PB(r2), OB(r2));
            return e3 ? n3.trimEnd() : n3;
          }
          case "css-rule":
            return [n2("selector"), r2.important ? " !important" : "", r2.nodes ? [r2.selector && "selector-unknown" === r2.selector.type && kB(r2.selector.value) ? BT : " ", "{", r2.nodes.length > 0 ? IT([kT, jB(e2, t2, n2)]) : "", kT, "}", eB(r2) ? ";" : ""] : ";"];
          case "css-decl": {
            const o2 = e2.getParentNode(), { between: i2 } = r2.raws, u2 = i2.trim(), s2 = ":" === u2;
            let a2 = fB(r2) ? MT(n2("value")) : n2("value");
            return !s2 && kB(u2) && (a2 = IT([kT, jT(a2)])), [r2.raws.before.replace(/[\s;]/g, ""), zT(e2) ? r2.prop : WT(r2.prop), u2.startsWith("//") ? " " : "", u2, r2.extend ? "" : " ", QT(t2) && r2.extend && r2.selector ? ["extend(", n2("selector"), ")"] : "", a2, r2.raws.important ? r2.raws.important.replace(/\s*!\s*important/i, " !important") : r2.important ? " !important" : "", r2.raws.scssDefault ? r2.raws.scssDefault.replace(/\s*!default/i, " !default") : r2.scssDefault ? " !default" : "", r2.raws.scssGlobal ? r2.raws.scssGlobal.replace(/\s*!global/i, " !global") : r2.scssGlobal ? " !global" : "", r2.nodes ? [" {", IT([NT, jB(e2, t2, n2)]), NT, "}"] : EB(r2) && !o2.raws.semicolon && ";" !== t2.originalText[OB(r2) - 1] ? "" : t2.__isHTMLStyleAttribute && KT(e2, r2) ? LT(";") : ";"];
          }
          case "css-atrule": {
            const o2 = e2.getParentNode(), i2 = DB(r2) && !o2.raws.semicolon && ";" !== t2.originalText[OB(r2) - 1];
            if (QT(t2)) {
              if (r2.mixin)
                return [n2("selector"), r2.important ? " !important" : "", i2 ? "" : ";"];
              if (r2.function)
                return [r2.name, n2("params"), i2 ? "" : ";"];
              if (r2.variable)
                return ["@", r2.name, ": ", r2.value ? n2("value") : "", r2.raws.between.trim() ? r2.raws.between.trim() + " " : "", r2.nodes ? ["{", IT([r2.nodes.length > 0 ? NT : "", jB(e2, t2, n2)]), NT, "}"] : "", i2 ? "" : ";"];
            }
            return ["@", yB(r2) || r2.name.endsWith(":") ? r2.name : WT(r2.name), r2.params ? [yB(r2) ? "" : DB(r2) ? "" === r2.raws.afterName ? "" : r2.name.endsWith(":") ? " " : /^\s*\n\s*\n/.test(r2.raws.afterName) ? [kT, kT] : /^\s*\n/.test(r2.raws.afterName) ? kT : " " : " ", n2("params")] : "", r2.selector ? IT([" ", n2("selector")]) : "", r2.value ? PT([" ", n2("value"), ZT(r2) ? dB(r2) ? " " : BT : ""]) : "else" === r2.name ? " " : "", r2.nodes ? [ZT(r2) ? "" : r2.selector && !r2.selector.nodes && "string" == typeof r2.selector.value && kB(r2.selector.value) || !r2.selector && "string" == typeof r2.params && kB(r2.params) ? BT : " ", "{", IT([r2.nodes.length > 0 ? NT : "", jB(e2, t2, n2)]), NT, "}"] : i2 ? "" : ";"];
          }
          case "media-query-list": {
            const t3 = [];
            return e2.each((e3) => {
              const r3 = e3.getValue();
              "media-query" === r3.type && "" === r3.value || t3.push(n2());
            }, "nodes"), PT(IT(TT2(BT, t3)));
          }
          case "media-query":
            return [TT2(" ", e2.map(n2, "nodes")), KT(e2, r2) ? "" : ","];
          case "media-type":
            return VB(MB(r2.value, t2));
          case "media-feature-expression":
            return r2.nodes ? ["(", ...e2.map(n2, "nodes"), ")"] : r2.value;
          case "media-feature":
            return WT(MB(r2.value.replace(/ +/g, " "), t2));
          case "media-colon":
            return [r2.value, " "];
          case "media-value":
            return VB(MB(r2.value, t2));
          case "media-keyword":
            return MB(r2.value, t2);
          case "media-url":
            return MB(r2.value.replace(/^url\(\s+/gi, "url(").replace(/\s+\)$/gi, ")"), t2);
          case "media-unknown":
            return r2.value;
          case "selector-root":
            return PT([HT(e2, "custom-selector") ? [$T(e2, "css-atrule").customSelector, BT] : "", TT2([",", HT(e2, ["extend", "custom-selector", "nest"]) ? BT : kT], e2.map(n2, "nodes"))]);
          case "selector-selector":
            return PT(IT(e2.map(n2, "nodes")));
          case "selector-comment":
            return r2.value;
          case "selector-string":
            return MB(r2.value, t2);
          case "selector-tag": {
            const t3 = e2.getParentNode(), n3 = t3 && t3.nodes.indexOf(r2), o2 = n3 && t3.nodes[n3 - 1];
            return [r2.namespace ? [true === r2.namespace ? "" : r2.namespace.trim(), "|"] : "", "selector-nesting" === o2.type ? r2.value : VB(JT(e2, r2.value) ? r2.value.toLowerCase() : r2.value)];
          }
          case "selector-id":
            return ["#", r2.value];
          case "selector-class":
            return [".", VB(MB(r2.value, t2))];
          case "selector-attribute":
            return ["[", r2.namespace ? [true === r2.namespace ? "" : r2.namespace.trim(), "|"] : "", r2.attribute.trim(), r2.operator ? r2.operator : "", r2.value ? RB(MB(r2.value.trim(), t2), t2) : "", r2.insensitive ? " i" : "", "]"];
          case "selector-combinator":
            if ("+" === r2.value || ">" === r2.value || "~" === r2.value || ">>>" === r2.value) {
              const t3 = e2.getParentNode();
              return ["selector-selector" === t3.type && t3.nodes[0] === r2 ? "" : BT, r2.value, KT(e2, r2) ? "" : " "];
            }
            return [r2.value.trim().startsWith("(") ? BT : "", VB(MB(r2.value.trim(), t2)) || BT];
          case "selector-universal":
            return [r2.namespace ? [true === r2.namespace ? "" : r2.namespace.trim(), "|"] : "", r2.value];
          case "selector-pseudo":
            return [WT(r2.value), wT(r2.nodes) ? ["(", TT2(", ", e2.map(n2, "nodes")), ")"] : ""];
          case "selector-nesting":
            return r2.value;
          case "selector-unknown": {
            const n3 = $T(e2, "css-rule");
            if (n3 && n3.isSCSSNesterProperty)
              return VB(MB(WT(r2.value), t2));
            const o2 = e2.getParentNode();
            if (o2.raws && o2.raws.selector) {
              const e3 = PB(o2), n4 = e3 + o2.raws.selector.length;
              return t2.originalText.slice(e3, n4).trim();
            }
            const i2 = e2.getParentNode(1);
            if ("value-paren_group" === o2.type && i2 && "value-func" === i2.type && "selector" === i2.value) {
              const e3 = PB(o2.open) + 1, n4 = OB(o2.close) - 1, r3 = t2.originalText.slice(e3, n4).trim();
              return kB(r3) ? [_T, r3] : r3;
            }
            return r2.value;
          }
          case "value-value":
          case "value-root":
            return n2("group");
          case "value-comment":
            return t2.originalText.slice(PB(r2), OB(r2));
          case "value-comma_group": {
            const t3 = e2.getParentNode(), o2 = e2.getParentNode(1), i2 = qT(e2), u2 = i2 && "value-value" === t3.type && ("grid" === i2 || i2.startsWith("grid-template")), s2 = $T(e2, "css-atrule"), a2 = s2 && ZT(s2), c2 = r2.groups.some((e3) => vB(e3)), l2 = e2.map(n2, "groups"), p2 = [], f2 = UT(e2, "url");
            let d2 = false, h2 = false;
            for (let n3 = 0; n3 < r2.groups.length; ++n3) {
              p2.push(l2[n3]);
              const i3 = r2.groups[n3 - 1], c3 = r2.groups[n3], m2 = r2.groups[n3 + 1], g2 = r2.groups[n3 + 2];
              if (f2) {
                (m2 && iB(m2) || iB(c3)) && p2.push(" ");
                continue;
              }
              if (!m2)
                continue;
              if ("value-word" === c3.type && c3.value.endsWith("-") && NB(m2))
                continue;
              const y2 = "value-string" === c3.type && c3.value.startsWith("#{"), D2 = d2 && "value-string" === m2.type && m2.value.endsWith("}");
              if (y2 || D2) {
                d2 = !d2;
                continue;
              }
              if (d2)
                continue;
              if (wB(c3) || wB(m2))
                continue;
              if ("value-atword" === c3.type && "" === c3.value)
                continue;
              if ("~" === c3.value)
                continue;
              if (c3.value && c3.value.includes("\\") && m2 && "value-comment" !== m2.type)
                continue;
              if (i3 && i3.value && i3.value.indexOf("\\") === i3.value.length - 1 && "value-operator" === c3.type && "/" === c3.value)
                continue;
              if ("\\" === c3.value)
                continue;
              if (bB(c3, m2))
                continue;
              if (AB(c3) || FB(c3) || xB(m2) || FB(m2) && hB(m2) || xB(c3) && hB(m2))
                continue;
              if ("--" === c3.value && AB(m2))
                continue;
              const E2 = sB(c3), b2 = sB(m2);
              if ((E2 && AB(m2) || b2 && xB(c3)) && hB(m2))
                continue;
              if (!i3 && oB(c3))
                continue;
              if (UT(e2, "calc") && (iB(c3) || iB(m2) || uB(c3) || uB(m2)) && hB(m2))
                continue;
              const C2 = (iB(c3) || uB(c3)) && 0 === n3 && ("value-number" === m2.type || m2.isHex) && o2 && BB(o2) && !hB(m2), v2 = g2 && "value-func" === g2.type || g2 && SB(g2) || "value-func" === c3.type || SB(c3), A4 = "value-func" === m2.type || SB(m2) || i3 && "value-func" === i3.type || i3 && SB(i3);
              if (rB(m2) || rB(c3) || UT(e2, "calc") || C2 || !(oB(m2) && !v2 || oB(c3) && !A4 || iB(m2) && !v2 || iB(c3) && !A4 || uB(m2) || uB(c3)) || !(hB(m2) || E2 && (!i3 || i3 && sB(i3))))
                if (vB(c3)) {
                  if ("value-paren_group" === t3.type) {
                    p2.push(jT(kT));
                    continue;
                  }
                  p2.push(kT);
                } else
                  a2 && (nB(m2) || tB(m2) || pB(m2) || aB(c3) || cB(c3)) || s2 && "namespace" === s2.name.toLowerCase() ? p2.push(" ") : u2 ? c3.source && m2.source && c3.source.start.line !== m2.source.start.line ? (p2.push(kT), h2 = true) : p2.push(" ") : b2 ? p2.push(" ") : m2 && "..." === m2.value || NB(c3) && NB(m2) && OB(c3) === PB(m2) || p2.push(BT);
            }
            return c2 && p2.push(_T), h2 && p2.unshift(kT), a2 ? PT(IT(p2)) : GT(e2) ? PT(OT(p2)) : PT(IT(OT(p2)));
          }
          case "value-paren_group": {
            const o2 = e2.getParentNode();
            if (o2 && lB(o2) && (1 === r2.groups.length || r2.groups.length > 0 && "value-comma_group" === r2.groups[0].type && r2.groups[0].groups.length > 0 && "value-word" === r2.groups[0].groups[0].type && r2.groups[0].groups[0].value.startsWith("data:")))
              return [r2.open ? n2("open") : "", TT2(",", e2.map(n2, "groups")), r2.close ? n2("close") : ""];
            if (!r2.open) {
              const t3 = e2.map(n2, "groups"), r3 = [];
              for (let e3 = 0; e3 < t3.length; e3++)
                0 !== e3 && r3.push([",", BT]), r3.push(t3[e3]);
              return PT(IT(OT(r3)));
            }
            const i2 = CB(e2), u2 = ke(r2.groups), s2 = u2 && "value-comment" === u2.type, a2 = gB(r2, o2), c2 = PT([r2.open ? n2("open") : "", IT([NT, TT2([",", BT], e2.map((e3) => {
              const t3 = e3.getValue(), r3 = n2();
              if (mB(t3) && "value-comma_group" === t3.type && t3.groups && "value-paren_group" !== t3.groups[0].type && t3.groups[2] && "value-paren_group" === t3.groups[2].type) {
                const e4 = RT(r3.contents.contents);
                return e4[1] = PT(e4[1]), PT(jT(r3));
              }
              return r3;
            }, "groups"))]), LT(!s2 && YT(t2.parser, t2.originalText) && i2 && IB(t2) ? "," : ""), NT, r2.close ? n2("close") : ""], { shouldBreak: i2 && !a2 });
            return a2 ? jT(c2) : c2;
          }
          case "value-func":
            return [r2.value, HT(e2, "supports") && TB(r2) ? " " : "", n2("group")];
          case "value-paren":
            return r2.value;
          case "value-number":
            return [$B(r2.value), WT(r2.unit)];
          case "value-operator":
            return r2.value;
          case "value-word":
            return r2.isColor && r2.isHex || XT(r2.value) ? r2.value.toLowerCase() : r2.value;
          case "value-colon": {
            const t3 = e2.getParentNode(), n3 = t3 && t3.groups.indexOf(r2), o2 = n3 && t3.groups[n3 - 1];
            return [r2.value, o2 && "string" == typeof o2.value && "\\" === ke(o2.value) || UT(e2, "url") ? "" : BT];
          }
          case "value-comma":
            return [r2.value, " "];
          case "value-string":
            return AT(r2.raws.quote + r2.value + r2.raws.quote, t2);
          case "value-atword":
            return ["@", r2.value];
          case "value-unicode-range":
          case "value-unknown":
            return r2.value;
          default:
            throw new Error("Unknown postcss type ".concat(JSON.stringify(r2.type)));
        }
      }, embed: Kw, insertPragma: VT, massageAstNode: Hw }, WB = { singleQuote: Ow.singleQuote }, UB = { name: "PostCSS", type: "markup", tmScope: "source.postcss", group: "CSS", extensions: [".pcss", ".postcss"], aceMode: "text", languageId: 262764437 }, zB = { name: "Less", type: "markup", color: "#1d365d", extensions: [".less"], tmScope: "source.css.less", aceMode: "less", codemirrorMode: "css", codemirrorMimeType: "text/css", languageId: 198 }, HB = { name: "SCSS", type: "markup", color: "#c6538c", tmScope: "source.css.scss", aceMode: "scss", codemirrorMode: "css", codemirrorMimeType: "text/x-scss", extensions: [".scss"], languageId: 329 };
      var GB = { languages: [df({ name: "CSS", type: "markup", tmScope: "source.css", aceMode: "css", codemirrorMode: "css", codemirrorMimeType: "text/css", color: "#563d7c", extensions: [".css"], languageId: 50 }, (e2) => ({ since: "1.4.0", parsers: ["css"], vscodeLanguageIds: ["css"], extensions: [...e2.extensions, ".wxss"] })), df(UB, () => ({ since: "1.4.0", parsers: ["css"], vscodeLanguageIds: ["postcss"] })), df(zB, () => ({ since: "1.4.0", parsers: ["less"], vscodeLanguageIds: ["less"] })), df(HB, () => ({ since: "1.4.0", parsers: ["scss"], vscodeLanguageIds: ["scss"] }))], options: WB, printers: { postcss: qB }, parsers: { get css() {
        return {}.parsers.css;
      }, get less() {
        return {}.parsers.less;
      }, get scss() {
        return {}.parsers.scss;
      } } };
      var JB = { locStart: function(e2) {
        return e2.loc.start.offset;
      }, locEnd: function(e2) {
        return e2.loc.end.offset;
      } };
      function XB(e2, t2) {
        if ("TextNode" === e2.type) {
          const n2 = e2.chars.trim();
          if (!n2)
            return null;
          t2.chars = n2.replace(/[\t\n\f\r ]+/g, " ");
        }
        "AttrNode" === e2.type && "class" === e2.name.toLowerCase() && delete t2.value;
      }
      XB.ignoredProperties = /* @__PURE__ */ new Set(["loc", "selfClosing"]);
      var YB = XB;
      const KB = /* @__PURE__ */ new Set(["area", "base", "basefont", "bgsound", "br", "col", "command", "embed", "frame", "hr", "image", "img", "input", "isindex", "keygen", "link", "menuitem", "meta", "nextid", "param", "source", "track", "wbr"]);
      function QB(e2) {
        return ZB(e2, ["TextNode"]) && !/\S/.test(e2.chars);
      }
      function ZB(e2, t2) {
        return e2 && t2.includes(e2.type);
      }
      function ek(e2, t2) {
        return ZB(e2.getParentNode(0), t2);
      }
      function tk(e2, t2) {
        const n2 = e2.getValue(), r2 = e2.getParentNode(0) || {}, o2 = r2.children || r2.body || r2.parts || [], i2 = o2.indexOf(n2);
        return -1 !== i2 && o2[i2 + t2];
      }
      function nk(e2, t2 = 1) {
        return tk(e2, -t2);
      }
      function rk(e2) {
        return tk(e2, 1);
      }
      function ok(e2) {
        return ZB(e2, ["MustacheCommentStatement"]) && "string" == typeof e2.value && "prettier-ignore" === e2.value.trim();
      }
      var ik = { getNextNode: rk, getPreviousNode: nk, hasPrettierIgnore: function(e2) {
        const t2 = e2.getValue(), n2 = nk(e2, 2);
        return ok(t2) || ok(n2);
      }, isLastNodeOfSiblings: function(e2) {
        const t2 = e2.getValue(), n2 = e2.getParentNode(0);
        return !(!ek(e2, ["ElementNode"]) || ke(n2.children) !== t2) || !(!ek(e2, ["Block"]) || ke(n2.body) !== t2);
      }, isNextNodeOfSomeType: function(e2, t2) {
        return ZB(rk(e2), t2);
      }, isNodeOfSomeType: ZB, isParentOfSomeType: ek, isPreviousNodeOfSomeType: function(e2, t2) {
        return ZB(nk(e2), t2);
      }, isVoid: function(e2) {
        return function(e3) {
          return ZB(e3, ["ElementNode"]) && "string" == typeof e3.tag && (function(e4) {
            return e4.toUpperCase() === e4;
          }(e3.tag[0]) || e3.tag.includes("."));
        }(e2) && e2.children.every((e3) => QB(e3)) || KB.has(e2.tag);
      }, isWhitespaceNode: QB };
      const { builders: { dedent: uk, fill: sk, group: ak, hardline: ck, ifBreak: lk, indent: pk, join: fk, line: dk, softline: hk, literalline: mk }, utils: { getDocParts: gk } } = Rn, { isNonEmptyArray: yk, replaceEndOfLineWith: Dk } = rn, { locStart: Ek, locEnd: bk } = JB, { getNextNode: Ck, getPreviousNode: vk, hasPrettierIgnore: Ak, isLastNodeOfSiblings: Fk, isNextNodeOfSomeType: xk, isNodeOfSomeType: Sk, isParentOfSomeType: wk, isPreviousNodeOfSomeType: Tk, isVoid: Bk, isWhitespaceNode: kk } = ik;
      function Nk(e2, t2, n2) {
        const r2 = e2.getValue().children.every((e3) => kk(e3));
        return "ignore" === t2.htmlWhitespaceSensitivity && r2 ? "" : e2.map((e3, r3) => {
          const o2 = n2();
          return 0 === r3 && "ignore" === t2.htmlWhitespaceSensitivity ? [hk, o2] : o2;
        }, "children");
      }
      function Pk(e2) {
        return Bk(e2) ? lk([hk, "/>"], [" />", hk]) : lk([hk, ">"], ">");
      }
      function Ok(e2) {
        return [false === e2.escaped ? "{{{" : "{{", e2.strip && e2.strip.open ? "~" : ""];
      }
      function Ik(e2) {
        const t2 = false === e2.escaped ? "}}}" : "}}";
        return [e2.strip && e2.strip.close ? "~" : "", t2];
      }
      function jk(e2) {
        return [Ok(e2), e2.closeStrip.open ? "~" : "", "/"];
      }
      function Lk(e2) {
        const t2 = Ik(e2);
        return [e2.closeStrip.close ? "~" : "", t2];
      }
      function _k(e2) {
        return [Ok(e2), e2.inverseStrip.open ? "~" : ""];
      }
      function Mk(e2) {
        const t2 = Ik(e2);
        return [e2.inverseStrip.close ? "~" : "", t2];
      }
      function Rk(e2, t2) {
        const n2 = e2.getValue(), r2 = function(e3) {
          return [Ok(e3), e3.openStrip.open ? "~" : "", "#"];
        }(n2), o2 = function(e3) {
          const t3 = Ik(e3);
          return [e3.openStrip.close ? "~" : "", t3];
        }(n2), i2 = [Zk(e2, t2)], u2 = eN(e2, t2);
        if (u2 && i2.push(dk, u2), yk(n2.program.blockParams)) {
          const e3 = tN(n2.program);
          i2.push(dk, e3);
        }
        return ak([r2, pk(i2), hk, o2]);
      }
      function Vk(e2, t2) {
        return ["ignore" === t2.htmlWhitespaceSensitivity ? ck : "", _k(e2), "else", Mk(e2)];
      }
      function $k(e2, t2) {
        const n2 = e2.getParentNode(1);
        return [_k(n2), "else if ", eN(e2, t2), Mk(n2)];
      }
      function qk(e2, t2, n2) {
        const r2 = e2.getValue();
        if ("ignore" === n2.htmlWhitespaceSensitivity) {
          return [Wk(r2) ? hk : ck, jk(r2), t2("path"), Lk(r2)];
        }
        return [jk(r2), t2("path"), Lk(r2)];
      }
      function Wk(e2) {
        return Sk(e2, ["BlockStatement"]) && e2.program.body.every((e3) => kk(e3));
      }
      function Uk(e2) {
        return Sk(e2, ["BlockStatement"]) && e2.inverse;
      }
      function zk(e2, t2, n2) {
        if (Wk(e2.getValue()))
          return "";
        const r2 = t2("program");
        return "ignore" === n2.htmlWhitespaceSensitivity ? pk([ck, r2]) : pk(r2);
      }
      function Hk(e2, t2, n2) {
        const r2 = e2.getValue(), o2 = t2("inverse"), i2 = "ignore" === n2.htmlWhitespaceSensitivity ? [ck, o2] : o2;
        return function(e3) {
          return Uk(e3) && 1 === e3.inverse.body.length && Sk(e3.inverse.body[0], ["BlockStatement"]) && "if" === e3.inverse.body[0].path.parts[0];
        }(r2) ? i2 : Uk(r2) ? [Vk(r2, n2), pk(i2)] : "";
      }
      function Gk(e2) {
        return gk(fk(dk, function(e3) {
          return e3.split(/[\t\n\f\r ]+/);
        }(e2)));
      }
      function Jk(e2) {
        return (e2 = "string" == typeof e2 ? e2 : "").split("\n").length - 1;
      }
      function Xk(e2 = 0) {
        return new Array(Math.min(e2, 2)).fill(ck);
      }
      function Yk(e2, t2) {
        const n2 = { quote: '"', regex: /"/g }, r2 = { quote: "'", regex: /'/g }, o2 = e2.singleQuote ? r2 : n2, i2 = o2 === r2 ? n2 : r2;
        let u2 = false;
        if (t2.includes(o2.quote) || t2.includes(i2.quote)) {
          u2 = (t2.match(o2.regex) || []).length > (t2.match(i2.regex) || []).length;
        }
        return u2 ? i2 : o2;
      }
      function Kk(e2, t2) {
        const n2 = Zk(e2, t2), r2 = eN(e2, t2);
        return r2 ? pk([n2, dk, ak(r2)]) : n2;
      }
      function Qk(e2, t2) {
        const n2 = Zk(e2, t2), r2 = eN(e2, t2);
        return r2 ? [pk([n2, dk, r2]), hk] : n2;
      }
      function Zk(e2, t2) {
        return t2("path");
      }
      function eN(e2, t2) {
        const n2 = e2.getValue(), r2 = [];
        if (n2.params.length > 0) {
          const n3 = e2.map(t2, "params");
          r2.push(...n3);
        }
        if (n2.hash && n2.hash.pairs.length > 0) {
          const e3 = t2("hash");
          r2.push(e3);
        }
        return 0 === r2.length ? "" : fk(dk, r2);
      }
      function tN(e2) {
        return ["as |", e2.blockParams.join(" "), "|"];
      }
      var nN = { print: function(e2, t2, n2) {
        const r2 = e2.getValue();
        if (!r2)
          return "";
        if (Ak(e2))
          return t2.originalText.slice(Ek(r2), bk(r2));
        switch (r2.type) {
          case "Block":
          case "Program":
          case "Template":
            return ak(e2.map(n2, "body"));
          case "ElementNode": {
            const o2 = ak(function(e3, t3) {
              const n3 = e3.getValue(), r3 = ["attributes", "modifiers", "comments", "blockParams"].filter((e4) => yk(n3[e4])).map((r4) => [dk, "blockParams" === r4 ? tN(n3) : fk(dk, e3.map(t3, r4))]);
              return ["<", n3.tag, pk(r3), Pk(n3)];
            }(e2, n2)), i2 = "ignore" === t2.htmlWhitespaceSensitivity && xk(e2, ["ElementNode"]) ? hk : "";
            if (Bk(r2))
              return [o2, i2];
            const u2 = ["</", r2.tag, ">"];
            return 0 === r2.children.length ? [o2, pk(u2), i2] : "ignore" === t2.htmlWhitespaceSensitivity ? [o2, pk(Nk(e2, t2, n2)), ck, pk(u2), i2] : [o2, pk(ak(Nk(e2, t2, n2))), pk(u2), i2];
          }
          case "BlockStatement": {
            const o2 = e2.getParentNode(1);
            return o2 && o2.inverse && 1 === o2.inverse.body.length && o2.inverse.body[0] === r2 && "if" === o2.inverse.body[0].path.parts[0] ? [$k(e2, n2), zk(e2, n2, t2), Hk(e2, n2, t2)] : [Rk(e2, n2), ak([zk(e2, n2, t2), Hk(e2, n2, t2), qk(e2, n2, t2)])];
          }
          case "ElementModifierStatement":
            return ak(["{{", Qk(e2, n2), "}}"]);
          case "MustacheStatement":
            return ak([Ok(r2), Qk(e2, n2), Ik(r2)]);
          case "SubExpression":
            return ak(["(", Kk(e2, n2), hk, ")"]);
          case "AttrNode": {
            const e3 = "TextNode" === r2.value.type;
            if (e3 && "" === r2.value.chars && Ek(r2.value) === bk(r2.value))
              return r2.name;
            const o2 = e3 ? Yk(t2, r2.value.chars).quote : "ConcatStatement" === r2.value.type ? Yk(t2, r2.value.parts.filter((e4) => "TextNode" === e4.type).map((e4) => e4.chars).join("")).quote : "", i2 = n2("value");
            return [r2.name, "=", o2, "class" === r2.name && o2 ? ak(pk(i2)) : i2, o2];
          }
          case "ConcatStatement":
            return e2.map(n2, "parts");
          case "Hash":
            return fk(dk, e2.map(n2, "pairs"));
          case "HashPair":
            return [r2.key, "=", n2("value")];
          case "TextNode": {
            let n3 = r2.chars.replace(/{{/g, "\\{{");
            const o2 = function(e3) {
              for (let t3 = 0; t3 < 2; t3++) {
                const n4 = e3.getParentNode(t3);
                if (n4 && "AttrNode" === n4.type)
                  return n4.name.toLowerCase();
              }
            }(e2);
            if (o2) {
              if ("class" === o2) {
                const t3 = n3.trim().split(/\s+/).join(" ");
                let r3 = false, o3 = false;
                return wk(e2, ["ConcatStatement"]) && (Tk(e2, ["MustacheStatement"]) && /^\s/.test(n3) && (r3 = true), xk(e2, ["MustacheStatement"]) && /\s$/.test(n3) && "" !== t3 && (o3 = true)), [r3 ? dk : "", t3, o3 ? dk : ""];
              }
              return Dk(n3, mk);
            }
            const i2 = /^[\t\n\f\r ]*$/.test(n3), u2 = !vk(e2), s2 = !Ck(e2);
            if ("ignore" !== t2.htmlWhitespaceSensitivity) {
              const t3 = /^[\t\n\f\r ]*/, r3 = /[\t\n\f\r ]*$/, o3 = s2 && wk(e2, ["Template"]), a3 = u2 && wk(e2, ["Template"]);
              if (i2) {
                if (a3 || o3)
                  return "";
                let t4 = [dk];
                const r4 = Jk(n3);
                return r4 && (t4 = Xk(r4)), Fk(e2) && (t4 = t4.map((e3) => uk(e3))), t4;
              }
              const [c3] = n3.match(t3), [l3] = n3.match(r3);
              let p3 = [];
              if (c3) {
                p3 = [dk];
                const e3 = Jk(c3);
                e3 && (p3 = Xk(e3)), n3 = n3.replace(t3, "");
              }
              let f3 = [];
              if (l3) {
                if (!o3) {
                  f3 = [dk];
                  const t4 = Jk(l3);
                  t4 && (f3 = Xk(t4)), Fk(e2) && (f3 = f3.map((e3) => uk(e3)));
                }
                n3 = n3.replace(r3, "");
              }
              return [...p3, sk(Gk(n3)), ...f3];
            }
            const a2 = Jk(n3);
            let c2 = function(e3) {
              return Jk(((e3 = "string" == typeof e3 ? e3 : "").match(/^([^\S\n\r]*[\n\r])+/g) || [])[0] || "");
            }(n3), l2 = function(e3) {
              return Jk(((e3 = "string" == typeof e3 ? e3 : "").match(/([\n\r][^\S\n\r]*)+$/g) || [])[0] || "");
            }(n3);
            if ((u2 || s2) && i2 && wk(e2, ["Block", "ElementNode", "Template"]))
              return "";
            i2 && a2 ? (c2 = Math.min(a2, 2), l2 = 0) : (xk(e2, ["BlockStatement", "ElementNode"]) && (l2 = Math.max(l2, 1)), Tk(e2, ["BlockStatement", "ElementNode"]) && (c2 = Math.max(c2, 1)));
            let p2 = "", f2 = "";
            return 0 === l2 && xk(e2, ["MustacheStatement"]) && (f2 = " "), 0 === c2 && Tk(e2, ["MustacheStatement"]) && (p2 = " "), u2 && (c2 = 0, p2 = ""), s2 && (l2 = 0, f2 = ""), n3 = n3.replace(/^[\t\n\f\r ]+/g, p2).replace(/[\t\n\f\r ]+$/, f2), [...Xk(c2), sk(Gk(n3)), ...Xk(l2)];
          }
          case "MustacheCommentStatement": {
            const e3 = Ek(r2), n3 = bk(r2), o2 = "~" === t2.originalText.charAt(e3 + 2), i2 = "~" === t2.originalText.charAt(n3 - 3), u2 = r2.value.includes("}}") ? "--" : "";
            return ["{{", o2 ? "~" : "", "!", u2, r2.value, u2, i2 ? "~" : "", "}}"];
          }
          case "PathExpression":
            return r2.original;
          case "BooleanLiteral":
            return String(r2.value);
          case "CommentStatement":
            return ["<!--", r2.value, "-->"];
          case "StringLiteral":
            return function(e3, t3) {
              const { quote: n3, regex: r3 } = Yk(t3, e3);
              return [n3, e3.replace(r3, "\\".concat(n3)), n3];
            }(r2.value, t2);
          case "NumberLiteral":
            return String(r2.value);
          case "UndefinedLiteral":
            return "undefined";
          case "NullLiteral":
            return "null";
          default:
            throw new Error("unknown glimmer type: " + JSON.stringify(r2.type));
        }
      }, massageAstNode: YB };
      var rN = { languages: [df({ name: "Handlebars", type: "markup", color: "#f7931e", aliases: ["hbs", "htmlbars"], extensions: [".handlebars", ".hbs"], tmScope: "text.html.handlebars", aceMode: "handlebars", languageId: 155 }, () => ({ since: "2.3.0", parsers: ["glimmer"], vscodeLanguageIds: ["handlebars"] }))], printers: { glimmer: nN }, parsers: { get glimmer() {
        return {}.parsers.glimmer;
      } } };
      var oN = { hasPragma: function(e2) {
        return /^\s*#[^\S\n]*@(format|prettier)\s*(\n|$)/.test(e2);
      }, insertPragma: function(e2) {
        return "# @format\n\n" + e2;
      } };
      var iN = { locStart: function(e2) {
        return "number" == typeof e2.start ? e2.start : e2.loc && e2.loc.start;
      }, locEnd: function(e2) {
        return "number" == typeof e2.end ? e2.end : e2.loc && e2.loc.end;
      } };
      const { builders: { join: uN, hardline: sN, line: aN, softline: cN, group: lN, indent: pN, ifBreak: fN } } = Rn, { isNextLineEmpty: dN, isNonEmptyArray: hN } = rn, { insertPragma: mN } = oN, { locStart: gN, locEnd: yN } = iN;
      function DN(e2, t2, n2) {
        if (0 === n2.directives.length)
          return "";
        const r2 = uN(aN, e2.map(t2, "directives"));
        return "FragmentDefinition" === n2.kind || "OperationDefinition" === n2.kind ? lN([aN, r2]) : [" ", lN(pN([cN, r2]))];
      }
      function EN(e2, t2, n2) {
        const r2 = e2.getValue().length;
        return e2.map((e3, o2) => {
          const i2 = n2();
          return dN(t2.originalText, e3.getValue(), yN) && o2 < r2 - 1 ? [i2, sN] : i2;
        });
      }
      function bN(e2, t2, n2) {
        const r2 = e2.getNode(), o2 = [], { interfaces: i2 } = r2, u2 = e2.map((e3) => n2(e3), "interfaces");
        for (let e3 = 0; e3 < i2.length; e3++) {
          const n3 = i2[e3];
          o2.push(u2[e3]);
          const r3 = i2[e3 + 1];
          if (r3) {
            const e4 = t2.originalText.slice(n3.loc.end, r3.loc.start), i3 = e4.includes("#"), u3 = e4.replace(/#.*/g, "").trim();
            o2.push("," === u3 ? "," : " &", i3 ? aN : " ");
          }
        }
        return o2;
      }
      function CN() {
      }
      CN.ignoredProperties = /* @__PURE__ */ new Set(["loc", "comments"]);
      var vN = { print: function(e2, t2, n2) {
        const r2 = e2.getValue();
        if (!r2)
          return "";
        if ("string" == typeof r2)
          return r2;
        switch (r2.kind) {
          case "Document": {
            const r3 = [];
            return e2.each((e3, o2, i2) => {
              r3.push(n2()), o2 !== i2.length - 1 && (r3.push(sN), dN(t2.originalText, e3.getValue(), yN) && r3.push(sN));
            }, "definitions"), [...r3, sN];
          }
          case "OperationDefinition": {
            const o2 = "{" !== t2.originalText[gN(r2)], i2 = Boolean(r2.name);
            return [o2 ? r2.operation : "", o2 && i2 ? [" ", n2("name")] : "", o2 && !i2 && hN(r2.variableDefinitions) ? " " : "", hN(r2.variableDefinitions) ? lN(["(", pN([cN, uN([fN("", ", "), cN], e2.map(n2, "variableDefinitions"))]), cN, ")"]) : "", DN(e2, n2, r2), r2.selectionSet && (o2 || i2) ? " " : "", n2("selectionSet")];
          }
          case "FragmentDefinition":
            return ["fragment ", n2("name"), hN(r2.variableDefinitions) ? lN(["(", pN([cN, uN([fN("", ", "), cN], e2.map(n2, "variableDefinitions"))]), cN, ")"]) : "", " on ", n2("typeCondition"), DN(e2, n2, r2), " ", n2("selectionSet")];
          case "SelectionSet":
            return ["{", pN([sN, uN(sN, e2.call((e3) => EN(e3, t2, n2), "selections"))]), sN, "}"];
          case "Field":
            return lN([r2.alias ? [n2("alias"), ": "] : "", n2("name"), r2.arguments.length > 0 ? lN(["(", pN([cN, uN([fN("", ", "), cN], e2.call((e3) => EN(e3, t2, n2), "arguments"))]), cN, ")"]) : "", DN(e2, n2, r2), r2.selectionSet ? " " : "", n2("selectionSet")]);
          case "Name":
            return r2.value;
          case "StringValue":
            return r2.block ? ['"""', sN, uN(sN, r2.value.replace(/"""/g, "\\$&").split("\n")), sN, '"""'] : ['"', r2.value.replace(/["\\]/g, "\\$&").replace(/\n/g, "\\n"), '"'];
          case "IntValue":
          case "FloatValue":
          case "EnumValue":
            return r2.value;
          case "BooleanValue":
            return r2.value ? "true" : "false";
          case "NullValue":
            return "null";
          case "Variable":
            return ["$", n2("name")];
          case "ListValue":
            return lN(["[", pN([cN, uN([fN("", ", "), cN], e2.map(n2, "values"))]), cN, "]"]);
          case "ObjectValue":
            return lN(["{", t2.bracketSpacing && r2.fields.length > 0 ? " " : "", pN([cN, uN([fN("", ", "), cN], e2.map(n2, "fields"))]), cN, fN("", t2.bracketSpacing && r2.fields.length > 0 ? " " : ""), "}"]);
          case "ObjectField":
          case "Argument":
            return [n2("name"), ": ", n2("value")];
          case "Directive":
            return ["@", n2("name"), r2.arguments.length > 0 ? lN(["(", pN([cN, uN([fN("", ", "), cN], e2.call((e3) => EN(e3, t2, n2), "arguments"))]), cN, ")"]) : ""];
          case "NamedType":
            return n2("name");
          case "VariableDefinition":
            return [n2("variable"), ": ", n2("type"), r2.defaultValue ? [" = ", n2("defaultValue")] : "", DN(e2, n2, r2)];
          case "ObjectTypeExtension":
          case "ObjectTypeDefinition":
            return [n2("description"), r2.description ? sN : "", "ObjectTypeExtension" === r2.kind ? "extend " : "", "type ", n2("name"), r2.interfaces.length > 0 ? [" implements ", ...bN(e2, t2, n2)] : "", DN(e2, n2, r2), r2.fields.length > 0 ? [" {", pN([sN, uN(sN, e2.call((e3) => EN(e3, t2, n2), "fields"))]), sN, "}"] : ""];
          case "FieldDefinition":
            return [n2("description"), r2.description ? sN : "", n2("name"), r2.arguments.length > 0 ? lN(["(", pN([cN, uN([fN("", ", "), cN], e2.call((e3) => EN(e3, t2, n2), "arguments"))]), cN, ")"]) : "", ": ", n2("type"), DN(e2, n2, r2)];
          case "DirectiveDefinition":
            return [n2("description"), r2.description ? sN : "", "directive ", "@", n2("name"), r2.arguments.length > 0 ? lN(["(", pN([cN, uN([fN("", ", "), cN], e2.call((e3) => EN(e3, t2, n2), "arguments"))]), cN, ")"]) : "", r2.repeatable ? " repeatable" : "", " on ", uN(" | ", e2.map(n2, "locations"))];
          case "EnumTypeExtension":
          case "EnumTypeDefinition":
            return [n2("description"), r2.description ? sN : "", "EnumTypeExtension" === r2.kind ? "extend " : "", "enum ", n2("name"), DN(e2, n2, r2), r2.values.length > 0 ? [" {", pN([sN, uN(sN, e2.call((e3) => EN(e3, t2, n2), "values"))]), sN, "}"] : ""];
          case "EnumValueDefinition":
            return [n2("description"), r2.description ? sN : "", n2("name"), DN(e2, n2, r2)];
          case "InputValueDefinition":
            return [n2("description"), r2.description ? r2.description.block ? sN : aN : "", n2("name"), ": ", n2("type"), r2.defaultValue ? [" = ", n2("defaultValue")] : "", DN(e2, n2, r2)];
          case "InputObjectTypeExtension":
          case "InputObjectTypeDefinition":
            return [n2("description"), r2.description ? sN : "", "InputObjectTypeExtension" === r2.kind ? "extend " : "", "input ", n2("name"), DN(e2, n2, r2), r2.fields.length > 0 ? [" {", pN([sN, uN(sN, e2.call((e3) => EN(e3, t2, n2), "fields"))]), sN, "}"] : ""];
          case "SchemaDefinition":
            return ["schema", DN(e2, n2, r2), " {", r2.operationTypes.length > 0 ? pN([sN, uN(sN, e2.call((e3) => EN(e3, t2, n2), "operationTypes"))]) : "", sN, "}"];
          case "OperationTypeDefinition":
            return [n2("operation"), ": ", n2("type")];
          case "InterfaceTypeExtension":
          case "InterfaceTypeDefinition":
            return [n2("description"), r2.description ? sN : "", "InterfaceTypeExtension" === r2.kind ? "extend " : "", "interface ", n2("name"), r2.interfaces.length > 0 ? [" implements ", ...bN(e2, t2, n2)] : "", DN(e2, n2, r2), r2.fields.length > 0 ? [" {", pN([sN, uN(sN, e2.call((e3) => EN(e3, t2, n2), "fields"))]), sN, "}"] : ""];
          case "FragmentSpread":
            return ["...", n2("name"), DN(e2, n2, r2)];
          case "InlineFragment":
            return ["...", r2.typeCondition ? [" on ", n2("typeCondition")] : "", DN(e2, n2, r2), " ", n2("selectionSet")];
          case "UnionTypeExtension":
          case "UnionTypeDefinition":
            return lN([n2("description"), r2.description ? sN : "", lN(["UnionTypeExtension" === r2.kind ? "extend " : "", "union ", n2("name"), DN(e2, n2, r2), r2.types.length > 0 ? [" =", fN("", " "), pN([fN([aN, "  "]), uN([aN, "| "], e2.map(n2, "types"))])] : ""])]);
          case "ScalarTypeExtension":
          case "ScalarTypeDefinition":
            return [n2("description"), r2.description ? sN : "", "ScalarTypeExtension" === r2.kind ? "extend " : "", "scalar ", n2("name"), DN(e2, n2, r2)];
          case "NonNullType":
            return [n2("type"), "!"];
          case "ListType":
            return ["[", n2("type"), "]"];
          default:
            throw new Error("unknown graphql type: " + JSON.stringify(r2.kind));
        }
      }, massageAstNode: CN, hasPrettierIgnore: function(e2) {
        const t2 = e2.getValue();
        return t2 && Array.isArray(t2.comments) && t2.comments.some((e3) => "prettier-ignore" === e3.value.trim());
      }, insertPragma: mN, printComment: function(e2) {
        const t2 = e2.getValue();
        if ("Comment" === t2.kind)
          return "#" + t2.value.trimEnd();
        throw new Error("Not a comment: " + JSON.stringify(t2));
      }, canAttachComment: function(e2) {
        return e2.kind && "Comment" !== e2.kind;
      } }, AN = { bracketSpacing: Ow.bracketSpacing };
      var FN = { languages: [df({ name: "GraphQL", type: "data", color: "#e10098", extensions: [".graphql", ".gql", ".graphqls"], tmScope: "source.graphql", aceMode: "text", languageId: 139 }, () => ({ since: "1.5.0", parsers: ["graphql"], vscodeLanguageIds: ["graphql"] }))], options: AN, printers: { graphql: vN }, parsers: { get graphql() {
        return {}.parsers.graphql;
      } } };
      var xN = { locStart: function(e2) {
        return e2.position.start.offset;
      }, locEnd: function(e2) {
        return e2.position.end.offset;
      } };
      const { getLast: SN } = rn, { locStart: wN, locEnd: TN } = xN, { cjkPattern: BN, kPattern: kN, punctuationPattern: NN } = { cjkPattern: "(?:[\\u02ea-\\u02eb\\u1100-\\u11ff\\u2e80-\\u2e99\\u2e9b-\\u2ef3\\u2f00-\\u2fd5\\u2ff0-\\u303f\\u3041-\\u3096\\u3099-\\u309f\\u30a1-\\u30fa\\u30fc-\\u30ff\\u3105-\\u312f\\u3131-\\u318e\\u3190-\\u3191\\u3196-\\u31ba\\u31c0-\\u31e3\\u31f0-\\u321e\\u322a-\\u3247\\u3260-\\u327e\\u328a-\\u32b0\\u32c0-\\u32cb\\u32d0-\\u3370\\u337b-\\u337f\\u33e0-\\u33fe\\u3400-\\u4db5\\u4e00-\\u9fef\\ua960-\\ua97c\\uac00-\\ud7a3\\ud7b0-\\ud7c6\\ud7cb-\\ud7fb\\uf900-\\ufa6d\\ufa70-\\ufad9\\ufe10-\\ufe1f\\ufe30-\\ufe6f\\uff00-\\uffef]|[\\ud840-\\ud868\\ud86a-\\ud86c\\ud86f-\\ud872\\ud874-\\ud879][\\udc00-\\udfff]|\\ud82c[\\udc00-\\udd1e\\udd50-\\udd52\\udd64-\\udd67]|\\ud83c[\\ude00\\ude50-\\ude51]|\\ud869[\\udc00-\\uded6\\udf00-\\udfff]|\\ud86d[\\udc00-\\udf34\\udf40-\\udfff]|\\ud86e[\\udc00-\\udc1d\\udc20-\\udfff]|\\ud873[\\udc00-\\udea1\\udeb0-\\udfff]|\\ud87a[\\udc00-\\udfe0]|\\ud87e[\\udc00-\\ude1d])(?:[\\ufe00-\\ufe0f]|\\udb40[\\udd00-\\uddef])?", kPattern: "[\\u1100-\\u11ff\\u3001-\\u3003\\u3008-\\u3011\\u3013-\\u301f\\u302e-\\u3030\\u3037\\u30fb\\u3131-\\u318e\\u3200-\\u321e\\u3260-\\u327e\\ua960-\\ua97c\\uac00-\\ud7a3\\ud7b0-\\ud7c6\\ud7cb-\\ud7fb\\ufe45-\\ufe46\\uff61-\\uff65\\uffa0-\\uffbe\\uffc2-\\uffc7\\uffca-\\uffcf\\uffd2-\\uffd7\\uffda-\\uffdc]", punctuationPattern: "[\\u0021-\\u002f\\u003a-\\u0040\\u005b-\\u0060\\u007b-\\u007e\\u00a1\\u00a7\\u00ab\\u00b6-\\u00b7\\u00bb\\u00bf\\u037e\\u0387\\u055a-\\u055f\\u0589-\\u058a\\u05be\\u05c0\\u05c3\\u05c6\\u05f3-\\u05f4\\u0609-\\u060a\\u060c-\\u060d\\u061b\\u061e-\\u061f\\u066a-\\u066d\\u06d4\\u0700-\\u070d\\u07f7-\\u07f9\\u0830-\\u083e\\u085e\\u0964-\\u0965\\u0970\\u09fd\\u0a76\\u0af0\\u0c77\\u0c84\\u0df4\\u0e4f\\u0e5a-\\u0e5b\\u0f04-\\u0f12\\u0f14\\u0f3a-\\u0f3d\\u0f85\\u0fd0-\\u0fd4\\u0fd9-\\u0fda\\u104a-\\u104f\\u10fb\\u1360-\\u1368\\u1400\\u166e\\u169b-\\u169c\\u16eb-\\u16ed\\u1735-\\u1736\\u17d4-\\u17d6\\u17d8-\\u17da\\u1800-\\u180a\\u1944-\\u1945\\u1a1e-\\u1a1f\\u1aa0-\\u1aa6\\u1aa8-\\u1aad\\u1b5a-\\u1b60\\u1bfc-\\u1bff\\u1c3b-\\u1c3f\\u1c7e-\\u1c7f\\u1cc0-\\u1cc7\\u1cd3\\u2010-\\u2027\\u2030-\\u2043\\u2045-\\u2051\\u2053-\\u205e\\u207d-\\u207e\\u208d-\\u208e\\u2308-\\u230b\\u2329-\\u232a\\u2768-\\u2775\\u27c5-\\u27c6\\u27e6-\\u27ef\\u2983-\\u2998\\u29d8-\\u29db\\u29fc-\\u29fd\\u2cf9-\\u2cfc\\u2cfe-\\u2cff\\u2d70\\u2e00-\\u2e2e\\u2e30-\\u2e4f\\u3001-\\u3003\\u3008-\\u3011\\u3014-\\u301f\\u3030\\u303d\\u30a0\\u30fb\\ua4fe-\\ua4ff\\ua60d-\\ua60f\\ua673\\ua67e\\ua6f2-\\ua6f7\\ua874-\\ua877\\ua8ce-\\ua8cf\\ua8f8-\\ua8fa\\ua8fc\\ua92e-\\ua92f\\ua95f\\ua9c1-\\ua9cd\\ua9de-\\ua9df\\uaa5c-\\uaa5f\\uaade-\\uaadf\\uaaf0-\\uaaf1\\uabeb\\ufd3e-\\ufd3f\\ufe10-\\ufe19\\ufe30-\\ufe52\\ufe54-\\ufe61\\ufe63\\ufe68\\ufe6a-\\ufe6b\\uff01-\\uff03\\uff05-\\uff0a\\uff0c-\\uff0f\\uff1a-\\uff1b\\uff1f-\\uff20\\uff3b-\\uff3d\\uff3f\\uff5b\\uff5d\\uff5f-\\uff65]|\\ud800[\\udd00-\\udd02\\udf9f\\udfd0]|\\ud801[\\udd6f]|\\ud802[\\udc57\\udd1f\\udd3f\\ude50-\\ude58\\ude7f\\udef0-\\udef6\\udf39-\\udf3f\\udf99-\\udf9c]|\\ud803[\\udf55-\\udf59]|\\ud804[\\udc47-\\udc4d\\udcbb-\\udcbc\\udcbe-\\udcc1\\udd40-\\udd43\\udd74-\\udd75\\uddc5-\\uddc8\\uddcd\\udddb\\udddd-\\udddf\\ude38-\\ude3d\\udea9]|\\ud805[\\udc4b-\\udc4f\\udc5b\\udc5d\\udcc6\\uddc1-\\uddd7\\ude41-\\ude43\\ude60-\\ude6c\\udf3c-\\udf3e]|\\ud806[\\udc3b\\udde2\\ude3f-\\ude46\\ude9a-\\ude9c\\ude9e-\\udea2]|\\ud807[\\udc41-\\udc45\\udc70-\\udc71\\udef7-\\udef8\\udfff]|\\ud809[\\udc70-\\udc74]|\\ud81a[\\ude6e-\\ude6f\\udef5\\udf37-\\udf3b\\udf44]|\\ud81b[\\ude97-\\ude9a\\udfe2]|\\ud82f[\\udc9f]|\\ud836[\\ude87-\\ude8b]|\\ud83a[\\udd5e-\\udd5f]" }, PN = ["liquidNode", "inlineCode", "emphasis", "strong", "delete", "wikiLink", "link", "linkReference", "image", "imageReference", "footnote", "footnoteReference", "sentence", "whitespace", "word", "break", "inlineMath"], ON = [...PN, "tableCell", "paragraph", "heading"], IN = new RegExp(kN), jN = new RegExp(NN);
      function LN(e2, t2) {
        const [, n2, r2, o2] = t2.slice(e2.position.start.offset, e2.position.end.offset).match(/^\s*(\d+)(\.|\))(\s*)/);
        return { numberText: n2, marker: r2, leadingSpaces: o2 };
      }
      var _N = { mapAst: function(e2, t2) {
        return function e3(n2, r2, o2) {
          const i2 = Object.assign({}, t2(n2, r2, o2));
          return i2.children && (i2.children = i2.children.map((t3, n3) => e3(t3, n3, [i2, ...o2]))), i2;
        }(e2, null, []);
      }, splitText: function(e2, t2) {
        const n2 = "non-cjk", r2 = "cj-letter", o2 = "cjk-punctuation", i2 = [], u2 = ("preserve" === t2.proseWrap ? e2 : e2.replace(new RegExp("(".concat(BN, ")\n(").concat(BN, ")"), "g"), "$1$2")).split(/([\t\n ]+)/);
        for (const [e3, t3] of u2.entries()) {
          if (e3 % 2 == 1) {
            i2.push({ type: "whitespace", value: /\n/.test(t3) ? "\n" : " " });
            continue;
          }
          if ((0 === e3 || e3 === u2.length - 1) && "" === t3)
            continue;
          const a2 = t3.split(new RegExp("(".concat(BN, ")")));
          for (const [e4, t4] of a2.entries())
            (0 !== e4 && e4 !== a2.length - 1 || "" !== t4) && (e4 % 2 != 0 ? s2(jN.test(t4) ? { type: "word", value: t4, kind: o2, hasLeadingPunctuation: true, hasTrailingPunctuation: true } : { type: "word", value: t4, kind: IN.test(t4) ? "k-letter" : r2, hasLeadingPunctuation: false, hasTrailingPunctuation: false }) : "" !== t4 && s2({ type: "word", value: t4, kind: n2, hasLeadingPunctuation: jN.test(t4[0]), hasTrailingPunctuation: jN.test(SN(t4)) }));
        }
        return i2;
        function s2(e3) {
          const t3 = SN(i2);
          var u3, s3;
          t3 && "word" === t3.type && (t3.kind === n2 && e3.kind === r2 && !t3.hasTrailingPunctuation || t3.kind === r2 && e3.kind === n2 && !e3.hasLeadingPunctuation ? i2.push({ type: "whitespace", value: " " }) : (u3 = n2, s3 = o2, t3.kind === u3 && e3.kind === s3 || t3.kind === s3 && e3.kind === u3 || [t3.value, e3.value].some((e4) => /\u3000/.test(e4)) || i2.push({ type: "whitespace", value: "" }))), i2.push(e3);
        }
      }, punctuationPattern: NN, getFencedCodeBlockValue: function(e2, t2) {
        const { value: n2 } = e2;
        return e2.position.end.offset === t2.length && n2.endsWith("\n") && t2.endsWith("\n") ? n2.slice(0, -1) : n2;
      }, getOrderedListItemInfo: LN, hasGitDiffFriendlyOrderedList: function(e2, t2) {
        if (!e2.ordered)
          return false;
        if (e2.children.length < 2)
          return false;
        const n2 = Number(LN(e2.children[0], t2.originalText).numberText), r2 = Number(LN(e2.children[1], t2.originalText).numberText);
        if (0 === n2 && e2.children.length > 2) {
          const n3 = Number(LN(e2.children[2], t2.originalText).numberText);
          return 1 === r2 && 1 === n3;
        }
        return 1 === r2;
      }, INLINE_NODE_TYPES: PN, INLINE_NODE_WRAPPER_TYPES: ON, isAutolink: function(e2) {
        if (!e2 || "link" !== e2.type || 1 !== e2.children.length)
          return false;
        const t2 = e2.children[0];
        return t2 && wN(e2) === wN(t2) && TN(e2) === TN(t2);
      } };
      const { inferParserByLanguage: MN, getMaxContinuousCount: RN } = rn, { builders: { hardline: VN, markAsRoot: $N }, utils: { replaceNewlinesWithLiterallines: qN } } = Rn, { getFencedCodeBlockValue: WN } = _N;
      var UN = function(e2, t2, n2, r2) {
        const o2 = e2.getValue();
        if ("code" === o2.type && null !== o2.lang) {
          const e3 = MN(o2.lang, r2);
          if (e3) {
            const t3 = r2.__inJsTemplate ? "~" : "`", i2 = t3.repeat(Math.max(3, RN(o2.value, t3) + 1)), u2 = n2(WN(o2, r2.originalText), { parser: e3 }, { stripTrailingHardline: true });
            return $N([i2, o2.lang, o2.meta ? " " + o2.meta : "", VN, qN(u2), VN, i2]);
          }
        }
        switch (o2.type) {
          case "front-matter":
            return Xw(o2, n2);
          case "importExport":
            return [n2(o2.value, { parser: "babel" }, { stripTrailingHardline: true }), VN];
          case "jsx":
            return n2("<$>".concat(o2.value, "</$>"), { parser: "__js_expression", rootMarker: "mdx" }, { stripTrailingHardline: true });
        }
        return null;
      };
      const zN = ["format", "prettier"];
      function HN(e2) {
        const t2 = "@(".concat(zN.join("|"), ")"), n2 = new RegExp(["<!--\\s*".concat(t2, "\\s*-->"), "<!--.*\r?\n[\\s\\S]*(^|\n)[^\\S\n]*".concat(t2, "[^\\S\n]*($|\n)[\\s\\S]*\n.*-->")].join("|"), "m"), r2 = e2.match(n2);
        return r2 && 0 === r2.index;
      }
      var GN = { startWithPragma: HN, hasPragma: (e2) => HN(Zw(e2).content.trimStart()), insertPragma: (e2) => {
        const t2 = Zw(e2), n2 = "<!-- @".concat(zN[0], " -->");
        return t2.frontMatter ? "".concat(t2.frontMatter.raw, "\n\n").concat(n2, "\n\n").concat(t2.content) : "".concat(n2, "\n\n").concat(t2.content);
      } };
      const { getOrderedListItemInfo: JN, mapAst: XN, splitText: YN } = _N, KN = /^([\u0000-\uffff]|[\ud800-\udbff][\udc00-\udfff])$/;
      function QN(e2, t2, n2) {
        return XN(e2, (e3) => {
          if (!e3.children)
            return e3;
          const r2 = e3.children.reduce((e4, r3) => {
            const o2 = ke(e4);
            return o2 && t2(o2, r3) ? e4.splice(-1, 1, n2(o2, r3)) : e4.push(r3), e4;
          }, []);
          return Object.assign({}, e3, { children: r2 });
        });
      }
      var ZN = function(e2, t2) {
        return e2 = function(e3) {
          return QN(e3, (e4, t3) => "importExport" === e4.type && "importExport" === t3.type, (e4, t3) => ({ type: "importExport", value: e4.value + "\n\n" + t3.value, position: { start: e4.position.start, end: t3.position.end } }));
        }(e2 = function(e3) {
          return XN(e3, (e4) => "import" !== e4.type && "export" !== e4.type ? e4 : Object.assign({}, e4, { type: "importExport" }));
        }(e2 = function(e3, t3) {
          return XN(e3, (e4, n2, [r2]) => {
            if ("text" !== e4.type)
              return e4;
            let { value: o2 } = e4;
            return "paragraph" === r2.type && (0 === n2 && (o2 = o2.trimStart()), n2 === r2.children.length - 1 && (o2 = o2.trimEnd())), { type: "sentence", position: e4.position, children: YN(o2, t3) };
          });
        }(e2 = function(e3, t3) {
          return XN(e3, (e4, t4, n3) => {
            if ("list" === e4.type && e4.children.length > 0) {
              for (let t5 = 0; t5 < n3.length; t5++) {
                const r3 = n3[t5];
                if ("list" === r3.type && !r3.isAligned)
                  return e4.isAligned = false, e4;
              }
              e4.isAligned = r2(e4);
            }
            return e4;
          });
          function n2(e4) {
            return 0 === e4.children.length ? -1 : e4.children[0].position.start.column - 1;
          }
          function r2(e4) {
            if (!e4.ordered)
              return true;
            const [r3, o2] = e4.children;
            if (JN(r3, t3.originalText).leadingSpaces.length > 1)
              return true;
            const i2 = n2(r3);
            if (-1 === i2)
              return false;
            if (1 === e4.children.length)
              return i2 % t3.tabWidth == 0;
            if (i2 !== n2(o2))
              return false;
            if (i2 % t3.tabWidth == 0)
              return true;
            return JN(o2, t3.originalText).leadingSpaces.length > 1;
          }
        }(e2 = function(e3, t3) {
          return XN(e3, (e4, n2, r2) => {
            if ("code" === e4.type) {
              const n3 = /^\n?( {4,}|\t)/.test(t3.originalText.slice(e4.position.start.offset, e4.position.end.offset));
              if (e4.isIndented = n3, n3)
                for (let e5 = 0; e5 < r2.length; e5++) {
                  const t4 = r2[e5];
                  if (t4.hasIndentedCodeblock)
                    break;
                  "list" === t4.type && (t4.hasIndentedCodeblock = true);
                }
            }
            return e4;
          });
        }(e2 = function(e3) {
          return XN(e3, (e4) => "inlineCode" !== e4.type ? e4 : Object.assign({}, e4, { value: e4.value.replace(/\s+/g, " ") }));
        }(e2 = function(e3) {
          return QN(e3, (e4, t3) => "text" === e4.type && "text" === t3.type, (e4, t3) => ({ type: "text", value: e4.value + t3.value, position: { start: e4.position.start, end: t3.position.end } }));
        }(e2 = function(e3, t3) {
          return XN(e3, (e4) => "text" === e4.type && "*" !== e4.value && "_" !== e4.value && KN.test(e4.value) && e4.position.end.offset - e4.position.start.offset !== e4.value.length ? Object.assign({}, e4, { value: t3.originalText.slice(e4.position.start.offset, e4.position.end.offset) }) : e4);
        }(e2, t2))), t2), t2), t2)));
      };
      const { isFrontMatterNode: eP } = rn, { startWithPragma: tP } = GN, nP = /* @__PURE__ */ new Set(["position", "raw"]);
      function rP(e2, t2, n2) {
        return "front-matter" !== e2.type && "code" !== e2.type && "yaml" !== e2.type && "import" !== e2.type && "export" !== e2.type && "jsx" !== e2.type || delete t2.value, "list" === e2.type && delete t2.isAligned, "list" !== e2.type && "listItem" !== e2.type || (delete t2.spread, delete t2.loose), "text" === e2.type ? null : ("inlineCode" === e2.type && (t2.value = e2.value.replace(/[\t\n ]+/g, " ")), "wikiLink" === e2.type && (t2.value = e2.value.trim().replace(/[\t\n]+/g, " ")), "definition" !== e2.type && "linkReference" !== e2.type || (t2.label = e2.label.trim().replace(/[\t\n ]+/g, " ").toLowerCase()), "definition" !== e2.type && "link" !== e2.type && "image" !== e2.type || !e2.title || (t2.title = e2.title.replace(/\\(["')])/g, "$1")), n2 && "root" === n2.type && n2.children.length > 0 && (n2.children[0] === e2 || eP(n2.children[0]) && n2.children[1] === e2) && "html" === e2.type && tP(e2.value) ? null : void 0);
      }
      rP.ignoredProperties = nP;
      var oP = rP;
      const { getLast: iP, getMinNotPresentContinuousCount: uP, getMaxContinuousCount: sP, getStringWidth: aP, isNonEmptyArray: cP } = rn, { builders: { breakParent: lP, join: pP, line: fP, literalline: dP, markAsRoot: hP, hardline: mP, softline: gP, ifBreak: yP, fill: DP, align: EP, indent: bP, group: CP, hardlineWithoutBreakParent: vP }, utils: { normalizeDoc: AP }, printer: { printDocToString: FP } } = Rn, { replaceEndOfLineWith: xP } = rn, { insertPragma: SP } = GN, { locStart: wP, locEnd: TP } = xN, { getFencedCodeBlockValue: BP, hasGitDiffFriendlyOrderedList: kP, splitText: NP, punctuationPattern: PP, INLINE_NODE_TYPES: OP, INLINE_NODE_WRAPPER_TYPES: IP, isAutolink: jP } = _N, LP = /* @__PURE__ */ new Set(["importExport"]), _P = ["heading", "tableCell", "link", "wikiLink"], MP = /* @__PURE__ */ new Set(["listItem", "definition", "footnoteDefinition"]);
      function RP(e2, t2, n2, r2) {
        const o2 = e2.getValue(), i2 = null === o2.checked ? "" : o2.checked ? "[x] " : "[ ] ";
        return [i2, zP(e2, t2, n2, { processor: (e3, o3) => {
          if (0 === o3 && "list" !== e3.getValue().type)
            return EP(" ".repeat(i2.length), n2());
          const u2 = " ".repeat((s2 = t2.tabWidth - r2.length, c2 = 3, s2 < (a2 = 0) ? a2 : s2 > c2 ? c2 : s2));
          var s2, a2, c2;
          return [u2, EP(u2, n2())];
        } })];
      }
      function VP(e2, t2) {
        return function(e3, t3, n2) {
          let r2 = -1;
          for (const o2 of t3.children)
            if (o2.type === e3.type && n2(o2) ? r2++ : r2 = -1, o2 === e3)
              return r2;
        }(e2, t2, (t3) => t3.ordered === e2.ordered);
      }
      function $P(e2, t2) {
        const n2 = Array.isArray(t2) ? t2 : [t2];
        let r2, o2 = -1;
        for (; r2 = e2.getParentNode(++o2); )
          if (n2.includes(r2.type))
            return o2;
        return -1;
      }
      function qP(e2, t2) {
        const n2 = $P(e2, t2);
        return -1 === n2 ? null : e2.getParentNode(n2);
      }
      function WP(e2, t2, n2) {
        if ("preserve" === n2.proseWrap && "\n" === t2)
          return mP;
        const r2 = "always" === n2.proseWrap && !qP(e2, _P);
        return "" !== t2 ? r2 ? fP : " " : r2 ? gP : "";
      }
      function UP(e2, t2, n2) {
        const r2 = [];
        let o2 = null;
        const { children: i2 } = e2.getValue();
        for (const [e3, t3] of i2.entries())
          switch (GP(t3)) {
            case "start":
              null === o2 && (o2 = { index: e3, offset: t3.position.end.offset });
              break;
            case "end":
              null !== o2 && (r2.push({ start: o2, end: { index: e3, offset: t3.position.start.offset } }), o2 = null);
          }
        return zP(e2, t2, n2, { processor: (e3, o3) => {
          if (r2.length > 0) {
            const e4 = r2[0];
            if (o3 === e4.start.index)
              return [i2[e4.start.index].value, t2.originalText.slice(e4.start.offset, e4.end.offset), i2[e4.end.index].value];
            if (e4.start.index < o3 && o3 < e4.end.index)
              return false;
            if (o3 === e4.end.index)
              return r2.shift(), false;
          }
          return n2();
        } });
      }
      function zP(e2, t2, n2, r2 = {}) {
        const { postprocessor: o2 } = r2, i2 = r2.processor || (() => n2()), u2 = e2.getValue(), s2 = [];
        let a2;
        return e2.each((e3, n3) => {
          const r3 = e3.getValue(), o3 = i2(e3, n3);
          if (false !== o3) {
            const e4 = { parts: s2, prevNode: a2, parentNode: u2, options: t2 };
            (function(e5, t3) {
              const n4 = 0 === t3.parts.length, r4 = OP.includes(e5.type), o4 = "html" === e5.type && IP.includes(t3.parentNode.type);
              return !n4 && !r4 && !o4;
            })(r3, e4) && (s2.push(mP), a2 && LP.has(a2.type) || (function(e5, t3) {
              const n4 = (t3.prevNode && t3.prevNode.type) === e5.type && MP.has(e5.type), r4 = "listItem" === t3.parentNode.type && !t3.parentNode.loose, o4 = t3.prevNode && "listItem" === t3.prevNode.type && t3.prevNode.loose, i3 = "next" === GP(t3.prevNode), u3 = "html" === e5.type && t3.prevNode && "html" === t3.prevNode.type && t3.prevNode.position.end.line + 1 === e5.position.start.line, s3 = "html" === e5.type && "listItem" === t3.parentNode.type && t3.prevNode && "paragraph" === t3.prevNode.type && t3.prevNode.position.end.line + 1 === e5.position.start.line;
              return o4 || !(n4 || r4 || i3 || u3 || s3);
            }(r3, e4) || JP(r3, e4)) && s2.push(mP), JP(r3, e4) && s2.push(mP)), s2.push(o3), a2 = r3;
          }
        }, "children"), o2 ? o2(s2) : s2;
      }
      function HP(e2) {
        let t2 = e2;
        for (; cP(t2.children); )
          t2 = iP(t2.children);
        return t2;
      }
      function GP(e2) {
        if ("html" !== e2.type)
          return false;
        const t2 = e2.value.match(/^<!--\s*prettier-ignore(?:-(start|end))?\s*-->$/);
        return null !== t2 && (t2[1] ? t2[1] : "next");
      }
      function JP(e2, t2) {
        const n2 = t2.prevNode && "list" === t2.prevNode.type, r2 = "code" === e2.type && e2.isIndented;
        return n2 && r2;
      }
      function XP(e2, t2 = []) {
        const n2 = [" ", ...Array.isArray(t2) ? t2 : [t2]];
        return new RegExp(n2.map((e3) => "\\".concat(e3)).join("|")).test(e2) ? "<".concat(e2, ">") : e2;
      }
      function YP(e2, t2, n2 = true) {
        if (!e2)
          return "";
        if (n2)
          return " " + YP(e2, t2, false);
        if ((e2 = e2.replace(/\\(["')])/g, "$1")).includes('"') && e2.includes("'") && !e2.includes(")"))
          return "(".concat(e2, ")");
        const r2 = e2.split("'").length - 1, o2 = e2.split('"').length - 1, i2 = r2 > o2 ? '"' : o2 > r2 || t2.singleQuote ? "'" : '"';
        return e2 = (e2 = e2.replace(/\\/, "\\\\")).replace(new RegExp("(".concat(i2, ")"), "g"), "\\$1"), "".concat(i2).concat(e2).concat(i2);
      }
      var KP = { preprocess: ZN, print: function(e2, t2, n2) {
        const r2 = e2.getValue();
        if (function(e3) {
          const t3 = qP(e3, ["linkReference", "imageReference"]);
          return t3 && ("linkReference" !== t3.type || "full" !== t3.referenceType);
        }(e2))
          return NP(t2.originalText.slice(r2.position.start.offset, r2.position.end.offset), t2).map((n3) => "word" === n3.type ? n3.value : "" === n3.value ? "" : WP(e2, n3.value, t2));
        switch (r2.type) {
          case "front-matter":
            return t2.originalText.slice(r2.position.start.offset, r2.position.end.offset);
          case "root":
            return 0 === r2.children.length ? "" : [AP(UP(e2, t2, n2)), LP.has(HP(r2).type) ? "" : mP];
          case "paragraph":
            return zP(e2, t2, n2, { postprocessor: DP });
          case "sentence":
            return zP(e2, t2, n2);
          case "word": {
            let t3 = r2.value.replace(/\*/g, "\\$&").replace(new RegExp(["(^|".concat(PP, ")(_+)"), "(_+)(".concat(PP, "|$)")].join("|"), "g"), (e3, t4, n4, r3, o3) => (n4 ? "".concat(t4).concat(n4) : "".concat(r3).concat(o3)).replace(/_/g, "\\_"));
            const n3 = (e3, t4, n4) => "sentence" === e3.type && 0 === n4, o2 = (e3, t4, n4) => jP(e3.children[n4 - 1]);
            return t3 !== r2.value && (e2.match(void 0, n3, o2) || e2.match(void 0, n3, (e3, t4, n4) => "emphasis" === e3.type && 0 === n4, o2)) && (t3 = t3.replace(/^(\\?[*_])+/, (e3) => e3.replace(/\\/g, ""))), t3;
          }
          case "whitespace": {
            const n3 = e2.getParentNode(), o2 = n3.children.indexOf(r2), i2 = n3.children[o2 + 1], u2 = i2 && /^>|^([*+-]|#{1,6}|\d+[).])$/.test(i2.value) ? "never" : t2.proseWrap;
            return WP(e2, r2.value, { proseWrap: u2 });
          }
          case "emphasis": {
            let o2;
            if (jP(r2.children[0]))
              o2 = t2.originalText[r2.position.start.offset];
            else {
              const t3 = e2.getParentNode(), n3 = t3.children.indexOf(r2), i2 = t3.children[n3 - 1], u2 = t3.children[n3 + 1];
              o2 = i2 && "sentence" === i2.type && i2.children.length > 0 && "word" === iP(i2.children).type && !iP(i2.children).hasTrailingPunctuation || u2 && "sentence" === u2.type && u2.children.length > 0 && "word" === u2.children[0].type && !u2.children[0].hasLeadingPunctuation || qP(e2, "emphasis") ? "*" : "_";
            }
            return [o2, zP(e2, t2, n2), o2];
          }
          case "strong":
            return ["**", zP(e2, t2, n2), "**"];
          case "delete":
            return ["~~", zP(e2, t2, n2), "~~"];
          case "inlineCode": {
            const e3 = uP(r2.value, "`"), t3 = "`".repeat(e3 || 1), n3 = e3 && !/^\s/.test(r2.value) ? " " : "";
            return [t3, n3, r2.value, n3, t3];
          }
          case "wikiLink": {
            let e3 = "";
            return e3 = "preserve" === t2.proseWrap ? r2.value : r2.value.replace(/[\t\n]+/g, " "), ["[[", e3, "]]"];
          }
          case "link":
            switch (t2.originalText[r2.position.start.offset]) {
              case "<": {
                const e3 = "mailto:";
                return ["<", r2.url.startsWith(e3) && t2.originalText.slice(r2.position.start.offset + 1, r2.position.start.offset + 1 + e3.length) !== e3 ? r2.url.slice(e3.length) : r2.url, ">"];
              }
              case "[":
                return ["[", zP(e2, t2, n2), "](", XP(r2.url, ")"), YP(r2.title, t2), ")"];
              default:
                return t2.originalText.slice(r2.position.start.offset, r2.position.end.offset);
            }
          case "image":
            return ["![", r2.alt || "", "](", XP(r2.url, ")"), YP(r2.title, t2), ")"];
          case "blockquote":
            return ["> ", EP("> ", zP(e2, t2, n2))];
          case "heading":
            return ["#".repeat(r2.depth) + " ", zP(e2, t2, n2)];
          case "code": {
            if (r2.isIndented) {
              const e4 = " ".repeat(4);
              return EP(e4, [e4, ...xP(r2.value, mP)]);
            }
            const e3 = t2.__inJsTemplate ? "~" : "`", n3 = e3.repeat(Math.max(3, sP(r2.value, e3) + 1));
            return [n3, r2.lang || "", r2.meta ? " " + r2.meta : "", mP, ...xP(BP(r2, t2.originalText), mP), mP, n3];
          }
          case "html": {
            const t3 = e2.getParentNode(), n3 = "root" === t3.type && iP(t3.children) === r2 ? r2.value.trimEnd() : r2.value, o2 = /^<!--[\S\s]*-->$/.test(n3);
            return xP(n3, o2 ? mP : hP(dP));
          }
          case "list": {
            const o2 = VP(r2, e2.getParentNode()), i2 = kP(r2, t2);
            return zP(e2, t2, n2, { processor: (e3, u2) => {
              const s2 = function() {
                const e4 = r2.ordered ? (0 === u2 ? r2.start : i2 ? 1 : r2.start + u2) + (o2 % 2 == 0 ? ". " : ") ") : o2 % 2 == 0 ? "- " : "* ";
                return r2.isAligned || r2.hasIndentedCodeblock ? function(e5, t3) {
                  const n3 = r3();
                  return e5 + " ".repeat(n3 >= 4 ? 0 : n3);
                  function r3() {
                    const n4 = e5.length % t3.tabWidth;
                    return 0 === n4 ? 0 : t3.tabWidth - n4;
                  }
                }(e4, t2) : e4;
              }(), a2 = e3.getValue();
              return 2 === a2.children.length && "html" === a2.children[1].type && a2.children[0].position.start.column !== a2.children[1].position.start.column ? [s2, RP(e3, t2, n2, s2)] : [s2, EP(" ".repeat(s2.length), RP(e3, t2, n2, s2))];
            } });
          }
          case "thematicBreak": {
            const t3 = $P(e2, "list");
            if (-1 === t3)
              return "---";
            return VP(e2.getParentNode(t3), e2.getParentNode(t3 + 1)) % 2 == 0 ? "***" : "---";
          }
          case "linkReference":
            return ["[", zP(e2, t2, n2), "]", "full" === r2.referenceType ? ["[", r2.identifier, "]"] : "collapsed" === r2.referenceType ? "[]" : ""];
          case "imageReference":
            switch (r2.referenceType) {
              case "full":
                return ["![", r2.alt || "", "][", r2.identifier, "]"];
              default:
                return ["![", r2.alt, "]", "collapsed" === r2.referenceType ? "[]" : ""];
            }
          case "definition": {
            const e3 = "always" === t2.proseWrap ? fP : " ";
            return CP(["[", r2.identifier, "]:", bP([e3, XP(r2.url), null === r2.title ? "" : [e3, YP(r2.title, t2, false)]])]);
          }
          case "footnote":
            return ["[^", zP(e2, t2, n2), "]"];
          case "footnoteReference":
            return ["[^", r2.identifier, "]"];
          case "footnoteDefinition": {
            const o2 = e2.getParentNode().children[e2.getName() + 1], i2 = 1 === r2.children.length && "paragraph" === r2.children[0].type && ("never" === t2.proseWrap || "preserve" === t2.proseWrap && r2.children[0].position.start.line === r2.children[0].position.end.line);
            return ["[^", r2.identifier, "]: ", i2 ? zP(e2, t2, n2) : CP([EP(" ".repeat(4), zP(e2, t2, n2, { processor: (e3, t3) => 0 === t3 ? CP([gP, n2()]) : n2() })), o2 && "footnoteDefinition" === o2.type ? gP : ""])];
          }
          case "table":
            return function(e3, t3, n3) {
              const r3 = e3.getValue(), o2 = [], i2 = e3.map((e4) => e4.map((e5, r4) => {
                const i3 = FP(n3(), t3).formatted, u3 = aP(i3);
                return o2[r4] = Math.max(o2[r4] || 3, u3), { text: i3, width: u3 };
              }, "children"), "children"), u2 = a2(false);
              if ("never" !== t3.proseWrap)
                return [lP, u2];
              const s2 = a2(true);
              return [lP, CP(yP(s2, u2))];
              function a2(e4) {
                const t4 = [l2(i2[0], e4), c2(e4)];
                return i2.length > 1 && t4.push(pP(vP, i2.slice(1).map((t5) => l2(t5, e4)))), pP(vP, t4);
              }
              function c2(e4) {
                const t4 = o2.map((t5, n4) => {
                  const o3 = r3.align[n4], i3 = "center" === o3 || "left" === o3 ? ":" : "-", u3 = "center" === o3 || "right" === o3 ? ":" : "-", s3 = e4 ? "-" : "-".repeat(t5 - 2);
                  return "".concat(i3).concat(s3).concat(u3);
                });
                return "| ".concat(t4.join(" | "), " |");
              }
              function l2(e4, t4) {
                const n4 = e4.map(({ text: e5, width: n5 }, i3) => {
                  if (t4)
                    return e5;
                  const u3 = o2[i3] - n5, s3 = r3.align[i3];
                  let a3 = 0;
                  "right" === s3 ? a3 = u3 : "center" === s3 && (a3 = Math.floor(u3 / 2));
                  const c3 = u3 - a3;
                  return "".concat(" ".repeat(a3)).concat(e5).concat(" ".repeat(c3));
                });
                return "| ".concat(n4.join(" | "), " |");
              }
            }(e2, t2, n2);
          case "tableCell":
            return zP(e2, t2, n2);
          case "break":
            return /\s/.test(t2.originalText[r2.position.start.offset]) ? ["  ", hP(dP)] : ["\\", mP];
          case "liquidNode":
            return xP(r2.value, mP);
          case "importExport":
            return [r2.value, mP];
          case "jsx":
            return r2.value;
          case "math":
            return ["$$", mP, r2.value ? [...xP(r2.value, mP), mP] : "", "$$"];
          case "inlineMath":
            return t2.originalText.slice(wP(r2), TP(r2));
          case "tableRow":
          case "listItem":
          default:
            throw new Error("Unknown markdown type ".concat(JSON.stringify(r2.type)));
        }
      }, embed: UN, massageAstNode: oP, hasPrettierIgnore: function(e2) {
        const t2 = Number(e2.getName());
        return 0 !== t2 && "next" === GP(e2.getParentNode().children[t2 - 1]);
      }, insertPragma: SP }, QP = { proseWrap: Ow.proseWrap, singleQuote: Ow.singleQuote }, ZP = { name: "Markdown", type: "prose", color: "#083fa1", aliases: ["pandoc"], aceMode: "markdown", codemirrorMode: "gfm", codemirrorMimeType: "text/x-gfm", wrap: true, extensions: [".md", ".markdown", ".mdown", ".mdwn", ".mdx", ".mkd", ".mkdn", ".mkdown", ".ronn", ".scd", ".workbook"], filenames: ["contents.lr"], tmScope: "source.gfm", languageId: 222 };
      var eO = { languages: [df(ZP, (e2) => ({ since: "1.8.0", parsers: ["markdown"], vscodeLanguageIds: ["markdown"], filenames: [...e2.filenames, "README"], extensions: e2.extensions.filter((e3) => ".mdx" !== e3) })), df(ZP, () => ({ name: "MDX", since: "1.15.0", parsers: ["mdx"], vscodeLanguageIds: ["mdx"], filenames: [], extensions: [".mdx"] }))], options: QP, printers: { mdast: KP }, parsers: { get remark() {
        return {}.parsers.remark;
      }, get markdown() {
        return {}.parsers.remark;
      }, get mdx() {
        return {}.parsers.mdx;
      } } };
      const { isFrontMatterNode: tO } = rn, nO = /* @__PURE__ */ new Set(["sourceSpan", "startSourceSpan", "endSourceSpan", "nameSpan", "valueSpan"]);
      function rO(e2, t2) {
        return "text" === e2.type || "comment" === e2.type || tO(e2) || "yaml" === e2.type || "toml" === e2.type ? null : ("attribute" === e2.type && delete t2.value, void ("docType" === e2.type && delete t2.value));
      }
      rO.ignoredProperties = nO;
      var oO = rO, iO = { "*": ["accesskey", "autocapitalize", "autofocus", "class", "contenteditable", "dir", "draggable", "enterkeyhint", "hidden", "id", "inputmode", "is", "itemid", "itemprop", "itemref", "itemscope", "itemtype", "lang", "nonce", "slot", "spellcheck", "style", "tabindex", "title", "translate"], a: ["accesskey", "charset", "coords", "download", "href", "hreflang", "name", "ping", "referrerpolicy", "rel", "rev", "shape", "tabindex", "target", "type"], abbr: ["title"], applet: ["align", "alt", "archive", "code", "codebase", "height", "hspace", "name", "object", "vspace", "width"], area: ["accesskey", "alt", "coords", "download", "href", "hreflang", "nohref", "ping", "referrerpolicy", "rel", "shape", "tabindex", "target", "type"], audio: ["autoplay", "controls", "crossorigin", "loop", "muted", "preload", "src"], base: ["href", "target"], basefont: ["color", "face", "size"], bdo: ["dir"], blockquote: ["cite"], body: ["alink", "background", "bgcolor", "link", "text", "vlink"], br: ["clear"], button: ["accesskey", "autofocus", "disabled", "form", "formaction", "formenctype", "formmethod", "formnovalidate", "formtarget", "name", "tabindex", "type", "value"], canvas: ["height", "width"], caption: ["align"], col: ["align", "char", "charoff", "span", "valign", "width"], colgroup: ["align", "char", "charoff", "span", "valign", "width"], data: ["value"], del: ["cite", "datetime"], details: ["open"], dfn: ["title"], dialog: ["open"], dir: ["compact"], div: ["align"], dl: ["compact"], embed: ["height", "src", "type", "width"], fieldset: ["disabled", "form", "name"], font: ["color", "face", "size"], form: ["accept", "accept-charset", "action", "autocomplete", "enctype", "method", "name", "novalidate", "target"], frame: ["frameborder", "longdesc", "marginheight", "marginwidth", "name", "noresize", "scrolling", "src"], frameset: ["cols", "rows"], h1: ["align"], h2: ["align"], h3: ["align"], h4: ["align"], h5: ["align"], h6: ["align"], head: ["profile"], hr: ["align", "noshade", "size", "width"], html: ["manifest", "version"], iframe: ["align", "allow", "allowfullscreen", "allowpaymentrequest", "allowusermedia", "frameborder", "height", "loading", "longdesc", "marginheight", "marginwidth", "name", "referrerpolicy", "sandbox", "scrolling", "src", "srcdoc", "width"], img: ["align", "alt", "border", "crossorigin", "decoding", "height", "hspace", "ismap", "loading", "longdesc", "name", "referrerpolicy", "sizes", "src", "srcset", "usemap", "vspace", "width"], input: ["accept", "accesskey", "align", "alt", "autocomplete", "autofocus", "checked", "dirname", "disabled", "form", "formaction", "formenctype", "formmethod", "formnovalidate", "formtarget", "height", "ismap", "list", "max", "maxlength", "min", "minlength", "multiple", "name", "pattern", "placeholder", "readonly", "required", "size", "src", "step", "tabindex", "title", "type", "usemap", "value", "width"], ins: ["cite", "datetime"], isindex: ["prompt"], label: ["accesskey", "for", "form"], legend: ["accesskey", "align"], li: ["type", "value"], link: ["as", "charset", "color", "crossorigin", "disabled", "href", "hreflang", "imagesizes", "imagesrcset", "integrity", "media", "nonce", "referrerpolicy", "rel", "rev", "sizes", "target", "title", "type"], map: ["name"], menu: ["compact"], meta: ["charset", "content", "http-equiv", "name", "scheme"], meter: ["high", "low", "max", "min", "optimum", "value"], object: ["align", "archive", "border", "classid", "codebase", "codetype", "data", "declare", "form", "height", "hspace", "name", "standby", "tabindex", "type", "typemustmatch", "usemap", "vspace", "width"], ol: ["compact", "reversed", "start", "type"], optgroup: ["disabled", "label"], option: ["disabled", "label", "selected", "value"], output: ["for", "form", "name"], p: ["align"], param: ["name", "type", "value", "valuetype"], pre: ["width"], progress: ["max", "value"], q: ["cite"], script: ["async", "charset", "crossorigin", "defer", "integrity", "language", "nomodule", "nonce", "referrerpolicy", "src", "type"], select: ["autocomplete", "autofocus", "disabled", "form", "multiple", "name", "required", "size", "tabindex"], slot: ["name"], source: ["media", "sizes", "src", "srcset", "type"], style: ["media", "nonce", "title", "type"], table: ["align", "bgcolor", "border", "cellpadding", "cellspacing", "frame", "rules", "summary", "width"], tbody: ["align", "char", "charoff", "valign"], td: ["abbr", "align", "axis", "bgcolor", "char", "charoff", "colspan", "headers", "height", "nowrap", "rowspan", "scope", "valign", "width"], textarea: ["accesskey", "autocomplete", "autofocus", "cols", "dirname", "disabled", "form", "maxlength", "minlength", "name", "placeholder", "readonly", "required", "rows", "tabindex", "wrap"], tfoot: ["align", "char", "charoff", "valign"], th: ["abbr", "align", "axis", "bgcolor", "char", "charoff", "colspan", "headers", "height", "nowrap", "rowspan", "scope", "valign", "width"], thead: ["align", "char", "charoff", "valign"], time: ["datetime"], tr: ["align", "bgcolor", "char", "charoff", "valign"], track: ["default", "kind", "label", "src", "srclang"], ul: ["compact", "type"], video: ["autoplay", "controls", "crossorigin", "height", "loop", "muted", "playsinline", "poster", "preload", "src", "width"] };
      const { inferParserByLanguage: uO, isFrontMatterNode: sO } = rn, { CSS_DISPLAY_TAGS: aO, CSS_DISPLAY_DEFAULT: cO, CSS_WHITE_SPACE_TAGS: lO, CSS_WHITE_SPACE_DEFAULT: pO } = { CSS_DISPLAY_TAGS: { area: "none", base: "none", basefont: "none", datalist: "none", head: "none", link: "none", meta: "none", noembed: "none", noframes: "none", param: "block", rp: "none", script: "block", source: "block", style: "none", template: "inline", track: "block", title: "none", html: "block", body: "block", address: "block", blockquote: "block", center: "block", div: "block", figure: "block", figcaption: "block", footer: "block", form: "block", header: "block", hr: "block", legend: "block", listing: "block", main: "block", p: "block", plaintext: "block", pre: "block", xmp: "block", slot: "contents", ruby: "ruby", rt: "ruby-text", article: "block", aside: "block", h1: "block", h2: "block", h3: "block", h4: "block", h5: "block", h6: "block", hgroup: "block", nav: "block", section: "block", dir: "block", dd: "block", dl: "block", dt: "block", ol: "block", ul: "block", li: "list-item", table: "table", caption: "table-caption", colgroup: "table-column-group", col: "table-column", thead: "table-header-group", tbody: "table-row-group", tfoot: "table-footer-group", tr: "table-row", td: "table-cell", th: "table-cell", fieldset: "block", button: "inline-block", details: "block", summary: "block", dialog: "block", meter: "inline-block", progress: "inline-block", object: "inline-block", video: "inline-block", audio: "inline-block", select: "inline-block", option: "block", optgroup: "block" }, CSS_DISPLAY_DEFAULT: "inline", CSS_WHITE_SPACE_TAGS: { listing: "pre", plaintext: "pre", pre: "pre", xmp: "pre", nobr: "nowrap", table: "initial", textarea: "pre-wrap" }, CSS_WHITE_SPACE_DEFAULT: "normal" }, fO = yO(["a", "abbr", "acronym", "address", "applet", "area", "article", "aside", "audio", "b", "base", "basefont", "bdi", "bdo", "bgsound", "big", "blink", "blockquote", "body", "br", "button", "canvas", "caption", "center", "cite", "code", "col", "colgroup", "command", "content", "data", "datalist", "dd", "del", "details", "dfn", "dialog", "dir", "div", "dl", "dt", "element", "em", "embed", "fieldset", "figcaption", "figure", "font", "footer", "form", "frame", "frameset", "h1", "h2", "h3", "h4", "h5", "h6", "head", "header", "hgroup", "hr", "html", "i", "iframe", "image", "img", "input", "ins", "isindex", "kbd", "keygen", "label", "legend", "li", "link", "listing", "main", "map", "mark", "marquee", "math", "menu", "menuitem", "meta", "meter", "multicol", "nav", "nextid", "nobr", "noembed", "noframes", "noscript", "object", "ol", "optgroup", "option", "output", "p", "param", "picture", "plaintext", "pre", "progress", "q", "rb", "rbc", "rp", "rt", "rtc", "ruby", "s", "samp", "script", "section", "select", "shadow", "slot", "small", "source", "spacer", "span", "strike", "strong", "style", "sub", "summary", "sup", "svg", "table", "tbody", "td", "template", "textarea", "tfoot", "th", "thead", "time", "title", "tr", "track", "tt", "u", "ul", "var", "video", "wbr", "xmp"]), dO = function(e2, t2) {
        const n2 = /* @__PURE__ */ Object.create(null);
        for (const [r2, o2] of Object.entries(e2))
          n2[r2] = t2(o2, r2);
        return n2;
      }(iO, yO), hO = /* @__PURE__ */ new Set(["	", "\n", "\f", "\r", " "]), mO = (e2) => e2.replace(/[\t\n\f\r ]+$/, ""), gO = (e2) => e2.match(/^[\t\n\f\r ]*/)[0];
      function yO(e2) {
        const t2 = /* @__PURE__ */ Object.create(null);
        for (const n2 of e2)
          t2[n2] = true;
        return t2;
      }
      function DO(e2, t2) {
        return !("ieConditionalComment" !== e2.type || !e2.lastChild || e2.lastChild.isSelfClosing || e2.lastChild.endSourceSpan) || ("ieConditionalComment" === e2.type && !e2.complete || (!(!kO(e2) || !e2.children.some((e3) => "text" !== e3.type && "interpolation" !== e3.type)) || !(!LO(e2, t2) || bO(e2) || "interpolation" === e2.type)));
      }
      function EO(e2) {
        if ("attribute" === e2.type)
          return false;
        if (!e2.parent)
          return false;
        if ("number" != typeof e2.index || 0 === e2.index)
          return false;
        return function(e3) {
          return "comment" === e3.type && "prettier-ignore" === e3.value.trim();
        }(e2.parent.children[e2.index - 1]);
      }
      function bO(e2) {
        return "element" === e2.type && ("script" === e2.fullName || "style" === e2.fullName || "svg:style" === e2.fullName || NO(e2) && ("script" === e2.name || "style" === e2.name));
      }
      function CO(e2) {
        return PO(e2).startsWith("pre");
      }
      function vO(e2) {
        return "element" === e2.type && e2.children.length > 0 && (["html", "head", "ul", "ol", "select"].includes(e2.name) || e2.cssDisplay.startsWith("table") && "table-cell" !== e2.cssDisplay);
      }
      function AO(e2) {
        return wO(e2) || "element" === e2.type && "br" === e2.fullName || FO(e2);
      }
      function FO(e2) {
        return xO(e2) && SO(e2);
      }
      function xO(e2) {
        return e2.hasLeadingSpaces && (e2.prev ? e2.prev.sourceSpan.end.line < e2.sourceSpan.start.line : "root" === e2.parent.type || e2.parent.startSourceSpan.end.line < e2.sourceSpan.start.line);
      }
      function SO(e2) {
        return e2.hasTrailingSpaces && (e2.next ? e2.next.sourceSpan.start.line > e2.sourceSpan.end.line : "root" === e2.parent.type || e2.parent.endSourceSpan && e2.parent.endSourceSpan.start.line > e2.sourceSpan.end.line);
      }
      function wO(e2) {
        switch (e2.type) {
          case "ieConditionalComment":
          case "comment":
          case "directive":
            return true;
          case "element":
            return ["script", "select"].includes(e2.name);
        }
        return false;
      }
      function TO(e2) {
        const { type: t2, lang: n2 } = e2.attrMap;
        return "module" === t2 || "text/javascript" === t2 || "text/babel" === t2 || "application/javascript" === t2 || "jsx" === n2 ? "babel" : "application/x-typescript" === t2 || "ts" === n2 || "tsx" === n2 ? "typescript" : "text/markdown" === t2 ? "markdown" : "text/html" === t2 ? "html" : t2 && (t2.endsWith("json") || t2.endsWith("importmap")) ? "json" : "text/x-handlebars-template" === t2 ? "glimmer" : void 0;
      }
      function BO(e2) {
        return "block" === e2 || "list-item" === e2 || e2.startsWith("table");
      }
      function kO(e2) {
        return PO(e2).startsWith("pre");
      }
      function NO(e2) {
        return "element" === e2.type && !e2.hasExplicitNamespace && !["html", "svg"].includes(e2.namespace);
      }
      function PO(e2) {
        return "element" === e2.type && (!e2.namespace || NO(e2)) && lO[e2.name] || pO;
      }
      const OO = /* @__PURE__ */ new Set(["template", "style", "script"]);
      function IO(e2, t2) {
        return jO(e2, t2) && !OO.has(e2.fullName);
      }
      function jO(e2, t2) {
        return "vue" === t2.parser && "element" === e2.type && "root" === e2.parent.type && "html" !== e2.fullName.toLowerCase();
      }
      function LO(e2, t2) {
        return jO(e2, t2) && (IO(e2, t2) || e2.attrMap.lang && "html" !== e2.attrMap.lang);
      }
      var _O = { HTML_ELEMENT_ATTRIBUTES: dO, HTML_TAGS: fO, htmlTrim: (e2) => ((e3) => e3.replace(/^[\t\n\f\r ]+/, ""))(mO(e2)), htmlTrimPreserveIndentation: (e2) => ((e3) => e3.replace(/^[\t\f\r ]*?\n/g, ""))(mO(e2)), splitByHtmlWhitespace: (e2) => e2.split(/[\t\n\f\r ]+/), hasHtmlWhitespace: (e2) => /[\t\n\f\r ]/.test(e2), getLeadingAndTrailingHtmlWhitespace: (e2) => {
        const [, t2, n2, r2] = e2.match(/^([\t\n\f\r ]*)([\S\s]*?)([\t\n\f\r ]*)$/);
        return { leadingWhitespace: t2, trailingWhitespace: r2, text: n2 };
      }, canHaveInterpolation: function(e2) {
        return e2.children && !bO(e2);
      }, countChars: function(e2, t2) {
        let n2 = 0;
        for (let r2 = 0; r2 < e2.length; r2++)
          e2[r2] === t2 && n2++;
        return n2;
      }, countParents: function(e2, t2) {
        let n2 = 0;
        for (let r2 = e2.stack.length - 1; r2 >= 0; r2--) {
          const o2 = e2.stack[r2];
          o2 && "object" == typeof o2 && !Array.isArray(o2) && t2(o2) && n2++;
        }
        return n2;
      }, dedentString: function(e2, t2 = function(e3) {
        let t3 = Number.POSITIVE_INFINITY;
        for (const n2 of e3.split("\n")) {
          if (0 === n2.length)
            continue;
          if (!hO.has(n2[0]))
            return 0;
          const e4 = gO(n2).length;
          n2.length !== e4 && e4 < t3 && (t3 = e4);
        }
        return t3 === Number.POSITIVE_INFINITY ? 0 : t3;
      }(e2)) {
        return 0 === t2 ? e2 : e2.split("\n").map((e3) => e3.slice(t2)).join("\n");
      }, forceBreakChildren: vO, forceBreakContent: function(e2) {
        return vO(e2) || "element" === e2.type && e2.children.length > 0 && (["body", "script", "style"].includes(e2.name) || e2.children.some((e3) => function(e4) {
          return e4.children && e4.children.some((e5) => "text" !== e5.type);
        }(e3))) || e2.firstChild && e2.firstChild === e2.lastChild && "text" !== e2.firstChild.type && xO(e2.firstChild) && (!e2.lastChild.isTrailingSpaceSensitive || SO(e2.lastChild));
      }, forceNextEmptyLine: function(e2) {
        return sO(e2) || e2.next && e2.sourceSpan.end && e2.sourceSpan.end.line + 1 < e2.next.sourceSpan.start.line;
      }, getLastDescendant: function e2(t2) {
        return t2.lastChild ? e2(t2.lastChild) : t2;
      }, getNodeCssStyleDisplay: function(e2, t2) {
        if (e2.prev && "comment" === e2.prev.type) {
          const t3 = e2.prev.value.match(/^\s*display:\s*([a-z]+)\s*$/);
          if (t3)
            return t3[1];
        }
        let n2 = false;
        if ("element" === e2.type && "svg" === e2.namespace) {
          if (!function(e3, t3) {
            let n3 = e3;
            for (; n3; ) {
              if (t3(n3))
                return true;
              n3 = n3.parent;
            }
            return false;
          }(e2, (e3) => "svg:foreignObject" === e3.fullName))
            return "svg" === e2.name ? "inline-block" : "block";
          n2 = true;
        }
        switch (t2.htmlWhitespaceSensitivity) {
          case "strict":
            return "inline";
          case "ignore":
            return "block";
          default:
            return "vue" === t2.parser && e2.parent && "root" === e2.parent.type ? "block" : "element" === e2.type && (!e2.namespace || n2 || NO(e2)) && aO[e2.name] || cO;
        }
      }, getNodeCssStyleWhiteSpace: PO, getPrettierIgnoreAttributeCommentData: function(e2) {
        const t2 = e2.trim().match(/^prettier-ignore-attribute(?:\s+([^]+))?$/);
        return !!t2 && (!t2[1] || t2[1].split(/\s+/));
      }, hasPrettierIgnore: EO, inferScriptParser: function(e2, t2) {
        return "script" !== e2.name || e2.attrMap.src ? "style" === e2.name ? function(e3) {
          const { lang: t3 } = e3.attrMap;
          return t3 && "postcss" !== t3 && "css" !== t3 ? "scss" === t3 ? "scss" : "less" === t3 ? "less" : void 0 : "css";
        }(e2) : t2 && LO(e2, t2) ? TO(e2) || !("src" in e2.attrMap) && uO(e2.attrMap.lang, t2) : void 0 : e2.attrMap.lang || e2.attrMap.type ? TO(e2) : "babel";
      }, isVueCustomBlock: IO, isVueNonHtmlBlock: LO, isVueSlotAttribute: function(e2) {
        const t2 = e2.fullName;
        return "#" === t2.charAt(0) || "slot-scope" === t2 || "v-slot" === t2 || t2.startsWith("v-slot:");
      }, isVueSfcBindingsAttribute: function(e2, t2) {
        const n2 = e2.parent;
        if (!jO(n2, t2))
          return false;
        const r2 = n2.fullName, o2 = e2.fullName;
        return "script" === r2 && "setup" === o2 || "style" === r2 && "vars" === o2;
      }, isDanglingSpaceSensitiveNode: function(e2) {
        return !(t2 = e2.cssDisplay, BO(t2) || "inline-block" === t2 || bO(e2));
        var t2;
      }, isIndentationSensitiveNode: CO, isLeadingSpaceSensitiveNode: function(e2, t2) {
        const n2 = function() {
          if (sO(e2))
            return false;
          if (("text" === e2.type || "interpolation" === e2.type) && e2.prev && ("text" === e2.prev.type || "interpolation" === e2.prev.type))
            return true;
          if (!e2.parent || "none" === e2.parent.cssDisplay)
            return false;
          if (kO(e2.parent))
            return true;
          if (!e2.prev && ("root" === e2.parent.type || kO(e2) && e2.parent || bO(e2.parent) || IO(e2.parent, t2) || (n3 = e2.parent.cssDisplay, BO(n3) || "inline-block" === n3)))
            return false;
          var n3;
          if (e2.prev && !function(e3) {
            return !BO(e3);
          }(e2.prev.cssDisplay))
            return false;
          return true;
        }();
        return n2 && !e2.prev && e2.parent && e2.parent.tagDefinition && e2.parent.tagDefinition.ignoreFirstLf ? "interpolation" === e2.type : n2;
      }, isPreLikeNode: kO, isScriptLikeTag: bO, isTextLikeNode: function(e2) {
        return "text" === e2.type || "comment" === e2.type;
      }, isTrailingSpaceSensitiveNode: function(e2, t2) {
        return !sO(e2) && (!("text" !== e2.type && "interpolation" !== e2.type || !e2.next || "text" !== e2.next.type && "interpolation" !== e2.next.type) || !(!e2.parent || "none" === e2.parent.cssDisplay) && (!!kO(e2.parent) || !(!e2.next && ("root" === e2.parent.type || kO(e2) && e2.parent || bO(e2.parent) || IO(e2.parent, t2) || (n2 = e2.parent.cssDisplay, BO(n2) || "inline-block" === n2))) && !(e2.next && !function(e3) {
          return !BO(e3);
        }(e2.next.cssDisplay))));
        var n2;
      }, isWhitespaceSensitiveNode: function(e2) {
        return bO(e2) || "interpolation" === e2.type || CO(e2);
      }, isUnknownNamespace: NO, preferHardlineAsLeadingSpaces: function(e2) {
        return wO(e2) || e2.prev && AO(e2.prev) || FO(e2);
      }, preferHardlineAsTrailingSpaces: AO, shouldNotPrintClosingTag: function(e2, t2) {
        return !e2.isSelfClosing && !e2.endSourceSpan && (EO(e2) || DO(e2.parent, t2));
      }, shouldPreserveContent: DO, unescapeQuoteEntities: function(e2) {
        return e2.replace(/&apos;/g, "'").replace(/&quot;/g, '"');
      } }, MO = i(function(e2, t2) {
        function n2(e3) {
          return t2.$0 <= e3 && e3 <= t2.$9;
        }
        Object.defineProperty(t2, "__esModule", { value: true }), t2.$EOF = 0, t2.$BSPACE = 8, t2.$TAB = 9, t2.$LF = 10, t2.$VTAB = 11, t2.$FF = 12, t2.$CR = 13, t2.$SPACE = 32, t2.$BANG = 33, t2.$DQ = 34, t2.$HASH = 35, t2.$$ = 36, t2.$PERCENT = 37, t2.$AMPERSAND = 38, t2.$SQ = 39, t2.$LPAREN = 40, t2.$RPAREN = 41, t2.$STAR = 42, t2.$PLUS = 43, t2.$COMMA = 44, t2.$MINUS = 45, t2.$PERIOD = 46, t2.$SLASH = 47, t2.$COLON = 58, t2.$SEMICOLON = 59, t2.$LT = 60, t2.$EQ = 61, t2.$GT = 62, t2.$QUESTION = 63, t2.$0 = 48, t2.$7 = 55, t2.$9 = 57, t2.$A = 65, t2.$E = 69, t2.$F = 70, t2.$X = 88, t2.$Z = 90, t2.$LBRACKET = 91, t2.$BACKSLASH = 92, t2.$RBRACKET = 93, t2.$CARET = 94, t2.$_ = 95, t2.$a = 97, t2.$b = 98, t2.$e = 101, t2.$f = 102, t2.$n = 110, t2.$r = 114, t2.$t = 116, t2.$u = 117, t2.$v = 118, t2.$x = 120, t2.$z = 122, t2.$LBRACE = 123, t2.$BAR = 124, t2.$RBRACE = 125, t2.$NBSP = 160, t2.$PIPE = 124, t2.$TILDA = 126, t2.$AT = 64, t2.$BT = 96, t2.isWhitespace = function(e3) {
          return e3 >= t2.$TAB && e3 <= t2.$SPACE || e3 == t2.$NBSP;
        }, t2.isDigit = n2, t2.isAsciiLetter = function(e3) {
          return e3 >= t2.$a && e3 <= t2.$z || e3 >= t2.$A && e3 <= t2.$Z;
        }, t2.isAsciiHexDigit = function(e3) {
          return e3 >= t2.$a && e3 <= t2.$f || e3 >= t2.$A && e3 <= t2.$F || n2(e3);
        }, t2.isNewLine = function(e3) {
          return e3 === t2.$LF || e3 === t2.$CR;
        }, t2.isOctalDigit = function(e3) {
          return t2.$0 <= e3 && e3 <= t2.$7;
        };
      });
      class RO {
        constructor(e2, t2, n2) {
          this.filePath = e2, this.name = t2, this.members = n2;
        }
        assertNoMembers() {
          if (this.members.length)
            throw new Error("Illegal state: symbol without members expected, but got ".concat(JSON.stringify(this), "."));
        }
      }
      var VO = RO;
      var $O = class {
        constructor() {
          this.cache = /* @__PURE__ */ new Map();
        }
        get(e2, t2, n2) {
          const r2 = (n2 = n2 || []).length ? ".".concat(n2.join(".")) : "", o2 = '"'.concat(e2, '".').concat(t2).concat(r2);
          let i2 = this.cache.get(o2);
          return i2 || (i2 = new RO(e2, t2, n2), this.cache.set(o2, i2)), i2;
        }
      }, qO = Object.defineProperty({ StaticSymbol: VO, StaticSymbolCache: $O }, "__esModule", { value: true });
      const WO = /-+([a-z0-9])/g;
      var UO = function(e2) {
        return e2.replace(WO, (...e3) => e3[1].toUpperCase());
      };
      var zO = function(e2, t2) {
        return GO(e2, ":", t2);
      };
      var HO = function(e2, t2) {
        return GO(e2, ".", t2);
      };
      function GO(e2, t2, n2) {
        const r2 = e2.indexOf(t2);
        return -1 == r2 ? n2 : [e2.slice(0, r2).trim(), e2.slice(r2 + 1).trim()];
      }
      function JO(e2, t2, n2) {
        return Array.isArray(e2) ? t2.visitArray(e2, n2) : function(e3) {
          return "object" == typeof e3 && null !== e3 && Object.getPrototypeOf(e3) === sI;
        }(e2) ? t2.visitStringMap(e2, n2) : null == e2 || "string" == typeof e2 || "number" == typeof e2 || "boolean" == typeof e2 ? t2.visitPrimitive(e2, n2) : t2.visitOther(e2, n2);
      }
      var XO = JO;
      var YO = function(e2) {
        return null != e2;
      };
      var KO = function(e2) {
        return void 0 === e2 ? null : e2;
      };
      var QO = class {
        visitArray(e2, t2) {
          return e2.map((e3) => JO(e3, this, t2));
        }
        visitStringMap(e2, t2) {
          const n2 = {};
          return Object.keys(e2).forEach((r2) => {
            n2[r2] = JO(e2[r2], this, t2);
          }), n2;
        }
        visitPrimitive(e2, t2) {
          return e2;
        }
        visitOther(e2, t2) {
          return e2;
        }
      }, ZO = { assertSync: (e2) => {
        if (pI(e2))
          throw new Error("Illegal state: value cannot be a promise");
        return e2;
      }, then: (e2, t2) => pI(e2) ? e2.then(t2) : t2(e2), all: (e2) => e2.some(pI) ? Promise.all(e2) : e2 };
      var eI = function(e2) {
        throw new Error("Internal Error: ".concat(e2));
      };
      var tI = function(e2, t2) {
        const n2 = Error(e2);
        return n2[nI] = true, t2 && (n2[rI] = t2), n2;
      };
      const nI = "ngSyntaxError", rI = "ngParseErrors";
      var oI = function(e2) {
        return e2[nI];
      };
      var iI = function(e2) {
        return e2[rI] || [];
      };
      var uI = function(e2) {
        return e2.replace(/([.*+?^=!:${}()|[\]\/\\])/g, "\\$1");
      };
      const sI = Object.getPrototypeOf({});
      var aI = function(e2) {
        let t2 = "";
        for (let n2 = 0; n2 < e2.length; n2++) {
          let r2 = e2.charCodeAt(n2);
          if (r2 >= 55296 && r2 <= 56319 && e2.length > n2 + 1) {
            const t3 = e2.charCodeAt(n2 + 1);
            t3 >= 56320 && t3 <= 57343 && (n2++, r2 = (r2 - 55296 << 10) + t3 - 56320 + 65536);
          }
          r2 <= 127 ? t2 += String.fromCharCode(r2) : r2 <= 2047 ? t2 += String.fromCharCode(r2 >> 6 & 31 | 192, 63 & r2 | 128) : r2 <= 65535 ? t2 += String.fromCharCode(r2 >> 12 | 224, r2 >> 6 & 63 | 128, 63 & r2 | 128) : r2 <= 2097151 && (t2 += String.fromCharCode(r2 >> 18 & 7 | 240, r2 >> 12 & 63 | 128, r2 >> 6 & 63 | 128, 63 & r2 | 128));
        }
        return t2;
      };
      var cI = function e2(t2) {
        if ("string" == typeof t2)
          return t2;
        if (t2 instanceof Array)
          return "[" + t2.map(e2).join(", ") + "]";
        if (null == t2)
          return "" + t2;
        if (t2.overriddenName)
          return "".concat(t2.overriddenName);
        if (t2.name)
          return "".concat(t2.name);
        if (!t2.toString)
          return "object";
        const n2 = t2.toString();
        if (null == n2)
          return "" + n2;
        const r2 = n2.indexOf("\n");
        return -1 === r2 ? n2 : n2.substring(0, r2);
      };
      var lI = function(e2) {
        return "function" == typeof e2 && e2.hasOwnProperty("__forward_ref__") ? e2() : e2;
      };
      function pI(e2) {
        return !!e2 && "function" == typeof e2.then;
      }
      var fI = pI;
      var dI = class {
        constructor(e2) {
          this.full = e2;
          const t2 = e2.split(".");
          this.major = t2[0], this.minor = t2[1], this.patch = t2.slice(2).join(".");
        }
      };
      const hI = "undefined" != typeof window && window, mI = "undefined" != typeof self && "undefined" != typeof WorkerGlobalScope && self instanceof WorkerGlobalScope && self;
      var gI = void 0 !== r && r || hI || mI, yI = Object.defineProperty({ dashCaseToCamelCase: UO, splitAtColon: zO, splitAtPeriod: HO, visitValue: XO, isDefined: YO, noUndefined: KO, ValueTransformer: QO, SyncAsync: ZO, error: eI, syntaxError: tI, isSyntaxError: oI, getParseErrors: iI, escapeRegExp: uI, utf8Encode: aI, stringify: cI, resolveForwardRef: lI, isPromise: fI, Version: dI, global: gI }, "__esModule", { value: true }), DI = i(function(e2, t2) {
        Object.defineProperty(t2, "__esModule", { value: true });
        const n2 = /^(?:(?:\[([^\]]+)\])|(?:\(([^\)]+)\)))|(\@[-\w]+)$/;
        function r2(e3) {
          return e3.replace(/\W/g, "_");
        }
        t2.sanitizeIdentifier = r2;
        let o2 = 0;
        function i2(e3) {
          if (!e3 || !e3.reference)
            return null;
          const t3 = e3.reference;
          if (t3 instanceof qO.StaticSymbol)
            return t3.name;
          if (t3.__anonymousType)
            return t3.__anonymousType;
          let n3 = yI.stringify(t3);
          return n3.indexOf("(") >= 0 ? (n3 = "anonymous_".concat(o2++), t3.__anonymousType = n3) : n3 = r2(n3), n3;
        }
        var u2;
        t2.identifierName = i2, t2.identifierModuleUrl = function(e3) {
          const t3 = e3.reference;
          return t3 instanceof qO.StaticSymbol ? t3.filePath : "./".concat(yI.stringify(t3));
        }, t2.viewClassName = function(e3, t3) {
          return "View_".concat(i2({ reference: e3 }), "_").concat(t3);
        }, t2.rendererTypeName = function(e3) {
          return "RenderType_".concat(i2({ reference: e3 }));
        }, t2.hostViewClassName = function(e3) {
          return "HostView_".concat(i2({ reference: e3 }));
        }, t2.componentFactoryName = function(e3) {
          return "".concat(i2({ reference: e3 }), "NgFactory");
        }, function(e3) {
          e3[e3.Pipe = 0] = "Pipe", e3[e3.Directive = 1] = "Directive", e3[e3.NgModule = 2] = "NgModule", e3[e3.Injectable = 3] = "Injectable";
        }(u2 = t2.CompileSummaryKind || (t2.CompileSummaryKind = {})), t2.tokenName = function(e3) {
          return null != e3.value ? r2(e3.value) : i2(e3.identifier);
        }, t2.tokenReference = function(e3) {
          return null != e3.identifier ? e3.identifier.reference : e3.value;
        };
        t2.CompileStylesheetMetadata = class {
          constructor({ moduleUrl: e3, styles: t3, styleUrls: n3 } = {}) {
            this.moduleUrl = e3 || null, this.styles = a2(t3), this.styleUrls = a2(n3);
          }
        };
        t2.CompileTemplateMetadata = class {
          constructor({ encapsulation: e3, template: t3, templateUrl: n3, htmlAst: r3, styles: o3, styleUrls: i3, externalStylesheets: u3, animations: s3, ngContentSelectors: l3, interpolation: p2, isInline: f2, preserveWhitespaces: d2 }) {
            if (this.encapsulation = e3, this.template = t3, this.templateUrl = n3, this.htmlAst = r3, this.styles = a2(o3), this.styleUrls = a2(i3), this.externalStylesheets = a2(u3), this.animations = s3 ? c2(s3) : [], this.ngContentSelectors = l3 || [], p2 && 2 != p2.length)
              throw new Error("'interpolation' should have a start and an end symbol.");
            this.interpolation = p2, this.isInline = f2, this.preserveWhitespaces = d2;
          }
          toSummary() {
            return { ngContentSelectors: this.ngContentSelectors, encapsulation: this.encapsulation, styles: this.styles, animations: this.animations };
          }
        };
        class s2 {
          static create({ isHost: e3, type: t3, isComponent: r3, selector: o3, exportAs: i3, changeDetection: u3, inputs: a3, outputs: c3, host: l3, providers: p2, viewProviders: f2, queries: d2, guards: h2, viewQueries: m2, entryComponents: g2, template: y2, componentViewType: D2, rendererType: E2, componentFactory: b2 }) {
            const C2 = {}, v2 = {}, A4 = {};
            null != l3 && Object.keys(l3).forEach((e4) => {
              const t4 = l3[e4], r4 = e4.match(n2);
              null === r4 ? A4[e4] = t4 : null != r4[1] ? v2[r4[1]] = t4 : null != r4[2] && (C2[r4[2]] = t4);
            });
            const F2 = {};
            null != a3 && a3.forEach((e4) => {
              const t4 = yI.splitAtColon(e4, [e4, e4]);
              F2[t4[0]] = t4[1];
            });
            const x2 = {};
            return null != c3 && c3.forEach((e4) => {
              const t4 = yI.splitAtColon(e4, [e4, e4]);
              x2[t4[0]] = t4[1];
            }), new s2({ isHost: e3, type: t3, isComponent: !!r3, selector: o3, exportAs: i3, changeDetection: u3, inputs: F2, outputs: x2, hostListeners: C2, hostProperties: v2, hostAttributes: A4, providers: p2, viewProviders: f2, queries: d2, guards: h2, viewQueries: m2, entryComponents: g2, template: y2, componentViewType: D2, rendererType: E2, componentFactory: b2 });
          }
          constructor({ isHost: e3, type: t3, isComponent: n3, selector: r3, exportAs: o3, changeDetection: i3, inputs: u3, outputs: s3, hostListeners: c3, hostProperties: l3, hostAttributes: p2, providers: f2, viewProviders: d2, queries: h2, guards: m2, viewQueries: g2, entryComponents: y2, template: D2, componentViewType: E2, rendererType: b2, componentFactory: C2 }) {
            this.isHost = !!e3, this.type = t3, this.isComponent = n3, this.selector = r3, this.exportAs = o3, this.changeDetection = i3, this.inputs = u3, this.outputs = s3, this.hostListeners = c3, this.hostProperties = l3, this.hostAttributes = p2, this.providers = a2(f2), this.viewProviders = a2(d2), this.queries = a2(h2), this.guards = m2, this.viewQueries = a2(g2), this.entryComponents = a2(y2), this.template = D2, this.componentViewType = E2, this.rendererType = b2, this.componentFactory = C2;
          }
          toSummary() {
            return { summaryKind: u2.Directive, type: this.type, isComponent: this.isComponent, selector: this.selector, exportAs: this.exportAs, inputs: this.inputs, outputs: this.outputs, hostListeners: this.hostListeners, hostProperties: this.hostProperties, hostAttributes: this.hostAttributes, providers: this.providers, viewProviders: this.viewProviders, queries: this.queries, guards: this.guards, viewQueries: this.viewQueries, entryComponents: this.entryComponents, changeDetection: this.changeDetection, template: this.template && this.template.toSummary(), componentViewType: this.componentViewType, rendererType: this.rendererType, componentFactory: this.componentFactory };
          }
        }
        t2.CompileDirectiveMetadata = s2;
        t2.CompilePipeMetadata = class {
          constructor({ type: e3, name: t3, pure: n3 }) {
            this.type = e3, this.name = t3, this.pure = !!n3;
          }
          toSummary() {
            return { summaryKind: u2.Pipe, type: this.type, name: this.name, pure: this.pure };
          }
        };
        t2.CompileShallowModuleMetadata = class {
        };
        t2.CompileNgModuleMetadata = class {
          constructor({ type: e3, providers: t3, declaredDirectives: n3, exportedDirectives: r3, declaredPipes: o3, exportedPipes: i3, entryComponents: u3, bootstrapComponents: s3, importedModules: c3, exportedModules: l3, schemas: p2, transitiveModule: f2, id: d2 }) {
            this.type = e3 || null, this.declaredDirectives = a2(n3), this.exportedDirectives = a2(r3), this.declaredPipes = a2(o3), this.exportedPipes = a2(i3), this.providers = a2(t3), this.entryComponents = a2(u3), this.bootstrapComponents = a2(s3), this.importedModules = a2(c3), this.exportedModules = a2(l3), this.schemas = a2(p2), this.id = d2 || null, this.transitiveModule = f2 || null;
          }
          toSummary() {
            const e3 = this.transitiveModule;
            return { summaryKind: u2.NgModule, type: this.type, entryComponents: e3.entryComponents, providers: e3.providers, modules: e3.modules, exportedDirectives: e3.exportedDirectives, exportedPipes: e3.exportedPipes };
          }
        };
        function a2(e3) {
          return e3 || [];
        }
        t2.TransitiveCompileNgModuleMetadata = class {
          constructor() {
            this.directivesSet = /* @__PURE__ */ new Set(), this.directives = [], this.exportedDirectivesSet = /* @__PURE__ */ new Set(), this.exportedDirectives = [], this.pipesSet = /* @__PURE__ */ new Set(), this.pipes = [], this.exportedPipesSet = /* @__PURE__ */ new Set(), this.exportedPipes = [], this.modulesSet = /* @__PURE__ */ new Set(), this.modules = [], this.entryComponentsSet = /* @__PURE__ */ new Set(), this.entryComponents = [], this.providers = [];
          }
          addProvider(e3, t3) {
            this.providers.push({ provider: e3, module: t3 });
          }
          addDirective(e3) {
            this.directivesSet.has(e3.reference) || (this.directivesSet.add(e3.reference), this.directives.push(e3));
          }
          addExportedDirective(e3) {
            this.exportedDirectivesSet.has(e3.reference) || (this.exportedDirectivesSet.add(e3.reference), this.exportedDirectives.push(e3));
          }
          addPipe(e3) {
            this.pipesSet.has(e3.reference) || (this.pipesSet.add(e3.reference), this.pipes.push(e3));
          }
          addExportedPipe(e3) {
            this.exportedPipesSet.has(e3.reference) || (this.exportedPipesSet.add(e3.reference), this.exportedPipes.push(e3));
          }
          addModule(e3) {
            this.modulesSet.has(e3.reference) || (this.modulesSet.add(e3.reference), this.modules.push(e3));
          }
          addEntryComponent(e3) {
            this.entryComponentsSet.has(e3.componentType) || (this.entryComponentsSet.add(e3.componentType), this.entryComponents.push(e3));
          }
        };
        function c2(e3) {
          return e3.reduce((e4, t3) => {
            const n3 = Array.isArray(t3) ? c2(t3) : t3;
            return e4.concat(n3);
          }, []);
        }
        function l2(e3) {
          return e3.replace(/(\w+:\/\/[\w:-]+)?(\/+)?/, "ng:///");
        }
        t2.ProviderMeta = class {
          constructor(e3, { useClass: t3, useValue: n3, useExisting: r3, useFactory: o3, deps: i3, multi: u3 }) {
            this.token = e3, this.useClass = t3 || null, this.useValue = n3, this.useExisting = r3, this.useFactory = o3 || null, this.dependencies = i3 || null, this.multi = !!u3;
          }
        }, t2.flatten = c2, t2.templateSourceUrl = function(e3, t3, n3) {
          let r3;
          return r3 = n3.isInline ? t3.type.reference instanceof qO.StaticSymbol ? "".concat(t3.type.reference.filePath, ".").concat(t3.type.reference.name, ".html") : "".concat(i2(e3), "/").concat(i2(t3.type), ".html") : n3.templateUrl, t3.type.reference instanceof qO.StaticSymbol ? r3 : l2(r3);
        }, t2.sharedStylesheetJitUrl = function(e3, t3) {
          const n3 = e3.moduleUrl.split(/\/\\/g), r3 = n3[n3.length - 1];
          return l2("css/".concat(t3).concat(r3, ".ngstyle.js"));
        }, t2.ngModuleJitUrl = function(e3) {
          return l2("".concat(i2(e3.type), "/module.ngfactory.js"));
        }, t2.templateJitUrl = function(e3, t3) {
          return l2("".concat(i2(e3), "/").concat(i2(t3.type), ".ngfactory.js"));
        };
      }), EI = i(function(e2, t2) {
        Object.defineProperty(t2, "__esModule", { value: true });
        class n2 {
          constructor(e3, t3, n3, r3) {
            this.file = e3, this.offset = t3, this.line = n3, this.col = r3;
          }
          toString() {
            return null != this.offset ? "".concat(this.file.url, "@").concat(this.line, ":").concat(this.col) : this.file.url;
          }
          moveBy(e3) {
            const t3 = this.file.content, r3 = t3.length;
            let o3 = this.offset, i3 = this.line, u2 = this.col;
            for (; o3 > 0 && e3 < 0; ) {
              o3--, e3++;
              if (t3.charCodeAt(o3) == MO.$LF) {
                i3--;
                const e4 = t3.substr(0, o3 - 1).lastIndexOf(String.fromCharCode(MO.$LF));
                u2 = e4 > 0 ? o3 - e4 : o3;
              } else
                u2--;
            }
            for (; o3 < r3 && e3 > 0; ) {
              const n3 = t3.charCodeAt(o3);
              o3++, e3--, n3 == MO.$LF ? (i3++, u2 = 0) : u2++;
            }
            return new n2(this.file, o3, i3, u2);
          }
          getContext(e3, t3) {
            const n3 = this.file.content;
            let r3 = this.offset;
            if (null != r3) {
              r3 > n3.length - 1 && (r3 = n3.length - 1);
              let o3 = r3, i3 = 0, u2 = 0;
              for (; i3 < e3 && r3 > 0 && (r3--, i3++, "\n" != n3[r3] || ++u2 != t3); )
                ;
              for (i3 = 0, u2 = 0; i3 < e3 && o3 < n3.length - 1 && (o3++, i3++, "\n" != n3[o3] || ++u2 != t3); )
                ;
              return { before: n3.substring(r3, this.offset), after: n3.substring(this.offset, o3 + 1) };
            }
            return null;
          }
        }
        t2.ParseLocation = n2;
        class r2 {
          constructor(e3, t3) {
            this.content = e3, this.url = t3;
          }
        }
        t2.ParseSourceFile = r2;
        class o2 {
          constructor(e3, t3, n3 = null) {
            this.start = e3, this.end = t3, this.details = n3;
          }
          toString() {
            return this.start.file.content.substring(this.start.offset, this.end.offset);
          }
        }
        var i2;
        t2.ParseSourceSpan = o2, t2.EMPTY_PARSE_LOCATION = new n2(new r2("", ""), 0, 0, 0), t2.EMPTY_SOURCE_SPAN = new o2(t2.EMPTY_PARSE_LOCATION, t2.EMPTY_PARSE_LOCATION), function(e3) {
          e3[e3.WARNING = 0] = "WARNING", e3[e3.ERROR = 1] = "ERROR";
        }(i2 = t2.ParseErrorLevel || (t2.ParseErrorLevel = {}));
        t2.ParseError = class {
          constructor(e3, t3, n3 = i2.ERROR) {
            this.span = e3, this.msg = t3, this.level = n3;
          }
          contextualMessage() {
            const e3 = this.span.start.getContext(100, 3);
            return e3 ? "".concat(this.msg, ' ("').concat(e3.before, "[").concat(i2[this.level], " ->]").concat(e3.after, '")') : this.msg;
          }
          toString() {
            const e3 = this.span.details ? ", ".concat(this.span.details) : "";
            return "".concat(this.contextualMessage(), ": ").concat(this.span.start).concat(e3);
          }
        }, t2.typeSourceSpan = function(e3, t3) {
          const i3 = DI.identifierModuleUrl(t3), u2 = null != i3 ? "in ".concat(e3, " ").concat(DI.identifierName(t3), " in ").concat(i3) : "in ".concat(e3, " ").concat(DI.identifierName(t3)), s2 = new r2("", u2);
          return new o2(new n2(s2, -1, -1, -1), new n2(s2, -1, -1, -1));
        }, t2.r3JitTypeSourceSpan = function(e3, t3, i3) {
          const u2 = "in ".concat(e3, " ").concat(t3, " in ").concat(i3), s2 = new r2("", u2);
          return new o2(new n2(s2, -1, -1, -1), new n2(s2, -1, -1, -1));
        };
      });
      const { ParseSourceSpan: bI } = EI, { htmlTrim: CI, getLeadingAndTrailingHtmlWhitespace: vI, hasHtmlWhitespace: AI, canHaveInterpolation: FI, getNodeCssStyleDisplay: xI, isDanglingSpaceSensitiveNode: SI, isIndentationSensitiveNode: wI, isLeadingSpaceSensitiveNode: TI, isTrailingSpaceSensitiveNode: BI, isWhitespaceSensitiveNode: kI } = _O, NI = [function(e2) {
        return e2.map((e3) => {
          if ("element" === e3.type && e3.tagDefinition.ignoreFirstLf && e3.children.length > 0 && "text" === e3.children[0].type && "\n" === e3.children[0].value[0]) {
            const [t2, ...n2] = e3.children;
            return e3.clone({ children: 1 === t2.value.length ? n2 : [t2.clone({ value: t2.value.slice(1) }), ...n2] });
          }
          return e3;
        });
      }, function(e2) {
        const t2 = (e3) => "element" === e3.type && e3.prev && "ieConditionalStartComment" === e3.prev.type && e3.prev.sourceSpan.end.offset === e3.startSourceSpan.start.offset && e3.firstChild && "ieConditionalEndComment" === e3.firstChild.type && e3.firstChild.sourceSpan.start.offset === e3.startSourceSpan.end.offset;
        return e2.map((e3) => {
          if (e3.children) {
            const n2 = e3.children.map(t2);
            if (n2.some(Boolean)) {
              const t3 = [];
              for (let r2 = 0; r2 < e3.children.length; r2++) {
                const o2 = e3.children[r2];
                if (!n2[r2 + 1])
                  if (n2[r2]) {
                    const e4 = o2.prev, n3 = o2.firstChild, r3 = new bI(e4.sourceSpan.start, n3.sourceSpan.end), i2 = new bI(r3.start, o2.sourceSpan.end);
                    t3.push(o2.clone({ condition: e4.condition, sourceSpan: i2, startSourceSpan: r3, children: o2.children.slice(1) }));
                  } else
                    t3.push(o2);
              }
              return e3.clone({ children: t3 });
            }
          }
          return e3;
        });
      }, function(e2) {
        return function(e3, t2, n2) {
          return e3.map((e4) => {
            if (e4.children) {
              const r2 = e4.children.map(t2);
              if (r2.some(Boolean)) {
                const t3 = [];
                for (let o2 = 0; o2 < e4.children.length; o2++) {
                  const i2 = e4.children[o2];
                  if ("text" !== i2.type && !r2[o2]) {
                    t3.push(i2);
                    continue;
                  }
                  const u2 = "text" === i2.type ? i2 : i2.clone({ type: "text", value: n2(i2) });
                  if (0 === t3.length || "text" !== ke(t3).type) {
                    t3.push(u2);
                    continue;
                  }
                  const s2 = t3.pop();
                  t3.push(s2.clone({ value: s2.value + u2.value, sourceSpan: new bI(s2.sourceSpan.start, u2.sourceSpan.end) }));
                }
                return e4.clone({ children: t3 });
              }
            }
            return e4;
          });
        }(e2, (e3) => "cdata" === e3.type, (e3) => "<![CDATA[".concat(e3.value, "]]>"));
      }, function(e2, t2) {
        if ("html" === t2.parser)
          return e2;
        const n2 = /{{([\S\s]+?)}}/g;
        return e2.map((e3) => {
          if (!FI(e3))
            return e3;
          const t3 = [];
          for (const r2 of e3.children) {
            if ("text" !== r2.type) {
              t3.push(r2);
              continue;
            }
            let e4 = r2.sourceSpan.start, o2 = null;
            const i2 = r2.value.split(n2);
            for (let n3 = 0; n3 < i2.length; n3++, e4 = o2) {
              const r3 = i2[n3];
              n3 % 2 != 0 ? (o2 = e4.moveBy(r3.length + 4), t3.push({ type: "interpolation", sourceSpan: new bI(e4, o2), children: 0 === r3.length ? [] : [{ type: "text", value: r3, sourceSpan: new bI(e4.moveBy(2), o2.moveBy(-2)) }] })) : (o2 = e4.moveBy(r3.length), r3.length > 0 && t3.push({ type: "text", value: r3, sourceSpan: new bI(e4, o2) }));
            }
          }
          return e3.clone({ children: t3 });
        });
      }, function(e2) {
        const t2 = "whitespace";
        return e2.map((e3) => {
          if (!e3.children)
            return e3;
          if (0 === e3.children.length || 1 === e3.children.length && "text" === e3.children[0].type && 0 === CI(e3.children[0].value).length)
            return e3.clone({ children: [], hasDanglingSpaces: e3.children.length > 0 });
          const n2 = kI(e3), r2 = wI(e3);
          return e3.clone({ isWhitespaceSensitive: n2, isIndentationSensitive: r2, children: e3.children.reduce((e4, r3) => {
            if ("text" !== r3.type || n2)
              return [...e4, r3];
            const o2 = [], { leadingWhitespace: i2, text: u2, trailingWhitespace: s2 } = vI(r3.value);
            return i2 && o2.push({ type: t2 }), u2 && o2.push({ type: "text", value: u2, sourceSpan: new bI(r3.sourceSpan.start.moveBy(i2.length), r3.sourceSpan.end.moveBy(-s2.length)) }), s2 && o2.push({ type: t2 }), [...e4, ...o2];
          }, []).reduce((e4, n3, r3, o2) => {
            if (n3.type === t2)
              return e4;
            const i2 = 0 !== r3 && o2[r3 - 1].type === t2, u2 = r3 !== o2.length - 1 && o2[r3 + 1].type === t2;
            return [...e4, Object.assign({}, n3, { hasLeadingSpaces: i2, hasTrailingSpaces: u2 })];
          }, []) });
        });
      }, function(e2, t2) {
        return e2.map((e3) => Object.assign(e3, { cssDisplay: xI(e3, t2) }));
      }, function(e2) {
        return e2.map((e3) => Object.assign(e3, { isSelfClosing: !e3.children || "element" === e3.type && (e3.tagDefinition.isVoid || e3.startSourceSpan === e3.endSourceSpan) }));
      }, function(e2, t2) {
        return e2.map((e3) => "element" !== e3.type ? e3 : Object.assign(e3, { hasHtmComponentClosingTag: e3.endSourceSpan && /^<\s*\/\s*\/\s*>$/.test(t2.originalText.slice(e3.endSourceSpan.start.offset, e3.endSourceSpan.end.offset)) }));
      }, function(e2, t2) {
        return e2.map((e3) => e3.children ? 0 === e3.children.length ? e3.clone({ isDanglingSpaceSensitive: SI(e3) }) : e3.clone({ children: e3.children.map((e4) => Object.assign({}, e4, { isLeadingSpaceSensitive: TI(e4, t2), isTrailingSpaceSensitive: BI(e4, t2) })).map((e4, t3, n2) => Object.assign({}, e4, { isLeadingSpaceSensitive: (0 === t3 || n2[t3 - 1].isTrailingSpaceSensitive) && e4.isLeadingSpaceSensitive, isTrailingSpaceSensitive: (t3 === n2.length - 1 || n2[t3 + 1].isLeadingSpaceSensitive) && e4.isTrailingSpaceSensitive })) }) : e3);
      }, function(e2) {
        const t2 = (e3) => "element" === e3.type && 0 === e3.attrs.length && 1 === e3.children.length && "text" === e3.firstChild.type && !AI(e3.children[0].value) && !e3.firstChild.hasLeadingSpaces && !e3.firstChild.hasTrailingSpaces && e3.isLeadingSpaceSensitive && !e3.hasLeadingSpaces && e3.isTrailingSpaceSensitive && !e3.hasTrailingSpaces && e3.prev && "text" === e3.prev.type && e3.next && "text" === e3.next.type;
        return e2.map((e3) => {
          if (e3.children) {
            const n2 = e3.children.map(t2);
            if (n2.some(Boolean)) {
              const t3 = [];
              for (let r2 = 0; r2 < e3.children.length; r2++) {
                const o2 = e3.children[r2];
                if (n2[r2]) {
                  const n3 = t3.pop(), i2 = e3.children[++r2], { isTrailingSpaceSensitive: u2, hasTrailingSpaces: s2 } = i2;
                  t3.push(n3.clone({ value: n3.value + "<".concat(o2.rawName, ">") + o2.firstChild.value + "</".concat(o2.rawName, ">") + i2.value, sourceSpan: new bI(n3.sourceSpan.start, i2.sourceSpan.end), isTrailingSpaceSensitive: u2, hasTrailingSpaces: s2 }));
                } else
                  t3.push(o2);
              }
              return e3.clone({ children: t3 });
            }
          }
          return e3;
        });
      }];
      var PI = function(e2, t2) {
        for (const n2 of NI)
          e2 = n2(e2, t2);
        return e2;
      };
      var OI = { hasPragma: function(e2) {
        return /^\s*<!--\s*@(format|prettier)\s*-->/.test(e2);
      }, insertPragma: function(e2) {
        return "<!-- @format -->\n\n" + e2.replace(/^\s*\n/, "");
      } };
      var II = { locStart: function(e2) {
        return e2.sourceSpan.start.offset;
      }, locEnd: function(e2) {
        return e2.sourceSpan.end.offset;
      } };
      const { builders: { group: jI } } = Rn;
      var LI2 = { isVueEventBindingExpression: function(e2) {
        const t2 = e2.trim();
        return /^([\w$]+|\([^)]*?\))\s*=>|^function\s*\(/.test(t2) || /^[$A-Z_a-z][\w$]*(?:\.[$A-Z_a-z][\w$]*|\['[^']*?']|\["[^"]*?"]|\[\d+]|\[[$A-Z_a-z][\w$]*])*$/.test(t2);
      }, printVueFor: function(e2, t2) {
        const { left: n2, operator: r2, right: o2 } = function(e3) {
          const t3 = /([^]*?)\s+(in|of)\s+([^]*)/, n3 = /,([^,\]}]*)(?:,([^,\]}]*))?$/, r3 = /^\(|\)$/g, o3 = e3.match(t3);
          if (!o3)
            return;
          const i2 = {};
          i2.for = o3[3].trim();
          const u2 = o3[1].trim().replace(r3, ""), s2 = u2.match(n3);
          s2 ? (i2.alias = u2.replace(n3, ""), i2.iterator1 = s2[1].trim(), s2[2] && (i2.iterator2 = s2[2].trim())) : i2.alias = u2;
          return { left: "".concat([i2.alias, i2.iterator1, i2.iterator2].filter(Boolean).join(",")), operator: o3[2], right: i2.for };
        }(e2);
        return [jI(t2("function _(".concat(n2, ") {}"), { parser: "babel", __isVueForBindingLeft: true })), " ", r2, " ", t2(o2, { parser: "__js_expression" }, { stripTrailingHardline: true })];
      }, printVueBindings: function(e2, t2) {
        return t2("function _(".concat(e2, ") {}"), { parser: "babel", __isVueBindings: true });
      } }, _I = i(function(e2) {
        !function(t2, n2) {
          e2.exports ? e2.exports = n2() : t2.parseSrcset = n2();
        }(r, function() {
          return function(e3, t2) {
            var n2 = t2 && t2.logger || console;
            function r2(e4) {
              return " " === e4 || "	" === e4 || "\n" === e4 || "\f" === e4 || "\r" === e4;
            }
            function o2(t3) {
              var n3, r3 = t3.exec(e3.substring(y2));
              if (r3)
                return n3 = r3[0], y2 += n3.length, n3;
            }
            for (var i2, u2, s2, a2, c2, l2 = e3.length, p2 = /^[ \t\n\r\u000c]+/, f2 = /^[, \t\n\r\u000c]+/, d2 = /^[^ \t\n\r\u000c]+/, h2 = /[,]+$/, m2 = /^\d+$/, g2 = /^-?(?:[0-9]+|[0-9]*\.[0-9]+)(?:[eE][+-]?[0-9]+)?$/, y2 = 0, D2 = []; ; ) {
              if (o2(f2), y2 >= l2)
                return D2;
              i2 = o2(d2), u2 = [], "," === i2.slice(-1) ? (i2 = i2.replace(h2, ""), b2()) : E2();
            }
            function E2() {
              for (o2(p2), s2 = "", a2 = "in descriptor"; ; ) {
                if (c2 = e3.charAt(y2), "in descriptor" === a2)
                  if (r2(c2))
                    s2 && (u2.push(s2), s2 = "", a2 = "after descriptor");
                  else {
                    if ("," === c2)
                      return y2 += 1, s2 && u2.push(s2), void b2();
                    if ("(" === c2)
                      s2 += c2, a2 = "in parens";
                    else {
                      if ("" === c2)
                        return s2 && u2.push(s2), void b2();
                      s2 += c2;
                    }
                  }
                else if ("in parens" === a2)
                  if (")" === c2)
                    s2 += c2, a2 = "in descriptor";
                  else {
                    if ("" === c2)
                      return u2.push(s2), void b2();
                    s2 += c2;
                  }
                else if ("after descriptor" === a2)
                  if (r2(c2))
                    ;
                  else {
                    if ("" === c2)
                      return void b2();
                    a2 = "in descriptor", y2 -= 1;
                  }
                y2 += 1;
              }
            }
            function b2() {
              var t3, r3, o3, s3, a3, c3, l3, p3, f3, d3 = false, h3 = {};
              for (s3 = 0; s3 < u2.length; s3++)
                c3 = (a3 = u2[s3])[a3.length - 1], l3 = a3.substring(0, a3.length - 1), p3 = parseInt(l3, 10), f3 = parseFloat(l3), m2.test(l3) && "w" === c3 ? ((t3 || r3) && (d3 = true), 0 === p3 ? d3 = true : t3 = p3) : g2.test(l3) && "x" === c3 ? ((t3 || r3 || o3) && (d3 = true), f3 < 0 ? d3 = true : r3 = f3) : m2.test(l3) && "h" === c3 ? ((o3 || r3) && (d3 = true), 0 === p3 ? d3 = true : o3 = p3) : d3 = true;
              d3 ? n2 && n2.error && n2.error("Invalid srcset descriptor found in '" + e3 + "' at '" + a3 + "'.") : (h3.url = i2, t3 && (h3.w = t3), r3 && (h3.d = r3), o3 && (h3.h = o3), D2.push(h3));
            }
          };
        });
      });
      const { builders: { group: MI, ifBreak: RI, indent: VI, join: $I, line: qI, softline: WI } } = Rn;
      const UI = ["__", "--", "_", "-"];
      function zI(e2) {
        const t2 = e2.search(/[^_-]/);
        if (-1 !== t2)
          for (const n2 of UI) {
            const r2 = e2.indexOf(n2, t2);
            if (-1 !== r2)
              return e2.slice(0, r2);
          }
        return e2;
      }
      var HI = { printImgSrcset: function(e2) {
        const t2 = _I(e2, { logger: { error(e3) {
          throw new Error(e3);
        } } }), n2 = t2.some(({ w: e3 }) => e3), r2 = t2.some(({ h: e3 }) => e3);
        if (n2 + r2 + t2.some(({ d: e3 }) => e3) > 1)
          throw new Error("Mixed descriptor in srcset is not supported");
        const o2 = n2 ? "w" : r2 ? "h" : "d", i2 = n2 ? "w" : r2 ? "h" : "x", u2 = (e3) => Math.max(...e3), s2 = t2.map((e3) => e3.url), a2 = u2(s2.map((e3) => e3.length)), c2 = t2.map((e3) => e3[o2]).map((e3) => e3 ? e3.toString() : ""), l2 = c2.map((e3) => {
          const t3 = e3.indexOf(".");
          return -1 === t3 ? e3.length : t3;
        }), p2 = u2(l2);
        return $I([",", qI], s2.map((e3, t3) => {
          const n3 = [e3], r3 = c2[t3];
          if (r3) {
            const o3 = a2 - e3.length + 1, u3 = p2 - l2[t3], s3 = " ".repeat(o3 + u3);
            n3.push(RI(s3, " "), r3 + i2);
          }
          return n3;
        }));
      }, printClassNames: function(e2) {
        const t2 = e2.trim().split(/\s+/), n2 = [];
        let r2;
        for (let e3 = 0; e3 < t2.length; e3++) {
          const o2 = zI(t2[e3]);
          o2 !== r2 && o2 !== t2[e3 - 1] && n2.push([]), ke(n2).push(t2[e3]), r2 = o2;
        }
        return [VI([WI, $I(qI, n2.map((e3) => MI($I(qI, e3))))]), WI];
      } };
      const { builders: { breakParent: GI, dedentToRoot: JI, fill: XI, group: YI, hardline: KI, ifBreak: QI, indentIfBreak: ZI, indent: ej, join: tj, line: nj, literalline: rj, softline: oj }, utils: { mapDoc: ij, cleanDoc: uj, getDocParts: sj, isConcat: aj } } = Rn, { replaceEndOfLineWith: cj, isNonEmptyArray: lj } = rn, { htmlTrimPreserveIndentation: pj, splitByHtmlWhitespace: fj, countChars: dj, countParents: hj, dedentString: mj, forceBreakChildren: gj, forceBreakContent: yj, forceNextEmptyLine: Dj, getLastDescendant: Ej, getPrettierIgnoreAttributeCommentData: bj, hasPrettierIgnore: Cj, inferScriptParser: vj, isVueCustomBlock: Aj, isVueNonHtmlBlock: Fj, isVueSlotAttribute: xj, isVueSfcBindingsAttribute: Sj, isScriptLikeTag: wj, isTextLikeNode: Tj, preferHardlineAsLeadingSpaces: Bj, shouldNotPrintClosingTag: kj, shouldPreserveContent: Nj, unescapeQuoteEntities: Pj, isPreLikeNode: Oj } = _O, { insertPragma: Ij } = OI, { locStart: jj, locEnd: Lj } = II, { printVueFor: _j, printVueBindings: Mj, isVueEventBindingExpression: Rj } = LI2, { printImgSrcset: Vj, printClassNames: $j } = HI;
      function qj(e2, t2, n2) {
        const r2 = e2.getValue();
        if (gj(r2))
          return [GI, ...e2.map((e3) => {
            const t3 = e3.getValue(), n3 = t3.prev ? u2(t3.prev, t3) : "";
            return [n3 ? [n3, Dj(t3.prev) ? KI : ""] : "", i2(e3)];
          }, "children")];
        const o2 = r2.children.map(() => Symbol(""));
        return e2.map((e3, t3) => {
          const n3 = e3.getValue();
          if (Tj(n3)) {
            if (n3.prev && Tj(n3.prev)) {
              const t4 = u2(n3.prev, n3);
              if (t4)
                return Dj(n3.prev) ? [KI, KI, i2(e3)] : [t4, i2(e3)];
            }
            return i2(e3);
          }
          const r3 = [], s2 = [], a2 = [], c2 = [], l2 = n3.prev ? u2(n3.prev, n3) : "", p2 = n3.next ? u2(n3, n3.next) : "";
          return l2 && (Dj(n3.prev) ? r3.push(KI, KI) : l2 === KI ? r3.push(KI) : Tj(n3.prev) ? s2.push(l2) : s2.push(QI("", oj, { groupId: o2[t3 - 1] }))), p2 && (Dj(n3) ? Tj(n3.next) && c2.push(KI, KI) : p2 === KI ? Tj(n3.next) && c2.push(KI) : a2.push(p2)), [...r3, YI([...s2, YI([i2(e3), ...a2], { id: o2[t3] })]), ...c2];
        }, "children");
        function i2(e3) {
          const r3 = e3.getValue();
          return Cj(r3) ? [nL(r3, t2), ...cj(t2.originalText.slice(jj(r3) + (r3.prev && Kj(r3.prev) ? iL(r3).length : 0), Lj(r3) - (r3.next && Zj(r3.next) ? aL(r3, t2).length : 0)), rj), oL(r3, t2)] : n2();
        }
        function u2(e3, t3) {
          return Tj(e3) && Tj(t3) ? e3.isTrailingSpaceSensitive ? e3.hasTrailingSpaces ? Bj(t3) ? KI : nj : "" : Bj(t3) ? KI : oj : Kj(e3) && (Cj(t3) || t3.firstChild || t3.isSelfClosing || "element" === t3.type && t3.attrs.length > 0) || "element" === e3.type && e3.isSelfClosing && Zj(t3) ? "" : !t3.isLeadingSpaceSensitive || Bj(t3) || Zj(t3) && e3.lastChild && tL(e3.lastChild) && e3.lastChild.lastChild && tL(e3.lastChild.lastChild) ? KI : t3.hasLeadingSpaces ? nj : oj;
        }
      }
      function Wj(e2, t2) {
        let n2 = e2.startSourceSpan.end.offset;
        e2.firstChild && Qj(e2.firstChild) && (n2 -= uL(e2).length);
        let r2 = e2.endSourceSpan.start.offset;
        return e2.lastChild && tL(e2.lastChild) ? r2 += sL(e2, t2).length : eL(e2) && (r2 -= aL(e2.lastChild, t2).length), t2.originalText.slice(n2, r2);
      }
      function Uj(e2, t2, n2) {
        const r2 = e2.getValue();
        if (!lj(r2.attrs))
          return r2.isSelfClosing ? " " : "";
        const o2 = r2.prev && "comment" === r2.prev.type && bj(r2.prev.value), i2 = "boolean" == typeof o2 ? () => o2 : Array.isArray(o2) ? (e3) => o2.includes(e3.rawName) : () => false, u2 = e2.map((e3) => {
          const r3 = e3.getValue();
          return i2(r3) ? cj(t2.originalText.slice(jj(r3), Lj(r3)), rj) : n2();
        }, "attrs"), s2 = "element" === r2.type && "script" === r2.fullName && 1 === r2.attrs.length && "src" === r2.attrs[0].fullName && 0 === r2.children.length, a2 = [ej([s2 ? " " : nj, tj(nj, u2)])];
        return r2.firstChild && Qj(r2.firstChild) || r2.isSelfClosing && eL(r2.parent) || s2 ? a2.push(r2.isSelfClosing ? " " : "") : a2.push(r2.isSelfClosing ? nj : oj), a2;
      }
      function zj(e2, t2, n2) {
        const r2 = e2.getValue();
        return [Hj(r2, t2), Uj(e2, t2, n2), r2.isSelfClosing ? "" : Gj(r2)];
      }
      function Hj(e2, t2) {
        return e2.prev && Kj(e2.prev) ? "" : [nL(e2, t2), iL(e2)];
      }
      function Gj(e2) {
        return e2.firstChild && Qj(e2.firstChild) ? "" : uL(e2);
      }
      function Jj(e2, t2) {
        return [e2.isSelfClosing ? "" : Xj(e2, t2), Yj(e2, t2)];
      }
      function Xj(e2, t2) {
        return e2.lastChild && tL(e2.lastChild) ? "" : [rL(e2, t2), sL(e2, t2)];
      }
      function Yj(e2, t2) {
        return (e2.next ? Zj(e2.next) : eL(e2.parent)) ? "" : [aL(e2, t2), oL(e2, t2)];
      }
      function Kj(e2) {
        return e2.next && !Tj(e2.next) && Tj(e2) && e2.isTrailingSpaceSensitive && !e2.hasTrailingSpaces;
      }
      function Qj(e2) {
        return !e2.prev && e2.isLeadingSpaceSensitive && !e2.hasLeadingSpaces;
      }
      function Zj(e2) {
        return e2.prev && "docType" !== e2.prev.type && !Tj(e2.prev) && e2.isLeadingSpaceSensitive && !e2.hasLeadingSpaces;
      }
      function eL(e2) {
        return e2.lastChild && e2.lastChild.isTrailingSpaceSensitive && !e2.lastChild.hasTrailingSpaces && !Tj(Ej(e2.lastChild)) && !Oj(e2);
      }
      function tL(e2) {
        return !e2.next && !e2.hasTrailingSpaces && e2.isTrailingSpaceSensitive && Tj(Ej(e2));
      }
      function nL(e2, t2) {
        return Qj(e2) ? uL(e2.parent) : Zj(e2) ? aL(e2.prev, t2) : "";
      }
      function rL(e2, t2) {
        return eL(e2) ? aL(e2.lastChild, t2) : "";
      }
      function oL(e2, t2) {
        return tL(e2) ? sL(e2.parent, t2) : Kj(e2) ? iL(e2.next) : "";
      }
      function iL(e2) {
        switch (e2.type) {
          case "ieConditionalComment":
          case "ieConditionalStartComment":
            return "<!--[if ".concat(e2.condition);
          case "ieConditionalEndComment":
            return "<!--<!";
          case "interpolation":
            return "{{";
          case "docType":
            return "<!DOCTYPE";
          case "element":
            if (e2.condition)
              return "<!--[if ".concat(e2.condition, "]><!--><").concat(e2.rawName);
          default:
            return "<".concat(e2.rawName);
        }
      }
      function uL(e2) {
        switch (Il(!e2.isSelfClosing), e2.type) {
          case "ieConditionalComment":
            return "]>";
          case "element":
            if (e2.condition)
              return "><!--<![endif]-->";
          default:
            return ">";
        }
      }
      function sL(e2, t2) {
        if (Il(!e2.isSelfClosing), kj(e2, t2))
          return "";
        switch (e2.type) {
          case "ieConditionalComment":
            return "<!";
          case "element":
            if (e2.hasHtmComponentClosingTag)
              return "<//";
          default:
            return "</".concat(e2.rawName);
        }
      }
      function aL(e2, t2) {
        if (kj(e2, t2))
          return "";
        switch (e2.type) {
          case "ieConditionalComment":
          case "ieConditionalEndComment":
            return "[endif]-->";
          case "ieConditionalStartComment":
            return "]><!-->";
          case "interpolation":
            return "}}";
          case "element":
            if (e2.isSelfClosing)
              return "/>";
          default:
            return ">";
        }
      }
      function cL(e2, t2 = e2.value) {
        return e2.parent.isWhitespaceSensitive ? e2.parent.isIndentationSensitive ? cj(t2, rj) : cj(mj(pj(t2)), KI) : sj(tj(nj, fj(t2)));
      }
      var lL = { preprocess: PI, print: function(e2, t2, n2) {
        const r2 = e2.getValue();
        switch (r2.type) {
          case "front-matter":
            return cj(r2.raw, rj);
          case "root":
            return t2.__onHtmlRoot && t2.__onHtmlRoot(r2), [YI(qj(e2, t2, n2)), KI];
          case "element":
          case "ieConditionalComment": {
            if (Nj(r2, t2))
              return [nL(r2, t2), YI(zj(e2, t2, n2)), ...cj(Wj(r2, t2), rj), ...Jj(r2, t2), oL(r2, t2)];
            const i2 = 1 === r2.children.length && "interpolation" === r2.firstChild.type && r2.firstChild.isLeadingSpaceSensitive && !r2.firstChild.hasLeadingSpaces && r2.lastChild.isTrailingSpaceSensitive && !r2.lastChild.hasTrailingSpaces, u2 = Symbol("element-attr-group-id");
            return [YI([YI(zj(e2, t2, n2), { id: u2 }), 0 === r2.children.length ? r2.hasDanglingSpaces && r2.isDanglingSpaceSensitive ? nj : "" : [yj(r2) ? GI : "", (o2 = [i2 ? QI(oj, "", { groupId: u2 }) : r2.firstChild.hasLeadingSpaces && r2.firstChild.isLeadingSpaceSensitive ? nj : "text" === r2.firstChild.type && r2.isWhitespaceSensitive && r2.isIndentationSensitive ? JI(oj) : oj, qj(e2, t2, n2)], i2 ? ZI(o2, { groupId: u2 }) : !wj(r2) && !Aj(r2, t2) || "root" !== r2.parent.type || "vue" !== t2.parser || t2.vueIndentScriptAndStyle ? ej(o2) : o2), (r2.next ? Zj(r2.next) : eL(r2.parent)) ? r2.lastChild.hasTrailingSpaces && r2.lastChild.isTrailingSpaceSensitive ? " " : "" : i2 ? QI(oj, "", { groupId: u2 }) : r2.lastChild.hasTrailingSpaces && r2.lastChild.isTrailingSpaceSensitive ? nj : ("comment" === r2.lastChild.type || "text" === r2.lastChild.type && r2.isWhitespaceSensitive && r2.isIndentationSensitive) && new RegExp("\\n[\\t ]{".concat(t2.tabWidth * hj(e2, (e3) => e3.parent && "root" !== e3.parent.type), "}$")).test(r2.lastChild.value) ? "" : oj]]), Jj(r2, t2)];
          }
          case "ieConditionalStartComment":
          case "ieConditionalEndComment":
            return [Hj(r2), Yj(r2)];
          case "interpolation":
            return [Hj(r2, t2), ...e2.map(n2, "children"), Yj(r2, t2)];
          case "text": {
            if ("interpolation" === r2.parent.type) {
              const e4 = /\n[^\S\n]*?$/, t3 = e4.test(r2.value), n3 = t3 ? r2.value.replace(e4, "") : r2.value;
              return [...cj(n3, rj), t3 ? KI : ""];
            }
            const e3 = uj([nL(r2, t2), ...cL(r2), oL(r2, t2)]);
            return aj(e3) || "fill" === e3.type ? XI(sj(e3)) : e3;
          }
          case "docType":
            return [YI([Hj(r2, t2), " ", r2.value.replace(/^html\b/i, "html").replace(/\s+/g, " ")]), Yj(r2, t2)];
          case "comment":
            return [nL(r2, t2), ...cj(t2.originalText.slice(jj(r2), Lj(r2)), rj), oL(r2, t2)];
          case "attribute": {
            if (null === r2.value)
              return r2.rawName;
            const e3 = Pj(r2.value), t3 = dj(e3, "'") < dj(e3, '"') ? "'" : '"';
            return [r2.rawName, "=", t3, ...cj('"' === t3 ? e3.replace(/"/g, "&quot;") : e3.replace(/'/g, "&apos;"), rj), t3];
          }
          default:
            throw new Error("Unexpected node type ".concat(r2.type));
        }
        var o2;
      }, insertPragma: Ij, massageAstNode: oO, embed: function(e2, t2, n2, r2) {
        const o2 = e2.getValue();
        switch (o2.type) {
          case "element":
            if (wj(o2) || "interpolation" === o2.type)
              return;
            if (!o2.isSelfClosing && Fj(o2, r2)) {
              const i2 = vj(o2, r2);
              if (!i2)
                return;
              const u2 = Wj(o2, r2);
              let s2 = /^\s*$/.test(u2), a2 = "";
              return s2 || (a2 = n2(pj(u2), { parser: i2, __embeddedInHtml: true }, { stripTrailingHardline: true }), s2 = "" === a2), [nL(o2, r2), YI(zj(e2, r2, t2)), s2 ? "" : KI, a2, s2 ? "" : KI, Jj(o2, r2), oL(o2, r2)];
            }
            break;
          case "text":
            if (wj(o2.parent)) {
              const e3 = vj(o2.parent);
              if (e3) {
                const t3 = "markdown" === e3 ? mj(o2.value.replace(/^[^\S\n]*?\n/, "")) : o2.value, i2 = { parser: e3, __embeddedInHtml: true };
                if ("html" === r2.parser && "babel" === e3) {
                  let e4 = "script";
                  const { attrMap: t4 } = o2.parent;
                  t4 && ("module" === t4.type || "text/babel" === t4.type && "module" === t4["data-type"]) && (e4 = "module"), i2.__babelSourceType = e4;
                }
                return [GI, nL(o2, r2), n2(t3, i2, { stripTrailingHardline: true }), oL(o2, r2)];
              }
            } else if ("interpolation" === o2.parent.type) {
              const e3 = { __isInHtmlInterpolation: true, __embeddedInHtml: true };
              return "angular" === r2.parser ? (e3.parser = "__ng_interpolation", e3.trailingComma = "none") : "vue" === r2.parser ? e3.parser = "__vue_expression" : e3.parser = "__js_expression", [ej([nj, n2(o2.value, e3, { stripTrailingHardline: true })]), o2.parent.next && Zj(o2.parent.next) ? " " : nj];
            }
            break;
          case "attribute": {
            if (!o2.value)
              break;
            if (/^PRETTIER_HTML_PLACEHOLDER_\d+_\d+_IN_JS$/.test(r2.originalText.slice(o2.valueSpan.start.offset, o2.valueSpan.end.offset)))
              return [o2.rawName, "=", o2.value];
            if ("lwc" === r2.parser) {
              if (/^{[\S\s]*}$/.test(r2.originalText.slice(o2.valueSpan.start.offset, o2.valueSpan.end.offset)))
                return [o2.rawName, "=", o2.value];
            }
            const e3 = function(e4, t3, n3) {
              const r3 = (t4) => new RegExp(t4.join("|")).test(e4.fullName), o3 = () => Pj(e4.value);
              let i2 = false;
              const u2 = (e5, t4) => {
                const n4 = "NGRoot" === e5.type ? "NGMicrosyntax" === e5.node.type && 1 === e5.node.body.length && "NGMicrosyntaxExpression" === e5.node.body[0].type ? e5.node.body[0].expression : e5.node : "JsExpressionRoot" === e5.type ? e5.node : e5;
                !n4 || "ObjectExpression" !== n4.type && "ArrayExpression" !== n4.type && ("__vue_expression" !== t4.parser || "TemplateLiteral" !== n4.type && "StringLiteral" !== n4.type) || (i2 = true);
              }, s2 = (e5) => YI(e5), a2 = (e5, t4 = true) => YI([ej([oj, e5]), t4 ? oj : ""]), c2 = (e5) => i2 ? s2(e5) : a2(e5), l2 = (e5, n4) => t3(e5, Object.assign({ __onHtmlBindingRoot: u2, __embeddedInHtml: true }, n4), { stripTrailingHardline: true });
              if ("srcset" === e4.fullName && ("img" === e4.parent.fullName || "source" === e4.parent.fullName))
                return a2(Vj(o3()));
              if ("class" === e4.fullName && !n3.parentParser) {
                const e5 = o3();
                if (!e5.includes("{{"))
                  return $j(e5);
              }
              if ("style" === e4.fullName && !n3.parentParser) {
                const e5 = o3();
                if (!e5.includes("{{"))
                  return a2(l2(e5, { parser: "css", __isHTMLStyleAttribute: true }));
              }
              if ("vue" === n3.parser) {
                if ("v-for" === e4.fullName)
                  return _j(o3(), l2);
                if (xj(e4) || Sj(e4, n3))
                  return Mj(o3(), l2);
                const t4 = ["^:", "^v-bind:"], i3 = ["^v-"];
                if (r3(["^@", "^v-on:"])) {
                  const e5 = o3();
                  return c2(l2(e5, { parser: Rj(e5) ? "__js_expression" : "__vue_event_binding" }));
                }
                if (r3(t4))
                  return c2(l2(o3(), { parser: "__vue_expression" }));
                if (r3(i3))
                  return c2(l2(o3(), { parser: "__js_expression" }));
              }
              if ("angular" === n3.parser) {
                const t4 = (e5, t5) => l2(e5, Object.assign({}, t5, { trailingComma: "none" })), n4 = ["^\\*"], i3 = ["^\\[.+\\]$", "^bind(on)?-", "^ng-(if|show|hide|class|style)$"], u3 = ["^i18n(-.+)?$"];
                if (r3(["^\\(.+\\)$", "^on-"]))
                  return c2(t4(o3(), { parser: "__ng_action" }));
                if (r3(i3))
                  return c2(t4(o3(), { parser: "__ng_binding" }));
                if (r3(u3)) {
                  const t5 = o3().trim();
                  return a2(XI(cL(e4, t5)), !t5.includes("@@"));
                }
                if (r3(n4))
                  return c2(t4(o3(), { parser: "__ng_directive" }));
                const s3 = /{{([\S\s]+?)}}/g, p2 = o3();
                if (s3.test(p2)) {
                  const e5 = [];
                  for (const [n5, r4] of p2.split(s3).entries())
                    if (n5 % 2 == 0)
                      e5.push(cj(r4, rj));
                    else
                      try {
                        e5.push(YI(["{{", ej([nj, t4(r4, { parser: "__ng_interpolation", __isInHtmlInterpolation: true })]), nj, "}}"]));
                      } catch (t5) {
                        e5.push("{{", cj(r4, rj), "}}");
                      }
                  return YI(e5);
                }
              }
              return null;
            }(o2, (e4, t3) => n2(e4, Object.assign({ __isInHtmlAttribute: true, __embeddedInHtml: true }, t3), { stripTrailingHardline: true }), r2);
            if (e3)
              return [o2.rawName, '="', YI(ij(e3, (e4) => "string" == typeof e4 ? e4.replace(/"/g, "&quot;") : e4)), '"'];
            break;
          }
          case "front-matter":
            return Xw(o2, n2);
        }
      } };
      const pL = "HTML";
      var fL = { htmlWhitespaceSensitivity: { since: "1.15.0", category: pL, type: "choice", default: "css", description: "How to handle whitespaces in HTML.", choices: [{ value: "css", description: "Respect the default value of CSS display property." }, { value: "strict", description: "Whitespaces are considered sensitive." }, { value: "ignore", description: "Whitespaces are considered insensitive." }] }, vueIndentScriptAndStyle: { since: "1.19.0", category: pL, type: "boolean", default: false, description: "Indent script and style tags in Vue files." } }, dL = { name: "HTML", type: "markup", tmScope: "text.html.basic", aceMode: "html", codemirrorMode: "htmlmixed", codemirrorMimeType: "text/html", color: "#e34c26", aliases: ["xhtml"], extensions: [".html", ".htm", ".html.hl", ".inc", ".xht", ".xhtml"], languageId: 146 }, hL = { name: "Vue", type: "markup", color: "#2c3e50", extensions: [".vue"], tmScope: "text.html.vue", aceMode: "html", languageId: 391 };
      var mL = { languages: [df(dL, () => ({ name: "Angular", since: "1.15.0", parsers: ["angular"], vscodeLanguageIds: ["html"], extensions: [".component.html"], filenames: [] })), df(dL, (e2) => ({ since: "1.15.0", parsers: ["html"], vscodeLanguageIds: ["html"], extensions: [...e2.extensions, ".mjml"] })), df(dL, () => ({ name: "Lightning Web Components", since: "1.17.0", parsers: ["lwc"], vscodeLanguageIds: ["html"], extensions: [], filenames: [] })), df(hL, () => ({ since: "1.10.0", parsers: ["vue"], vscodeLanguageIds: ["vue"] }))], printers: { html: lL }, options: fL, parsers: { get html() {
        return {}.parsers.html;
      }, get vue() {
        return {}.parsers.vue;
      }, get angular() {
        return {}.parsers.angular;
      }, get lwc() {
        return {}.parsers.lwc;
      } } };
      var gL = { isPragma: function(e2) {
        return /^\s*@(prettier|format)\s*$/.test(e2);
      }, hasPragma: function(e2) {
        return /^\s*#[^\S\n]*@(prettier|format)\s*?(\n|$)/.test(e2);
      }, insertPragma: function(e2) {
        return "# @format\n\n".concat(e2);
      } };
      var yL = { locStart: function(e2) {
        return e2.position.start.offset;
      }, locEnd: function(e2) {
        return e2.position.end.offset;
      } };
      var DL2 = function(e2, t2, n2, r2) {
        if ("root" === e2.getValue().type && r2.filepath && /(?:[/\\]|^)\.prettierrc$/.test(r2.filepath))
          return n2(r2.originalText, Object.assign({}, r2, { parser: "json" }));
      };
      const { getLast: EL, isNonEmptyArray: bL } = rn;
      function CL(e2, t2) {
        return e2 && "string" == typeof e2.type && (!t2 || t2.includes(e2.type));
      }
      function vL(e2) {
        return "prettier-ignore" === e2.value.trim();
      }
      function AL(e2) {
        return e2 && bL(e2.leadingComments);
      }
      function FL(e2) {
        return e2 && bL(e2.middleComments);
      }
      function xL(e2) {
        return e2 && e2.indicatorComment;
      }
      function SL(e2) {
        return e2 && e2.trailingComment;
      }
      function wL(e2) {
        return e2 && bL(e2.endComments);
      }
      function TL(e2) {
        const t2 = [];
        let n2;
        for (const r2 of e2.split(/( +)/g))
          " " !== r2 ? " " === n2 ? t2.push(r2) : t2.push((t2.pop() || "") + r2) : void 0 === n2 && t2.unshift(""), n2 = r2;
        return " " === n2 && t2.push((t2.pop() || "") + " "), "" === t2[0] && (t2.shift(), t2.unshift(" " + (t2.shift() || ""))), t2;
      }
      var BL = { getLast: EL, getAncestorCount: function(e2, t2) {
        let n2 = 0;
        const r2 = e2.stack.length - 1;
        for (let o2 = 0; o2 < r2; o2++) {
          const r3 = e2.stack[o2];
          CL(r3) && t2(r3) && n2++;
        }
        return n2;
      }, isNode: CL, isEmptyNode: function(e2) {
        return !bL(e2.children) && !function(e3) {
          return AL(e3) || FL(e3) || xL(e3) || SL(e3) || wL(e3);
        }(e2);
      }, isInlineNode: function(e2) {
        if (!e2)
          return true;
        switch (e2.type) {
          case "plain":
          case "quoteDouble":
          case "quoteSingle":
          case "alias":
          case "flowMapping":
          case "flowSequence":
            return true;
          default:
            return false;
        }
      }, mapNode: function e2(t2, n2, r2) {
        return n2("children" in t2 ? Object.assign({}, t2, { children: t2.children.map((r3) => e2(r3, n2, t2)) }) : t2, r2);
      }, defineShortcut: function(e2, t2, n2) {
        Object.defineProperty(e2, t2, { get: n2, enumerable: false });
      }, isNextLineEmpty: function(e2, t2) {
        let n2 = 0;
        const r2 = t2.length;
        for (let o2 = e2.position.end.offset - 1; o2 < r2; o2++) {
          const e3 = t2[o2];
          if ("\n" === e3 && n2++, 1 === n2 && /\S/.test(e3))
            return false;
          if (2 === n2)
            return true;
        }
        return false;
      }, isLastDescendantNode: function(e2) {
        switch (e2.getValue().type) {
          case "tag":
          case "anchor":
          case "comment":
            return false;
        }
        const t2 = e2.stack.length;
        for (let n2 = 1; n2 < t2; n2++) {
          const t3 = e2.stack[n2], r2 = e2.stack[n2 - 1];
          if (Array.isArray(r2) && "number" == typeof t3 && t3 !== r2.length - 1)
            return false;
        }
        return true;
      }, getBlockValueLineContents: function(e2, { parentIndent: t2, isLastDescendant: n2, options: r2 }) {
        const o2 = e2.position.start.line === e2.position.end.line ? "" : r2.originalText.slice(e2.position.start.offset, e2.position.end.offset).match(/^[^\n]*?\n([\S\s]*)$/)[1], i2 = null === e2.indent ? (u2 = o2.match(/^( *)\S/m)) ? u2[1].length : Number.POSITIVE_INFINITY : e2.indent - 1 + t2;
        var u2;
        const s2 = o2.split("\n").map((e3) => e3.slice(i2));
        return "preserve" === r2.proseWrap || "blockLiteral" === e2.type ? a2(s2.map((e3) => 0 === e3.length ? [] : [e3])) : a2(s2.map((e3) => 0 === e3.length ? [] : TL(e3)).reduce((e3, t3, n3) => 0 !== n3 && s2[n3 - 1].length > 0 && t3.length > 0 && !/^\s/.test(t3[0]) && !/^\s|\s$/.test(EL(e3)) ? [...e3.slice(0, -1), [...EL(e3), ...t3]] : [...e3, t3], []).map((e3) => e3.reduce((e4, t3) => e4.length > 0 && /\s$/.test(EL(e4)) ? [...e4.slice(0, -1), EL(e4) + " " + t3] : [...e4, t3], [])).map((e3) => "never" === r2.proseWrap ? [e3.join(" ")] : e3));
        function a2(t3) {
          if ("keep" === e2.chomping)
            return 0 === EL(t3).length ? t3.slice(0, -1) : t3;
          let r3 = 0;
          for (let e3 = t3.length - 1; e3 >= 0 && 0 === t3[e3].length; e3--)
            r3++;
          return 0 === r3 ? t3 : r3 >= 2 && !n2 ? t3.slice(0, -(r3 - 1)) : t3.slice(0, -r3);
        }
      }, getFlowScalarLineContents: function(e2, t2, n2) {
        const r2 = t2.split("\n").map((e3, t3, n3) => 0 === t3 && t3 === n3.length - 1 ? e3 : 0 !== t3 && t3 !== n3.length - 1 ? e3.trim() : 0 === t3 ? e3.trimEnd() : e3.trimStart());
        return "preserve" === n2.proseWrap ? r2.map((e3) => 0 === e3.length ? [] : [e3]) : r2.map((e3) => 0 === e3.length ? [] : TL(e3)).reduce((t3, n3, o2) => 0 !== o2 && r2[o2 - 1].length > 0 && n3.length > 0 && ("quoteDouble" !== e2 || !EL(EL(t3)).endsWith("\\")) ? [...t3.slice(0, -1), [...EL(t3), ...n3]] : [...t3, n3], []).map((e3) => "never" === n2.proseWrap ? [e3.join(" ")] : e3);
      }, getLastDescendantNode: function e2(t2) {
        return bL(t2.children) ? e2(EL(t2.children)) : t2;
      }, hasPrettierIgnore: function(e2) {
        const t2 = e2.getValue();
        if ("documentBody" === t2.type) {
          const t3 = e2.getParentNode();
          return wL(t3.head) && vL(EL(t3.head.endComments));
        }
        return AL(t2) && vL(EL(t2.leadingComments));
      }, hasLeadingComments: AL, hasMiddleComments: FL, hasIndicatorComment: xL, hasTrailingComment: SL, hasEndComments: wL };
      const { defineShortcut: kL, mapNode: NL } = BL;
      function PL(e2) {
        switch (e2.type) {
          case "document":
            kL(e2, "head", () => e2.children[0]), kL(e2, "body", () => e2.children[1]);
            break;
          case "documentBody":
          case "sequenceItem":
          case "flowSequenceItem":
          case "mappingKey":
          case "mappingValue":
            kL(e2, "content", () => e2.children[0]);
            break;
          case "mappingItem":
          case "flowMappingItem":
            kL(e2, "key", () => e2.children[0]), kL(e2, "value", () => e2.children[1]);
        }
        return e2;
      }
      var OL2 = function(e2) {
        return NL(e2, PL);
      };
      const { builders: { softline: IL, align: jL } } = Rn, { hasEndComments: LL, isNextLineEmpty: _L, isNode: ML } = BL, RL = /* @__PURE__ */ new WeakMap();
      function VL(e2) {
        return LL(e2) && !ML(e2, ["documentHead", "documentBody", "flowMapping", "flowSequence"]);
      }
      var $L = { alignWithSpaces: function(e2, t2) {
        return jL(" ".repeat(e2), t2);
      }, shouldPrintEndComments: VL, printNextEmptyLine: function(e2, t2) {
        const n2 = e2.getValue(), r2 = e2.stack[0];
        let o2;
        return RL.has(r2) ? o2 = RL.get(r2) : (o2 = /* @__PURE__ */ new Set(), RL.set(r2, o2)), o2.has(n2.position.end.line) || (o2.add(n2.position.end.line), !_L(n2, t2) || VL(e2.getParentNode())) ? "" : IL;
      } };
      const { builders: { ifBreak: qL, line: WL, softline: UL2, hardline: zL, join: HL } } = Rn, { isEmptyNode: GL, getLast: JL, hasEndComments: XL } = BL, { printNextEmptyLine: YL, alignWithSpaces: KL } = $L;
      function QL(e2, t2, n2) {
        const r2 = e2.getValue(), o2 = "flowMapping" === r2.type, i2 = o2 ? "{" : "[", u2 = o2 ? "}" : "]";
        let s2 = UL2;
        o2 && r2.children.length > 0 && n2.bracketSpacing && (s2 = WL);
        const a2 = JL(r2.children), c2 = a2 && "flowMappingItem" === a2.type && GL(a2.key) && GL(a2.value);
        return [i2, KL(n2.tabWidth, [s2, ZL(e2, t2, n2), "none" === n2.trailingComma ? "" : qL(","), XL(r2) ? [zL, HL(zL, e2.map(t2, "endComments"))] : ""]), c2 ? "" : s2, u2];
      }
      function ZL(e2, t2, n2) {
        const r2 = e2.getValue();
        return e2.map((e3, o2) => [t2(), o2 === r2.children.length - 1 ? "" : [",", WL, r2.children[o2].position.start.line !== r2.children[o2 + 1].position.start.line ? YL(e3, n2.originalText) : ""]], "children");
      }
      var e_ = { printFlowMapping: QL, printFlowSequence: QL };
      const { builders: { conditionalGroup: t_, group: n_, hardline: r_, ifBreak: o_, join: i_, line: u_ } } = Rn, { hasLeadingComments: s_, hasMiddleComments: a_, hasTrailingComment: c_, hasEndComments: l_, isNode: p_, isEmptyNode: f_, isInlineNode: d_ } = BL, { alignWithSpaces: h_ } = $L;
      function m_(e2, t2) {
        if (!e2)
          return true;
        switch (e2.type) {
          case "plain":
          case "quoteSingle":
          case "quoteDouble":
            break;
          case "alias":
            return true;
          default:
            return false;
        }
        if ("preserve" === t2.proseWrap)
          return e2.position.start.line === e2.position.end.line;
        if (/\\$/m.test(t2.originalText.slice(e2.position.start.offset, e2.position.end.offset)))
          return false;
        switch (t2.proseWrap) {
          case "never":
            return !e2.value.includes("\n");
          case "always":
            return !/[\n ]/.test(e2.value);
          default:
            return false;
        }
      }
      var g_ = function(e2, t2, n2, r2, o2) {
        const { key: i2, value: u2 } = e2, s2 = f_(i2), a2 = f_(u2);
        if (s2 && a2)
          return ": ";
        const c2 = r2("key"), l2 = function(e3) {
          return e3.key.content && "alias" === e3.key.content.type;
        }(e2) ? " " : "";
        if (a2)
          return "flowMappingItem" === e2.type && "flowMapping" === t2.type ? c2 : "mappingItem" !== e2.type || !m_(i2.content, o2) || c_(i2.content) || t2.tag && "tag:yaml.org,2002:set" === t2.tag.value ? ["? ", h_(2, c2)] : [c2, l2, ":"];
        const p2 = r2("value");
        if (s2)
          return [": ", h_(2, p2)];
        if (s_(u2) || !d_(i2.content))
          return ["? ", h_(2, c2), r_, i_("", n2.map(r2, "value", "leadingComments").map((e3) => [e3, r_])), ": ", h_(2, p2)];
        if (function(e3) {
          if (!e3)
            return true;
          switch (e3.type) {
            case "plain":
            case "quoteDouble":
            case "quoteSingle":
              return e3.position.start.line === e3.position.end.line;
            case "alias":
              return true;
            default:
              return false;
          }
        }(i2.content) && !s_(i2.content) && !a_(i2.content) && !c_(i2.content) && !l_(i2) && !s_(u2.content) && !a_(u2.content) && !l_(u2) && m_(u2.content, o2))
          return [c2, l2, ": ", p2];
        const f2 = Symbol("mappingKey"), d2 = n_([o_("? "), n_(h_(2, c2), { id: f2 })]), h2 = [r_, ": ", h_(2, p2)], m2 = [l2, ":"];
        s_(u2.content) || l_(u2) && u2.content && !p_(u2.content, ["mapping", "sequence"]) || "mapping" === t2.type && c_(i2.content) && d_(u2.content) || p_(u2.content, ["mapping", "sequence"]) && null === u2.content.tag && null === u2.content.anchor ? m2.push(r_) : u2.content && m2.push(u_), m2.push(p2);
        const g2 = h_(o2.tabWidth, m2);
        return t_([[d2, o_(h2, g2, { groupId: f2 })]]);
      };
      const { builders: { dedent: y_, dedentToRoot: D_, fill: E_, hardline: b_, join: C_, line: v_, literalline: A_, markAsRoot: F_ }, utils: { getDocParts: x_ } } = Rn, { getAncestorCount: S_, getBlockValueLineContents: w_, hasIndicatorComment: T_, isLastDescendantNode: B_, isNode: k_ } = BL, { alignWithSpaces: N_ } = $L;
      var P_ = function(e2, t2, n2) {
        const r2 = e2.getValue(), o2 = S_(e2, (e3) => k_(e3, ["sequence", "mapping"])), i2 = B_(e2), u2 = ["blockFolded" === r2.type ? ">" : "|"];
        null !== r2.indent && u2.push(r2.indent.toString()), "clip" !== r2.chomping && u2.push("keep" === r2.chomping ? "+" : "-"), T_(r2) && u2.push(" ", t2("indicatorComment"));
        const s2 = w_(r2, { parentIndent: o2, isLastDescendant: i2, options: n2 }), a2 = [];
        for (const [e3, t3] of s2.entries())
          0 === e3 && a2.push(b_), a2.push(E_(x_(C_(v_, t3)))), e3 !== s2.length - 1 ? a2.push(0 === t3.length ? b_ : F_(A_)) : "keep" === r2.chomping && i2 && a2.push(D_(0 === t3.length ? b_ : A_));
        return null === r2.indent ? u2.push(y_(N_(n2.tabWidth, a2))) : u2.push(D_(N_(r2.indent - 1 + o2, a2))), u2;
      };
      const { builders: { breakParent: O_, fill: I_, group: j_, hardline: L_, join: __, line: M_, lineSuffix: R_, literalline: V_ }, utils: { getDocParts: $_ } } = Rn, { replaceEndOfLineWith: q_, isPreviousLineEmpty: W_ } = rn, { insertPragma: U_, isPragma: z_ } = gL, { locStart: H_ } = yL, { getFlowScalarLineContents: G_, getLastDescendantNode: J_, hasLeadingComments: X_, hasMiddleComments: Y_, hasTrailingComment: K_, hasEndComments: Q_, hasPrettierIgnore: Z_, isLastDescendantNode: eM, isNode: tM, isInlineNode: nM } = BL, { alignWithSpaces: rM, printNextEmptyLine: oM, shouldPrintEndComments: iM } = $L, { printFlowMapping: uM, printFlowSequence: sM } = e_;
      function aM(e2, t2) {
        return K_(e2) || t2 && (t2.head.children.length > 0 || Q_(t2.head));
      }
      function cM(e2, t2, n2) {
        const r2 = G_(e2, t2, n2);
        return __(L_, r2.map((e3) => I_($_(__(M_, e3)))));
      }
      var lM = { preprocess: OL2, embed: DL2, print: function(e2, t2, n2) {
        const r2 = e2.getValue(), o2 = [];
        "mappingValue" !== r2.type && X_(r2) && o2.push([__(L_, e2.map(n2, "leadingComments")), L_]);
        const { tag: i2, anchor: u2 } = r2;
        i2 && o2.push(n2("tag")), i2 && u2 && o2.push(" "), u2 && o2.push(n2("anchor"));
        let s2 = "";
        tM(r2, ["mapping", "sequence", "comment", "directive", "mappingItem", "sequenceItem"]) && !eM(e2) && (s2 = oM(e2, t2.originalText)), (i2 || u2) && (tM(r2, ["sequence", "mapping"]) && !Y_(r2) ? o2.push(L_) : o2.push(" ")), Y_(r2) && o2.push([1 === r2.middleComments.length ? "" : L_, __(L_, e2.map(n2, "middleComments")), L_]);
        const a2 = e2.getParentNode();
        return Z_(e2) ? o2.push(q_(t2.originalText.slice(r2.position.start.offset, r2.position.end.offset).trimEnd(), V_)) : o2.push(j_(function(e3, t3, n3, r3, o3) {
          switch (e3.type) {
            case "root": {
              const { children: t4 } = e3, r4 = [];
              n3.each((e4, n4) => {
                const i4 = t4[n4], u3 = t4[n4 + 1];
                0 !== n4 && r4.push(L_), r4.push(o3()), aM(i4, u3) ? (r4.push(L_, "..."), K_(i4) && r4.push(" ", o3("trailingComment"))) : u3 && !K_(u3.head) && r4.push(L_, "---");
              }, "children");
              const i3 = J_(e3);
              return tM(i3, ["blockLiteral", "blockFolded"]) && "keep" === i3.chomping || r4.push(L_), r4;
            }
            case "document": {
              const i3 = [];
              return "head" === function(e4, t4, n4, r4) {
                if (n4.children[0] === e4 && /---(\s|$)/.test(r4.originalText.slice(H_(e4), H_(e4) + 4)) || e4.head.children.length > 0 || Q_(e4.head) || K_(e4.head))
                  return "head";
                if (aM(e4, t4))
                  return false;
                return !!t4 && "root";
              }(e3, t3.children[n3.getName() + 1], t3, r3) && ((e3.head.children.length > 0 || e3.head.endComments.length > 0) && i3.push(o3("head")), K_(e3.head) ? i3.push(["---", " ", o3(["head", "trailingComment"])]) : i3.push("---")), function(e4) {
                return e4.body.children.length > 0 || Q_(e4.body);
              }(e3) && i3.push(o3("body")), __(L_, i3);
            }
            case "documentHead":
              return __(L_, [...n3.map(o3, "children"), ...n3.map(o3, "endComments")]);
            case "documentBody": {
              const { children: t4, endComments: r4 } = e3;
              let i3 = "";
              if (t4.length > 0 && r4.length > 0) {
                const t5 = J_(e3);
                tM(t5, ["blockFolded", "blockLiteral"]) ? "keep" !== t5.chomping && (i3 = [L_, L_]) : i3 = L_;
              }
              return [__(L_, n3.map(o3, "children")), i3, __(L_, n3.map(o3, "endComments"))];
            }
            case "directive":
              return ["%", __(" ", [e3.name, ...e3.parameters])];
            case "comment":
              return ["#", e3.value];
            case "alias":
              return ["*", e3.value];
            case "tag":
              return r3.originalText.slice(e3.position.start.offset, e3.position.end.offset);
            case "anchor":
              return ["&", e3.value];
            case "plain":
              return cM(e3.type, r3.originalText.slice(e3.position.start.offset, e3.position.end.offset), r3);
            case "quoteDouble":
            case "quoteSingle": {
              const t4 = "'", n4 = '"', o4 = r3.originalText.slice(e3.position.start.offset + 1, e3.position.end.offset - 1);
              if ("quoteSingle" === e3.type && o4.includes("\\") || "quoteDouble" === e3.type && /\\[^"]/.test(o4)) {
                const i4 = "quoteDouble" === e3.type ? n4 : t4;
                return [i4, cM(e3.type, o4, r3), i4];
              }
              if (o4.includes(n4))
                return [t4, cM(e3.type, "quoteDouble" === e3.type ? o4.replace(/\\"/g, n4).replace(/'/g, t4.repeat(2)) : o4, r3), t4];
              if (o4.includes(t4))
                return [n4, cM(e3.type, "quoteSingle" === e3.type ? o4.replace(/''/g, t4) : o4, r3), n4];
              const i3 = r3.singleQuote ? t4 : n4;
              return [i3, cM(e3.type, o4, r3), i3];
            }
            case "blockFolded":
            case "blockLiteral":
              return P_(n3, o3, r3);
            case "mapping":
            case "sequence":
              return __(L_, n3.map(o3, "children"));
            case "sequenceItem":
              return ["- ", rM(2, e3.content ? o3("content") : "")];
            case "mappingKey":
            case "mappingValue":
              return e3.content ? o3("content") : "";
            case "mappingItem":
            case "flowMappingItem":
              return g_(e3, t3, n3, o3, r3);
            case "flowMapping":
              return uM(n3, o3, r3);
            case "flowSequence":
              return sM(n3, o3, r3);
            case "flowSequenceItem":
              return o3("content");
            default:
              throw new Error("Unexpected node type ".concat(e3.type));
          }
        }(r2, a2, e2, t2, n2))), K_(r2) && !tM(r2, ["document", "documentHead"]) && o2.push(R_(["mappingValue" !== r2.type || r2.content ? " " : "", "mappingKey" === a2.type && "mapping" === e2.getParentNode(2).type && nM(r2) ? "" : O_, n2("trailingComment")])), iM(r2) && o2.push(rM("sequenceItem" === r2.type ? 2 : 0, [L_, __(L_, e2.map((e3) => [W_(t2.originalText, e3.getValue(), H_) ? L_ : "", n2()], "endComments"))])), o2.push(s2), o2;
      }, massageAstNode: function(e2, t2) {
        if (tM(t2))
          switch (delete t2.position, t2.type) {
            case "comment":
              if (z_(t2.value))
                return null;
              break;
            case "quoteDouble":
            case "quoteSingle":
              t2.type = "quote";
          }
      }, insertPragma: U_ }, pM = { bracketSpacing: Ow.bracketSpacing, singleQuote: Ow.singleQuote, proseWrap: Ow.proseWrap };
      var fM = [qw, GB, rN, FN, eO, mL, { languages: [df({ name: "YAML", type: "data", color: "#cb171e", tmScope: "source.yaml", aliases: ["yml"], extensions: [".yml", ".mir", ".reek", ".rviz", ".sublime-syntax", ".syntax", ".yaml", ".yaml-tmlanguage", ".yaml.sed", ".yml.mysql"], filenames: [".clang-format", ".clang-tidy", ".gemrc", "glide.lock", "yarn.lock"], aceMode: "yaml", codemirrorMode: "yaml", codemirrorMimeType: "text/x-yaml", languageId: 407 }, (e2) => ({ since: "1.14.0", parsers: ["yaml"], vscodeLanguageIds: ["yaml", "ansible", "home-assistant"], filenames: [...e2.filenames.filter((e3) => "yarn.lock" !== e3), ".prettierrc"] }))], printers: { yaml: lM }, options: pM, parsers: { get yaml() {
        return {}.parsers.yaml;
      } } }];
      const { version: dM } = n, { getSupportInfo: hM } = Mt, mM = fM.map((t2) => e(t2, ["parsers"]));
      function gM(e2, t2 = 1) {
        return (...n2) => {
          const r2 = n2[t2] || {}, o2 = r2.plugins || [];
          return n2[t2] = Object.assign({}, r2, { plugins: [...mM, ...Array.isArray(o2) ? o2 : Object.values(o2)] }), e2(...n2);
        };
      }
      const yM = gM($p.formatWithCursor);
      return { formatWithCursor: yM, format: (e2, t2) => yM(e2, t2).formatted, check(e2, t2) {
        const { formatted: n2 } = yM(e2, t2);
        return n2 === e2;
      }, doc: Rn, getSupportInfo: gM(hM, 0), version: dM, util: ff, __debug: { parse: gM($p.parse), formatAST: gM($p.formatAST), formatDoc: gM($p.formatDoc), printToDoc: gM($p.printToDoc), printDocToString: gM($p.printDocToString) } };
    });
  }
});

// ../../node_modules/ts-dedent/esm/index.js
function dedent(templ) {
  var values = [];
  for (var _i = 1; _i < arguments.length; _i++) {
    values[_i - 1] = arguments[_i];
  }
  var strings = Array.from(typeof templ === "string" ? [templ] : templ);
  strings[strings.length - 1] = strings[strings.length - 1].replace(/\r?\n([\t ]*)$/, "");
  var indentLengths = strings.reduce(function(arr, str) {
    var matches = str.match(/\n([\t ]+|(?!\s).)/g);
    if (matches) {
      return arr.concat(matches.map(function(match2) {
        var _a, _b;
        return (_b = (_a = match2.match(/[\t ]/g)) === null || _a === void 0 ? void 0 : _a.length) !== null && _b !== void 0 ? _b : 0;
      }));
    }
    return arr;
  }, []);
  if (indentLengths.length) {
    var pattern_1 = new RegExp("\n[	 ]{" + Math.min.apply(Math, indentLengths) + "}", "g");
    strings = strings.map(function(str) {
      return str.replace(pattern_1, "\n");
    });
  }
  strings[0] = strings[0].replace(/^\r?\n/, "");
  var string = strings[0];
  values.forEach(function(value, i) {
    var endentations = string.match(/(?:^|\n)( *)$/);
    var endentation = endentations ? endentations[1] : "";
    var indentedValue = value;
    if (typeof value === "string" && value.includes("\n")) {
      indentedValue = String(value).split("\n").map(function(str, i2) {
        return i2 === 0 ? str : "" + endentation + str;
      }).join("\n");
    }
    string += indentedValue + strings[i + 1];
  });
  return string;
}
var init_esm2 = __esm({
  "../../node_modules/ts-dedent/esm/index.js"() {
  }
});

// src/syntaxhighlighter/formatter.ts
var formatter_exports = {};
__export(formatter_exports, {
  formatter: () => formatter
});
var import_memoizerific2, import_parser_html, import_standalone, formatter;
var init_formatter = __esm({
  "src/syntaxhighlighter/formatter.ts"() {
    import_memoizerific2 = __toESM(require("memoizerific"));
    import_parser_html = __toESM(require_parser_html());
    import_standalone = __toESM(require_standalone());
    init_esm2();
    formatter = (0, import_memoizerific2.default)(2)((type, source) => {
      if (type === false) {
        return source;
      }
      if (type === "dedent" || type === true) {
        return dedent(source);
      }
      return import_standalone.default.format(source, {
        parser: type,
        plugins: [import_parser_html.default],
        htmlWhitespaceSensitivity: "ignore"
      }).trim();
    });
  }
});

// ../../node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js
function _objectWithoutPropertiesLoose(source, excluded) {
  if (source == null)
    return {};
  var target = {};
  var sourceKeys = Object.keys(source);
  var key, i;
  for (i = 0; i < sourceKeys.length; i++) {
    key = sourceKeys[i];
    if (excluded.indexOf(key) >= 0)
      continue;
    target[key] = source[key];
  }
  return target;
}
var init_objectWithoutPropertiesLoose = __esm({
  "../../node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js"() {
  }
});

// ../../node_modules/react-popper/lib/esm/Manager.js
function Manager(_ref) {
  var children = _ref.children;
  var _React$useState = React23.useState(null), referenceNode = _React$useState[0], setReferenceNode = _React$useState[1];
  var hasUnmounted = React23.useRef(false);
  React23.useEffect(function() {
    return function() {
      hasUnmounted.current = true;
    };
  }, []);
  var handleSetReferenceNode = React23.useCallback(function(node) {
    if (!hasUnmounted.current) {
      setReferenceNode(node);
    }
  }, []);
  return /* @__PURE__ */ React23.createElement(ManagerReferenceNodeContext.Provider, {
    value: referenceNode
  }, /* @__PURE__ */ React23.createElement(ManagerReferenceNodeSetterContext.Provider, {
    value: handleSetReferenceNode
  }, children));
}
var React23, ManagerReferenceNodeContext, ManagerReferenceNodeSetterContext;
var init_Manager = __esm({
  "../../node_modules/react-popper/lib/esm/Manager.js"() {
    React23 = __toESM(require("react"));
    ManagerReferenceNodeContext = React23.createContext();
    ManagerReferenceNodeSetterContext = React23.createContext();
  }
});

// ../../node_modules/react-popper/lib/esm/utils.js
var React24, unwrapArray, safeInvoke, setRef, fromEntries, useIsomorphicLayoutEffect;
var init_utils = __esm({
  "../../node_modules/react-popper/lib/esm/utils.js"() {
    React24 = __toESM(require("react"));
    unwrapArray = function unwrapArray2(arg) {
      return Array.isArray(arg) ? arg[0] : arg;
    };
    safeInvoke = function safeInvoke2(fn2) {
      if (typeof fn2 === "function") {
        for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
          args[_key - 1] = arguments[_key];
        }
        return fn2.apply(void 0, args);
      }
    };
    setRef = function setRef2(ref, node) {
      if (typeof ref === "function") {
        return safeInvoke(ref, node);
      } else if (ref != null) {
        ref.current = node;
      }
    };
    fromEntries = function fromEntries2(entries) {
      return entries.reduce(function(acc, _ref) {
        var key = _ref[0], value = _ref[1];
        acc[key] = value;
        return acc;
      }, {});
    };
    useIsomorphicLayoutEffect = typeof window !== "undefined" && window.document && window.document.createElement ? React24.useLayoutEffect : React24.useEffect;
  }
});

// ../../node_modules/@popperjs/core/lib/enums.js
var top, bottom, right, left, auto, basePlacements, start, end, clippingParents, viewport, popper, reference, variationPlacements, placements, beforeRead, read, afterRead, beforeMain, main, afterMain, beforeWrite, write, afterWrite, modifierPhases;
var init_enums = __esm({
  "../../node_modules/@popperjs/core/lib/enums.js"() {
    top = "top";
    bottom = "bottom";
    right = "right";
    left = "left";
    auto = "auto";
    basePlacements = [top, bottom, right, left];
    start = "start";
    end = "end";
    clippingParents = "clippingParents";
    viewport = "viewport";
    popper = "popper";
    reference = "reference";
    variationPlacements = /* @__PURE__ */ basePlacements.reduce(function(acc, placement) {
      return acc.concat([placement + "-" + start, placement + "-" + end]);
    }, []);
    placements = /* @__PURE__ */ [].concat(basePlacements, [auto]).reduce(function(acc, placement) {
      return acc.concat([placement, placement + "-" + start, placement + "-" + end]);
    }, []);
    beforeRead = "beforeRead";
    read = "read";
    afterRead = "afterRead";
    beforeMain = "beforeMain";
    main = "main";
    afterMain = "afterMain";
    beforeWrite = "beforeWrite";
    write = "write";
    afterWrite = "afterWrite";
    modifierPhases = [beforeRead, read, afterRead, beforeMain, main, afterMain, beforeWrite, write, afterWrite];
  }
});

// ../../node_modules/@popperjs/core/lib/dom-utils/getNodeName.js
function getNodeName(element) {
  return element ? (element.nodeName || "").toLowerCase() : null;
}
var init_getNodeName = __esm({
  "../../node_modules/@popperjs/core/lib/dom-utils/getNodeName.js"() {
  }
});

// ../../node_modules/@popperjs/core/lib/dom-utils/getWindow.js
function getWindow(node) {
  if (node == null) {
    return window;
  }
  if (node.toString() !== "[object Window]") {
    var ownerDocument = node.ownerDocument;
    return ownerDocument ? ownerDocument.defaultView || window : window;
  }
  return node;
}
var init_getWindow = __esm({
  "../../node_modules/@popperjs/core/lib/dom-utils/getWindow.js"() {
  }
});

// ../../node_modules/@popperjs/core/lib/dom-utils/instanceOf.js
function isElement(node) {
  var OwnElement = getWindow(node).Element;
  return node instanceof OwnElement || node instanceof Element;
}
function isHTMLElement(node) {
  var OwnElement = getWindow(node).HTMLElement;
  return node instanceof OwnElement || node instanceof HTMLElement;
}
function isShadowRoot(node) {
  if (typeof ShadowRoot === "undefined") {
    return false;
  }
  var OwnElement = getWindow(node).ShadowRoot;
  return node instanceof OwnElement || node instanceof ShadowRoot;
}
var init_instanceOf = __esm({
  "../../node_modules/@popperjs/core/lib/dom-utils/instanceOf.js"() {
    init_getWindow();
  }
});

// ../../node_modules/@popperjs/core/lib/modifiers/applyStyles.js
function applyStyles(_ref) {
  var state = _ref.state;
  Object.keys(state.elements).forEach(function(name) {
    var style = state.styles[name] || {};
    var attributes = state.attributes[name] || {};
    var element = state.elements[name];
    if (!isHTMLElement(element) || !getNodeName(element)) {
      return;
    }
    Object.assign(element.style, style);
    Object.keys(attributes).forEach(function(name2) {
      var value = attributes[name2];
      if (value === false) {
        element.removeAttribute(name2);
      } else {
        element.setAttribute(name2, value === true ? "" : value);
      }
    });
  });
}
function effect(_ref2) {
  var state = _ref2.state;
  var initialStyles = {
    popper: {
      position: state.options.strategy,
      left: "0",
      top: "0",
      margin: "0"
    },
    arrow: {
      position: "absolute"
    },
    reference: {}
  };
  Object.assign(state.elements.popper.style, initialStyles.popper);
  state.styles = initialStyles;
  if (state.elements.arrow) {
    Object.assign(state.elements.arrow.style, initialStyles.arrow);
  }
  return function() {
    Object.keys(state.elements).forEach(function(name) {
      var element = state.elements[name];
      var attributes = state.attributes[name] || {};
      var styleProperties = Object.keys(state.styles.hasOwnProperty(name) ? state.styles[name] : initialStyles[name]);
      var style = styleProperties.reduce(function(style2, property) {
        style2[property] = "";
        return style2;
      }, {});
      if (!isHTMLElement(element) || !getNodeName(element)) {
        return;
      }
      Object.assign(element.style, style);
      Object.keys(attributes).forEach(function(attribute) {
        element.removeAttribute(attribute);
      });
    });
  };
}
var applyStyles_default;
var init_applyStyles = __esm({
  "../../node_modules/@popperjs/core/lib/modifiers/applyStyles.js"() {
    init_getNodeName();
    init_instanceOf();
    applyStyles_default = {
      name: "applyStyles",
      enabled: true,
      phase: "write",
      fn: applyStyles,
      effect,
      requires: ["computeStyles"]
    };
  }
});

// ../../node_modules/@popperjs/core/lib/utils/getBasePlacement.js
function getBasePlacement(placement) {
  return placement.split("-")[0];
}
var init_getBasePlacement = __esm({
  "../../node_modules/@popperjs/core/lib/utils/getBasePlacement.js"() {
  }
});

// ../../node_modules/@popperjs/core/lib/utils/math.js
var max, min, round;
var init_math = __esm({
  "../../node_modules/@popperjs/core/lib/utils/math.js"() {
    max = Math.max;
    min = Math.min;
    round = Math.round;
  }
});

// ../../node_modules/@popperjs/core/lib/utils/userAgent.js
function getUAString() {
  var uaData = navigator.userAgentData;
  if (uaData != null && uaData.brands) {
    return uaData.brands.map(function(item) {
      return item.brand + "/" + item.version;
    }).join(" ");
  }
  return navigator.userAgent;
}
var init_userAgent = __esm({
  "../../node_modules/@popperjs/core/lib/utils/userAgent.js"() {
  }
});

// ../../node_modules/@popperjs/core/lib/dom-utils/isLayoutViewport.js
function isLayoutViewport() {
  return !/^((?!chrome|android).)*safari/i.test(getUAString());
}
var init_isLayoutViewport = __esm({
  "../../node_modules/@popperjs/core/lib/dom-utils/isLayoutViewport.js"() {
    init_userAgent();
  }
});

// ../../node_modules/@popperjs/core/lib/dom-utils/getBoundingClientRect.js
function getBoundingClientRect(element, includeScale, isFixedStrategy) {
  if (includeScale === void 0) {
    includeScale = false;
  }
  if (isFixedStrategy === void 0) {
    isFixedStrategy = false;
  }
  var clientRect = element.getBoundingClientRect();
  var scaleX = 1;
  var scaleY = 1;
  if (includeScale && isHTMLElement(element)) {
    scaleX = element.offsetWidth > 0 ? round(clientRect.width) / element.offsetWidth || 1 : 1;
    scaleY = element.offsetHeight > 0 ? round(clientRect.height) / element.offsetHeight || 1 : 1;
  }
  var _ref = isElement(element) ? getWindow(element) : window, visualViewport = _ref.visualViewport;
  var addVisualOffsets = !isLayoutViewport() && isFixedStrategy;
  var x = (clientRect.left + (addVisualOffsets && visualViewport ? visualViewport.offsetLeft : 0)) / scaleX;
  var y = (clientRect.top + (addVisualOffsets && visualViewport ? visualViewport.offsetTop : 0)) / scaleY;
  var width = clientRect.width / scaleX;
  var height = clientRect.height / scaleY;
  return {
    width,
    height,
    top: y,
    right: x + width,
    bottom: y + height,
    left: x,
    x,
    y
  };
}
var init_getBoundingClientRect = __esm({
  "../../node_modules/@popperjs/core/lib/dom-utils/getBoundingClientRect.js"() {
    init_instanceOf();
    init_math();
    init_getWindow();
    init_isLayoutViewport();
  }
});

// ../../node_modules/@popperjs/core/lib/dom-utils/getLayoutRect.js
function getLayoutRect(element) {
  var clientRect = getBoundingClientRect(element);
  var width = element.offsetWidth;
  var height = element.offsetHeight;
  if (Math.abs(clientRect.width - width) <= 1) {
    width = clientRect.width;
  }
  if (Math.abs(clientRect.height - height) <= 1) {
    height = clientRect.height;
  }
  return {
    x: element.offsetLeft,
    y: element.offsetTop,
    width,
    height
  };
}
var init_getLayoutRect = __esm({
  "../../node_modules/@popperjs/core/lib/dom-utils/getLayoutRect.js"() {
    init_getBoundingClientRect();
  }
});

// ../../node_modules/@popperjs/core/lib/dom-utils/contains.js
function contains(parent, child) {
  var rootNode = child.getRootNode && child.getRootNode();
  if (parent.contains(child)) {
    return true;
  } else if (rootNode && isShadowRoot(rootNode)) {
    var next = child;
    do {
      if (next && parent.isSameNode(next)) {
        return true;
      }
      next = next.parentNode || next.host;
    } while (next);
  }
  return false;
}
var init_contains = __esm({
  "../../node_modules/@popperjs/core/lib/dom-utils/contains.js"() {
    init_instanceOf();
  }
});

// ../../node_modules/@popperjs/core/lib/dom-utils/getComputedStyle.js
function getComputedStyle2(element) {
  return getWindow(element).getComputedStyle(element);
}
var init_getComputedStyle = __esm({
  "../../node_modules/@popperjs/core/lib/dom-utils/getComputedStyle.js"() {
    init_getWindow();
  }
});

// ../../node_modules/@popperjs/core/lib/dom-utils/isTableElement.js
function isTableElement(element) {
  return ["table", "td", "th"].indexOf(getNodeName(element)) >= 0;
}
var init_isTableElement = __esm({
  "../../node_modules/@popperjs/core/lib/dom-utils/isTableElement.js"() {
    init_getNodeName();
  }
});

// ../../node_modules/@popperjs/core/lib/dom-utils/getDocumentElement.js
function getDocumentElement(element) {
  return ((isElement(element) ? element.ownerDocument : element.document) || window.document).documentElement;
}
var init_getDocumentElement = __esm({
  "../../node_modules/@popperjs/core/lib/dom-utils/getDocumentElement.js"() {
    init_instanceOf();
  }
});

// ../../node_modules/@popperjs/core/lib/dom-utils/getParentNode.js
function getParentNode(element) {
  if (getNodeName(element) === "html") {
    return element;
  }
  return element.assignedSlot || element.parentNode || (isShadowRoot(element) ? element.host : null) || getDocumentElement(element);
}
var init_getParentNode = __esm({
  "../../node_modules/@popperjs/core/lib/dom-utils/getParentNode.js"() {
    init_getNodeName();
    init_getDocumentElement();
    init_instanceOf();
  }
});

// ../../node_modules/@popperjs/core/lib/dom-utils/getOffsetParent.js
function getTrueOffsetParent(element) {
  if (!isHTMLElement(element) || getComputedStyle2(element).position === "fixed") {
    return null;
  }
  return element.offsetParent;
}
function getContainingBlock(element) {
  var isFirefox = /firefox/i.test(getUAString());
  var isIE2 = /Trident/i.test(getUAString());
  if (isIE2 && isHTMLElement(element)) {
    var elementCss = getComputedStyle2(element);
    if (elementCss.position === "fixed") {
      return null;
    }
  }
  var currentNode = getParentNode(element);
  if (isShadowRoot(currentNode)) {
    currentNode = currentNode.host;
  }
  while (isHTMLElement(currentNode) && ["html", "body"].indexOf(getNodeName(currentNode)) < 0) {
    var css2 = getComputedStyle2(currentNode);
    if (css2.transform !== "none" || css2.perspective !== "none" || css2.contain === "paint" || ["transform", "perspective"].indexOf(css2.willChange) !== -1 || isFirefox && css2.willChange === "filter" || isFirefox && css2.filter && css2.filter !== "none") {
      return currentNode;
    } else {
      currentNode = currentNode.parentNode;
    }
  }
  return null;
}
function getOffsetParent(element) {
  var window2 = getWindow(element);
  var offsetParent = getTrueOffsetParent(element);
  while (offsetParent && isTableElement(offsetParent) && getComputedStyle2(offsetParent).position === "static") {
    offsetParent = getTrueOffsetParent(offsetParent);
  }
  if (offsetParent && (getNodeName(offsetParent) === "html" || getNodeName(offsetParent) === "body" && getComputedStyle2(offsetParent).position === "static")) {
    return window2;
  }
  return offsetParent || getContainingBlock(element) || window2;
}
var init_getOffsetParent = __esm({
  "../../node_modules/@popperjs/core/lib/dom-utils/getOffsetParent.js"() {
    init_getWindow();
    init_getNodeName();
    init_getComputedStyle();
    init_instanceOf();
    init_isTableElement();
    init_getParentNode();
    init_userAgent();
  }
});

// ../../node_modules/@popperjs/core/lib/utils/getMainAxisFromPlacement.js
function getMainAxisFromPlacement(placement) {
  return ["top", "bottom"].indexOf(placement) >= 0 ? "x" : "y";
}
var init_getMainAxisFromPlacement = __esm({
  "../../node_modules/@popperjs/core/lib/utils/getMainAxisFromPlacement.js"() {
  }
});

// ../../node_modules/@popperjs/core/lib/utils/within.js
function within(min2, value, max2) {
  return max(min2, min(value, max2));
}
function withinMaxClamp(min2, value, max2) {
  var v = within(min2, value, max2);
  return v > max2 ? max2 : v;
}
var init_within = __esm({
  "../../node_modules/@popperjs/core/lib/utils/within.js"() {
    init_math();
  }
});

// ../../node_modules/@popperjs/core/lib/utils/getFreshSideObject.js
function getFreshSideObject() {
  return {
    top: 0,
    right: 0,
    bottom: 0,
    left: 0
  };
}
var init_getFreshSideObject = __esm({
  "../../node_modules/@popperjs/core/lib/utils/getFreshSideObject.js"() {
  }
});

// ../../node_modules/@popperjs/core/lib/utils/mergePaddingObject.js
function mergePaddingObject(paddingObject) {
  return Object.assign({}, getFreshSideObject(), paddingObject);
}
var init_mergePaddingObject = __esm({
  "../../node_modules/@popperjs/core/lib/utils/mergePaddingObject.js"() {
    init_getFreshSideObject();
  }
});

// ../../node_modules/@popperjs/core/lib/utils/expandToHashMap.js
function expandToHashMap(value, keys) {
  return keys.reduce(function(hashMap, key) {
    hashMap[key] = value;
    return hashMap;
  }, {});
}
var init_expandToHashMap = __esm({
  "../../node_modules/@popperjs/core/lib/utils/expandToHashMap.js"() {
  }
});

// ../../node_modules/@popperjs/core/lib/modifiers/arrow.js
function arrow(_ref) {
  var _state$modifiersData$;
  var state = _ref.state, name = _ref.name, options = _ref.options;
  var arrowElement = state.elements.arrow;
  var popperOffsets2 = state.modifiersData.popperOffsets;
  var basePlacement = getBasePlacement(state.placement);
  var axis = getMainAxisFromPlacement(basePlacement);
  var isVertical = [left, right].indexOf(basePlacement) >= 0;
  var len = isVertical ? "height" : "width";
  if (!arrowElement || !popperOffsets2) {
    return;
  }
  var paddingObject = toPaddingObject(options.padding, state);
  var arrowRect = getLayoutRect(arrowElement);
  var minProp = axis === "y" ? top : left;
  var maxProp = axis === "y" ? bottom : right;
  var endDiff = state.rects.reference[len] + state.rects.reference[axis] - popperOffsets2[axis] - state.rects.popper[len];
  var startDiff = popperOffsets2[axis] - state.rects.reference[axis];
  var arrowOffsetParent = getOffsetParent(arrowElement);
  var clientSize = arrowOffsetParent ? axis === "y" ? arrowOffsetParent.clientHeight || 0 : arrowOffsetParent.clientWidth || 0 : 0;
  var centerToReference = endDiff / 2 - startDiff / 2;
  var min2 = paddingObject[minProp];
  var max2 = clientSize - arrowRect[len] - paddingObject[maxProp];
  var center = clientSize / 2 - arrowRect[len] / 2 + centerToReference;
  var offset2 = within(min2, center, max2);
  var axisProp = axis;
  state.modifiersData[name] = (_state$modifiersData$ = {}, _state$modifiersData$[axisProp] = offset2, _state$modifiersData$.centerOffset = offset2 - center, _state$modifiersData$);
}
function effect2(_ref2) {
  var state = _ref2.state, options = _ref2.options;
  var _options$element = options.element, arrowElement = _options$element === void 0 ? "[data-popper-arrow]" : _options$element;
  if (arrowElement == null) {
    return;
  }
  if (typeof arrowElement === "string") {
    arrowElement = state.elements.popper.querySelector(arrowElement);
    if (!arrowElement) {
      return;
    }
  }
  if (process.env.NODE_ENV !== "production") {
    if (!isHTMLElement(arrowElement)) {
      console.error(['Popper: "arrow" element must be an HTMLElement (not an SVGElement).', "To use an SVG arrow, wrap it in an HTMLElement that will be used as", "the arrow."].join(" "));
    }
  }
  if (!contains(state.elements.popper, arrowElement)) {
    if (process.env.NODE_ENV !== "production") {
      console.error(['Popper: "arrow" modifier\'s `element` must be a child of the popper', "element."].join(" "));
    }
    return;
  }
  state.elements.arrow = arrowElement;
}
var toPaddingObject, arrow_default;
var init_arrow = __esm({
  "../../node_modules/@popperjs/core/lib/modifiers/arrow.js"() {
    init_getBasePlacement();
    init_getLayoutRect();
    init_contains();
    init_getOffsetParent();
    init_getMainAxisFromPlacement();
    init_within();
    init_mergePaddingObject();
    init_expandToHashMap();
    init_enums();
    init_instanceOf();
    toPaddingObject = function toPaddingObject2(padding, state) {
      padding = typeof padding === "function" ? padding(Object.assign({}, state.rects, {
        placement: state.placement
      })) : padding;
      return mergePaddingObject(typeof padding !== "number" ? padding : expandToHashMap(padding, basePlacements));
    };
    arrow_default = {
      name: "arrow",
      enabled: true,
      phase: "main",
      fn: arrow,
      effect: effect2,
      requires: ["popperOffsets"],
      requiresIfExists: ["preventOverflow"]
    };
  }
});

// ../../node_modules/@popperjs/core/lib/utils/getVariation.js
function getVariation(placement) {
  return placement.split("-")[1];
}
var init_getVariation = __esm({
  "../../node_modules/@popperjs/core/lib/utils/getVariation.js"() {
  }
});

// ../../node_modules/@popperjs/core/lib/modifiers/computeStyles.js
function roundOffsetsByDPR(_ref) {
  var x = _ref.x, y = _ref.y;
  var win = window;
  var dpr = win.devicePixelRatio || 1;
  return {
    x: round(x * dpr) / dpr || 0,
    y: round(y * dpr) / dpr || 0
  };
}
function mapToStyles(_ref2) {
  var _Object$assign2;
  var popper2 = _ref2.popper, popperRect = _ref2.popperRect, placement = _ref2.placement, variation = _ref2.variation, offsets = _ref2.offsets, position = _ref2.position, gpuAcceleration = _ref2.gpuAcceleration, adaptive = _ref2.adaptive, roundOffsets = _ref2.roundOffsets, isFixed = _ref2.isFixed;
  var _offsets$x = offsets.x, x = _offsets$x === void 0 ? 0 : _offsets$x, _offsets$y = offsets.y, y = _offsets$y === void 0 ? 0 : _offsets$y;
  var _ref3 = typeof roundOffsets === "function" ? roundOffsets({
    x,
    y
  }) : {
    x,
    y
  };
  x = _ref3.x;
  y = _ref3.y;
  var hasX = offsets.hasOwnProperty("x");
  var hasY = offsets.hasOwnProperty("y");
  var sideX = left;
  var sideY = top;
  var win = window;
  if (adaptive) {
    var offsetParent = getOffsetParent(popper2);
    var heightProp = "clientHeight";
    var widthProp = "clientWidth";
    if (offsetParent === getWindow(popper2)) {
      offsetParent = getDocumentElement(popper2);
      if (getComputedStyle2(offsetParent).position !== "static" && position === "absolute") {
        heightProp = "scrollHeight";
        widthProp = "scrollWidth";
      }
    }
    offsetParent = offsetParent;
    if (placement === top || (placement === left || placement === right) && variation === end) {
      sideY = bottom;
      var offsetY = isFixed && offsetParent === win && win.visualViewport ? win.visualViewport.height : offsetParent[heightProp];
      y -= offsetY - popperRect.height;
      y *= gpuAcceleration ? 1 : -1;
    }
    if (placement === left || (placement === top || placement === bottom) && variation === end) {
      sideX = right;
      var offsetX = isFixed && offsetParent === win && win.visualViewport ? win.visualViewport.width : offsetParent[widthProp];
      x -= offsetX - popperRect.width;
      x *= gpuAcceleration ? 1 : -1;
    }
  }
  var commonStyles = Object.assign({
    position
  }, adaptive && unsetSides);
  var _ref4 = roundOffsets === true ? roundOffsetsByDPR({
    x,
    y
  }) : {
    x,
    y
  };
  x = _ref4.x;
  y = _ref4.y;
  if (gpuAcceleration) {
    var _Object$assign;
    return Object.assign({}, commonStyles, (_Object$assign = {}, _Object$assign[sideY] = hasY ? "0" : "", _Object$assign[sideX] = hasX ? "0" : "", _Object$assign.transform = (win.devicePixelRatio || 1) <= 1 ? "translate(" + x + "px, " + y + "px)" : "translate3d(" + x + "px, " + y + "px, 0)", _Object$assign));
  }
  return Object.assign({}, commonStyles, (_Object$assign2 = {}, _Object$assign2[sideY] = hasY ? y + "px" : "", _Object$assign2[sideX] = hasX ? x + "px" : "", _Object$assign2.transform = "", _Object$assign2));
}
function computeStyles(_ref5) {
  var state = _ref5.state, options = _ref5.options;
  var _options$gpuAccelerat = options.gpuAcceleration, gpuAcceleration = _options$gpuAccelerat === void 0 ? true : _options$gpuAccelerat, _options$adaptive = options.adaptive, adaptive = _options$adaptive === void 0 ? true : _options$adaptive, _options$roundOffsets = options.roundOffsets, roundOffsets = _options$roundOffsets === void 0 ? true : _options$roundOffsets;
  if (process.env.NODE_ENV !== "production") {
    var transitionProperty = getComputedStyle2(state.elements.popper).transitionProperty || "";
    if (adaptive && ["transform", "top", "right", "bottom", "left"].some(function(property) {
      return transitionProperty.indexOf(property) >= 0;
    })) {
      console.warn(["Popper: Detected CSS transitions on at least one of the following", 'CSS properties: "transform", "top", "right", "bottom", "left".', "\n\n", 'Disable the "computeStyles" modifier\'s `adaptive` option to allow', "for smooth transitions, or remove these properties from the CSS", "transition declaration on the popper element if only transitioning", "opacity or background-color for example.", "\n\n", "We recommend using the popper element as a wrapper around an inner", "element that can have any CSS property transitioned for animations."].join(" "));
    }
  }
  var commonStyles = {
    placement: getBasePlacement(state.placement),
    variation: getVariation(state.placement),
    popper: state.elements.popper,
    popperRect: state.rects.popper,
    gpuAcceleration,
    isFixed: state.options.strategy === "fixed"
  };
  if (state.modifiersData.popperOffsets != null) {
    state.styles.popper = Object.assign({}, state.styles.popper, mapToStyles(Object.assign({}, commonStyles, {
      offsets: state.modifiersData.popperOffsets,
      position: state.options.strategy,
      adaptive,
      roundOffsets
    })));
  }
  if (state.modifiersData.arrow != null) {
    state.styles.arrow = Object.assign({}, state.styles.arrow, mapToStyles(Object.assign({}, commonStyles, {
      offsets: state.modifiersData.arrow,
      position: "absolute",
      adaptive: false,
      roundOffsets
    })));
  }
  state.attributes.popper = Object.assign({}, state.attributes.popper, {
    "data-popper-placement": state.placement
  });
}
var unsetSides, computeStyles_default;
var init_computeStyles = __esm({
  "../../node_modules/@popperjs/core/lib/modifiers/computeStyles.js"() {
    init_enums();
    init_getOffsetParent();
    init_getWindow();
    init_getDocumentElement();
    init_getComputedStyle();
    init_getBasePlacement();
    init_getVariation();
    init_math();
    unsetSides = {
      top: "auto",
      right: "auto",
      bottom: "auto",
      left: "auto"
    };
    computeStyles_default = {
      name: "computeStyles",
      enabled: true,
      phase: "beforeWrite",
      fn: computeStyles,
      data: {}
    };
  }
});

// ../../node_modules/@popperjs/core/lib/modifiers/eventListeners.js
function effect3(_ref) {
  var state = _ref.state, instance = _ref.instance, options = _ref.options;
  var _options$scroll = options.scroll, scroll = _options$scroll === void 0 ? true : _options$scroll, _options$resize = options.resize, resize = _options$resize === void 0 ? true : _options$resize;
  var window2 = getWindow(state.elements.popper);
  var scrollParents = [].concat(state.scrollParents.reference, state.scrollParents.popper);
  if (scroll) {
    scrollParents.forEach(function(scrollParent) {
      scrollParent.addEventListener("scroll", instance.update, passive);
    });
  }
  if (resize) {
    window2.addEventListener("resize", instance.update, passive);
  }
  return function() {
    if (scroll) {
      scrollParents.forEach(function(scrollParent) {
        scrollParent.removeEventListener("scroll", instance.update, passive);
      });
    }
    if (resize) {
      window2.removeEventListener("resize", instance.update, passive);
    }
  };
}
var passive, eventListeners_default;
var init_eventListeners = __esm({
  "../../node_modules/@popperjs/core/lib/modifiers/eventListeners.js"() {
    init_getWindow();
    passive = {
      passive: true
    };
    eventListeners_default = {
      name: "eventListeners",
      enabled: true,
      phase: "write",
      fn: function fn() {
      },
      effect: effect3,
      data: {}
    };
  }
});

// ../../node_modules/@popperjs/core/lib/utils/getOppositePlacement.js
function getOppositePlacement(placement) {
  return placement.replace(/left|right|bottom|top/g, function(matched) {
    return hash[matched];
  });
}
var hash;
var init_getOppositePlacement = __esm({
  "../../node_modules/@popperjs/core/lib/utils/getOppositePlacement.js"() {
    hash = {
      left: "right",
      right: "left",
      bottom: "top",
      top: "bottom"
    };
  }
});

// ../../node_modules/@popperjs/core/lib/utils/getOppositeVariationPlacement.js
function getOppositeVariationPlacement(placement) {
  return placement.replace(/start|end/g, function(matched) {
    return hash2[matched];
  });
}
var hash2;
var init_getOppositeVariationPlacement = __esm({
  "../../node_modules/@popperjs/core/lib/utils/getOppositeVariationPlacement.js"() {
    hash2 = {
      start: "end",
      end: "start"
    };
  }
});

// ../../node_modules/@popperjs/core/lib/dom-utils/getWindowScroll.js
function getWindowScroll(node) {
  var win = getWindow(node);
  var scrollLeft = win.pageXOffset;
  var scrollTop = win.pageYOffset;
  return {
    scrollLeft,
    scrollTop
  };
}
var init_getWindowScroll = __esm({
  "../../node_modules/@popperjs/core/lib/dom-utils/getWindowScroll.js"() {
    init_getWindow();
  }
});

// ../../node_modules/@popperjs/core/lib/dom-utils/getWindowScrollBarX.js
function getWindowScrollBarX(element) {
  return getBoundingClientRect(getDocumentElement(element)).left + getWindowScroll(element).scrollLeft;
}
var init_getWindowScrollBarX = __esm({
  "../../node_modules/@popperjs/core/lib/dom-utils/getWindowScrollBarX.js"() {
    init_getBoundingClientRect();
    init_getDocumentElement();
    init_getWindowScroll();
  }
});

// ../../node_modules/@popperjs/core/lib/dom-utils/getViewportRect.js
function getViewportRect(element, strategy) {
  var win = getWindow(element);
  var html = getDocumentElement(element);
  var visualViewport = win.visualViewport;
  var width = html.clientWidth;
  var height = html.clientHeight;
  var x = 0;
  var y = 0;
  if (visualViewport) {
    width = visualViewport.width;
    height = visualViewport.height;
    var layoutViewport = isLayoutViewport();
    if (layoutViewport || !layoutViewport && strategy === "fixed") {
      x = visualViewport.offsetLeft;
      y = visualViewport.offsetTop;
    }
  }
  return {
    width,
    height,
    x: x + getWindowScrollBarX(element),
    y
  };
}
var init_getViewportRect = __esm({
  "../../node_modules/@popperjs/core/lib/dom-utils/getViewportRect.js"() {
    init_getWindow();
    init_getDocumentElement();
    init_getWindowScrollBarX();
    init_isLayoutViewport();
  }
});

// ../../node_modules/@popperjs/core/lib/dom-utils/getDocumentRect.js
function getDocumentRect(element) {
  var _element$ownerDocumen;
  var html = getDocumentElement(element);
  var winScroll = getWindowScroll(element);
  var body = (_element$ownerDocumen = element.ownerDocument) == null ? void 0 : _element$ownerDocumen.body;
  var width = max(html.scrollWidth, html.clientWidth, body ? body.scrollWidth : 0, body ? body.clientWidth : 0);
  var height = max(html.scrollHeight, html.clientHeight, body ? body.scrollHeight : 0, body ? body.clientHeight : 0);
  var x = -winScroll.scrollLeft + getWindowScrollBarX(element);
  var y = -winScroll.scrollTop;
  if (getComputedStyle2(body || html).direction === "rtl") {
    x += max(html.clientWidth, body ? body.clientWidth : 0) - width;
  }
  return {
    width,
    height,
    x,
    y
  };
}
var init_getDocumentRect = __esm({
  "../../node_modules/@popperjs/core/lib/dom-utils/getDocumentRect.js"() {
    init_getDocumentElement();
    init_getComputedStyle();
    init_getWindowScrollBarX();
    init_getWindowScroll();
    init_math();
  }
});

// ../../node_modules/@popperjs/core/lib/dom-utils/isScrollParent.js
function isScrollParent(element) {
  var _getComputedStyle = getComputedStyle2(element), overflow = _getComputedStyle.overflow, overflowX = _getComputedStyle.overflowX, overflowY = _getComputedStyle.overflowY;
  return /auto|scroll|overlay|hidden/.test(overflow + overflowY + overflowX);
}
var init_isScrollParent = __esm({
  "../../node_modules/@popperjs/core/lib/dom-utils/isScrollParent.js"() {
    init_getComputedStyle();
  }
});

// ../../node_modules/@popperjs/core/lib/dom-utils/getScrollParent.js
function getScrollParent(node) {
  if (["html", "body", "#document"].indexOf(getNodeName(node)) >= 0) {
    return node.ownerDocument.body;
  }
  if (isHTMLElement(node) && isScrollParent(node)) {
    return node;
  }
  return getScrollParent(getParentNode(node));
}
var init_getScrollParent = __esm({
  "../../node_modules/@popperjs/core/lib/dom-utils/getScrollParent.js"() {
    init_getParentNode();
    init_isScrollParent();
    init_getNodeName();
    init_instanceOf();
  }
});

// ../../node_modules/@popperjs/core/lib/dom-utils/listScrollParents.js
function listScrollParents(element, list) {
  var _element$ownerDocumen;
  if (list === void 0) {
    list = [];
  }
  var scrollParent = getScrollParent(element);
  var isBody = scrollParent === ((_element$ownerDocumen = element.ownerDocument) == null ? void 0 : _element$ownerDocumen.body);
  var win = getWindow(scrollParent);
  var target = isBody ? [win].concat(win.visualViewport || [], isScrollParent(scrollParent) ? scrollParent : []) : scrollParent;
  var updatedList = list.concat(target);
  return isBody ? updatedList : updatedList.concat(listScrollParents(getParentNode(target)));
}
var init_listScrollParents = __esm({
  "../../node_modules/@popperjs/core/lib/dom-utils/listScrollParents.js"() {
    init_getScrollParent();
    init_getParentNode();
    init_getWindow();
    init_isScrollParent();
  }
});

// ../../node_modules/@popperjs/core/lib/utils/rectToClientRect.js
function rectToClientRect(rect) {
  return Object.assign({}, rect, {
    left: rect.x,
    top: rect.y,
    right: rect.x + rect.width,
    bottom: rect.y + rect.height
  });
}
var init_rectToClientRect = __esm({
  "../../node_modules/@popperjs/core/lib/utils/rectToClientRect.js"() {
  }
});

// ../../node_modules/@popperjs/core/lib/dom-utils/getClippingRect.js
function getInnerBoundingClientRect(element, strategy) {
  var rect = getBoundingClientRect(element, false, strategy === "fixed");
  rect.top = rect.top + element.clientTop;
  rect.left = rect.left + element.clientLeft;
  rect.bottom = rect.top + element.clientHeight;
  rect.right = rect.left + element.clientWidth;
  rect.width = element.clientWidth;
  rect.height = element.clientHeight;
  rect.x = rect.left;
  rect.y = rect.top;
  return rect;
}
function getClientRectFromMixedType(element, clippingParent, strategy) {
  return clippingParent === viewport ? rectToClientRect(getViewportRect(element, strategy)) : isElement(clippingParent) ? getInnerBoundingClientRect(clippingParent, strategy) : rectToClientRect(getDocumentRect(getDocumentElement(element)));
}
function getClippingParents(element) {
  var clippingParents2 = listScrollParents(getParentNode(element));
  var canEscapeClipping = ["absolute", "fixed"].indexOf(getComputedStyle2(element).position) >= 0;
  var clipperElement = canEscapeClipping && isHTMLElement(element) ? getOffsetParent(element) : element;
  if (!isElement(clipperElement)) {
    return [];
  }
  return clippingParents2.filter(function(clippingParent) {
    return isElement(clippingParent) && contains(clippingParent, clipperElement) && getNodeName(clippingParent) !== "body";
  });
}
function getClippingRect(element, boundary, rootBoundary, strategy) {
  var mainClippingParents = boundary === "clippingParents" ? getClippingParents(element) : [].concat(boundary);
  var clippingParents2 = [].concat(mainClippingParents, [rootBoundary]);
  var firstClippingParent = clippingParents2[0];
  var clippingRect = clippingParents2.reduce(function(accRect, clippingParent) {
    var rect = getClientRectFromMixedType(element, clippingParent, strategy);
    accRect.top = max(rect.top, accRect.top);
    accRect.right = min(rect.right, accRect.right);
    accRect.bottom = min(rect.bottom, accRect.bottom);
    accRect.left = max(rect.left, accRect.left);
    return accRect;
  }, getClientRectFromMixedType(element, firstClippingParent, strategy));
  clippingRect.width = clippingRect.right - clippingRect.left;
  clippingRect.height = clippingRect.bottom - clippingRect.top;
  clippingRect.x = clippingRect.left;
  clippingRect.y = clippingRect.top;
  return clippingRect;
}
var init_getClippingRect = __esm({
  "../../node_modules/@popperjs/core/lib/dom-utils/getClippingRect.js"() {
    init_enums();
    init_getViewportRect();
    init_getDocumentRect();
    init_listScrollParents();
    init_getOffsetParent();
    init_getDocumentElement();
    init_getComputedStyle();
    init_instanceOf();
    init_getBoundingClientRect();
    init_getParentNode();
    init_contains();
    init_getNodeName();
    init_rectToClientRect();
    init_math();
  }
});

// ../../node_modules/@popperjs/core/lib/utils/computeOffsets.js
function computeOffsets(_ref) {
  var reference2 = _ref.reference, element = _ref.element, placement = _ref.placement;
  var basePlacement = placement ? getBasePlacement(placement) : null;
  var variation = placement ? getVariation(placement) : null;
  var commonX = reference2.x + reference2.width / 2 - element.width / 2;
  var commonY = reference2.y + reference2.height / 2 - element.height / 2;
  var offsets;
  switch (basePlacement) {
    case top:
      offsets = {
        x: commonX,
        y: reference2.y - element.height
      };
      break;
    case bottom:
      offsets = {
        x: commonX,
        y: reference2.y + reference2.height
      };
      break;
    case right:
      offsets = {
        x: reference2.x + reference2.width,
        y: commonY
      };
      break;
    case left:
      offsets = {
        x: reference2.x - element.width,
        y: commonY
      };
      break;
    default:
      offsets = {
        x: reference2.x,
        y: reference2.y
      };
  }
  var mainAxis = basePlacement ? getMainAxisFromPlacement(basePlacement) : null;
  if (mainAxis != null) {
    var len = mainAxis === "y" ? "height" : "width";
    switch (variation) {
      case start:
        offsets[mainAxis] = offsets[mainAxis] - (reference2[len] / 2 - element[len] / 2);
        break;
      case end:
        offsets[mainAxis] = offsets[mainAxis] + (reference2[len] / 2 - element[len] / 2);
        break;
      default:
    }
  }
  return offsets;
}
var init_computeOffsets = __esm({
  "../../node_modules/@popperjs/core/lib/utils/computeOffsets.js"() {
    init_getBasePlacement();
    init_getVariation();
    init_getMainAxisFromPlacement();
    init_enums();
  }
});

// ../../node_modules/@popperjs/core/lib/utils/detectOverflow.js
function detectOverflow(state, options) {
  if (options === void 0) {
    options = {};
  }
  var _options = options, _options$placement = _options.placement, placement = _options$placement === void 0 ? state.placement : _options$placement, _options$strategy = _options.strategy, strategy = _options$strategy === void 0 ? state.strategy : _options$strategy, _options$boundary = _options.boundary, boundary = _options$boundary === void 0 ? clippingParents : _options$boundary, _options$rootBoundary = _options.rootBoundary, rootBoundary = _options$rootBoundary === void 0 ? viewport : _options$rootBoundary, _options$elementConte = _options.elementContext, elementContext = _options$elementConte === void 0 ? popper : _options$elementConte, _options$altBoundary = _options.altBoundary, altBoundary = _options$altBoundary === void 0 ? false : _options$altBoundary, _options$padding = _options.padding, padding = _options$padding === void 0 ? 0 : _options$padding;
  var paddingObject = mergePaddingObject(typeof padding !== "number" ? padding : expandToHashMap(padding, basePlacements));
  var altContext = elementContext === popper ? reference : popper;
  var popperRect = state.rects.popper;
  var element = state.elements[altBoundary ? altContext : elementContext];
  var clippingClientRect = getClippingRect(isElement(element) ? element : element.contextElement || getDocumentElement(state.elements.popper), boundary, rootBoundary, strategy);
  var referenceClientRect = getBoundingClientRect(state.elements.reference);
  var popperOffsets2 = computeOffsets({
    reference: referenceClientRect,
    element: popperRect,
    strategy: "absolute",
    placement
  });
  var popperClientRect = rectToClientRect(Object.assign({}, popperRect, popperOffsets2));
  var elementClientRect = elementContext === popper ? popperClientRect : referenceClientRect;
  var overflowOffsets = {
    top: clippingClientRect.top - elementClientRect.top + paddingObject.top,
    bottom: elementClientRect.bottom - clippingClientRect.bottom + paddingObject.bottom,
    left: clippingClientRect.left - elementClientRect.left + paddingObject.left,
    right: elementClientRect.right - clippingClientRect.right + paddingObject.right
  };
  var offsetData = state.modifiersData.offset;
  if (elementContext === popper && offsetData) {
    var offset2 = offsetData[placement];
    Object.keys(overflowOffsets).forEach(function(key) {
      var multiply = [right, bottom].indexOf(key) >= 0 ? 1 : -1;
      var axis = [top, bottom].indexOf(key) >= 0 ? "y" : "x";
      overflowOffsets[key] += offset2[axis] * multiply;
    });
  }
  return overflowOffsets;
}
var init_detectOverflow = __esm({
  "../../node_modules/@popperjs/core/lib/utils/detectOverflow.js"() {
    init_getClippingRect();
    init_getDocumentElement();
    init_getBoundingClientRect();
    init_computeOffsets();
    init_rectToClientRect();
    init_enums();
    init_instanceOf();
    init_mergePaddingObject();
    init_expandToHashMap();
  }
});

// ../../node_modules/@popperjs/core/lib/utils/computeAutoPlacement.js
function computeAutoPlacement(state, options) {
  if (options === void 0) {
    options = {};
  }
  var _options = options, placement = _options.placement, boundary = _options.boundary, rootBoundary = _options.rootBoundary, padding = _options.padding, flipVariations = _options.flipVariations, _options$allowedAutoP = _options.allowedAutoPlacements, allowedAutoPlacements = _options$allowedAutoP === void 0 ? placements : _options$allowedAutoP;
  var variation = getVariation(placement);
  var placements2 = variation ? flipVariations ? variationPlacements : variationPlacements.filter(function(placement2) {
    return getVariation(placement2) === variation;
  }) : basePlacements;
  var allowedPlacements = placements2.filter(function(placement2) {
    return allowedAutoPlacements.indexOf(placement2) >= 0;
  });
  if (allowedPlacements.length === 0) {
    allowedPlacements = placements2;
    if (process.env.NODE_ENV !== "production") {
      console.error(["Popper: The `allowedAutoPlacements` option did not allow any", "placements. Ensure the `placement` option matches the variation", "of the allowed placements.", 'For example, "auto" cannot be used to allow "bottom-start".', 'Use "auto-start" instead.'].join(" "));
    }
  }
  var overflows = allowedPlacements.reduce(function(acc, placement2) {
    acc[placement2] = detectOverflow(state, {
      placement: placement2,
      boundary,
      rootBoundary,
      padding
    })[getBasePlacement(placement2)];
    return acc;
  }, {});
  return Object.keys(overflows).sort(function(a, b) {
    return overflows[a] - overflows[b];
  });
}
var init_computeAutoPlacement = __esm({
  "../../node_modules/@popperjs/core/lib/utils/computeAutoPlacement.js"() {
    init_getVariation();
    init_enums();
    init_detectOverflow();
    init_getBasePlacement();
  }
});

// ../../node_modules/@popperjs/core/lib/modifiers/flip.js
function getExpandedFallbackPlacements(placement) {
  if (getBasePlacement(placement) === auto) {
    return [];
  }
  var oppositePlacement = getOppositePlacement(placement);
  return [getOppositeVariationPlacement(placement), oppositePlacement, getOppositeVariationPlacement(oppositePlacement)];
}
function flip(_ref) {
  var state = _ref.state, options = _ref.options, name = _ref.name;
  if (state.modifiersData[name]._skip) {
    return;
  }
  var _options$mainAxis = options.mainAxis, checkMainAxis = _options$mainAxis === void 0 ? true : _options$mainAxis, _options$altAxis = options.altAxis, checkAltAxis = _options$altAxis === void 0 ? true : _options$altAxis, specifiedFallbackPlacements = options.fallbackPlacements, padding = options.padding, boundary = options.boundary, rootBoundary = options.rootBoundary, altBoundary = options.altBoundary, _options$flipVariatio = options.flipVariations, flipVariations = _options$flipVariatio === void 0 ? true : _options$flipVariatio, allowedAutoPlacements = options.allowedAutoPlacements;
  var preferredPlacement = state.options.placement;
  var basePlacement = getBasePlacement(preferredPlacement);
  var isBasePlacement = basePlacement === preferredPlacement;
  var fallbackPlacements = specifiedFallbackPlacements || (isBasePlacement || !flipVariations ? [getOppositePlacement(preferredPlacement)] : getExpandedFallbackPlacements(preferredPlacement));
  var placements2 = [preferredPlacement].concat(fallbackPlacements).reduce(function(acc, placement2) {
    return acc.concat(getBasePlacement(placement2) === auto ? computeAutoPlacement(state, {
      placement: placement2,
      boundary,
      rootBoundary,
      padding,
      flipVariations,
      allowedAutoPlacements
    }) : placement2);
  }, []);
  var referenceRect = state.rects.reference;
  var popperRect = state.rects.popper;
  var checksMap = /* @__PURE__ */ new Map();
  var makeFallbackChecks = true;
  var firstFittingPlacement = placements2[0];
  for (var i = 0; i < placements2.length; i++) {
    var placement = placements2[i];
    var _basePlacement = getBasePlacement(placement);
    var isStartVariation = getVariation(placement) === start;
    var isVertical = [top, bottom].indexOf(_basePlacement) >= 0;
    var len = isVertical ? "width" : "height";
    var overflow = detectOverflow(state, {
      placement,
      boundary,
      rootBoundary,
      altBoundary,
      padding
    });
    var mainVariationSide = isVertical ? isStartVariation ? right : left : isStartVariation ? bottom : top;
    if (referenceRect[len] > popperRect[len]) {
      mainVariationSide = getOppositePlacement(mainVariationSide);
    }
    var altVariationSide = getOppositePlacement(mainVariationSide);
    var checks = [];
    if (checkMainAxis) {
      checks.push(overflow[_basePlacement] <= 0);
    }
    if (checkAltAxis) {
      checks.push(overflow[mainVariationSide] <= 0, overflow[altVariationSide] <= 0);
    }
    if (checks.every(function(check) {
      return check;
    })) {
      firstFittingPlacement = placement;
      makeFallbackChecks = false;
      break;
    }
    checksMap.set(placement, checks);
  }
  if (makeFallbackChecks) {
    var numberOfChecks = flipVariations ? 3 : 1;
    var _loop = function _loop2(_i2) {
      var fittingPlacement = placements2.find(function(placement2) {
        var checks2 = checksMap.get(placement2);
        if (checks2) {
          return checks2.slice(0, _i2).every(function(check) {
            return check;
          });
        }
      });
      if (fittingPlacement) {
        firstFittingPlacement = fittingPlacement;
        return "break";
      }
    };
    for (var _i = numberOfChecks; _i > 0; _i--) {
      var _ret = _loop(_i);
      if (_ret === "break")
        break;
    }
  }
  if (state.placement !== firstFittingPlacement) {
    state.modifiersData[name]._skip = true;
    state.placement = firstFittingPlacement;
    state.reset = true;
  }
}
var flip_default;
var init_flip = __esm({
  "../../node_modules/@popperjs/core/lib/modifiers/flip.js"() {
    init_getOppositePlacement();
    init_getBasePlacement();
    init_getOppositeVariationPlacement();
    init_detectOverflow();
    init_computeAutoPlacement();
    init_enums();
    init_getVariation();
    flip_default = {
      name: "flip",
      enabled: true,
      phase: "main",
      fn: flip,
      requiresIfExists: ["offset"],
      data: {
        _skip: false
      }
    };
  }
});

// ../../node_modules/@popperjs/core/lib/modifiers/hide.js
function getSideOffsets(overflow, rect, preventedOffsets) {
  if (preventedOffsets === void 0) {
    preventedOffsets = {
      x: 0,
      y: 0
    };
  }
  return {
    top: overflow.top - rect.height - preventedOffsets.y,
    right: overflow.right - rect.width + preventedOffsets.x,
    bottom: overflow.bottom - rect.height + preventedOffsets.y,
    left: overflow.left - rect.width - preventedOffsets.x
  };
}
function isAnySideFullyClipped(overflow) {
  return [top, right, bottom, left].some(function(side) {
    return overflow[side] >= 0;
  });
}
function hide(_ref) {
  var state = _ref.state, name = _ref.name;
  var referenceRect = state.rects.reference;
  var popperRect = state.rects.popper;
  var preventedOffsets = state.modifiersData.preventOverflow;
  var referenceOverflow = detectOverflow(state, {
    elementContext: "reference"
  });
  var popperAltOverflow = detectOverflow(state, {
    altBoundary: true
  });
  var referenceClippingOffsets = getSideOffsets(referenceOverflow, referenceRect);
  var popperEscapeOffsets = getSideOffsets(popperAltOverflow, popperRect, preventedOffsets);
  var isReferenceHidden = isAnySideFullyClipped(referenceClippingOffsets);
  var hasPopperEscaped = isAnySideFullyClipped(popperEscapeOffsets);
  state.modifiersData[name] = {
    referenceClippingOffsets,
    popperEscapeOffsets,
    isReferenceHidden,
    hasPopperEscaped
  };
  state.attributes.popper = Object.assign({}, state.attributes.popper, {
    "data-popper-reference-hidden": isReferenceHidden,
    "data-popper-escaped": hasPopperEscaped
  });
}
var hide_default;
var init_hide = __esm({
  "../../node_modules/@popperjs/core/lib/modifiers/hide.js"() {
    init_enums();
    init_detectOverflow();
    hide_default = {
      name: "hide",
      enabled: true,
      phase: "main",
      requiresIfExists: ["preventOverflow"],
      fn: hide
    };
  }
});

// ../../node_modules/@popperjs/core/lib/modifiers/offset.js
function distanceAndSkiddingToXY(placement, rects, offset2) {
  var basePlacement = getBasePlacement(placement);
  var invertDistance = [left, top].indexOf(basePlacement) >= 0 ? -1 : 1;
  var _ref = typeof offset2 === "function" ? offset2(Object.assign({}, rects, {
    placement
  })) : offset2, skidding = _ref[0], distance = _ref[1];
  skidding = skidding || 0;
  distance = (distance || 0) * invertDistance;
  return [left, right].indexOf(basePlacement) >= 0 ? {
    x: distance,
    y: skidding
  } : {
    x: skidding,
    y: distance
  };
}
function offset(_ref2) {
  var state = _ref2.state, options = _ref2.options, name = _ref2.name;
  var _options$offset = options.offset, offset2 = _options$offset === void 0 ? [0, 0] : _options$offset;
  var data = placements.reduce(function(acc, placement) {
    acc[placement] = distanceAndSkiddingToXY(placement, state.rects, offset2);
    return acc;
  }, {});
  var _data$state$placement = data[state.placement], x = _data$state$placement.x, y = _data$state$placement.y;
  if (state.modifiersData.popperOffsets != null) {
    state.modifiersData.popperOffsets.x += x;
    state.modifiersData.popperOffsets.y += y;
  }
  state.modifiersData[name] = data;
}
var offset_default;
var init_offset = __esm({
  "../../node_modules/@popperjs/core/lib/modifiers/offset.js"() {
    init_getBasePlacement();
    init_enums();
    offset_default = {
      name: "offset",
      enabled: true,
      phase: "main",
      requires: ["popperOffsets"],
      fn: offset
    };
  }
});

// ../../node_modules/@popperjs/core/lib/modifiers/popperOffsets.js
function popperOffsets(_ref) {
  var state = _ref.state, name = _ref.name;
  state.modifiersData[name] = computeOffsets({
    reference: state.rects.reference,
    element: state.rects.popper,
    strategy: "absolute",
    placement: state.placement
  });
}
var popperOffsets_default;
var init_popperOffsets = __esm({
  "../../node_modules/@popperjs/core/lib/modifiers/popperOffsets.js"() {
    init_computeOffsets();
    popperOffsets_default = {
      name: "popperOffsets",
      enabled: true,
      phase: "read",
      fn: popperOffsets,
      data: {}
    };
  }
});

// ../../node_modules/@popperjs/core/lib/utils/getAltAxis.js
function getAltAxis(axis) {
  return axis === "x" ? "y" : "x";
}
var init_getAltAxis = __esm({
  "../../node_modules/@popperjs/core/lib/utils/getAltAxis.js"() {
  }
});

// ../../node_modules/@popperjs/core/lib/modifiers/preventOverflow.js
function preventOverflow(_ref) {
  var state = _ref.state, options = _ref.options, name = _ref.name;
  var _options$mainAxis = options.mainAxis, checkMainAxis = _options$mainAxis === void 0 ? true : _options$mainAxis, _options$altAxis = options.altAxis, checkAltAxis = _options$altAxis === void 0 ? false : _options$altAxis, boundary = options.boundary, rootBoundary = options.rootBoundary, altBoundary = options.altBoundary, padding = options.padding, _options$tether = options.tether, tether = _options$tether === void 0 ? true : _options$tether, _options$tetherOffset = options.tetherOffset, tetherOffset = _options$tetherOffset === void 0 ? 0 : _options$tetherOffset;
  var overflow = detectOverflow(state, {
    boundary,
    rootBoundary,
    padding,
    altBoundary
  });
  var basePlacement = getBasePlacement(state.placement);
  var variation = getVariation(state.placement);
  var isBasePlacement = !variation;
  var mainAxis = getMainAxisFromPlacement(basePlacement);
  var altAxis = getAltAxis(mainAxis);
  var popperOffsets2 = state.modifiersData.popperOffsets;
  var referenceRect = state.rects.reference;
  var popperRect = state.rects.popper;
  var tetherOffsetValue = typeof tetherOffset === "function" ? tetherOffset(Object.assign({}, state.rects, {
    placement: state.placement
  })) : tetherOffset;
  var normalizedTetherOffsetValue = typeof tetherOffsetValue === "number" ? {
    mainAxis: tetherOffsetValue,
    altAxis: tetherOffsetValue
  } : Object.assign({
    mainAxis: 0,
    altAxis: 0
  }, tetherOffsetValue);
  var offsetModifierState = state.modifiersData.offset ? state.modifiersData.offset[state.placement] : null;
  var data = {
    x: 0,
    y: 0
  };
  if (!popperOffsets2) {
    return;
  }
  if (checkMainAxis) {
    var _offsetModifierState$;
    var mainSide = mainAxis === "y" ? top : left;
    var altSide = mainAxis === "y" ? bottom : right;
    var len = mainAxis === "y" ? "height" : "width";
    var offset2 = popperOffsets2[mainAxis];
    var min2 = offset2 + overflow[mainSide];
    var max2 = offset2 - overflow[altSide];
    var additive = tether ? -popperRect[len] / 2 : 0;
    var minLen = variation === start ? referenceRect[len] : popperRect[len];
    var maxLen = variation === start ? -popperRect[len] : -referenceRect[len];
    var arrowElement = state.elements.arrow;
    var arrowRect = tether && arrowElement ? getLayoutRect(arrowElement) : {
      width: 0,
      height: 0
    };
    var arrowPaddingObject = state.modifiersData["arrow#persistent"] ? state.modifiersData["arrow#persistent"].padding : getFreshSideObject();
    var arrowPaddingMin = arrowPaddingObject[mainSide];
    var arrowPaddingMax = arrowPaddingObject[altSide];
    var arrowLen = within(0, referenceRect[len], arrowRect[len]);
    var minOffset = isBasePlacement ? referenceRect[len] / 2 - additive - arrowLen - arrowPaddingMin - normalizedTetherOffsetValue.mainAxis : minLen - arrowLen - arrowPaddingMin - normalizedTetherOffsetValue.mainAxis;
    var maxOffset = isBasePlacement ? -referenceRect[len] / 2 + additive + arrowLen + arrowPaddingMax + normalizedTetherOffsetValue.mainAxis : maxLen + arrowLen + arrowPaddingMax + normalizedTetherOffsetValue.mainAxis;
    var arrowOffsetParent = state.elements.arrow && getOffsetParent(state.elements.arrow);
    var clientOffset = arrowOffsetParent ? mainAxis === "y" ? arrowOffsetParent.clientTop || 0 : arrowOffsetParent.clientLeft || 0 : 0;
    var offsetModifierValue = (_offsetModifierState$ = offsetModifierState == null ? void 0 : offsetModifierState[mainAxis]) != null ? _offsetModifierState$ : 0;
    var tetherMin = offset2 + minOffset - offsetModifierValue - clientOffset;
    var tetherMax = offset2 + maxOffset - offsetModifierValue;
    var preventedOffset = within(tether ? min(min2, tetherMin) : min2, offset2, tether ? max(max2, tetherMax) : max2);
    popperOffsets2[mainAxis] = preventedOffset;
    data[mainAxis] = preventedOffset - offset2;
  }
  if (checkAltAxis) {
    var _offsetModifierState$2;
    var _mainSide = mainAxis === "x" ? top : left;
    var _altSide = mainAxis === "x" ? bottom : right;
    var _offset = popperOffsets2[altAxis];
    var _len = altAxis === "y" ? "height" : "width";
    var _min = _offset + overflow[_mainSide];
    var _max = _offset - overflow[_altSide];
    var isOriginSide = [top, left].indexOf(basePlacement) !== -1;
    var _offsetModifierValue = (_offsetModifierState$2 = offsetModifierState == null ? void 0 : offsetModifierState[altAxis]) != null ? _offsetModifierState$2 : 0;
    var _tetherMin = isOriginSide ? _min : _offset - referenceRect[_len] - popperRect[_len] - _offsetModifierValue + normalizedTetherOffsetValue.altAxis;
    var _tetherMax = isOriginSide ? _offset + referenceRect[_len] + popperRect[_len] - _offsetModifierValue - normalizedTetherOffsetValue.altAxis : _max;
    var _preventedOffset = tether && isOriginSide ? withinMaxClamp(_tetherMin, _offset, _tetherMax) : within(tether ? _tetherMin : _min, _offset, tether ? _tetherMax : _max);
    popperOffsets2[altAxis] = _preventedOffset;
    data[altAxis] = _preventedOffset - _offset;
  }
  state.modifiersData[name] = data;
}
var preventOverflow_default;
var init_preventOverflow = __esm({
  "../../node_modules/@popperjs/core/lib/modifiers/preventOverflow.js"() {
    init_enums();
    init_getBasePlacement();
    init_getMainAxisFromPlacement();
    init_getAltAxis();
    init_within();
    init_getLayoutRect();
    init_getOffsetParent();
    init_detectOverflow();
    init_getVariation();
    init_getFreshSideObject();
    init_math();
    preventOverflow_default = {
      name: "preventOverflow",
      enabled: true,
      phase: "main",
      fn: preventOverflow,
      requiresIfExists: ["offset"]
    };
  }
});

// ../../node_modules/@popperjs/core/lib/modifiers/index.js
var init_modifiers = __esm({
  "../../node_modules/@popperjs/core/lib/modifiers/index.js"() {
  }
});

// ../../node_modules/@popperjs/core/lib/dom-utils/getHTMLElementScroll.js
function getHTMLElementScroll(element) {
  return {
    scrollLeft: element.scrollLeft,
    scrollTop: element.scrollTop
  };
}
var init_getHTMLElementScroll = __esm({
  "../../node_modules/@popperjs/core/lib/dom-utils/getHTMLElementScroll.js"() {
  }
});

// ../../node_modules/@popperjs/core/lib/dom-utils/getNodeScroll.js
function getNodeScroll(node) {
  if (node === getWindow(node) || !isHTMLElement(node)) {
    return getWindowScroll(node);
  } else {
    return getHTMLElementScroll(node);
  }
}
var init_getNodeScroll = __esm({
  "../../node_modules/@popperjs/core/lib/dom-utils/getNodeScroll.js"() {
    init_getWindowScroll();
    init_getWindow();
    init_instanceOf();
    init_getHTMLElementScroll();
  }
});

// ../../node_modules/@popperjs/core/lib/dom-utils/getCompositeRect.js
function isElementScaled(element) {
  var rect = element.getBoundingClientRect();
  var scaleX = round(rect.width) / element.offsetWidth || 1;
  var scaleY = round(rect.height) / element.offsetHeight || 1;
  return scaleX !== 1 || scaleY !== 1;
}
function getCompositeRect(elementOrVirtualElement, offsetParent, isFixed) {
  if (isFixed === void 0) {
    isFixed = false;
  }
  var isOffsetParentAnElement = isHTMLElement(offsetParent);
  var offsetParentIsScaled = isHTMLElement(offsetParent) && isElementScaled(offsetParent);
  var documentElement = getDocumentElement(offsetParent);
  var rect = getBoundingClientRect(elementOrVirtualElement, offsetParentIsScaled, isFixed);
  var scroll = {
    scrollLeft: 0,
    scrollTop: 0
  };
  var offsets = {
    x: 0,
    y: 0
  };
  if (isOffsetParentAnElement || !isOffsetParentAnElement && !isFixed) {
    if (getNodeName(offsetParent) !== "body" || isScrollParent(documentElement)) {
      scroll = getNodeScroll(offsetParent);
    }
    if (isHTMLElement(offsetParent)) {
      offsets = getBoundingClientRect(offsetParent, true);
      offsets.x += offsetParent.clientLeft;
      offsets.y += offsetParent.clientTop;
    } else if (documentElement) {
      offsets.x = getWindowScrollBarX(documentElement);
    }
  }
  return {
    x: rect.left + scroll.scrollLeft - offsets.x,
    y: rect.top + scroll.scrollTop - offsets.y,
    width: rect.width,
    height: rect.height
  };
}
var init_getCompositeRect = __esm({
  "../../node_modules/@popperjs/core/lib/dom-utils/getCompositeRect.js"() {
    init_getBoundingClientRect();
    init_getNodeScroll();
    init_getNodeName();
    init_instanceOf();
    init_getWindowScrollBarX();
    init_getDocumentElement();
    init_isScrollParent();
    init_math();
  }
});

// ../../node_modules/@popperjs/core/lib/utils/orderModifiers.js
function order(modifiers) {
  var map = /* @__PURE__ */ new Map();
  var visited = /* @__PURE__ */ new Set();
  var result = [];
  modifiers.forEach(function(modifier) {
    map.set(modifier.name, modifier);
  });
  function sort(modifier) {
    visited.add(modifier.name);
    var requires = [].concat(modifier.requires || [], modifier.requiresIfExists || []);
    requires.forEach(function(dep) {
      if (!visited.has(dep)) {
        var depModifier = map.get(dep);
        if (depModifier) {
          sort(depModifier);
        }
      }
    });
    result.push(modifier);
  }
  modifiers.forEach(function(modifier) {
    if (!visited.has(modifier.name)) {
      sort(modifier);
    }
  });
  return result;
}
function orderModifiers(modifiers) {
  var orderedModifiers = order(modifiers);
  return modifierPhases.reduce(function(acc, phase) {
    return acc.concat(orderedModifiers.filter(function(modifier) {
      return modifier.phase === phase;
    }));
  }, []);
}
var init_orderModifiers = __esm({
  "../../node_modules/@popperjs/core/lib/utils/orderModifiers.js"() {
    init_enums();
  }
});

// ../../node_modules/@popperjs/core/lib/utils/debounce.js
function debounce(fn2) {
  var pending;
  return function() {
    if (!pending) {
      pending = new Promise(function(resolve) {
        Promise.resolve().then(function() {
          pending = void 0;
          resolve(fn2());
        });
      });
    }
    return pending;
  };
}
var init_debounce = __esm({
  "../../node_modules/@popperjs/core/lib/utils/debounce.js"() {
  }
});

// ../../node_modules/@popperjs/core/lib/utils/format.js
function format2(str) {
  for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
    args[_key - 1] = arguments[_key];
  }
  return [].concat(args).reduce(function(p, c) {
    return p.replace(/%s/, c);
  }, str);
}
var init_format = __esm({
  "../../node_modules/@popperjs/core/lib/utils/format.js"() {
  }
});

// ../../node_modules/@popperjs/core/lib/utils/validateModifiers.js
function validateModifiers(modifiers) {
  modifiers.forEach(function(modifier) {
    [].concat(Object.keys(modifier), VALID_PROPERTIES).filter(function(value, index3, self2) {
      return self2.indexOf(value) === index3;
    }).forEach(function(key) {
      switch (key) {
        case "name":
          if (typeof modifier.name !== "string") {
            console.error(format2(INVALID_MODIFIER_ERROR, String(modifier.name), '"name"', '"string"', '"' + String(modifier.name) + '"'));
          }
          break;
        case "enabled":
          if (typeof modifier.enabled !== "boolean") {
            console.error(format2(INVALID_MODIFIER_ERROR, modifier.name, '"enabled"', '"boolean"', '"' + String(modifier.enabled) + '"'));
          }
          break;
        case "phase":
          if (modifierPhases.indexOf(modifier.phase) < 0) {
            console.error(format2(INVALID_MODIFIER_ERROR, modifier.name, '"phase"', "either " + modifierPhases.join(", "), '"' + String(modifier.phase) + '"'));
          }
          break;
        case "fn":
          if (typeof modifier.fn !== "function") {
            console.error(format2(INVALID_MODIFIER_ERROR, modifier.name, '"fn"', '"function"', '"' + String(modifier.fn) + '"'));
          }
          break;
        case "effect":
          if (modifier.effect != null && typeof modifier.effect !== "function") {
            console.error(format2(INVALID_MODIFIER_ERROR, modifier.name, '"effect"', '"function"', '"' + String(modifier.fn) + '"'));
          }
          break;
        case "requires":
          if (modifier.requires != null && !Array.isArray(modifier.requires)) {
            console.error(format2(INVALID_MODIFIER_ERROR, modifier.name, '"requires"', '"array"', '"' + String(modifier.requires) + '"'));
          }
          break;
        case "requiresIfExists":
          if (!Array.isArray(modifier.requiresIfExists)) {
            console.error(format2(INVALID_MODIFIER_ERROR, modifier.name, '"requiresIfExists"', '"array"', '"' + String(modifier.requiresIfExists) + '"'));
          }
          break;
        case "options":
        case "data":
          break;
        default:
          console.error('PopperJS: an invalid property has been provided to the "' + modifier.name + '" modifier, valid properties are ' + VALID_PROPERTIES.map(function(s) {
            return '"' + s + '"';
          }).join(", ") + '; but "' + key + '" was provided.');
      }
      modifier.requires && modifier.requires.forEach(function(requirement) {
        if (modifiers.find(function(mod) {
          return mod.name === requirement;
        }) == null) {
          console.error(format2(MISSING_DEPENDENCY_ERROR, String(modifier.name), requirement, requirement));
        }
      });
    });
  });
}
var INVALID_MODIFIER_ERROR, MISSING_DEPENDENCY_ERROR, VALID_PROPERTIES;
var init_validateModifiers = __esm({
  "../../node_modules/@popperjs/core/lib/utils/validateModifiers.js"() {
    init_format();
    init_enums();
    INVALID_MODIFIER_ERROR = 'Popper: modifier "%s" provided an invalid %s property, expected %s but got %s';
    MISSING_DEPENDENCY_ERROR = 'Popper: modifier "%s" requires "%s", but "%s" modifier is not available';
    VALID_PROPERTIES = ["name", "enabled", "phase", "fn", "effect", "requires", "options"];
  }
});

// ../../node_modules/@popperjs/core/lib/utils/uniqueBy.js
function uniqueBy(arr, fn2) {
  var identifiers = /* @__PURE__ */ new Set();
  return arr.filter(function(item) {
    var identifier = fn2(item);
    if (!identifiers.has(identifier)) {
      identifiers.add(identifier);
      return true;
    }
  });
}
var init_uniqueBy = __esm({
  "../../node_modules/@popperjs/core/lib/utils/uniqueBy.js"() {
  }
});

// ../../node_modules/@popperjs/core/lib/utils/mergeByName.js
function mergeByName(modifiers) {
  var merged = modifiers.reduce(function(merged2, current) {
    var existing = merged2[current.name];
    merged2[current.name] = existing ? Object.assign({}, existing, current, {
      options: Object.assign({}, existing.options, current.options),
      data: Object.assign({}, existing.data, current.data)
    }) : current;
    return merged2;
  }, {});
  return Object.keys(merged).map(function(key) {
    return merged[key];
  });
}
var init_mergeByName = __esm({
  "../../node_modules/@popperjs/core/lib/utils/mergeByName.js"() {
  }
});

// ../../node_modules/@popperjs/core/lib/createPopper.js
function areValidElements() {
  for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
    args[_key] = arguments[_key];
  }
  return !args.some(function(element) {
    return !(element && typeof element.getBoundingClientRect === "function");
  });
}
function popperGenerator(generatorOptions) {
  if (generatorOptions === void 0) {
    generatorOptions = {};
  }
  var _generatorOptions = generatorOptions, _generatorOptions$def = _generatorOptions.defaultModifiers, defaultModifiers2 = _generatorOptions$def === void 0 ? [] : _generatorOptions$def, _generatorOptions$def2 = _generatorOptions.defaultOptions, defaultOptions = _generatorOptions$def2 === void 0 ? DEFAULT_OPTIONS : _generatorOptions$def2;
  return function createPopper2(reference2, popper2, options) {
    if (options === void 0) {
      options = defaultOptions;
    }
    var state = {
      placement: "bottom",
      orderedModifiers: [],
      options: Object.assign({}, DEFAULT_OPTIONS, defaultOptions),
      modifiersData: {},
      elements: {
        reference: reference2,
        popper: popper2
      },
      attributes: {},
      styles: {}
    };
    var effectCleanupFns = [];
    var isDestroyed = false;
    var instance = {
      state,
      setOptions: function setOptions(setOptionsAction) {
        var options2 = typeof setOptionsAction === "function" ? setOptionsAction(state.options) : setOptionsAction;
        cleanupModifierEffects();
        state.options = Object.assign({}, defaultOptions, state.options, options2);
        state.scrollParents = {
          reference: isElement(reference2) ? listScrollParents(reference2) : reference2.contextElement ? listScrollParents(reference2.contextElement) : [],
          popper: listScrollParents(popper2)
        };
        var orderedModifiers = orderModifiers(mergeByName([].concat(defaultModifiers2, state.options.modifiers)));
        state.orderedModifiers = orderedModifiers.filter(function(m) {
          return m.enabled;
        });
        if (process.env.NODE_ENV !== "production") {
          var modifiers = uniqueBy([].concat(orderedModifiers, state.options.modifiers), function(_ref) {
            var name = _ref.name;
            return name;
          });
          validateModifiers(modifiers);
          if (getBasePlacement(state.options.placement) === auto) {
            var flipModifier = state.orderedModifiers.find(function(_ref2) {
              var name = _ref2.name;
              return name === "flip";
            });
            if (!flipModifier) {
              console.error(['Popper: "auto" placements require the "flip" modifier be', "present and enabled to work."].join(" "));
            }
          }
          var _getComputedStyle = getComputedStyle2(popper2), marginTop = _getComputedStyle.marginTop, marginRight = _getComputedStyle.marginRight, marginBottom = _getComputedStyle.marginBottom, marginLeft = _getComputedStyle.marginLeft;
          if ([marginTop, marginRight, marginBottom, marginLeft].some(function(margin) {
            return parseFloat(margin);
          })) {
            console.warn(['Popper: CSS "margin" styles cannot be used to apply padding', "between the popper and its reference element or boundary.", "To replicate margin, use the `offset` modifier, as well as", "the `padding` option in the `preventOverflow` and `flip`", "modifiers."].join(" "));
          }
        }
        runModifierEffects();
        return instance.update();
      },
      forceUpdate: function forceUpdate() {
        if (isDestroyed) {
          return;
        }
        var _state$elements = state.elements, reference3 = _state$elements.reference, popper3 = _state$elements.popper;
        if (!areValidElements(reference3, popper3)) {
          if (process.env.NODE_ENV !== "production") {
            console.error(INVALID_ELEMENT_ERROR);
          }
          return;
        }
        state.rects = {
          reference: getCompositeRect(reference3, getOffsetParent(popper3), state.options.strategy === "fixed"),
          popper: getLayoutRect(popper3)
        };
        state.reset = false;
        state.placement = state.options.placement;
        state.orderedModifiers.forEach(function(modifier) {
          return state.modifiersData[modifier.name] = Object.assign({}, modifier.data);
        });
        var __debug_loops__ = 0;
        for (var index3 = 0; index3 < state.orderedModifiers.length; index3++) {
          if (process.env.NODE_ENV !== "production") {
            __debug_loops__ += 1;
            if (__debug_loops__ > 100) {
              console.error(INFINITE_LOOP_ERROR);
              break;
            }
          }
          if (state.reset === true) {
            state.reset = false;
            index3 = -1;
            continue;
          }
          var _state$orderedModifie = state.orderedModifiers[index3], fn2 = _state$orderedModifie.fn, _state$orderedModifie2 = _state$orderedModifie.options, _options = _state$orderedModifie2 === void 0 ? {} : _state$orderedModifie2, name = _state$orderedModifie.name;
          if (typeof fn2 === "function") {
            state = fn2({
              state,
              options: _options,
              name,
              instance
            }) || state;
          }
        }
      },
      update: debounce(function() {
        return new Promise(function(resolve) {
          instance.forceUpdate();
          resolve(state);
        });
      }),
      destroy: function destroy() {
        cleanupModifierEffects();
        isDestroyed = true;
      }
    };
    if (!areValidElements(reference2, popper2)) {
      if (process.env.NODE_ENV !== "production") {
        console.error(INVALID_ELEMENT_ERROR);
      }
      return instance;
    }
    instance.setOptions(options).then(function(state2) {
      if (!isDestroyed && options.onFirstUpdate) {
        options.onFirstUpdate(state2);
      }
    });
    function runModifierEffects() {
      state.orderedModifiers.forEach(function(_ref3) {
        var name = _ref3.name, _ref3$options = _ref3.options, options2 = _ref3$options === void 0 ? {} : _ref3$options, effect4 = _ref3.effect;
        if (typeof effect4 === "function") {
          var cleanupFn = effect4({
            state,
            name,
            instance,
            options: options2
          });
          var noopFn = function noopFn2() {
          };
          effectCleanupFns.push(cleanupFn || noopFn);
        }
      });
    }
    function cleanupModifierEffects() {
      effectCleanupFns.forEach(function(fn2) {
        return fn2();
      });
      effectCleanupFns = [];
    }
    return instance;
  };
}
var INVALID_ELEMENT_ERROR, INFINITE_LOOP_ERROR, DEFAULT_OPTIONS;
var init_createPopper = __esm({
  "../../node_modules/@popperjs/core/lib/createPopper.js"() {
    init_getCompositeRect();
    init_getLayoutRect();
    init_listScrollParents();
    init_getOffsetParent();
    init_getComputedStyle();
    init_orderModifiers();
    init_debounce();
    init_validateModifiers();
    init_uniqueBy();
    init_getBasePlacement();
    init_mergeByName();
    init_instanceOf();
    init_enums();
    INVALID_ELEMENT_ERROR = "Popper: Invalid reference or popper argument provided. They must be either a DOM element or virtual element.";
    INFINITE_LOOP_ERROR = "Popper: An infinite loop in the modifiers cycle has been detected! The cycle has been interrupted to prevent a browser crash.";
    DEFAULT_OPTIONS = {
      placement: "bottom",
      modifiers: [],
      strategy: "absolute"
    };
  }
});

// ../../node_modules/@popperjs/core/lib/popper.js
var defaultModifiers, createPopper;
var init_popper = __esm({
  "../../node_modules/@popperjs/core/lib/popper.js"() {
    init_createPopper();
    init_eventListeners();
    init_popperOffsets();
    init_computeStyles();
    init_applyStyles();
    init_offset();
    init_flip();
    init_preventOverflow();
    init_arrow();
    init_hide();
    init_modifiers();
    defaultModifiers = [eventListeners_default, popperOffsets_default, computeStyles_default, applyStyles_default, offset_default, flip_default, preventOverflow_default, arrow_default, hide_default];
    createPopper = /* @__PURE__ */ popperGenerator({
      defaultModifiers
    });
  }
});

// ../../node_modules/@popperjs/core/lib/index.js
var init_lib = __esm({
  "../../node_modules/@popperjs/core/lib/index.js"() {
    init_enums();
    init_modifiers();
    init_popper();
  }
});

// ../../node_modules/react-fast-compare/index.js
var require_react_fast_compare = __commonJS({
  "../../node_modules/react-fast-compare/index.js"(exports, module2) {
    var hasElementType = typeof Element !== "undefined";
    var hasMap = typeof Map === "function";
    var hasSet = typeof Set === "function";
    var hasArrayBuffer = typeof ArrayBuffer === "function" && !!ArrayBuffer.isView;
    function equal(a, b) {
      if (a === b)
        return true;
      if (a && b && typeof a == "object" && typeof b == "object") {
        if (a.constructor !== b.constructor)
          return false;
        var length2, i, keys;
        if (Array.isArray(a)) {
          length2 = a.length;
          if (length2 != b.length)
            return false;
          for (i = length2; i-- !== 0; )
            if (!equal(a[i], b[i]))
              return false;
          return true;
        }
        var it;
        if (hasMap && a instanceof Map && b instanceof Map) {
          if (a.size !== b.size)
            return false;
          it = a.entries();
          while (!(i = it.next()).done)
            if (!b.has(i.value[0]))
              return false;
          it = a.entries();
          while (!(i = it.next()).done)
            if (!equal(i.value[1], b.get(i.value[0])))
              return false;
          return true;
        }
        if (hasSet && a instanceof Set && b instanceof Set) {
          if (a.size !== b.size)
            return false;
          it = a.entries();
          while (!(i = it.next()).done)
            if (!b.has(i.value[0]))
              return false;
          return true;
        }
        if (hasArrayBuffer && ArrayBuffer.isView(a) && ArrayBuffer.isView(b)) {
          length2 = a.length;
          if (length2 != b.length)
            return false;
          for (i = length2; i-- !== 0; )
            if (a[i] !== b[i])
              return false;
          return true;
        }
        if (a.constructor === RegExp)
          return a.source === b.source && a.flags === b.flags;
        if (a.valueOf !== Object.prototype.valueOf)
          return a.valueOf() === b.valueOf();
        if (a.toString !== Object.prototype.toString)
          return a.toString() === b.toString();
        keys = Object.keys(a);
        length2 = keys.length;
        if (length2 !== Object.keys(b).length)
          return false;
        for (i = length2; i-- !== 0; )
          if (!Object.prototype.hasOwnProperty.call(b, keys[i]))
            return false;
        if (hasElementType && a instanceof Element)
          return false;
        for (i = length2; i-- !== 0; ) {
          if ((keys[i] === "_owner" || keys[i] === "__v" || keys[i] === "__o") && a.$$typeof) {
            continue;
          }
          if (!equal(a[keys[i]], b[keys[i]]))
            return false;
        }
        return true;
      }
      return a !== a && b !== b;
    }
    module2.exports = function isEqual2(a, b) {
      try {
        return equal(a, b);
      } catch (error) {
        if ((error.message || "").match(/stack|recursion/i)) {
          console.warn("react-fast-compare cannot handle circular refs");
          return false;
        }
        throw error;
      }
    };
  }
});

// ../../node_modules/react-popper/lib/esm/usePopper.js
var React25, ReactDOM, import_react_fast_compare, EMPTY_MODIFIERS, usePopper;
var init_usePopper = __esm({
  "../../node_modules/react-popper/lib/esm/usePopper.js"() {
    React25 = __toESM(require("react"));
    ReactDOM = __toESM(require("react-dom"));
    init_lib();
    import_react_fast_compare = __toESM(require_react_fast_compare());
    init_utils();
    EMPTY_MODIFIERS = [];
    usePopper = function usePopper2(referenceElement, popperElement, options) {
      if (options === void 0) {
        options = {};
      }
      var prevOptions = React25.useRef(null);
      var optionsWithDefaults = {
        onFirstUpdate: options.onFirstUpdate,
        placement: options.placement || "bottom",
        strategy: options.strategy || "absolute",
        modifiers: options.modifiers || EMPTY_MODIFIERS
      };
      var _React$useState = React25.useState({
        styles: {
          popper: {
            position: optionsWithDefaults.strategy,
            left: "0",
            top: "0"
          },
          arrow: {
            position: "absolute"
          }
        },
        attributes: {}
      }), state = _React$useState[0], setState = _React$useState[1];
      var updateStateModifier = React25.useMemo(function() {
        return {
          name: "updateState",
          enabled: true,
          phase: "write",
          fn: function fn2(_ref) {
            var state2 = _ref.state;
            var elements = Object.keys(state2.elements);
            ReactDOM.flushSync(function() {
              setState({
                styles: fromEntries(elements.map(function(element) {
                  return [element, state2.styles[element] || {}];
                })),
                attributes: fromEntries(elements.map(function(element) {
                  return [element, state2.attributes[element]];
                }))
              });
            });
          },
          requires: ["computeStyles"]
        };
      }, []);
      var popperOptions = React25.useMemo(function() {
        var newOptions = {
          onFirstUpdate: optionsWithDefaults.onFirstUpdate,
          placement: optionsWithDefaults.placement,
          strategy: optionsWithDefaults.strategy,
          modifiers: [].concat(optionsWithDefaults.modifiers, [updateStateModifier, {
            name: "applyStyles",
            enabled: false
          }])
        };
        if ((0, import_react_fast_compare.default)(prevOptions.current, newOptions)) {
          return prevOptions.current || newOptions;
        } else {
          prevOptions.current = newOptions;
          return newOptions;
        }
      }, [optionsWithDefaults.onFirstUpdate, optionsWithDefaults.placement, optionsWithDefaults.strategy, optionsWithDefaults.modifiers, updateStateModifier]);
      var popperInstanceRef = React25.useRef();
      useIsomorphicLayoutEffect(function() {
        if (popperInstanceRef.current) {
          popperInstanceRef.current.setOptions(popperOptions);
        }
      }, [popperOptions]);
      useIsomorphicLayoutEffect(function() {
        if (referenceElement == null || popperElement == null) {
          return;
        }
        var createPopper2 = options.createPopper || createPopper;
        var popperInstance = createPopper2(referenceElement, popperElement, popperOptions);
        popperInstanceRef.current = popperInstance;
        return function() {
          popperInstance.destroy();
          popperInstanceRef.current = null;
        };
      }, [referenceElement, popperElement, options.createPopper]);
      return {
        state: popperInstanceRef.current ? popperInstanceRef.current.state : null,
        styles: state.styles,
        attributes: state.attributes,
        update: popperInstanceRef.current ? popperInstanceRef.current.update : null,
        forceUpdate: popperInstanceRef.current ? popperInstanceRef.current.forceUpdate : null
      };
    };
  }
});

// ../../node_modules/react-popper/lib/esm/Popper.js
function Popper(_ref) {
  var _ref$placement = _ref.placement, placement = _ref$placement === void 0 ? "bottom" : _ref$placement, _ref$strategy = _ref.strategy, strategy = _ref$strategy === void 0 ? "absolute" : _ref$strategy, _ref$modifiers = _ref.modifiers, modifiers = _ref$modifiers === void 0 ? EMPTY_MODIFIERS2 : _ref$modifiers, referenceElement = _ref.referenceElement, onFirstUpdate = _ref.onFirstUpdate, innerRef = _ref.innerRef, children = _ref.children;
  var referenceNode = React26.useContext(ManagerReferenceNodeContext);
  var _React$useState = React26.useState(null), popperElement = _React$useState[0], setPopperElement = _React$useState[1];
  var _React$useState2 = React26.useState(null), arrowElement = _React$useState2[0], setArrowElement = _React$useState2[1];
  React26.useEffect(function() {
    setRef(innerRef, popperElement);
  }, [innerRef, popperElement]);
  var options = React26.useMemo(function() {
    return {
      placement,
      strategy,
      onFirstUpdate,
      modifiers: [].concat(modifiers, [{
        name: "arrow",
        enabled: arrowElement != null,
        options: {
          element: arrowElement
        }
      }])
    };
  }, [placement, strategy, onFirstUpdate, modifiers, arrowElement]);
  var _usePopper = usePopper(referenceElement || referenceNode, popperElement, options), state = _usePopper.state, styles2 = _usePopper.styles, forceUpdate = _usePopper.forceUpdate, update = _usePopper.update;
  var childrenProps = React26.useMemo(function() {
    return {
      ref: setPopperElement,
      style: styles2.popper,
      placement: state ? state.placement : placement,
      hasPopperEscaped: state && state.modifiersData.hide ? state.modifiersData.hide.hasPopperEscaped : null,
      isReferenceHidden: state && state.modifiersData.hide ? state.modifiersData.hide.isReferenceHidden : null,
      arrowProps: {
        style: styles2.arrow,
        ref: setArrowElement
      },
      forceUpdate: forceUpdate || NOOP,
      update: update || NOOP_PROMISE
    };
  }, [setPopperElement, setArrowElement, placement, state, styles2, update, forceUpdate]);
  return unwrapArray(children)(childrenProps);
}
var React26, NOOP, NOOP_PROMISE, EMPTY_MODIFIERS2;
var init_Popper = __esm({
  "../../node_modules/react-popper/lib/esm/Popper.js"() {
    React26 = __toESM(require("react"));
    init_Manager();
    init_utils();
    init_usePopper();
    NOOP = function NOOP2() {
      return void 0;
    };
    NOOP_PROMISE = function NOOP_PROMISE2() {
      return Promise.resolve(null);
    };
    EMPTY_MODIFIERS2 = [];
  }
});

// ../../node_modules/warning/warning.js
var require_warning = __commonJS({
  "../../node_modules/warning/warning.js"(exports, module2) {
    "use strict";
    var __DEV__ = process.env.NODE_ENV !== "production";
    var warning2 = function() {
    };
    if (__DEV__) {
      printWarning = function printWarning2(format3, args) {
        var len = arguments.length;
        args = new Array(len > 1 ? len - 1 : 0);
        for (var key = 1; key < len; key++) {
          args[key - 1] = arguments[key];
        }
        var argIndex = 0;
        var message = "Warning: " + format3.replace(/%s/g, function() {
          return args[argIndex++];
        });
        if (typeof console !== "undefined") {
          console.error(message);
        }
        try {
          throw new Error(message);
        } catch (x) {
        }
      };
      warning2 = function(condition, format3, args) {
        var len = arguments.length;
        args = new Array(len > 2 ? len - 2 : 0);
        for (var key = 2; key < len; key++) {
          args[key - 2] = arguments[key];
        }
        if (format3 === void 0) {
          throw new Error(
            "`warning(condition, format, ...args)` requires a warning message argument"
          );
        }
        if (!condition) {
          printWarning.apply(null, [format3].concat(args));
        }
      };
    }
    var printWarning;
    module2.exports = warning2;
  }
});

// ../../node_modules/react-popper/lib/esm/Reference.js
function Reference(_ref) {
  var children = _ref.children, innerRef = _ref.innerRef;
  var setReferenceNode = React27.useContext(ManagerReferenceNodeSetterContext);
  var refHandler = React27.useCallback(function(node) {
    setRef(innerRef, node);
    safeInvoke(setReferenceNode, node);
  }, [innerRef, setReferenceNode]);
  React27.useEffect(function() {
    return function() {
      return setRef(innerRef, null);
    };
  }, []);
  React27.useEffect(function() {
    (0, import_warning.default)(Boolean(setReferenceNode), "`Reference` should not be used outside of a `Manager` component.");
  }, [setReferenceNode]);
  return unwrapArray(children)({
    ref: refHandler
  });
}
var React27, import_warning;
var init_Reference = __esm({
  "../../node_modules/react-popper/lib/esm/Reference.js"() {
    React27 = __toESM(require("react"));
    import_warning = __toESM(require_warning());
    init_Manager();
    init_utils();
  }
});

// ../../node_modules/react-popper/lib/esm/index.js
var init_esm3 = __esm({
  "../../node_modules/react-popper/lib/esm/index.js"() {
    init_Popper();
    init_Manager();
    init_Reference();
  }
});

// ../../node_modules/react-popper-tooltip/dist/esm/react-popper-tooltip.js
var import_react26, import_react_dom, TooltipContext, callAll, noop3, canUseDOM, setRef3, Tooltip, DEFAULT_MUTATION_OBSERVER_CONFIG, TooltipTrigger, react_popper_tooltip_default;
var init_react_popper_tooltip = __esm({
  "../../node_modules/react-popper-tooltip/dist/esm/react-popper-tooltip.js"() {
    init_objectWithoutPropertiesLoose();
    init_extends();
    init_inheritsLoose();
    import_react26 = __toESM(require("react"));
    import_react_dom = require("react-dom");
    init_esm3();
    TooltipContext = /* @__PURE__ */ import_react26.default.createContext({});
    callAll = function callAll2() {
      for (var _len = arguments.length, fns = new Array(_len), _key = 0; _key < _len; _key++) {
        fns[_key] = arguments[_key];
      }
      return function() {
        for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {
          args[_key2] = arguments[_key2];
        }
        return fns.forEach(function(fn2) {
          return fn2 && fn2.apply(void 0, args);
        });
      };
    };
    noop3 = function noop4() {
    };
    canUseDOM = function canUseDOM2() {
      return !!(typeof window !== "undefined" && window.document && window.document.createElement);
    };
    setRef3 = function setRef4(ref, node) {
      if (typeof ref === "function") {
        return ref(node);
      } else if (ref != null) {
        ref.current = node;
      }
    };
    Tooltip = /* @__PURE__ */ function(_Component) {
      _inheritsLoose(Tooltip3, _Component);
      function Tooltip3() {
        var _this;
        for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
          args[_key] = arguments[_key];
        }
        _this = _Component.call.apply(_Component, [this].concat(args)) || this;
        _this.observer = void 0;
        _this.tooltipRef = void 0;
        _this.handleOutsideClick = function(event) {
          if (_this.tooltipRef && !_this.tooltipRef.contains(event.target)) {
            var parentOutsideClickHandler = _this.context.parentOutsideClickHandler;
            var _this$props = _this.props, hideTooltip = _this$props.hideTooltip, clearScheduled = _this$props.clearScheduled;
            clearScheduled();
            hideTooltip();
            if (parentOutsideClickHandler) {
              parentOutsideClickHandler(event);
            }
          }
        };
        _this.handleOutsideRightClick = function(event) {
          if (_this.tooltipRef && !_this.tooltipRef.contains(event.target)) {
            var parentOutsideRightClickHandler = _this.context.parentOutsideRightClickHandler;
            var _this$props2 = _this.props, hideTooltip = _this$props2.hideTooltip, clearScheduled = _this$props2.clearScheduled;
            clearScheduled();
            hideTooltip();
            if (parentOutsideRightClickHandler) {
              parentOutsideRightClickHandler(event);
            }
          }
        };
        _this.addOutsideClickHandler = function() {
          document.body.addEventListener("touchend", _this.handleOutsideClick);
          document.body.addEventListener("click", _this.handleOutsideClick);
        };
        _this.removeOutsideClickHandler = function() {
          document.body.removeEventListener("touchend", _this.handleOutsideClick);
          document.body.removeEventListener("click", _this.handleOutsideClick);
        };
        _this.addOutsideRightClickHandler = function() {
          return document.body.addEventListener("contextmenu", _this.handleOutsideRightClick);
        };
        _this.removeOutsideRightClickHandler = function() {
          return document.body.removeEventListener("contextmenu", _this.handleOutsideRightClick);
        };
        _this.getTooltipRef = function(node) {
          _this.tooltipRef = node;
          setRef3(_this.props.innerRef, node);
        };
        _this.getArrowProps = function(props) {
          if (props === void 0) {
            props = {};
          }
          return _extends({}, props, {
            style: _extends({}, props.style, _this.props.arrowProps.style)
          });
        };
        _this.getTooltipProps = function(props) {
          if (props === void 0) {
            props = {};
          }
          return _extends({}, props, _this.isTriggeredBy("hover") && {
            onMouseEnter: callAll(_this.props.clearScheduled, props.onMouseEnter),
            onMouseLeave: callAll(_this.props.hideTooltip, props.onMouseLeave)
          }, {
            style: _extends({}, props.style, _this.props.style)
          });
        };
        _this.contextValue = {
          isParentNoneTriggered: _this.props.trigger === "none",
          addParentOutsideClickHandler: _this.addOutsideClickHandler,
          addParentOutsideRightClickHandler: _this.addOutsideRightClickHandler,
          parentOutsideClickHandler: _this.handleOutsideClick,
          parentOutsideRightClickHandler: _this.handleOutsideRightClick,
          removeParentOutsideClickHandler: _this.removeOutsideClickHandler,
          removeParentOutsideRightClickHandler: _this.removeOutsideRightClickHandler
        };
        return _this;
      }
      var _proto = Tooltip3.prototype;
      _proto.componentDidMount = function componentDidMount() {
        var _this2 = this;
        var observer = this.observer = new MutationObserver(function() {
          _this2.props.update();
        });
        observer.observe(this.tooltipRef, this.props.mutationObserverOptions);
        if (this.isTriggeredBy("hover") || this.isTriggeredBy("click") || this.isTriggeredBy("right-click")) {
          var _this$context = this.context, removeParentOutsideClickHandler = _this$context.removeParentOutsideClickHandler, removeParentOutsideRightClickHandler = _this$context.removeParentOutsideRightClickHandler;
          this.addOutsideClickHandler();
          this.addOutsideRightClickHandler();
          if (removeParentOutsideClickHandler) {
            removeParentOutsideClickHandler();
          }
          if (removeParentOutsideRightClickHandler) {
            removeParentOutsideRightClickHandler();
          }
        }
      };
      _proto.componentDidUpdate = function componentDidUpdate() {
        if (this.props.closeOnReferenceHidden && this.props.isReferenceHidden) {
          this.props.hideTooltip();
        }
      };
      _proto.componentWillUnmount = function componentWillUnmount() {
        if (this.observer) {
          this.observer.disconnect();
        }
        if (this.isTriggeredBy("hover") || this.isTriggeredBy("click") || this.isTriggeredBy("right-click")) {
          var _this$context2 = this.context, isParentNoneTriggered = _this$context2.isParentNoneTriggered, addParentOutsideClickHandler = _this$context2.addParentOutsideClickHandler, addParentOutsideRightClickHandler = _this$context2.addParentOutsideRightClickHandler;
          this.removeOutsideClickHandler();
          this.removeOutsideRightClickHandler();
          this.handleOutsideClick = void 0;
          this.handleOutsideRightClick = void 0;
          if (!isParentNoneTriggered && addParentOutsideClickHandler) {
            addParentOutsideClickHandler();
          }
          if (!isParentNoneTriggered && addParentOutsideRightClickHandler) {
            addParentOutsideRightClickHandler();
          }
        }
      };
      _proto.render = function render() {
        var _this$props3 = this.props, arrowProps = _this$props3.arrowProps, placement = _this$props3.placement, tooltip = _this$props3.tooltip;
        return /* @__PURE__ */ import_react26.default.createElement(TooltipContext.Provider, {
          value: this.contextValue
        }, tooltip({
          arrowRef: arrowProps.ref,
          getArrowProps: this.getArrowProps,
          getTooltipProps: this.getTooltipProps,
          placement,
          tooltipRef: this.getTooltipRef
        }));
      };
      _proto.isTriggeredBy = function isTriggeredBy(event) {
        var trigger = this.props.trigger;
        return trigger === event || Array.isArray(trigger) && trigger.includes(event);
      };
      return Tooltip3;
    }(import_react26.Component);
    Tooltip.contextType = TooltipContext;
    DEFAULT_MUTATION_OBSERVER_CONFIG = {
      childList: true,
      subtree: true
    };
    TooltipTrigger = /* @__PURE__ */ function(_Component) {
      _inheritsLoose(TooltipTrigger2, _Component);
      function TooltipTrigger2() {
        var _this;
        for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
          args[_key] = arguments[_key];
        }
        _this = _Component.call.apply(_Component, [this].concat(args)) || this;
        _this.state = {
          tooltipShown: _this.props.defaultTooltipShown
        };
        _this.hideTimeout = void 0;
        _this.showTimeout = void 0;
        _this.popperOffset = void 0;
        _this.setTooltipState = function(state) {
          var cb = function cb2() {
            return _this.props.onVisibilityChange(state.tooltipShown);
          };
          _this.isControlled() ? cb() : _this.setState(state, cb);
        };
        _this.clearScheduled = function() {
          clearTimeout(_this.hideTimeout);
          clearTimeout(_this.showTimeout);
        };
        _this.showTooltip = function(_ref) {
          var pageX = _ref.pageX, pageY = _ref.pageY;
          _this.clearScheduled();
          var state = {
            tooltipShown: true
          };
          if (_this.props.followCursor) {
            state = _extends({}, state, {
              pageX,
              pageY
            });
          }
          _this.showTimeout = window.setTimeout(function() {
            return _this.setTooltipState(state);
          }, _this.props.delayShow);
        };
        _this.hideTooltip = function() {
          _this.clearScheduled();
          _this.hideTimeout = window.setTimeout(function() {
            return _this.setTooltipState({
              tooltipShown: false
            });
          }, _this.props.delayHide);
        };
        _this.toggleTooltip = function(_ref2) {
          var pageX = _ref2.pageX, pageY = _ref2.pageY;
          var action = _this.getState() ? "hideTooltip" : "showTooltip";
          _this[action]({
            pageX,
            pageY
          });
        };
        _this.clickToggle = function(event) {
          event.preventDefault();
          var pageX = event.pageX, pageY = event.pageY;
          var action = _this.props.followCursor ? "showTooltip" : "toggleTooltip";
          _this[action]({
            pageX,
            pageY
          });
        };
        _this.contextMenuToggle = function(event) {
          event.preventDefault();
          var pageX = event.pageX, pageY = event.pageY;
          var action = _this.props.followCursor ? "showTooltip" : "toggleTooltip";
          _this[action]({
            pageX,
            pageY
          });
        };
        _this.getTriggerProps = function(props) {
          if (props === void 0) {
            props = {};
          }
          return _extends({}, props, _this.isTriggeredBy("click") && {
            onClick: callAll(_this.clickToggle, props.onClick),
            onTouchEnd: callAll(_this.clickToggle, props.onTouchEnd)
          }, _this.isTriggeredBy("right-click") && {
            onContextMenu: callAll(_this.contextMenuToggle, props.onContextMenu)
          }, _this.isTriggeredBy("hover") && _extends({
            onMouseEnter: callAll(_this.showTooltip, props.onMouseEnter),
            onMouseLeave: callAll(_this.hideTooltip, props.onMouseLeave)
          }, _this.props.followCursor && {
            onMouseMove: callAll(_this.showTooltip, props.onMouseMove)
          }), _this.isTriggeredBy("focus") && {
            onFocus: callAll(_this.showTooltip, props.onFocus),
            onBlur: callAll(_this.hideTooltip, props.onBlur)
          });
        };
        return _this;
      }
      var _proto = TooltipTrigger2.prototype;
      _proto.componentWillUnmount = function componentWillUnmount() {
        this.clearScheduled();
      };
      _proto.render = function render() {
        var _this2 = this;
        var _this$props = this.props, children = _this$props.children, tooltip = _this$props.tooltip, placement = _this$props.placement, trigger = _this$props.trigger, getTriggerRef = _this$props.getTriggerRef, modifiers = _this$props.modifiers, closeOnReferenceHidden = _this$props.closeOnReferenceHidden, usePortal = _this$props.usePortal, portalContainer = _this$props.portalContainer, followCursor = _this$props.followCursor, getTooltipRef = _this$props.getTooltipRef, mutationObserverOptions2 = _this$props.mutationObserverOptions, restProps = _objectWithoutPropertiesLoose(_this$props, ["children", "tooltip", "placement", "trigger", "getTriggerRef", "modifiers", "closeOnReferenceHidden", "usePortal", "portalContainer", "followCursor", "getTooltipRef", "mutationObserverOptions"]);
        var popper2 = /* @__PURE__ */ import_react26.default.createElement(Popper, _extends({
          innerRef: getTooltipRef,
          placement,
          modifiers: [{
            name: "followCursor",
            enabled: followCursor,
            phase: "main",
            fn: function fn2(data) {
              _this2.popperOffset = data.state.rects.popper;
            }
          }].concat(modifiers)
        }, restProps), function(_ref3) {
          var ref = _ref3.ref, style = _ref3.style, placement2 = _ref3.placement, arrowProps = _ref3.arrowProps, isReferenceHidden = _ref3.isReferenceHidden, update = _ref3.update;
          if (followCursor && _this2.popperOffset) {
            var _this2$state = _this2.state, pageX = _this2$state.pageX, pageY = _this2$state.pageY;
            var _this2$popperOffset = _this2.popperOffset, width = _this2$popperOffset.width, height = _this2$popperOffset.height;
            var x = pageX + width > window.pageXOffset + document.body.offsetWidth ? pageX - width : pageX;
            var y = pageY + height > window.pageYOffset + document.body.offsetHeight ? pageY - height : pageY;
            style.transform = "translate3d(" + x + "px, " + y + "px, 0";
          }
          return /* @__PURE__ */ import_react26.default.createElement(Tooltip, _extends({
            arrowProps,
            closeOnReferenceHidden,
            isReferenceHidden,
            placement: placement2,
            update,
            style,
            tooltip,
            trigger,
            mutationObserverOptions: mutationObserverOptions2
          }, {
            clearScheduled: _this2.clearScheduled,
            hideTooltip: _this2.hideTooltip,
            innerRef: ref
          }));
        });
        return /* @__PURE__ */ import_react26.default.createElement(Manager, null, /* @__PURE__ */ import_react26.default.createElement(Reference, {
          innerRef: getTriggerRef
        }, function(_ref4) {
          var ref = _ref4.ref;
          return children({
            getTriggerProps: _this2.getTriggerProps,
            triggerRef: ref
          });
        }), this.getState() && (usePortal ? /* @__PURE__ */ (0, import_react_dom.createPortal)(popper2, portalContainer) : popper2));
      };
      _proto.isControlled = function isControlled() {
        return this.props.tooltipShown !== void 0;
      };
      _proto.getState = function getState() {
        return this.isControlled() ? this.props.tooltipShown : this.state.tooltipShown;
      };
      _proto.isTriggeredBy = function isTriggeredBy(event) {
        var trigger = this.props.trigger;
        return trigger === event || Array.isArray(trigger) && trigger.includes(event);
      };
      return TooltipTrigger2;
    }(import_react26.Component);
    TooltipTrigger.defaultProps = {
      closeOnReferenceHidden: true,
      defaultTooltipShown: false,
      delayHide: 0,
      delayShow: 0,
      followCursor: false,
      onVisibilityChange: noop3,
      placement: "right",
      portalContainer: canUseDOM() ? document.body : null,
      trigger: "hover",
      usePortal: canUseDOM(),
      mutationObserverOptions: DEFAULT_MUTATION_OBSERVER_CONFIG,
      modifiers: []
    };
    react_popper_tooltip_default = TooltipTrigger;
  }
});

// src/tooltip/Tooltip.tsx
var import_react27, import_memoizerific3, import_theming38, match, ArrowSpacing, Arrow, Wrapper3, Tooltip2;
var init_Tooltip = __esm({
  "src/tooltip/Tooltip.tsx"() {
    import_react27 = __toESM(require("react"));
    import_memoizerific3 = __toESM(require("memoizerific"));
    import_theming38 = require("@storybook/theming");
    match = (0, import_memoizerific3.default)(1e3)(
      (requests, actual, value, fallback = 0) => actual.split("-")[0] === requests ? value : fallback
    );
    ArrowSpacing = 8;
    Arrow = import_theming38.styled.div(
      {
        position: "absolute",
        borderStyle: "solid"
      },
      ({ placement }) => {
        let x = 0;
        let y = 0;
        switch (true) {
          case (placement.startsWith("left") || placement.startsWith("right")): {
            y = 8;
            break;
          }
          case (placement.startsWith("top") || placement.startsWith("bottom")): {
            x = 8;
            break;
          }
          default: {
          }
        }
        const transform = `translate3d(${x}px, ${y}px, 0px)`;
        return { transform };
      },
      ({ theme, color, placement }) => ({
        bottom: `${match("top", placement, ArrowSpacing * -1, "auto")}px`,
        top: `${match("bottom", placement, ArrowSpacing * -1, "auto")}px`,
        right: `${match("left", placement, ArrowSpacing * -1, "auto")}px`,
        left: `${match("right", placement, ArrowSpacing * -1, "auto")}px`,
        borderBottomWidth: `${match("top", placement, "0", ArrowSpacing)}px`,
        borderTopWidth: `${match("bottom", placement, "0", ArrowSpacing)}px`,
        borderRightWidth: `${match("left", placement, "0", ArrowSpacing)}px`,
        borderLeftWidth: `${match("right", placement, "0", ArrowSpacing)}px`,
        borderTopColor: match(
          "top",
          placement,
          theme.color[color] || color || theme.base === "light" ? (0, import_theming38.lighten)(theme.background.app) : theme.background.app,
          "transparent"
        ),
        borderBottomColor: match(
          "bottom",
          placement,
          theme.color[color] || color || theme.base === "light" ? (0, import_theming38.lighten)(theme.background.app) : theme.background.app,
          "transparent"
        ),
        borderLeftColor: match(
          "left",
          placement,
          theme.color[color] || color || theme.base === "light" ? (0, import_theming38.lighten)(theme.background.app) : theme.background.app,
          "transparent"
        ),
        borderRightColor: match(
          "right",
          placement,
          theme.color[color] || color || theme.base === "light" ? (0, import_theming38.lighten)(theme.background.app) : theme.background.app,
          "transparent"
        )
      })
    );
    Wrapper3 = import_theming38.styled.div(
      ({ hidden }) => ({
        display: hidden ? "none" : "inline-block",
        zIndex: 2147483647
      }),
      ({ theme, color, hasChrome }) => hasChrome ? {
        background: theme.color[color] || color || theme.base === "light" ? (0, import_theming38.lighten)(theme.background.app) : theme.background.app,
        filter: `
            drop-shadow(0px 5px 5px rgba(0,0,0,0.05))
            drop-shadow(0 1px 3px rgba(0,0,0,0.1))
          `,
        borderRadius: theme.appBorderRadius * 2,
        fontSize: theme.typography.size.s1
      } : {}
    );
    Tooltip2 = ({
      placement,
      hasChrome,
      children,
      arrowProps,
      tooltipRef,
      arrowRef,
      color,
      ...props
    }) => {
      return /* @__PURE__ */ import_react27.default.createElement(Wrapper3, {
        hasChrome,
        placement,
        ref: tooltipRef,
        ...props,
        color
      }, hasChrome && /* @__PURE__ */ import_react27.default.createElement(Arrow, {
        placement,
        ref: arrowRef,
        ...arrowProps,
        color
      }), children);
    };
    Tooltip2.defaultProps = {
      color: void 0,
      arrowRef: void 0,
      tooltipRef: void 0,
      hasChrome: true,
      placement: "top",
      arrowProps: {}
    };
  }
});

// src/tooltip/WithTooltip.tsx
var WithTooltip_exports = {};
__export(WithTooltip_exports, {
  WithToolTipState: () => WithToolTipState,
  WithTooltip: () => WithToolTipState,
  WithTooltipPure: () => WithTooltipPure
});
var import_react28, import_theming39, import_global3, document3, TargetContainer, TargetSvgContainer, WithTooltipPure, WithToolTipState;
var init_WithTooltip = __esm({
  "src/tooltip/WithTooltip.tsx"() {
    import_react28 = __toESM(require("react"));
    import_theming39 = require("@storybook/theming");
    import_global3 = __toESM(require_window());
    init_react_popper_tooltip();
    init_Tooltip();
    ({ document: document3 } = import_global3.default);
    TargetContainer = import_theming39.styled.div`
  display: inline-block;
  cursor: ${(props) => props.mode === "hover" ? "default" : "pointer"};
`;
    TargetSvgContainer = import_theming39.styled.g`
  cursor: ${(props) => props.mode === "hover" ? "default" : "pointer"};
`;
    WithTooltipPure = ({
      svg,
      trigger,
      closeOnClick,
      placement,
      modifiers,
      hasChrome,
      tooltip,
      children,
      tooltipShown,
      onVisibilityChange,
      ...props
    }) => {
      const Container3 = svg ? TargetSvgContainer : TargetContainer;
      return /* @__PURE__ */ import_react28.default.createElement(react_popper_tooltip_default, {
        placement,
        trigger,
        modifiers,
        tooltipShown,
        onVisibilityChange,
        tooltip: ({
          getTooltipProps,
          getArrowProps,
          tooltipRef,
          arrowRef,
          placement: tooltipPlacement
        }) => /* @__PURE__ */ import_react28.default.createElement(Tooltip2, {
          hasChrome,
          placement: tooltipPlacement,
          tooltipRef,
          arrowRef,
          arrowProps: getArrowProps(),
          ...getTooltipProps()
        }, typeof tooltip === "function" ? tooltip({ onHide: () => onVisibilityChange(false) }) : tooltip)
      }, ({ getTriggerProps, triggerRef }) => /* @__PURE__ */ import_react28.default.createElement(Container3, {
        ref: triggerRef,
        ...getTriggerProps(),
        ...props
      }, children));
    };
    WithTooltipPure.defaultProps = {
      svg: false,
      trigger: "hover",
      closeOnClick: false,
      placement: "top",
      modifiers: [
        {
          name: "preventOverflow",
          options: {
            padding: 8
          }
        },
        {
          name: "offset",
          options: {
            offset: [8, 8]
          }
        },
        {
          name: "arrow",
          options: {
            padding: 8
          }
        }
      ],
      hasChrome: true,
      tooltipShown: false
    };
    WithToolTipState = ({ startOpen, onVisibilityChange: onChange, ...rest }) => {
      const [tooltipShown, setTooltipShown] = (0, import_react28.useState)(startOpen || false);
      const onVisibilityChange = (0, import_react28.useCallback)(
        (visibility) => {
          if (onChange && onChange(visibility) === false)
            return;
          setTooltipShown(visibility);
        },
        [onChange]
      );
      (0, import_react28.useEffect)(() => {
        const hide2 = () => onVisibilityChange(false);
        document3.addEventListener("keydown", hide2, false);
        const iframes = Array.from(document3.getElementsByTagName("iframe"));
        const unbinders = [];
        iframes.forEach((iframe) => {
          const bind = () => {
            try {
              if (iframe.contentWindow.document) {
                iframe.contentWindow.document.addEventListener("click", hide2);
                unbinders.push(() => {
                  try {
                    iframe.contentWindow.document.removeEventListener("click", hide2);
                  } catch (e) {
                  }
                });
              }
            } catch (e) {
            }
          };
          bind();
          iframe.addEventListener("load", bind);
          unbinders.push(() => {
            iframe.removeEventListener("load", bind);
          });
        });
        return () => {
          document3.removeEventListener("keydown", hide2);
          unbinders.forEach((unbind) => {
            unbind();
          });
        };
      });
      return /* @__PURE__ */ import_react28.default.createElement(WithTooltipPure, {
        ...rest,
        tooltipShown,
        onVisibilityChange
      });
    };
  }
});

// src/index.ts
var src_exports = {};
__export(src_exports, {
  A: () => A,
  ActionBar: () => ActionBar,
  AddonPanel: () => AddonPanel,
  Badge: () => Badge,
  Bar: () => Bar,
  Blockquote: () => Blockquote,
  Button: () => Button,
  Code: () => Code2,
  DL: () => DL,
  Div: () => Div,
  DocumentWrapper: () => DocumentWrapper,
  FlexBar: () => FlexBar,
  Form: () => Form,
  H1: () => H1,
  H2: () => H2,
  H3: () => H3,
  H4: () => H4,
  H5: () => H5,
  H6: () => H6,
  HR: () => HR,
  IconButton: () => IconButton,
  IconButtonSkeleton: () => IconButtonSkeleton,
  Icons: () => Icons,
  Img: () => Img,
  LI: () => LI,
  Link: () => Link2,
  Loader: () => Loader,
  OL: () => OL,
  P: () => P,
  Placeholder: () => Placeholder,
  Pre: () => Pre2,
  ResetWrapper: () => ResetWrapper,
  ScrollArea: () => ScrollArea,
  Separator: () => Separator,
  Spaced: () => Spaced,
  Span: () => Span,
  StorybookIcon: () => StorybookIcon,
  StorybookLogo: () => StorybookLogo,
  Symbols: () => Symbols,
  SyntaxHighlighter: () => SyntaxHighlighter3,
  TT: () => TT,
  TabBar: () => TabBar,
  TabButton: () => TabButton,
  TabWrapper: () => TabWrapper,
  Table: () => Table,
  Tabs: () => Tabs,
  TabsState: () => TabsState,
  TooltipLinkList: () => TooltipLinkList,
  TooltipMessage: () => TooltipMessage,
  TooltipNote: () => TooltipNote,
  UL: () => UL,
  WithTooltip: () => WithTooltip,
  WithTooltipPure: () => WithTooltipPure2,
  Zoom: () => Zoom,
  codeCommon: () => codeCommon,
  components: () => components2,
  createCopyToClipboardFunction: () => createCopyToClipboardFunction,
  getStoryHref: () => getStoryHref,
  interleaveSeparators: () => interleaveSeparators,
  nameSpaceClassNames: () => nameSpaceClassNames,
  resetComponents: () => resetComponents,
  withReset: () => withReset
});
module.exports = __toCommonJS(src_exports);
var import_react42 = require("react");

// src/typography/components.tsx
var import_react10 = __toESM(require("react"));

// src/typography/DocumentFormatting.tsx
var nameSpaceClassNames = ({ ...props }, key) => {
  const classes = [props.class, props.className];
  delete props.class;
  props.className = ["sbdocs", `sbdocs-${key}`, ...classes].filter(Boolean).join(" ");
  return props;
};

// src/typography/elements/A.tsx
var import_theming = require("@storybook/theming");

// ../../node_modules/polished/dist/polished.esm.js
init_extends();

// ../../node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js
function _assertThisInitialized(self2) {
  if (self2 === void 0) {
    throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
  }
  return self2;
}

// ../../node_modules/polished/dist/polished.esm.js
init_inheritsLoose();

// ../../node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js
function _getPrototypeOf(o) {
  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf2(o2) {
    return o2.__proto__ || Object.getPrototypeOf(o2);
  };
  return _getPrototypeOf(o);
}

// ../../node_modules/@babel/runtime/helpers/esm/wrapNativeSuper.js
init_setPrototypeOf();

// ../../node_modules/@babel/runtime/helpers/esm/isNativeFunction.js
function _isNativeFunction(fn2) {
  return Function.toString.call(fn2).indexOf("[native code]") !== -1;
}

// ../../node_modules/@babel/runtime/helpers/esm/construct.js
init_setPrototypeOf();

// ../../node_modules/@babel/runtime/helpers/esm/isNativeReflectConstruct.js
function _isNativeReflectConstruct() {
  if (typeof Reflect === "undefined" || !Reflect.construct)
    return false;
  if (Reflect.construct.sham)
    return false;
  if (typeof Proxy === "function")
    return true;
  try {
    Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
    }));
    return true;
  } catch (e) {
    return false;
  }
}

// ../../node_modules/@babel/runtime/helpers/esm/construct.js
function _construct(Parent, args, Class) {
  if (_isNativeReflectConstruct()) {
    _construct = Reflect.construct.bind();
  } else {
    _construct = function _construct2(Parent2, args2, Class2) {
      var a = [null];
      a.push.apply(a, args2);
      var Constructor = Function.bind.apply(Parent2, a);
      var instance = new Constructor();
      if (Class2)
        _setPrototypeOf(instance, Class2.prototype);
      return instance;
    };
  }
  return _construct.apply(null, arguments);
}

// ../../node_modules/@babel/runtime/helpers/esm/wrapNativeSuper.js
function _wrapNativeSuper(Class) {
  var _cache = typeof Map === "function" ? /* @__PURE__ */ new Map() : void 0;
  _wrapNativeSuper = function _wrapNativeSuper2(Class2) {
    if (Class2 === null || !_isNativeFunction(Class2))
      return Class2;
    if (typeof Class2 !== "function") {
      throw new TypeError("Super expression must either be null or a function");
    }
    if (typeof _cache !== "undefined") {
      if (_cache.has(Class2))
        return _cache.get(Class2);
      _cache.set(Class2, Wrapper5);
    }
    function Wrapper5() {
      return _construct(Class2, arguments, _getPrototypeOf(this).constructor);
    }
    Wrapper5.prototype = Object.create(Class2.prototype, {
      constructor: {
        value: Wrapper5,
        enumerable: false,
        writable: true,
        configurable: true
      }
    });
    return _setPrototypeOf(Wrapper5, Class2);
  };
  return _wrapNativeSuper(Class);
}

// ../../node_modules/polished/dist/polished.esm.js
var ERRORS = {
  "1": "Passed invalid arguments to hsl, please pass multiple numbers e.g. hsl(360, 0.75, 0.4) or an object e.g. rgb({ hue: 255, saturation: 0.4, lightness: 0.75 }).\n\n",
  "2": "Passed invalid arguments to hsla, please pass multiple numbers e.g. hsla(360, 0.75, 0.4, 0.7) or an object e.g. rgb({ hue: 255, saturation: 0.4, lightness: 0.75, alpha: 0.7 }).\n\n",
  "3": "Passed an incorrect argument to a color function, please pass a string representation of a color.\n\n",
  "4": "Couldn't generate valid rgb string from %s, it returned %s.\n\n",
  "5": "Couldn't parse the color string. Please provide the color as a string in hex, rgb, rgba, hsl or hsla notation.\n\n",
  "6": "Passed invalid arguments to rgb, please pass multiple numbers e.g. rgb(255, 205, 100) or an object e.g. rgb({ red: 255, green: 205, blue: 100 }).\n\n",
  "7": "Passed invalid arguments to rgba, please pass multiple numbers e.g. rgb(255, 205, 100, 0.75) or an object e.g. rgb({ red: 255, green: 205, blue: 100, alpha: 0.75 }).\n\n",
  "8": "Passed invalid argument to toColorString, please pass a RgbColor, RgbaColor, HslColor or HslaColor object.\n\n",
  "9": "Please provide a number of steps to the modularScale helper.\n\n",
  "10": "Please pass a number or one of the predefined scales to the modularScale helper as the ratio.\n\n",
  "11": 'Invalid value passed as base to modularScale, expected number or em string but got "%s"\n\n',
  "12": 'Expected a string ending in "px" or a number passed as the first argument to %s(), got "%s" instead.\n\n',
  "13": 'Expected a string ending in "px" or a number passed as the second argument to %s(), got "%s" instead.\n\n',
  "14": 'Passed invalid pixel value ("%s") to %s(), please pass a value like "12px" or 12.\n\n',
  "15": 'Passed invalid base value ("%s") to %s(), please pass a value like "12px" or 12.\n\n',
  "16": "You must provide a template to this method.\n\n",
  "17": "You passed an unsupported selector state to this method.\n\n",
  "18": "minScreen and maxScreen must be provided as stringified numbers with the same units.\n\n",
  "19": "fromSize and toSize must be provided as stringified numbers with the same units.\n\n",
  "20": "expects either an array of objects or a single object with the properties prop, fromSize, and toSize.\n\n",
  "21": "expects the objects in the first argument array to have the properties `prop`, `fromSize`, and `toSize`.\n\n",
  "22": "expects the first argument object to have the properties `prop`, `fromSize`, and `toSize`.\n\n",
  "23": "fontFace expects a name of a font-family.\n\n",
  "24": "fontFace expects either the path to the font file(s) or a name of a local copy.\n\n",
  "25": "fontFace expects localFonts to be an array.\n\n",
  "26": "fontFace expects fileFormats to be an array.\n\n",
  "27": "radialGradient requries at least 2 color-stops to properly render.\n\n",
  "28": "Please supply a filename to retinaImage() as the first argument.\n\n",
  "29": "Passed invalid argument to triangle, please pass correct pointingDirection e.g. 'right'.\n\n",
  "30": "Passed an invalid value to `height` or `width`. Please provide a pixel based unit.\n\n",
  "31": "The animation shorthand only takes 8 arguments. See the specification for more information: http://mdn.io/animation\n\n",
  "32": "To pass multiple animations please supply them in arrays, e.g. animation(['rotate', '2s'], ['move', '1s'])\nTo pass a single animation please supply them in simple values, e.g. animation('rotate', '2s')\n\n",
  "33": "The animation shorthand arrays can only have 8 elements. See the specification for more information: http://mdn.io/animation\n\n",
  "34": "borderRadius expects a radius value as a string or number as the second argument.\n\n",
  "35": 'borderRadius expects one of "top", "bottom", "left" or "right" as the first argument.\n\n',
  "36": "Property must be a string value.\n\n",
  "37": "Syntax Error at %s.\n\n",
  "38": "Formula contains a function that needs parentheses at %s.\n\n",
  "39": "Formula is missing closing parenthesis at %s.\n\n",
  "40": "Formula has too many closing parentheses at %s.\n\n",
  "41": "All values in a formula must have the same unit or be unitless.\n\n",
  "42": "Please provide a number of steps to the modularScale helper.\n\n",
  "43": "Please pass a number or one of the predefined scales to the modularScale helper as the ratio.\n\n",
  "44": "Invalid value passed as base to modularScale, expected number or em/rem string but got %s.\n\n",
  "45": "Passed invalid argument to hslToColorString, please pass a HslColor or HslaColor object.\n\n",
  "46": "Passed invalid argument to rgbToColorString, please pass a RgbColor or RgbaColor object.\n\n",
  "47": "minScreen and maxScreen must be provided as stringified numbers with the same units.\n\n",
  "48": "fromSize and toSize must be provided as stringified numbers with the same units.\n\n",
  "49": "Expects either an array of objects or a single object with the properties prop, fromSize, and toSize.\n\n",
  "50": "Expects the objects in the first argument array to have the properties prop, fromSize, and toSize.\n\n",
  "51": "Expects the first argument object to have the properties prop, fromSize, and toSize.\n\n",
  "52": "fontFace expects either the path to the font file(s) or a name of a local copy.\n\n",
  "53": "fontFace expects localFonts to be an array.\n\n",
  "54": "fontFace expects fileFormats to be an array.\n\n",
  "55": "fontFace expects a name of a font-family.\n\n",
  "56": "linearGradient requries at least 2 color-stops to properly render.\n\n",
  "57": "radialGradient requries at least 2 color-stops to properly render.\n\n",
  "58": "Please supply a filename to retinaImage() as the first argument.\n\n",
  "59": "Passed invalid argument to triangle, please pass correct pointingDirection e.g. 'right'.\n\n",
  "60": "Passed an invalid value to `height` or `width`. Please provide a pixel based unit.\n\n",
  "61": "Property must be a string value.\n\n",
  "62": "borderRadius expects a radius value as a string or number as the second argument.\n\n",
  "63": 'borderRadius expects one of "top", "bottom", "left" or "right" as the first argument.\n\n',
  "64": "The animation shorthand only takes 8 arguments. See the specification for more information: http://mdn.io/animation.\n\n",
  "65": "To pass multiple animations please supply them in arrays, e.g. animation(['rotate', '2s'], ['move', '1s'])\\nTo pass a single animation please supply them in simple values, e.g. animation('rotate', '2s').\n\n",
  "66": "The animation shorthand arrays can only have 8 elements. See the specification for more information: http://mdn.io/animation.\n\n",
  "67": "You must provide a template to this method.\n\n",
  "68": "You passed an unsupported selector state to this method.\n\n",
  "69": 'Expected a string ending in "px" or a number passed as the first argument to %s(), got %s instead.\n\n',
  "70": 'Expected a string ending in "px" or a number passed as the second argument to %s(), got %s instead.\n\n',
  "71": 'Passed invalid pixel value %s to %s(), please pass a value like "12px" or 12.\n\n',
  "72": 'Passed invalid base value %s to %s(), please pass a value like "12px" or 12.\n\n',
  "73": "Please provide a valid CSS variable.\n\n",
  "74": "CSS variable not found and no default was provided.\n\n",
  "75": "important requires a valid style object, got a %s instead.\n\n",
  "76": "fromSize and toSize must be provided as stringified numbers with the same units as minScreen and maxScreen.\n\n",
  "77": 'remToPx expects a value in "rem" but you provided it in "%s".\n\n',
  "78": 'base must be set in "px" or "%" but you set it in "%s".\n'
};
function format() {
  for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
    args[_key] = arguments[_key];
  }
  var a = args[0];
  var b = [];
  var c;
  for (c = 1; c < args.length; c += 1) {
    b.push(args[c]);
  }
  b.forEach(function(d) {
    a = a.replace(/%[a-z]/, d);
  });
  return a;
}
var PolishedError = /* @__PURE__ */ function(_Error) {
  _inheritsLoose(PolishedError2, _Error);
  function PolishedError2(code) {
    var _this;
    if (process.env.NODE_ENV === "production") {
      _this = _Error.call(this, "An error occurred. See https://github.com/styled-components/polished/blob/main/src/internalHelpers/errors.md#" + code + " for more information.") || this;
    } else {
      for (var _len2 = arguments.length, args = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {
        args[_key2 - 1] = arguments[_key2];
      }
      _this = _Error.call(this, format.apply(void 0, [ERRORS[code]].concat(args))) || this;
    }
    return _assertThisInitialized(_this);
  }
  return PolishedError2;
}(/* @__PURE__ */ _wrapNativeSuper(Error));
function colorToInt(color) {
  return Math.round(color * 255);
}
function convertToInt(red, green, blue) {
  return colorToInt(red) + "," + colorToInt(green) + "," + colorToInt(blue);
}
function hslToRgb(hue, saturation, lightness, convert) {
  if (convert === void 0) {
    convert = convertToInt;
  }
  if (saturation === 0) {
    return convert(lightness, lightness, lightness);
  }
  var huePrime = (hue % 360 + 360) % 360 / 60;
  var chroma = (1 - Math.abs(2 * lightness - 1)) * saturation;
  var secondComponent = chroma * (1 - Math.abs(huePrime % 2 - 1));
  var red = 0;
  var green = 0;
  var blue = 0;
  if (huePrime >= 0 && huePrime < 1) {
    red = chroma;
    green = secondComponent;
  } else if (huePrime >= 1 && huePrime < 2) {
    red = secondComponent;
    green = chroma;
  } else if (huePrime >= 2 && huePrime < 3) {
    green = chroma;
    blue = secondComponent;
  } else if (huePrime >= 3 && huePrime < 4) {
    green = secondComponent;
    blue = chroma;
  } else if (huePrime >= 4 && huePrime < 5) {
    red = secondComponent;
    blue = chroma;
  } else if (huePrime >= 5 && huePrime < 6) {
    red = chroma;
    blue = secondComponent;
  }
  var lightnessModification = lightness - chroma / 2;
  var finalRed = red + lightnessModification;
  var finalGreen = green + lightnessModification;
  var finalBlue = blue + lightnessModification;
  return convert(finalRed, finalGreen, finalBlue);
}
var namedColorMap = {
  aliceblue: "f0f8ff",
  antiquewhite: "faebd7",
  aqua: "00ffff",
  aquamarine: "7fffd4",
  azure: "f0ffff",
  beige: "f5f5dc",
  bisque: "ffe4c4",
  black: "000",
  blanchedalmond: "ffebcd",
  blue: "0000ff",
  blueviolet: "8a2be2",
  brown: "a52a2a",
  burlywood: "deb887",
  cadetblue: "5f9ea0",
  chartreuse: "7fff00",
  chocolate: "d2691e",
  coral: "ff7f50",
  cornflowerblue: "6495ed",
  cornsilk: "fff8dc",
  crimson: "dc143c",
  cyan: "00ffff",
  darkblue: "00008b",
  darkcyan: "008b8b",
  darkgoldenrod: "b8860b",
  darkgray: "a9a9a9",
  darkgreen: "006400",
  darkgrey: "a9a9a9",
  darkkhaki: "bdb76b",
  darkmagenta: "8b008b",
  darkolivegreen: "556b2f",
  darkorange: "ff8c00",
  darkorchid: "9932cc",
  darkred: "8b0000",
  darksalmon: "e9967a",
  darkseagreen: "8fbc8f",
  darkslateblue: "483d8b",
  darkslategray: "2f4f4f",
  darkslategrey: "2f4f4f",
  darkturquoise: "00ced1",
  darkviolet: "9400d3",
  deeppink: "ff1493",
  deepskyblue: "00bfff",
  dimgray: "696969",
  dimgrey: "696969",
  dodgerblue: "1e90ff",
  firebrick: "b22222",
  floralwhite: "fffaf0",
  forestgreen: "228b22",
  fuchsia: "ff00ff",
  gainsboro: "dcdcdc",
  ghostwhite: "f8f8ff",
  gold: "ffd700",
  goldenrod: "daa520",
  gray: "808080",
  green: "008000",
  greenyellow: "adff2f",
  grey: "808080",
  honeydew: "f0fff0",
  hotpink: "ff69b4",
  indianred: "cd5c5c",
  indigo: "4b0082",
  ivory: "fffff0",
  khaki: "f0e68c",
  lavender: "e6e6fa",
  lavenderblush: "fff0f5",
  lawngreen: "7cfc00",
  lemonchiffon: "fffacd",
  lightblue: "add8e6",
  lightcoral: "f08080",
  lightcyan: "e0ffff",
  lightgoldenrodyellow: "fafad2",
  lightgray: "d3d3d3",
  lightgreen: "90ee90",
  lightgrey: "d3d3d3",
  lightpink: "ffb6c1",
  lightsalmon: "ffa07a",
  lightseagreen: "20b2aa",
  lightskyblue: "87cefa",
  lightslategray: "789",
  lightslategrey: "789",
  lightsteelblue: "b0c4de",
  lightyellow: "ffffe0",
  lime: "0f0",
  limegreen: "32cd32",
  linen: "faf0e6",
  magenta: "f0f",
  maroon: "800000",
  mediumaquamarine: "66cdaa",
  mediumblue: "0000cd",
  mediumorchid: "ba55d3",
  mediumpurple: "9370db",
  mediumseagreen: "3cb371",
  mediumslateblue: "7b68ee",
  mediumspringgreen: "00fa9a",
  mediumturquoise: "48d1cc",
  mediumvioletred: "c71585",
  midnightblue: "191970",
  mintcream: "f5fffa",
  mistyrose: "ffe4e1",
  moccasin: "ffe4b5",
  navajowhite: "ffdead",
  navy: "000080",
  oldlace: "fdf5e6",
  olive: "808000",
  olivedrab: "6b8e23",
  orange: "ffa500",
  orangered: "ff4500",
  orchid: "da70d6",
  palegoldenrod: "eee8aa",
  palegreen: "98fb98",
  paleturquoise: "afeeee",
  palevioletred: "db7093",
  papayawhip: "ffefd5",
  peachpuff: "ffdab9",
  peru: "cd853f",
  pink: "ffc0cb",
  plum: "dda0dd",
  powderblue: "b0e0e6",
  purple: "800080",
  rebeccapurple: "639",
  red: "f00",
  rosybrown: "bc8f8f",
  royalblue: "4169e1",
  saddlebrown: "8b4513",
  salmon: "fa8072",
  sandybrown: "f4a460",
  seagreen: "2e8b57",
  seashell: "fff5ee",
  sienna: "a0522d",
  silver: "c0c0c0",
  skyblue: "87ceeb",
  slateblue: "6a5acd",
  slategray: "708090",
  slategrey: "708090",
  snow: "fffafa",
  springgreen: "00ff7f",
  steelblue: "4682b4",
  tan: "d2b48c",
  teal: "008080",
  thistle: "d8bfd8",
  tomato: "ff6347",
  turquoise: "40e0d0",
  violet: "ee82ee",
  wheat: "f5deb3",
  white: "fff",
  whitesmoke: "f5f5f5",
  yellow: "ff0",
  yellowgreen: "9acd32"
};
function nameToHex(color) {
  if (typeof color !== "string")
    return color;
  var normalizedColorName = color.toLowerCase();
  return namedColorMap[normalizedColorName] ? "#" + namedColorMap[normalizedColorName] : color;
}
var hexRegex = /^#[a-fA-F0-9]{6}$/;
var hexRgbaRegex = /^#[a-fA-F0-9]{8}$/;
var reducedHexRegex = /^#[a-fA-F0-9]{3}$/;
var reducedRgbaHexRegex = /^#[a-fA-F0-9]{4}$/;
var rgbRegex = /^rgb\(\s*(\d{1,3})\s*(?:,)?\s*(\d{1,3})\s*(?:,)?\s*(\d{1,3})\s*\)$/i;
var rgbaRegex = /^rgb(?:a)?\(\s*(\d{1,3})\s*(?:,)?\s*(\d{1,3})\s*(?:,)?\s*(\d{1,3})\s*(?:,|\/)\s*([-+]?\d*[.]?\d+[%]?)\s*\)$/i;
var hslRegex = /^hsl\(\s*(\d{0,3}[.]?[0-9]+(?:deg)?)\s*(?:,)?\s*(\d{1,3}[.]?[0-9]?)%\s*(?:,)?\s*(\d{1,3}[.]?[0-9]?)%\s*\)$/i;
var hslaRegex = /^hsl(?:a)?\(\s*(\d{0,3}[.]?[0-9]+(?:deg)?)\s*(?:,)?\s*(\d{1,3}[.]?[0-9]?)%\s*(?:,)?\s*(\d{1,3}[.]?[0-9]?)%\s*(?:,|\/)\s*([-+]?\d*[.]?\d+[%]?)\s*\)$/i;
function parseToRgb(color) {
  if (typeof color !== "string") {
    throw new PolishedError(3);
  }
  var normalizedColor = nameToHex(color);
  if (normalizedColor.match(hexRegex)) {
    return {
      red: parseInt("" + normalizedColor[1] + normalizedColor[2], 16),
      green: parseInt("" + normalizedColor[3] + normalizedColor[4], 16),
      blue: parseInt("" + normalizedColor[5] + normalizedColor[6], 16)
    };
  }
  if (normalizedColor.match(hexRgbaRegex)) {
    var alpha = parseFloat((parseInt("" + normalizedColor[7] + normalizedColor[8], 16) / 255).toFixed(2));
    return {
      red: parseInt("" + normalizedColor[1] + normalizedColor[2], 16),
      green: parseInt("" + normalizedColor[3] + normalizedColor[4], 16),
      blue: parseInt("" + normalizedColor[5] + normalizedColor[6], 16),
      alpha
    };
  }
  if (normalizedColor.match(reducedHexRegex)) {
    return {
      red: parseInt("" + normalizedColor[1] + normalizedColor[1], 16),
      green: parseInt("" + normalizedColor[2] + normalizedColor[2], 16),
      blue: parseInt("" + normalizedColor[3] + normalizedColor[3], 16)
    };
  }
  if (normalizedColor.match(reducedRgbaHexRegex)) {
    var _alpha = parseFloat((parseInt("" + normalizedColor[4] + normalizedColor[4], 16) / 255).toFixed(2));
    return {
      red: parseInt("" + normalizedColor[1] + normalizedColor[1], 16),
      green: parseInt("" + normalizedColor[2] + normalizedColor[2], 16),
      blue: parseInt("" + normalizedColor[3] + normalizedColor[3], 16),
      alpha: _alpha
    };
  }
  var rgbMatched = rgbRegex.exec(normalizedColor);
  if (rgbMatched) {
    return {
      red: parseInt("" + rgbMatched[1], 10),
      green: parseInt("" + rgbMatched[2], 10),
      blue: parseInt("" + rgbMatched[3], 10)
    };
  }
  var rgbaMatched = rgbaRegex.exec(normalizedColor.substring(0, 50));
  if (rgbaMatched) {
    return {
      red: parseInt("" + rgbaMatched[1], 10),
      green: parseInt("" + rgbaMatched[2], 10),
      blue: parseInt("" + rgbaMatched[3], 10),
      alpha: parseFloat("" + rgbaMatched[4]) > 1 ? parseFloat("" + rgbaMatched[4]) / 100 : parseFloat("" + rgbaMatched[4])
    };
  }
  var hslMatched = hslRegex.exec(normalizedColor);
  if (hslMatched) {
    var hue = parseInt("" + hslMatched[1], 10);
    var saturation = parseInt("" + hslMatched[2], 10) / 100;
    var lightness = parseInt("" + hslMatched[3], 10) / 100;
    var rgbColorString = "rgb(" + hslToRgb(hue, saturation, lightness) + ")";
    var hslRgbMatched = rgbRegex.exec(rgbColorString);
    if (!hslRgbMatched) {
      throw new PolishedError(4, normalizedColor, rgbColorString);
    }
    return {
      red: parseInt("" + hslRgbMatched[1], 10),
      green: parseInt("" + hslRgbMatched[2], 10),
      blue: parseInt("" + hslRgbMatched[3], 10)
    };
  }
  var hslaMatched = hslaRegex.exec(normalizedColor.substring(0, 50));
  if (hslaMatched) {
    var _hue = parseInt("" + hslaMatched[1], 10);
    var _saturation = parseInt("" + hslaMatched[2], 10) / 100;
    var _lightness = parseInt("" + hslaMatched[3], 10) / 100;
    var _rgbColorString = "rgb(" + hslToRgb(_hue, _saturation, _lightness) + ")";
    var _hslRgbMatched = rgbRegex.exec(_rgbColorString);
    if (!_hslRgbMatched) {
      throw new PolishedError(4, normalizedColor, _rgbColorString);
    }
    return {
      red: parseInt("" + _hslRgbMatched[1], 10),
      green: parseInt("" + _hslRgbMatched[2], 10),
      blue: parseInt("" + _hslRgbMatched[3], 10),
      alpha: parseFloat("" + hslaMatched[4]) > 1 ? parseFloat("" + hslaMatched[4]) / 100 : parseFloat("" + hslaMatched[4])
    };
  }
  throw new PolishedError(5);
}
function rgbToHsl(color) {
  var red = color.red / 255;
  var green = color.green / 255;
  var blue = color.blue / 255;
  var max2 = Math.max(red, green, blue);
  var min2 = Math.min(red, green, blue);
  var lightness = (max2 + min2) / 2;
  if (max2 === min2) {
    if (color.alpha !== void 0) {
      return {
        hue: 0,
        saturation: 0,
        lightness,
        alpha: color.alpha
      };
    } else {
      return {
        hue: 0,
        saturation: 0,
        lightness
      };
    }
  }
  var hue;
  var delta = max2 - min2;
  var saturation = lightness > 0.5 ? delta / (2 - max2 - min2) : delta / (max2 + min2);
  switch (max2) {
    case red:
      hue = (green - blue) / delta + (green < blue ? 6 : 0);
      break;
    case green:
      hue = (blue - red) / delta + 2;
      break;
    default:
      hue = (red - green) / delta + 4;
      break;
  }
  hue *= 60;
  if (color.alpha !== void 0) {
    return {
      hue,
      saturation,
      lightness,
      alpha: color.alpha
    };
  }
  return {
    hue,
    saturation,
    lightness
  };
}
function parseToHsl(color) {
  return rgbToHsl(parseToRgb(color));
}
var reduceHexValue = function reduceHexValue2(value) {
  if (value.length === 7 && value[1] === value[2] && value[3] === value[4] && value[5] === value[6]) {
    return "#" + value[1] + value[3] + value[5];
  }
  return value;
};
var reduceHexValue$1 = reduceHexValue;
function numberToHex(value) {
  var hex = value.toString(16);
  return hex.length === 1 ? "0" + hex : hex;
}
function colorToHex(color) {
  return numberToHex(Math.round(color * 255));
}
function convertToHex(red, green, blue) {
  return reduceHexValue$1("#" + colorToHex(red) + colorToHex(green) + colorToHex(blue));
}
function hslToHex(hue, saturation, lightness) {
  return hslToRgb(hue, saturation, lightness, convertToHex);
}
function hsl(value, saturation, lightness) {
  if (typeof value === "number" && typeof saturation === "number" && typeof lightness === "number") {
    return hslToHex(value, saturation, lightness);
  } else if (typeof value === "object" && saturation === void 0 && lightness === void 0) {
    return hslToHex(value.hue, value.saturation, value.lightness);
  }
  throw new PolishedError(1);
}
function hsla(value, saturation, lightness, alpha) {
  if (typeof value === "number" && typeof saturation === "number" && typeof lightness === "number" && typeof alpha === "number") {
    return alpha >= 1 ? hslToHex(value, saturation, lightness) : "rgba(" + hslToRgb(value, saturation, lightness) + "," + alpha + ")";
  } else if (typeof value === "object" && saturation === void 0 && lightness === void 0 && alpha === void 0) {
    return value.alpha >= 1 ? hslToHex(value.hue, value.saturation, value.lightness) : "rgba(" + hslToRgb(value.hue, value.saturation, value.lightness) + "," + value.alpha + ")";
  }
  throw new PolishedError(2);
}
function rgb(value, green, blue) {
  if (typeof value === "number" && typeof green === "number" && typeof blue === "number") {
    return reduceHexValue$1("#" + numberToHex(value) + numberToHex(green) + numberToHex(blue));
  } else if (typeof value === "object" && green === void 0 && blue === void 0) {
    return reduceHexValue$1("#" + numberToHex(value.red) + numberToHex(value.green) + numberToHex(value.blue));
  }
  throw new PolishedError(6);
}
function rgba(firstValue, secondValue, thirdValue, fourthValue) {
  if (typeof firstValue === "string" && typeof secondValue === "number") {
    var rgbValue = parseToRgb(firstValue);
    return "rgba(" + rgbValue.red + "," + rgbValue.green + "," + rgbValue.blue + "," + secondValue + ")";
  } else if (typeof firstValue === "number" && typeof secondValue === "number" && typeof thirdValue === "number" && typeof fourthValue === "number") {
    return fourthValue >= 1 ? rgb(firstValue, secondValue, thirdValue) : "rgba(" + firstValue + "," + secondValue + "," + thirdValue + "," + fourthValue + ")";
  } else if (typeof firstValue === "object" && secondValue === void 0 && thirdValue === void 0 && fourthValue === void 0) {
    return firstValue.alpha >= 1 ? rgb(firstValue.red, firstValue.green, firstValue.blue) : "rgba(" + firstValue.red + "," + firstValue.green + "," + firstValue.blue + "," + firstValue.alpha + ")";
  }
  throw new PolishedError(7);
}
var isRgb = function isRgb2(color) {
  return typeof color.red === "number" && typeof color.green === "number" && typeof color.blue === "number" && (typeof color.alpha !== "number" || typeof color.alpha === "undefined");
};
var isRgba = function isRgba2(color) {
  return typeof color.red === "number" && typeof color.green === "number" && typeof color.blue === "number" && typeof color.alpha === "number";
};
var isHsl = function isHsl2(color) {
  return typeof color.hue === "number" && typeof color.saturation === "number" && typeof color.lightness === "number" && (typeof color.alpha !== "number" || typeof color.alpha === "undefined");
};
var isHsla = function isHsla2(color) {
  return typeof color.hue === "number" && typeof color.saturation === "number" && typeof color.lightness === "number" && typeof color.alpha === "number";
};
function toColorString(color) {
  if (typeof color !== "object")
    throw new PolishedError(8);
  if (isRgba(color))
    return rgba(color);
  if (isRgb(color))
    return rgb(color);
  if (isHsla(color))
    return hsla(color);
  if (isHsl(color))
    return hsl(color);
  throw new PolishedError(8);
}
function curried(f, length2, acc) {
  return function fn2() {
    var combined = acc.concat(Array.prototype.slice.call(arguments));
    return combined.length >= length2 ? f.apply(this, combined) : curried(f, length2, combined);
  };
}
function curry(f) {
  return curried(f, f.length, []);
}
function guard(lowerBoundary, upperBoundary, value) {
  return Math.max(lowerBoundary, Math.min(upperBoundary, value));
}
function darken(amount, color) {
  if (color === "transparent")
    return color;
  var hslColor = parseToHsl(color);
  return toColorString(_extends({}, hslColor, {
    lightness: guard(0, 1, hslColor.lightness - parseFloat(amount))
  }));
}
var curriedDarken = /* @__PURE__ */ curry(darken);
var curriedDarken$1 = curriedDarken;
function lighten(amount, color) {
  if (color === "transparent")
    return color;
  var hslColor = parseToHsl(color);
  return toColorString(_extends({}, hslColor, {
    lightness: guard(0, 1, hslColor.lightness + parseFloat(amount))
  }));
}
var curriedLighten = /* @__PURE__ */ curry(lighten);
var curriedLighten$1 = curriedLighten;
function transparentize(amount, color) {
  if (color === "transparent")
    return color;
  var parsedColor = parseToRgb(color);
  var alpha = typeof parsedColor.alpha === "number" ? parsedColor.alpha : 1;
  var colorWithAlpha = _extends({}, parsedColor, {
    alpha: guard(0, 1, +(alpha * 100 - parseFloat(amount) * 100).toFixed(2) / 100)
  });
  return rgba(colorWithAlpha);
}
var curriedTransparentize = /* @__PURE__ */ curry(transparentize);
var curriedTransparentize$1 = curriedTransparentize;

// src/typography/lib/common.tsx
var headerCommon = ({ theme }) => ({
  margin: "20px 0 8px",
  padding: 0,
  cursor: "text",
  position: "relative",
  color: theme.color.defaultText,
  "&:first-of-type": {
    marginTop: 0,
    paddingTop: 0
  },
  "&:hover a.anchor": {
    textDecoration: "none"
  },
  "& tt, & code": {
    fontSize: "inherit"
  }
});
var codeCommon = ({ theme }) => ({
  lineHeight: 1,
  margin: "0 2px",
  padding: "3px 5px",
  whiteSpace: "nowrap",
  borderRadius: 3,
  fontSize: theme.typography.size.s2 - 1,
  border: theme.base === "light" ? `1px solid ${theme.color.mediumlight}` : `1px solid ${theme.color.darker}`,
  color: theme.base === "light" ? curriedTransparentize$1(0.1, theme.color.defaultText) : curriedTransparentize$1(0.3, theme.color.defaultText),
  backgroundColor: theme.base === "light" ? theme.color.lighter : theme.color.border
});
var withReset = ({ theme }) => ({
  fontFamily: theme.typography.fonts.base,
  fontSize: theme.typography.size.s3,
  margin: 0,
  WebkitFontSmoothing: "antialiased",
  MozOsxFontSmoothing: "grayscale",
  WebkitTapHighlightColor: "rgba(0, 0, 0, 0)",
  WebkitOverflowScrolling: "touch"
});
var withMargin = {
  margin: "16px 0"
};

// src/typography/elements/Link.tsx
var import_react = __toESM(require("react"));
var Link = ({
  href: input,
  children,
  ...props
}) => {
  const isStorybookPath = /^\//.test(input);
  const isAnchorUrl = /^#.*/.test(input);
  const href = isStorybookPath ? `?path=${input}` : input;
  const target = isAnchorUrl ? "_self" : "_top";
  return /* @__PURE__ */ import_react.default.createElement("a", {
    href,
    target,
    ...props
  }, children);
};

// src/typography/elements/A.tsx
var A = (0, import_theming.styled)(Link)(withReset, ({ theme }) => ({
  fontSize: "inherit",
  lineHeight: "24px",
  color: theme.color.secondary,
  textDecoration: "none",
  "&.absent": {
    color: "#cc0000"
  },
  "&.anchor": {
    display: "block",
    paddingLeft: 30,
    marginLeft: -30,
    cursor: "pointer",
    position: "absolute",
    top: 0,
    left: 0,
    bottom: 0
  }
}));

// src/typography/elements/Blockquote.tsx
var import_theming2 = require("@storybook/theming");
var Blockquote = import_theming2.styled.blockquote(withReset, withMargin, ({ theme }) => ({
  borderLeft: `4px solid ${theme.color.medium}`,
  padding: "0 15px",
  color: theme.color.dark,
  "& > :first-of-type": {
    marginTop: 0
  },
  "& > :last-child": {
    marginBottom: 0
  }
}));

// src/typography/elements/Code.tsx
var import_theming7 = require("@storybook/theming");
var import_react9 = __toESM(require("react"));
init_syntaxhighlighter();

// src/typography/lib/isReactChildString.tsx
var isReactChildString = (child) => typeof child === "string";

// src/typography/elements/Code.tsx
var isInlineCodeRegex = /[\n\r]/g;
var DefaultCodeBlock = import_theming7.styled.code(
  ({ theme }) => ({
    fontFamily: theme.typography.fonts.mono,
    WebkitFontSmoothing: "antialiased",
    MozOsxFontSmoothing: "grayscale",
    display: "inline-block",
    paddingLeft: 2,
    paddingRight: 2,
    verticalAlign: "baseline",
    color: "inherit"
  }),
  codeCommon
);
var StyledSyntaxHighlighter = (0, import_theming7.styled)(SyntaxHighlighter2)(({ theme }) => ({
  fontSize: `${theme.typography.size.s2 - 1}px`,
  lineHeight: "19px",
  margin: "25px 0 40px",
  borderRadius: theme.appBorderRadius,
  boxShadow: theme.base === "light" ? "rgba(0, 0, 0, 0.10) 0 1px 3px 0" : "rgba(0, 0, 0, 0.20) 0 2px 5px 0",
  "pre.prismjs": {
    padding: 20,
    background: "inherit"
  }
}));
var Code2 = ({
  className,
  children,
  ...props
}) => {
  const language = (className || "").match(/lang-(\S+)/);
  const childrenArray = import_react9.Children.toArray(children);
  const isInlineCode = !childrenArray.filter(isReactChildString).some((child) => child.match(isInlineCodeRegex));
  if (isInlineCode) {
    return /* @__PURE__ */ import_react9.default.createElement(DefaultCodeBlock, {
      ...props,
      className
    }, childrenArray);
  }
  return /* @__PURE__ */ import_react9.default.createElement(StyledSyntaxHighlighter, {
    bordered: true,
    copyable: true,
    language: (language == null ? void 0 : language[1]) ?? "plaintext",
    format: false,
    ...props
  }, children);
};

// src/typography/elements/Div.tsx
var import_theming8 = require("@storybook/theming");
var Div = import_theming8.styled.div(withReset);

// src/typography/elements/DL.tsx
var import_theming9 = require("@storybook/theming");
var DL = import_theming9.styled.dl(withReset, {
  ...withMargin,
  padding: 0,
  "& dt": {
    fontSize: "14px",
    fontWeight: "bold",
    fontStyle: "italic",
    padding: 0,
    margin: "16px 0 4px"
  },
  "& dt:first-of-type": {
    padding: 0
  },
  "& dt > :first-of-type": {
    marginTop: 0
  },
  "& dt > :last-child": {
    marginBottom: 0
  },
  "& dd": {
    margin: "0 0 16px",
    padding: "0 15px"
  },
  "& dd > :first-of-type": {
    marginTop: 0
  },
  "& dd > :last-child": {
    marginBottom: 0
  }
});

// src/typography/elements/H1.tsx
var import_theming10 = require("@storybook/theming");
var H1 = import_theming10.styled.h1(withReset, headerCommon, ({ theme }) => ({
  fontSize: `${theme.typography.size.l1}px`,
  fontWeight: theme.typography.weight.black
}));

// src/typography/elements/H2.tsx
var import_theming11 = require("@storybook/theming");
var H2 = import_theming11.styled.h2(withReset, headerCommon, ({ theme }) => ({
  fontSize: `${theme.typography.size.m2}px`,
  paddingBottom: 4,
  borderBottom: `1px solid ${theme.appBorderColor}`
}));

// src/typography/elements/H3.tsx
var import_theming12 = require("@storybook/theming");
var H3 = import_theming12.styled.h3(withReset, headerCommon, ({ theme }) => ({
  fontSize: `${theme.typography.size.m1}px`
}));

// src/typography/elements/H4.tsx
var import_theming13 = require("@storybook/theming");
var H4 = import_theming13.styled.h4(withReset, headerCommon, ({ theme }) => ({
  fontSize: `${theme.typography.size.s3}px`
}));

// src/typography/elements/H5.tsx
var import_theming14 = require("@storybook/theming");
var H5 = import_theming14.styled.h5(withReset, headerCommon, ({ theme }) => ({
  fontSize: `${theme.typography.size.s2}px`
}));

// src/typography/elements/H6.tsx
var import_theming15 = require("@storybook/theming");
var H6 = import_theming15.styled.h6(withReset, headerCommon, ({ theme }) => ({
  fontSize: `${theme.typography.size.s2}px`,
  color: theme.color.dark
}));

// src/typography/elements/HR.tsx
var import_theming16 = require("@storybook/theming");
var HR = import_theming16.styled.hr(({ theme }) => ({
  border: "0 none",
  borderTop: `1px solid ${theme.appBorderColor}`,
  height: 4,
  padding: 0
}));

// src/typography/elements/Img.tsx
var import_theming17 = require("@storybook/theming");
var Img = import_theming17.styled.img({
  maxWidth: "100%"
});

// src/typography/elements/LI.tsx
var import_theming18 = require("@storybook/theming");
var LI = import_theming18.styled.li(withReset, ({ theme }) => ({
  fontSize: theme.typography.size.s2,
  color: theme.color.defaultText,
  lineHeight: "24px",
  "& + li": {
    marginTop: ".25em"
  },
  "& ul, & ol": {
    marginTop: ".25em",
    marginBottom: 0
  },
  "& code": codeCommon({ theme })
}));

// src/typography/elements/OL.tsx
var import_theming19 = require("@storybook/theming");
var listCommon = {
  paddingLeft: 30,
  "& :first-of-type": {
    marginTop: 0
  },
  "& :last-child": {
    marginBottom: 0
  }
};
var OL = import_theming19.styled.ol(withReset, withMargin, { ...listCommon, listStyle: "decimal" });

// src/typography/elements/P.tsx
var import_theming20 = require("@storybook/theming");
var P = import_theming20.styled.p(withReset, withMargin, ({ theme }) => ({
  fontSize: theme.typography.size.s2,
  lineHeight: "24px",
  color: theme.color.defaultText,
  "& code": codeCommon({ theme })
}));

// src/typography/elements/Pre.tsx
var import_theming21 = require("@storybook/theming");
var Pre2 = import_theming21.styled.pre(withReset, withMargin, ({ theme }) => ({
  fontFamily: theme.typography.fonts.mono,
  WebkitFontSmoothing: "antialiased",
  MozOsxFontSmoothing: "grayscale",
  lineHeight: "18px",
  padding: "11px 1rem",
  whiteSpace: "pre-wrap",
  color: "inherit",
  borderRadius: 3,
  margin: "1rem 0",
  "&:not(.prismjs)": {
    background: "transparent",
    border: "none",
    borderRadius: 0,
    padding: 0,
    margin: 0
  },
  "& pre, &.prismjs": {
    padding: 15,
    margin: 0,
    whiteSpace: "pre-wrap",
    color: "inherit",
    fontSize: "13px",
    lineHeight: "19px",
    code: {
      color: "inherit",
      fontSize: "inherit"
    }
  },
  "& code": {
    whiteSpace: "pre"
  },
  "& code, & tt": {
    border: "none"
  }
}));

// src/typography/elements/Span.tsx
var import_theming22 = require("@storybook/theming");
var Span = import_theming22.styled.span(withReset, ({ theme }) => ({
  "&.frame": {
    display: "block",
    overflow: "hidden",
    "& > span": {
      border: `1px solid ${theme.color.medium}`,
      display: "block",
      float: "left",
      overflow: "hidden",
      margin: "13px 0 0",
      padding: 7,
      width: "auto"
    },
    "& span img": {
      display: "block",
      float: "left"
    },
    "& span span": {
      clear: "both",
      color: theme.color.darkest,
      display: "block",
      padding: "5px 0 0"
    }
  },
  "&.align-center": {
    display: "block",
    overflow: "hidden",
    clear: "both",
    "& > span": {
      display: "block",
      overflow: "hidden",
      margin: "13px auto 0",
      textAlign: "center"
    },
    "& span img": {
      margin: "0 auto",
      textAlign: "center"
    }
  },
  "&.align-right": {
    display: "block",
    overflow: "hidden",
    clear: "both",
    "& > span": {
      display: "block",
      overflow: "hidden",
      margin: "13px 0 0",
      textAlign: "right"
    },
    "& span img": {
      margin: 0,
      textAlign: "right"
    }
  },
  "&.float-left": {
    display: "block",
    marginRight: 13,
    overflow: "hidden",
    float: "left",
    "& span": {
      margin: "13px 0 0"
    }
  },
  "&.float-right": {
    display: "block",
    marginLeft: 13,
    overflow: "hidden",
    float: "right",
    "& > span": {
      display: "block",
      overflow: "hidden",
      margin: "13px auto 0",
      textAlign: "right"
    }
  }
}));

// src/typography/elements/Table.tsx
var import_theming23 = require("@storybook/theming");
var Table = import_theming23.styled.table(withReset, withMargin, ({ theme }) => ({
  fontSize: theme.typography.size.s2,
  lineHeight: "24px",
  padding: 0,
  borderCollapse: "collapse",
  "& tr": {
    borderTop: `1px solid ${theme.appBorderColor}`,
    backgroundColor: theme.appContentBg,
    margin: 0,
    padding: 0
  },
  "& tr:nth-of-type(2n)": {
    backgroundColor: theme.base === "dark" ? theme.color.darker : theme.color.lighter
  },
  "& tr th": {
    fontWeight: "bold",
    color: theme.color.defaultText,
    border: `1px solid ${theme.appBorderColor}`,
    margin: 0,
    padding: "6px 13px"
  },
  "& tr td": {
    border: `1px solid ${theme.appBorderColor}`,
    color: theme.color.defaultText,
    margin: 0,
    padding: "6px 13px"
  },
  "& tr th :first-of-type, & tr td :first-of-type": {
    marginTop: 0
  },
  "& tr th :last-child, & tr td :last-child": {
    marginBottom: 0
  }
}));

// src/typography/elements/TT.tsx
var import_theming24 = require("@storybook/theming");
var TT = import_theming24.styled.title(codeCommon);

// src/typography/elements/UL.tsx
var import_theming25 = require("@storybook/theming");
var listCommon2 = {
  paddingLeft: 30,
  "& :first-of-type": {
    marginTop: 0
  },
  "& :last-child": {
    marginBottom: 0
  }
};
var UL = import_theming25.styled.ul(withReset, withMargin, { ...listCommon2, listStyle: "disc" });

// src/typography/ResetWrapper.tsx
var import_theming26 = require("@storybook/theming");
var ResetWrapper = import_theming26.styled.div(withReset);

// src/typography/components.tsx
var components = {
  h1: (props) => /* @__PURE__ */ import_react10.default.createElement(H1, {
    ...nameSpaceClassNames(props, "h1")
  }),
  h2: (props) => /* @__PURE__ */ import_react10.default.createElement(H2, {
    ...nameSpaceClassNames(props, "h2")
  }),
  h3: (props) => /* @__PURE__ */ import_react10.default.createElement(H3, {
    ...nameSpaceClassNames(props, "h3")
  }),
  h4: (props) => /* @__PURE__ */ import_react10.default.createElement(H4, {
    ...nameSpaceClassNames(props, "h4")
  }),
  h5: (props) => /* @__PURE__ */ import_react10.default.createElement(H5, {
    ...nameSpaceClassNames(props, "h5")
  }),
  h6: (props) => /* @__PURE__ */ import_react10.default.createElement(H6, {
    ...nameSpaceClassNames(props, "h6")
  }),
  pre: (props) => /* @__PURE__ */ import_react10.default.createElement(Pre2, {
    ...nameSpaceClassNames(props, "pre")
  }),
  a: (props) => /* @__PURE__ */ import_react10.default.createElement(A, {
    ...nameSpaceClassNames(props, "a")
  }),
  hr: (props) => /* @__PURE__ */ import_react10.default.createElement(HR, {
    ...nameSpaceClassNames(props, "hr")
  }),
  dl: (props) => /* @__PURE__ */ import_react10.default.createElement(DL, {
    ...nameSpaceClassNames(props, "dl")
  }),
  blockquote: (props) => /* @__PURE__ */ import_react10.default.createElement(Blockquote, {
    ...nameSpaceClassNames(props, "blockquote")
  }),
  table: (props) => /* @__PURE__ */ import_react10.default.createElement(Table, {
    ...nameSpaceClassNames(props, "table")
  }),
  img: (props) => /* @__PURE__ */ import_react10.default.createElement(Img, {
    ...nameSpaceClassNames(props, "img")
  }),
  div: (props) => /* @__PURE__ */ import_react10.default.createElement(Div, {
    ...nameSpaceClassNames(props, "div")
  }),
  span: (props) => /* @__PURE__ */ import_react10.default.createElement(Span, {
    ...nameSpaceClassNames(props, "span")
  }),
  li: (props) => /* @__PURE__ */ import_react10.default.createElement(LI, {
    ...nameSpaceClassNames(props, "li")
  }),
  ul: (props) => /* @__PURE__ */ import_react10.default.createElement(UL, {
    ...nameSpaceClassNames(props, "ul")
  }),
  ol: (props) => /* @__PURE__ */ import_react10.default.createElement(OL, {
    ...nameSpaceClassNames(props, "ol")
  }),
  p: (props) => /* @__PURE__ */ import_react10.default.createElement(P, {
    ...nameSpaceClassNames(props, "p")
  }),
  code: (props) => /* @__PURE__ */ import_react10.default.createElement(Code2, {
    ...nameSpaceClassNames(props, "code")
  }),
  tt: (props) => /* @__PURE__ */ import_react10.default.createElement(TT, {
    ...nameSpaceClassNames(props, "tt")
  }),
  resetwrapper: (props) => /* @__PURE__ */ import_react10.default.createElement(ResetWrapper, {
    ...nameSpaceClassNames(props, "resetwrapper")
  })
};

// src/Badge/Badge.tsx
var import_react11 = __toESM(require("react"));
var import_theming27 = require("@storybook/theming");
var BadgeWrapper = import_theming27.styled.div(
  ({ theme }) => ({
    display: "inline-block",
    fontSize: 11,
    lineHeight: "12px",
    alignSelf: "center",
    padding: "4px 12px",
    borderRadius: "3em",
    fontWeight: theme.typography.weight.bold
  }),
  {
    svg: {
      height: 12,
      width: 12,
      marginRight: 4,
      marginTop: -2,
      path: {
        fill: "currentColor"
      }
    }
  },
  ({ theme, status }) => {
    switch (status) {
      case "critical": {
        return {
          color: theme.color.critical,
          background: theme.background.critical
        };
      }
      case "negative": {
        return {
          color: theme.color.negativeText,
          background: theme.background.negative,
          boxShadow: theme.base === "light" ? `inset 0 0 0 1px ${curriedTransparentize$1(0.9, theme.color.negativeText)}` : "none"
        };
      }
      case "warning": {
        return {
          color: theme.color.warningText,
          background: theme.background.warning,
          boxShadow: theme.base === "light" ? `inset 0 0 0 1px ${curriedTransparentize$1(0.9, theme.color.warningText)}` : "none"
        };
      }
      case "neutral": {
        return {
          color: theme.color.dark,
          background: theme.color.mediumlight,
          boxShadow: theme.base === "light" ? `inset 0 0 0 1px ${curriedTransparentize$1(0.9, theme.color.dark)}` : "none"
        };
      }
      case "positive": {
        return {
          color: theme.color.positiveText,
          background: theme.background.positive,
          boxShadow: theme.base === "light" ? `inset 0 0 0 1px ${curriedTransparentize$1(0.9, theme.color.positiveText)}` : "none"
        };
      }
      default: {
        return {};
      }
    }
  }
);
var Badge = ({ ...props }) => {
  return /* @__PURE__ */ import_react11.default.createElement(BadgeWrapper, {
    ...props
  });
};

// src/typography/link/link.tsx
var import_react14 = __toESM(require("react"));
var import_theming29 = require("@storybook/theming");

// src/icon/icon.tsx
var import_react13 = __toESM(require("react"));
var import_theming28 = require("@storybook/theming");

// src/icon/icons.tsx
var import_react12 = __toESM(require("react"));
var icons = {
  user: /* @__PURE__ */ import_react12.default.createElement(import_react12.default.Fragment, null, /* @__PURE__ */ import_react12.default.createElement("path", {
    d: "M14 7A7 7 0 1 1 0 7a7 7 0 0 1 14 0ZM2.67 11.15c.7-1 2.6-1.81 3.2-1.9.22-.04.23-.66.23-.66s-.67-.66-.81-1.55c-.4 0-.63-.94-.24-1.27l-.02-.13c-.06-.6-.28-2.6 1.97-2.6s2.03 2 1.97 2.6l-.02.13c.4.33.15 1.27-.24 1.27-.14.89-.8 1.55-.8 1.55s0 .62.22.66c.6.09 2.5.9 3.2 1.9a6 6 0 1 0-8.66 0Z"
  })),
  useralt: /* @__PURE__ */ import_react12.default.createElement(import_react12.default.Fragment, null, /* @__PURE__ */ import_react12.default.createElement("path", {
    d: "M7.27 13.16a11.39 11.39 0 0 0 5.18-1.23v-.25c0-1.57-3.24-3-4.1-3.13-.27-.05-.28-.79-.28-.79s.8-.78.96-1.83c.47 0 .75-1.12.29-1.52.02-.41.6-3.25-2.32-3.25S4.65 4 4.67 4.41c-.46.4-.17 1.52.29 1.52.17 1.05.96 1.83.96 1.83s0 .74-.27.79c-.86.13-4.04 1.53-4.1 3.08a11.44 11.44 0 0 0 5.72 1.53Z"
  })),
  useradd: /* @__PURE__ */ import_react12.default.createElement(import_react12.default.Fragment, null, /* @__PURE__ */ import_react12.default.createElement("path", {
    d: "M1.18 11.9c-.4-.17-.8-.36-1.18-.58.06-1.44 3.02-2.74 3.82-2.87.25-.04.26-.73.26-.73s-.74-.73-.9-1.7c-.43 0-.7-1.05-.27-1.42l-.01-.14c-.07-.67-.31-2.88 2.18-2.88 2.48 0 2.24 2.2 2.17 2.88l-.01.14c.43.37.16 1.41-.27 1.41-.16.98-.9 1.71-.9 1.71s.01.69.26.73c.8.13 3.82 1.46 3.82 2.91v.24a10.63 10.63 0 0 1-8.97.3ZM11.5 2.16c.28 0 .5.22.5.5v1.5h1.5a.5.5 0 0 1 0 1H12v1.5a.5.5 0 0 1-1 0v-1.5H9.5a.5.5 0 1 1 0-1H11v-1.5c0-.28.22-.5.5-.5Z"
  })),
  users: /* @__PURE__ */ import_react12.default.createElement(import_react12.default.Fragment, null, /* @__PURE__ */ import_react12.default.createElement("path", {
    d: "M9.21 11.62A10.59 10.59 0 0 1 0 11.07c.06-1.35 2.93-2.58 3.7-2.7.25-.03.26-.68.26-.68s-.72-.69-.87-1.6c-.42 0-.68-.99-.26-1.33 0-.03 0-.08-.02-.14-.07-.63-.3-2.71 2.12-2.71 2.41 0 2.18 2.08 2.11 2.71l-.01.14c.42.34.16 1.32-.26 1.32-.16.92-.87 1.6-.87 1.6s0 .66.25.7c.78.11 3.7 1.36 3.7 2.73v.22l-.64.3Z"
  }), /* @__PURE__ */ import_react12.default.createElement("path", {
    d: "M8.81 8.42a9.64 9.64 0 0 0-.74-.4 5.2 5.2 0 0 1 1.7-.76c.17-.02.17-.47.17-.47s-.49-.47-.6-1.1c-.28 0-.46-.68-.17-.91l-.01-.1c-.05-.43-.2-1.86 1.45-1.86 1.66 0 1.5 1.43 1.45 1.86v.1c.28.23.1.9-.18.9-.11.64-.6 1.11-.6 1.11s0 .45.17.47c.54.08 2.55.94 2.55 1.89v.62a10.6 10.6 0 0 1-3.3.56 2.97 2.97 0 0 0-.58-.88c-.37-.41-.85-.76-1.31-1.03Z"
  })),
  profile: /* @__PURE__ */ import_react12.default.createElement(import_react12.default.Fragment, null, /* @__PURE__ */ import_react12.default.createElement("path", {
    d: "M9.1 7.35a5.06 5.06 0 0 1-4.52-.28C4.6 6.4 6.02 5.77 6.4 5.7c.12-.02.12-.35.12-.35s-.35-.34-.43-.81c-.2 0-.33-.5-.12-.67l-.01-.07C5.93 3.48 5.81 2.42 7 2.42S8.07 3.48 8.04 3.8v.07c.2.17.07.67-.13.67-.08.47-.43.81-.43.81s0 .33.12.35c.38.06 1.82.7 1.82 1.4v.1c-.1.06-.2.1-.31.15Zm-5.35 3.9c0-.14.11-.25.25-.25h6a.25.25 0 1 1 0 .5H4a.25.25 0 0 1-.25-.25ZM4 9a.25.25 0 0 0 0 .5h6a.25.25 0 1 0 0-.5H4Z"
  }), /* @__PURE__ */ import_react12.default.createElement("path", {
    fillRule: "evenodd",
    d: "M1 .5c0-.28.22-.5.5-.5h11c.28 0 .5.22.5.5v13a.5.5 0 0 1-.5.5h-11a.5.5 0 0 1-.5-.5V.5ZM2 13V1h10v12H2Z"
  })),
  facehappy: /* @__PURE__ */ import_react12.default.createElement(import_react12.default.Fragment, null, /* @__PURE__ */ import_react12.default.createElement("path", {
    d: "M3.97 8.75a.5.5 0 0 0-.87.5 4.5 4.5 0 0 0 7.8 0 .5.5 0 1 0-.87-.5 3.5 3.5 0 0 1-6.06 0ZM5.5 5a1 1 0 1 1-2 0 1 1 0 0 1 2 0ZM9.5 6a1 1 0 1 0 0-2 1 1 0 0 0 0 2Z"
  }), /* @__PURE__ */ import_react12.default.createElement("path", {
    fillRule: "evenodd",
    d: "M14 7A7 7 0 1 1 0 7a7 7 0 0 1 14 0Zm-1 0A6 6 0 1 1 1 7a6 6 0 0 1 12 0Z"
  })),
  faceneutral: /* @__PURE__ */ import_react12.default.createElement(import_react12.default.Fragment, null, /* @__PURE__ */ import_react12.default.createElement("path", {
    d: "M4.5 9a.5.5 0 0 0 0 1h5a.5.5 0 0 0 0-1h-5ZM5.5 5a1 1 0 1 1-2 0 1 1 0 0 1 2 0ZM9.5 6a1 1 0 1 0 0-2 1 1 0 0 0 0 2Z"
  }), /* @__PURE__ */ import_react12.default.createElement("path", {
    fillRule: "evenodd",
    d: "M14 7A7 7 0 1 1 0 7a7 7 0 0 1 14 0Zm-1 0A6 6 0 1 1 1 7a6 6 0 0 1 12 0Z"
  })),
  facesad: /* @__PURE__ */ import_react12.default.createElement(import_react12.default.Fragment, null, /* @__PURE__ */ import_react12.default.createElement("path", {
    d: "M3.97 10.25a.5.5 0 0 1-.87-.5 4.5 4.5 0 0 1 7.8 0 .5.5 0 1 1-.87.5 3.5 3.5 0 0 0-6.06 0ZM5.5 5a1 1 0 1 1-2 0 1 1 0 0 1 2 0ZM9.5 6a1 1 0 1 0 0-2 1 1 0 0 0 0 2Z"
  }), /* @__PURE__ */ import_react12.default.createElement("path", {
    fillRule: "evenodd",
    d: "M14 7A7 7 0 1 1 0 7a7 7 0 0 1 14 0Zm-1 0A6 6 0 1 1 1 7a6 6 0 0 1 12 0Z"
  })),
  accessibility: /* @__PURE__ */ import_react12.default.createElement(import_react12.default.Fragment, null, /* @__PURE__ */ import_react12.default.createElement("path", {
    d: "M3.53 4.84a.5.5 0 0 1 .63-.31l2.05.68a2.5 2.5 0 0 0 1.58 0l2.05-.68a.5.5 0 0 1 .32.94L7.7 6.3a.3.3 0 0 0-.21.29v.24c0 .7.16 1.39.48 2.01l.97 1.95a.5.5 0 1 1-.9.44L7 9.12l-1.05 2.1a.5.5 0 1 1-.9-.44l.97-1.95a4.5 4.5 0 0 0 .48-2.01v-.24a.3.3 0 0 0-.2-.29l-2.46-.82a.5.5 0 0 1-.31-.63Z"
  }), /* @__PURE__ */ import_react12.default.createElement("path", {
    d: "M7 4.5a1 1 0 1 0 0-2 1 1 0 0 0 0 2Z"
  }), /* @__PURE__ */ import_react12.default.createElement("path", {
    fillRule: "evenodd",
    d: "M7 14A7 7 0 1 0 7 0a7 7 0 0 0 0 14Zm0-1A6 6 0 1 0 7 1a6 6 0 0 0 0 12Z"
  })),
  accessibilityalt: /* @__PURE__ */ import_react12.default.createElement(import_react12.default.Fragment, null, /* @__PURE__ */ import_react12.default.createElement("path", {
    d: "M7 14A7 7 0 1 0 7 0a7 7 0 0 0 0 14ZM8 3.5a1 1 0 1 1-2 0 1 1 0 0 1 2 0ZM3.53 4.84a.5.5 0 0 1 .63-.31l2.05.68a2.5 2.5 0 0 0 1.58 0l2.05-.68a.5.5 0 0 1 .32.94L7.7 6.3a.3.3 0 0 0-.21.29v.24c0 .7.16 1.39.48 2.01l.97 1.95a.5.5 0 1 1-.9.44L7 9.12l-1.05 2.1a.5.5 0 1 1-.9-.44l.97-1.95a4.5 4.5 0 0 0 .48-2.01v-.24a.3.3 0 0 0-.2-.29l-2.46-.82a.5.5 0 0 1-.31-.63Z"
  })),
  arrowup: /* @__PURE__ */ import_react12.default.createElement(import_react12.default.Fragment, null, /* @__PURE__ */ import_react12.default.createElement("path", {
    d: "m7.35 2.9 5.5 5.5a.5.5 0 0 1-.7.7L7 3.96 1.85 9.1a.5.5 0 1 1-.7-.7l5.5-5.5c.2-.2.5-.2.7 0Z"
  })),
  arrowdown: /* @__PURE__ */ import_react12.default.createElement(import_react12.default.Fragment, null, /* @__PURE__ */ import_react12.default.createElement("path", {
    d: "m1.15 5.6 5.5 5.5c.2.2.5.2.7 0l5.5-5.5a.5.5 0 0 0-.7-.7L7 10.04 1.85 4.9a.5.5 0 1 0-.7.7Z"
  })),
  arrowleft: /* @__PURE__ */ import_react12.default.createElement(import_react12.default.Fragment, null, /* @__PURE__ */ import_react12.default.createElement("path", {
    d: "M2.76 7.1c.02.09.06.18.14.25l5.5 5.5a.5.5 0 0 0 .7-.7L3.96 7 9.1 1.85a.5.5 0 1 0-.7-.7l-5.5 5.5a.5.5 0 0 0-.14.45Z"
  })),
  arrowright: /* @__PURE__ */ import_react12.default.createElement(import_react12.default.Fragment, null, /* @__PURE__ */ import_react12.default.createElement("path", {
    d: "m11.1 7.35-5.5 5.5a.5.5 0 0 1-.7-.7L10.04 7 4.9 1.85a.5.5 0 1 1 .7-.7l5.5 5.5c.2.2.2.5 0 .7Z"
  })),
  arrowupalt: /* @__PURE__ */ import_react12.default.createElement(import_react12.default.Fragment, null, /* @__PURE__ */ import_react12.default.createElement("path", {
    d: "M11.85 4.65 7.35.15a.5.5 0 0 0-.7 0l-4.5 4.5a.5.5 0 1 0 .7.7L6.5 1.71V13.5a.5.5 0 0 0 1 0V1.7l3.65 3.65a.5.5 0 0 0 .7-.7Z"
  })),
  arrowdownalt: /* @__PURE__ */ import_react12.default.createElement(import_react12.default.Fragment, null, /* @__PURE__ */ import_react12.default.createElement("path", {
    d: "M7.5.5a.5.5 0 0 0-1 0v11.8L2.85 8.64a.5.5 0 1 0-.7.7l4.5 4.5A.5.5 0 0 0 7 14a.5.5 0 0 0 .35-.15l4.5-4.5a.5.5 0 0 0-.7-.7L7.5 12.29V.5Z"
  })),
  arrowleftalt: /* @__PURE__ */ import_react12.default.createElement(import_react12.default.Fragment, null, /* @__PURE__ */ import_react12.default.createElement("path", {
    d: "M5.35 2.15c.2.2.2.5 0 .7L1.71 6.5H13.5a.5.5 0 0 1 0 1H1.7l3.65 3.65a.5.5 0 0 1-.7.7l-4.5-4.5a.5.5 0 0 1 0-.7l4.5-4.5c.2-.2.5-.2.7 0Z"
  })),
  arrowrightalt: /* @__PURE__ */ import_react12.default.createElement(import_react12.default.Fragment, null, /* @__PURE__ */ import_react12.default.createElement("path", {
    d: "M8.65 2.15c.2-.2.5-.2.7 0l4.5 4.5c.2.2.2.5 0 .7l-4.5 4.5a.5.5 0 0 1-.7-.7l3.64-3.65H.5a.5.5 0 0 1 0-1h11.8L8.64 2.85a.5.5 0 0 1 0-.7Z"
  })),
  expandalt: /* @__PURE__ */ import_react12.default.createElement(import_react12.default.Fragment, null, /* @__PURE__ */ import_react12.default.createElement("path", {
    d: "m7.35.15 4 4a.5.5 0 0 1-.7.7L7 1.21 3.35 4.85a.5.5 0 1 1-.7-.7l4-4c.2-.2.5-.2.7 0ZM11.35 9.15c.2.2.2.5 0 .7l-4 4a.5.5 0 0 1-.7 0l-4-4a.5.5 0 1 1 .7-.7L7 12.79l3.65-3.64c.2-.2.5-.2.7 0Z"
  })),
  collapse: /* @__PURE__ */ import_react12.default.createElement(import_react12.default.Fragment, null, /* @__PURE__ */ import_react12.default.createElement("path", {
    d: "M3.354.146a.5.5 0 1 0-.708.708l4 4a.5.5 0 0 0 .708 0l4-4a.5.5 0 0 0-.708-.708L7 3.793 3.354.146Zm3.292 9a.5.5 0 0 1 .708 0l4 4a.5.5 0 0 1-.708.708L7 10.207l-3.646 3.647a.5.5 0 0 1-.708-.708l4-4Z"
  })),
  expand: /* @__PURE__ */ import_react12.default.createElement(import_react12.default.Fragment, null, /* @__PURE__ */ import_react12.default.createElement("path", {
    d: "M1.5 1h2a.5.5 0 0 1 0 1h-.8l3.15 3.15a.5.5 0 1 1-.7.7L2 2.71v.79a.5.5 0 0 1-1 0v-2c0-.28.22-.5.5-.5ZM10 1.5c0-.28.22-.5.5-.5h2c.28 0 .5.22.5.5v2a.5.5 0 0 1-1 0v-.8L8.85 5.86a.5.5 0 1 1-.7-.7L11.29 2h-.79a.5.5 0 0 1-.5-.5ZM12.5 10c.28 0 .5.22.5.5v2a.5.5 0 0 1-.5.5h-2a.5.5 0 0 1 0-1h.8L8.14 8.85a.5.5 0 1 1 .7-.7L12 11.29v-.79c0-.28.22-.5.5-.5ZM2 11.3v-.8a.5.5 0 0 0-1 0v2c0 .28.22.5.5.5h2a.5.5 0 0 0 0-1h-.8l3.15-3.15a.5.5 0 1 0-.7-.7L2 11.29Z"
  })),
  unfold: /* @__PURE__ */ import_react12.default.createElement(import_react12.default.Fragment, null, /* @__PURE__ */ import_react12.default.createElement("path", {
    d: "m6.65.15-1.5 1.5a.5.5 0 1 0 .7.7l.65-.64V5a.5.5 0 0 0 1 0V1.7l.65.65a.5.5 0 1 0 .7-.7L7.35.15a.5.5 0 0 0-.7 0Z"
  }), /* @__PURE__ */ import_react12.default.createElement("path", {
    d: "M1.3 4.04a.5.5 0 0 0-.16.82L3.3 7 1.15 9.15a.5.5 0 0 0 .35.85h3a.5.5 0 0 0 0-1H2.7l1.5-1.5h5.6l2.35 2.35a.5.5 0 0 0 .7-.7L10.71 7l2.14-2.15.11-.54-.1.54A.5.5 0 0 0 13 4.5a.5.5 0 0 0-.14-.35.5.5 0 0 0-.36-.15h-3a.5.5 0 0 0 0 1h1.8L9.8 6.5H4.2L2.7 5h1.8a.5.5 0 0 0 0-1h-3a.5.5 0 0 0-.2.04Z"
  }), /* @__PURE__ */ import_react12.default.createElement("path", {
    d: "M7 8.5c.28 0 .5.22.5.5v3.3l.65-.65a.5.5 0 0 1 .7.7l-1.5 1.5a.5.5 0 0 1-.7 0l-1.5-1.5a.5.5 0 0 1 .7-.7l.65.64V9c0-.28.22-.5.5-.5ZM9 9.5c0-.28.22-.5.5-.5h3a.5.5 0 0 1 0 1h-3a.5.5 0 0 1-.5-.5Z"
  })),
  transfer: /* @__PURE__ */ import_react12.default.createElement(import_react12.default.Fragment, null, /* @__PURE__ */ import_react12.default.createElement("path", {
    d: "M10.65 2.65c.2-.2.5-.2.7 0l1.5 1.5c.2.2.2.5 0 .7l-1.5 1.5a.5.5 0 0 1-.7-.7l.64-.65H1.5a.5.5 0 0 1 0-1h9.8l-.65-.65a.5.5 0 0 1 0-.7ZM3.35 8.35 2.71 9h9.79a.5.5 0 0 1 0 1H2.7l.65.65a.5.5 0 0 1-.7.7l-1.5-1.5a.5.5 0 0 1 0-.7l1.5-1.5a.5.5 0 1 1 .7.7Z"
  })),
  redirect: /* @__PURE__ */ import_react12.default.createElement(import_react12.default.Fragment, null, /* @__PURE__ */ import_react12.default.createElement("path", {
    d: "M1.5 1c.28 0 .5.22.5.5V10a2 2 0 0 0 4 0V4a3 3 0 0 1 6 0v7.8l1.15-1.15a.5.5 0 0 1 .7.7l-2 2a.5.5 0 0 1-.7 0l-2-2a.5.5 0 0 1 .7-.7L11 11.79V4a2 2 0 1 0-4 0v6a3 3 0 0 1-6 0V1.5c0-.28.22-.5.5-.5Z"
  })),
  undo: /* @__PURE__ */ import_react12.default.createElement(import_react12.default.Fragment, null, /* @__PURE__ */ import_react12.default.createElement("path", {
    d: "M1.15 3.85a.5.5 0 0 1 0-.7l2-2a.5.5 0 1 1 .7.7L2.71 3H9a4 4 0 0 1 0 8H3a.5.5 0 0 1 0-1h6a3 3 0 1 0 0-6H2.7l1.15 1.15a.5.5 0 1 1-.7.7l-2-2Z"
  })),
  reply: /* @__PURE__ */ import_react12.default.createElement(import_react12.default.Fragment, null, /* @__PURE__ */ import_react12.default.createElement("path", {
    d: "M4.35 2.15c.2.2.2.5 0 .7L1.71 5.5H9.5A4.5 4.5 0 0 1 14 10v1.5a.5.5 0 0 1-1 0V10a3.5 3.5 0 0 0-3.5-3.5H1.7l2.65 2.65a.5.5 0 1 1-.7.7l-3.5-3.5a.5.5 0 0 1 0-.7l3.5-3.5c.2-.2.5-.2.7 0Z"
  })),
  sync: /* @__PURE__ */ import_react12.default.createElement(import_react12.default.Fragment, null, /* @__PURE__ */ import_react12.default.createElement("path", {
    d: "M5.5 1A.5.5 0 0 0 5 .5H2a.5.5 0 0 0 0 1h1.53a6.5 6.5 0 0 0 2.39 11.91.5.5 0 1 0 .16-.99A5.5 5.5 0 0 1 4.5 2.1V4a.5.5 0 0 0 1 0V1ZM7.5 1a.5.5 0 0 1 .58-.41 6.5 6.5 0 0 1 2.39 11.91H12a.5.5 0 0 1 0 1H9a.5.5 0 0 1-.5-.5v-3a.5.5 0 0 1 1 0v1.9A5.5 5.5 0 0 0 7.92 1.58.5.5 0 0 1 7.5 1Z"
  })),
  upload: /* @__PURE__ */ import_react12.default.createElement(import_react12.default.Fragment, null, /* @__PURE__ */ import_react12.default.createElement("path", {
    d: "M8.65 5.85 7.5 4.71v5.79a.5.5 0 0 1-1 0V4.7L5.35 5.86a.5.5 0 1 1-.7-.7l2-2c.2-.2.5-.2.7 0l2 2a.5.5 0 1 1-.7.7Z"
  }), /* @__PURE__ */ import_react12.default.createElement("path", {
    fillRule: "evenodd",
    d: "M14 7A7 7 0 1 1 0 7a7 7 0 0 1 14 0Zm-1 0A6 6 0 1 1 1 7a6 6 0 0 1 12 0Z"
  })),
  download: /* @__PURE__ */ import_react12.default.createElement(import_react12.default.Fragment, null, /* @__PURE__ */ import_react12.default.createElement("path", {
    d: "M5.35 8.15 6.5 9.29V3.5a.5.5 0 0 1 1 0v5.8l1.15-1.15a.5.5 0 1 1 .7.7l-2 2a.5.5 0 0 1-.7 0l-2-2a.5.5 0 1 1 .7-.7Z"
  }), /* @__PURE__ */ import_react12.default.createElement("path", {
    fillRule: "evenodd",
    d: "M0 7a7 7 0 1 1 14 0A7 7 0 0 1 0 7Zm1 0a6 6 0 1 1 12 0A6 6 0 0 1 1 7Z"
  })),
  back: /* @__PURE__ */ import_react12.default.createElement(import_react12.default.Fragment, null, /* @__PURE__ */ import_react12.default.createElement("path", {
    d: "M5.85 5.35 4.71 6.5h5.79a.5.5 0 0 1 0 1H4.7l1.15 1.15a.5.5 0 1 1-.7.7l-2-2a.5.5 0 0 1 0-.7l2-2a.5.5 0 1 1 .7.7Z"
  }), /* @__PURE__ */ import_react12.default.createElement("path", {
    fillRule: "evenodd",
    d: "M7 0a7 7 0 1 1 0 14A7 7 0 0 1 7 0Zm0 1a6 6 0 1 1 0 12A6 6 0 0 1 7 1Z"
  })),
  proceed: /* @__PURE__ */ import_react12.default.createElement(import_react12.default.Fragment, null, /* @__PURE__ */ import_react12.default.createElement("path", {
    d: "M3.5 6.5h5.8L8.14 5.35a.5.5 0 1 1 .7-.7l2 2c.2.2.2.5 0 .7l-2 2a.5.5 0 1 1-.7-.7L9.29 7.5H3.5a.5.5 0 0 1 0-1Z"
  }), /* @__PURE__ */ import_react12.default.createElement("path", {
    fillRule: "evenodd",
    d: "M7 14A7 7 0 1 1 7 0a7 7 0 0 1 0 14Zm0-1A6 6 0 1 1 7 1a6 6 0 0 1 0 12Z"
  })),
  refresh: /* @__PURE__ */ import_react12.default.createElement(import_react12.default.Fragment, null, /* @__PURE__ */ import_react12.default.createElement("path", {
    d: "M7.1.5H7a6.5 6.5 0 1 0 6.41 7.58.5.5 0 1 0-.99-.16A5.47 5.47 0 0 1 7 12.5a5.5 5.5 0 0 1 0-11 5.5 5.5 0 0 1 4.9 3H10a.5.5 0 0 0 0 1h3a.5.5 0 0 0 .5-.5V2a.5.5 0 0 0-1 0v1.53A6.5 6.5 0 0 0 7.1.5Z"
  })),
  globe: /* @__PURE__ */ import_react12.default.createElement(import_react12.default.Fragment, null, /* @__PURE__ */ import_react12.default.createElement("path", {
    fillRule: "evenodd",
    d: "M14 7A7 7 0 1 0 0 7a7 7 0 0 0 14 0Zm-6.53 5.74c-.24.23-.4.26-.47.26-.08 0-.23-.03-.47-.26-.23-.24-.5-.62-.73-1.18A11.57 11.57 0 0 1 5 7.5h4a11.57 11.57 0 0 1-.8 4.06c-.24.56-.5.94-.73 1.18ZM8.99 6.5H5.01c.05-1.62.35-3.04.79-4.06.24-.56.5-.94.73-1.18.24-.23.4-.26.47-.26.08 0 .23.03.47.26.23.24.5.62.73 1.18.44 1.02.74 2.44.8 4.06Zm1 1c-.06 2.18-.56 4.08-1.28 5.25a6 6 0 0 0 4.27-5.25H9.99Zm2.99-1H9.99c-.06-2.18-.56-4.08-1.28-5.25a6 6 0 0 1 4.27 5.25ZM4 6.5c.06-2.18.56-4.08 1.28-5.25A6 6 0 0 0 1.02 6.5h2.99Zm-2.99 1a6 6 0 0 0 4.27 5.25c-.72-1.17-1.22-3.07-1.28-5.25H1.02Z"
  })),
  compass: /* @__PURE__ */ import_react12.default.createElement(import_react12.default.Fragment, null, /* @__PURE__ */ import_react12.default.createElement("path", {
    fillRule: "evenodd",
    d: "M10.09 3.4 5.95 5.8a.37.37 0 0 0-.11.09.38.38 0 0 0-.04.05l-2.4 4.15a.37.37 0 0 0 0 .38c.1.18.33.24.5.14l4.15-2.4a.37.37 0 0 0 .15-.15l2.4-4.15a.37.37 0 0 0-.03-.44.37.37 0 0 0-.48-.07ZM4.75 9.25 7.6 7.6 6.4 6.4 4.75 9.25Z"
  }), /* @__PURE__ */ import_react12.default.createElement("path", {
    fillRule: "evenodd",
    d: "M14 7A7 7 0 1 1 0 7a7 7 0 0 1 14 0Zm-1 0A6 6 0 1 1 1 7a6 6 0 0 1 12 0Z"
  })),
  location: /* @__PURE__ */ import_react12.default.createElement(import_react12.default.Fragment, null, /* @__PURE__ */ import_react12.default.createElement("path", {
    fillRule: "evenodd",
    d: "M0 7a7 7 0 1 1 14 0A7 7 0 0 1 0 7Zm6.5 3.5v2.48A6 6 0 0 1 1.02 7.5H3.5a.5.5 0 0 0 0-1H1.02A6 6 0 0 1 6.5 1.02V3.5a.5.5 0 0 0 1 0V1.02a6 6 0 0 1 5.48 5.48H10.5a.5.5 0 0 0 0 1h2.48a6 6 0 0 1-5.48 5.48V10.5a.5.5 0 0 0-1 0Z"
  })),
  pin: /* @__PURE__ */ import_react12.default.createElement(import_react12.default.Fragment, null, /* @__PURE__ */ import_react12.default.createElement("path", {
    fillRule: "evenodd",
    d: "M9 5a2 2 0 1 1-4 0 2 2 0 0 1 4 0ZM8 5a1 1 0 1 1-2 0 1 1 0 0 1 2 0Z"
  }), /* @__PURE__ */ import_react12.default.createElement("path", {
    fillRule: "evenodd",
    d: "M12 5A5 5 0 0 0 2 5c0 2.63 2.27 6.15 4.65 8.64.2.2.5.2.7 0C9.73 11.15 12 7.64 12 5ZM7 1a4 4 0 0 1 4 4c0 1.06-.47 2.42-1.3 3.88A21.23 21.23 0 0 1 7 12.55c-1-1.1-1.97-2.39-2.7-3.67A8.46 8.46 0 0 1 3 5a4 4 0 0 1 4-4Z"
  })),
  time: /* @__PURE__ */ import_react12.default.createElement(import_react12.default.Fragment, null, /* @__PURE__ */ import_react12.default.createElement("path", {
    d: "M7 2c.28 0 .5.22.5.5v4H10a.5.5 0 0 1 0 1H7a.5.5 0 0 1-.5-.5V2.5c0-.28.22-.5.5-.5Z"
  }), /* @__PURE__ */ import_react12.default.createElement("path", {
    fillRule: "evenodd",
    d: "M7 14A7 7 0 1 0 7 0a7 7 0 0 0 0 14Zm0-1A6 6 0 1 0 7 1a6 6 0 0 0 0 12Z"
  })),
  dashboard: /* @__PURE__ */ import_react12.default.createElement(import_react12.default.Fragment, null, /* @__PURE__ */ import_react12.default.createElement("path", {
    d: "M9.8 4.1a.5.5 0 0 1 .1.7L7.92 7.58A1 1 0 1 1 7.1 7l2-2.8a.5.5 0 0 1 .7-.12Z"
  }), /* @__PURE__ */ import_react12.default.createElement("path", {
    fillRule: "evenodd",
    d: "M2.07 12.97a7 7 0 1 1 9.86 0 12.96 12.96 0 0 0-9.86 0Zm9.58-1.18a6 6 0 1 0-9.3 0 13.98 13.98 0 0 1 9.3 0Z"
  })),
  timer: /* @__PURE__ */ import_react12.default.createElement(import_react12.default.Fragment, null, /* @__PURE__ */ import_react12.default.createElement("path", {
    d: "M7.5 4.5a.5.5 0 0 0-1 0v2.63a1 1 0 1 0 1 0V4.5Z"
  }), /* @__PURE__ */ import_react12.default.createElement("path", {
    fillRule: "evenodd",
    d: "M5.5.5c0-.28.22-.5.5-.5h2a.5.5 0 0 1 0 1h-.5v1.02c1.28.1 2.45.61 3.37 1.4l.78-.77a.5.5 0 0 1 .7.7l-.77.78a6 6 0 1 1-5.08-2.1V1H6a.5.5 0 0 1-.5-.5ZM7 3a5 5 0 1 0 0 10A5 5 0 0 0 7 3Z"
  })),
  home: /* @__PURE__ */ import_react12.default.createElement(import_react12.default.Fragment, null, /* @__PURE__ */ import_react12.default.createElement("path", {
    d: "m7.35 1.15 5.5 5.5a.5.5 0 0 1-.7.7L12 7.21v5.29a.5.5 0 0 1-.5.5h-3a.5.5 0 0 1-.5-.5V9H6v3.5a.5.5 0 0 1-.5.5h-3a.5.5 0 0 1-.5-.5V7.2l-.15.15a.5.5 0 1 1-.7-.7l1-1 4.5-4.5c.2-.2.5-.2.7 0ZM3 6.2V12h2V8.5c0-.28.22-.5.5-.5h3c.28 0 .5.22.5.5V12h2V6.2l-4-4-4 4Z"
  })),
  admin: /* @__PURE__ */ import_react12.default.createElement(import_react12.default.Fragment, null, /* @__PURE__ */ import_react12.default.createElement("path", {
    fillRule: "evenodd",
    d: "M1.21 4.1a.5.5 0 0 1 .06-.04l5.48-3a.5.5 0 0 1 .5 0l5.48 3a.5.5 0 0 1 .27.39.5.5 0 0 1-.51.55H1.51a.5.5 0 0 1-.3-.9ZM3.46 4h7.08L7 2.07 3.46 4Z"
  }), /* @__PURE__ */ import_react12.default.createElement("path", {
    d: "M4 6a.5.5 0 1 0-1 0v5a.5.5 0 0 0 1 0V6ZM11 6a.5.5 0 0 0-1 0v5a.5.5 0 0 0 1 0V6ZM5.75 5.5c.28 0 .5.22.5.5v5a.5.5 0 0 1-1 0V6c0-.28.22-.5.5-.5ZM8.75 6a.5.5 0 1 0-1 0v5a.5.5 0 0 0 1 0V6ZM1.5 12.5c0-.27.22-.5.5-.5h10a.5.5 0 0 1 0 1H2a.5.5 0 0 1-.5-.5Z"
  })),
  info: /* @__PURE__ */ import_react12.default.createElement(import_react12.default.Fragment, null, /* @__PURE__ */ import_react12.default.createElement("path", {
    d: "M7 5.5c.28 0 .5.22.5.5v4a.5.5 0 0 1-1 0V6c0-.28.22-.5.5-.5ZM7 4.5A.75.75 0 1 0 7 3a.75.75 0 0 0 0 1.5Z"
  }), /* @__PURE__ */ import_react12.default.createElement("path", {
    fillRule: "evenodd",
    d: "M7 14A7 7 0 1 0 7 0a7 7 0 0 0 0 14Zm0-1A6 6 0 1 0 7 1a6 6 0 0 0 0 12Z"
  })),
  question: /* @__PURE__ */ import_react12.default.createElement(import_react12.default.Fragment, null, /* @__PURE__ */ import_react12.default.createElement("path", {
    d: "M5.25 5.25A1.75 1.75 0 1 1 7 7a.5.5 0 0 0-.5.5V9a.5.5 0 0 0 1 0V7.95a2.75 2.75 0 1 0-3.25-2.7.5.5 0 0 0 1 0ZM7 11.5A.75.75 0 1 0 7 10a.75.75 0 0 0 0 1.5Z"
  }), /* @__PURE__ */ import_react12.default.createElement("path", {
    fillRule: "evenodd",
    d: "M14 7A7 7 0 1 1 0 7a7 7 0 0 1 14 0Zm-1 0A6 6 0 1 1 1 7a6 6 0 0 1 12 0Z"
  })),
  support: /* @__PURE__ */ import_react12.default.createElement(import_react12.default.Fragment, null, /* @__PURE__ */ import_react12.default.createElement("path", {
    fillRule: "evenodd",
    d: "M14 7A7 7 0 1 1 0 7a7 7 0 0 1 14 0Zm-3.52 4.9a5.97 5.97 0 0 1-6.96 0l1.45-1.45a3.98 3.98 0 0 0 4.06 0l1.45 1.44Zm-.03-2.87 1.44 1.45a5.97 5.97 0 0 0 0-6.96l-1.44 1.45a3.98 3.98 0 0 1 0 4.06ZM9.03 3.55l1.45-1.44a5.97 5.97 0 0 0-6.96 0l1.45 1.44a3.98 3.98 0 0 1 4.06 0ZM3.55 4.97 2.11 3.52a5.97 5.97 0 0 0 0 6.96l1.44-1.45a3.98 3.98 0 0 1 0-4.06ZM10 7a3 3 0 1 1-6 0 3 3 0 0 1 6 0Z"
  })),
  alert: /* @__PURE__ */ import_react12.default.createElement(import_react12.default.Fragment, null, /* @__PURE__ */ import_react12.default.createElement("path", {
    d: "M7 4.5c.28 0 .5.22.5.5v3.5a.5.5 0 0 1-1 0V5c0-.28.22-.5.5-.5ZM7.75 10.5a.75.75 0 1 1-1.5 0 .75.75 0 0 1 1.5 0Z"
  }), /* @__PURE__ */ import_react12.default.createElement("path", {
    fillRule: "evenodd",
    d: "M7.2 1.04a.5.5 0 0 1 .24.21l6.49 11a.5.5 0 0 1-.44.75H.51a.5.5 0 0 1-.5-.45.5.5 0 0 1 .06-.31l6.5-10.99a.5.5 0 0 1 .64-.2ZM7 2.48 1.38 12h11.24L7 2.48Z"
  })),
  email: /* @__PURE__ */ import_react12.default.createElement(import_react12.default.Fragment, null, /* @__PURE__ */ import_react12.default.createElement("path", {
    d: "M0 2.5c0-.27.22-.5.5-.5h13c.28 0 .5.23.5.5v9a.5.5 0 0 1-.5.5H.5a.5.5 0 0 1-.5-.5v-9Zm1 1.02V11h12V3.52L7.31 7.89a.5.5 0 0 1-.52.07.5.5 0 0 1-.1-.07L1 3.52ZM12.03 3H1.97L7 6.87 12.03 3Z"
  })),
  phone: /* @__PURE__ */ import_react12.default.createElement(import_react12.default.Fragment, null, /* @__PURE__ */ import_react12.default.createElement("path", {
    fillRule: "evenodd",
    d: "m7.76 8.13-.05.05a.2.2 0 0 1-.28.03A6.76 6.76 0 0 1 5.8 6.56a.21.21 0 0 1 .04-.27l.05-.05c.23-.2.54-.47.71-.96.17-.47-.02-1.04-.66-1.94-.26-.38-.72-.96-1.22-1.46-.68-.69-1.2-1-1.65-1a.98.98 0 0 0-.51.13A3.23 3.23 0 0 0 .9 3.42c-.13 1.1.26 2.37 1.17 3.78a16.68 16.68 0 0 0 4.55 4.6 6.57 6.57 0 0 0 3.53 1.32A3.2 3.2 0 0 0 13 11.46c.14-.24.24-.64-.07-1.18a7.8 7.8 0 0 0-1.73-1.8c-.64-.5-1.52-1.12-2.13-1.12a.97.97 0 0 0-.34.06c-.47.17-.74.46-.95.69l-.02.02Zm4.32 2.68a6.8 6.8 0 0 0-1.48-1.54h-.02c-.3-.25-.64-.49-.95-.67a2.7 2.7 0 0 0-.56-.24h-.01c-.23.09-.34.21-.56.45l-.02.02-.04.04a1.2 1.2 0 0 1-1.6.15 7.76 7.76 0 0 1-1.86-1.89l-.01-.01-.02-.02a1.21 1.21 0 0 1 .2-1.53l.06-.06.02-.02c.22-.2.35-.31.43-.53v-.02c0-.02 0-.06-.03-.14a3.7 3.7 0 0 0-.5-.88h-.01V3.9c-.23-.33-.65-.87-1.1-1.32H4c-.31-.32-.55-.5-.72-.6a.6.6 0 0 0-.22-.1h-.03a2.23 2.23 0 0 0-1.15 1.66c-.09.78.18 1.8 1.02 3.1a15.68 15.68 0 0 0 4.27 4.33l.02.01.02.02a5.57 5.57 0 0 0 2.97 1.11 2.2 2.2 0 0 0 1.93-1.14h.01v-.05a.57.57 0 0 0-.05-.12Z"
  })),
  link: /* @__PURE__ */ import_react12.default.createElement(import_react12.default.Fragment, null, /* @__PURE__ */ import_react12.default.createElement("path", {
    d: "M11.84 2.16a2.25 2.25 0 0 0-3.18 0l-2.5 2.5c-.88.88-.88 2.3 0 3.18a.5.5 0 0 1-.7.7 3.25 3.25 0 0 1 0-4.59l2.5-2.5a3.25 3.25 0 0 1 4.59 4.6L10.48 8.1c.04-.44.01-.89-.09-1.32l1.45-1.45c.88-.88.88-2.3 0-3.18Z"
  }), /* @__PURE__ */ import_react12.default.createElement("path", {
    d: "M3.6 7.2c-.1-.42-.12-.87-.08-1.31L1.45 7.95a3.25 3.25 0 1 0 4.6 4.6l2.5-2.5a3.25 3.25 0 0 0 0-4.6.5.5 0 0 0-.7.7c.87.89.87 2.31 0 3.2l-2.5 2.5a2.25 2.25 0 1 1-3.2-3.2l1.46-1.44Z"
  })),
  unlink: /* @__PURE__ */ import_react12.default.createElement(import_react12.default.Fragment, null, /* @__PURE__ */ import_react12.default.createElement("path", {
    d: "m1.45 7.95 1.3-1.3.71.7-1.3 1.3a2.25 2.25 0 1 0 3.18 3.2l1.3-1.31.71.7-1.3 1.3a3.25 3.25 0 0 1-4.6-4.59ZM12.55 6.05l-1.3 1.3-.71-.7 1.3-1.3a2.25 2.25 0 1 0-3.18-3.2l-1.3 1.31-.71-.7 1.3-1.3a3.25 3.25 0 0 1 4.6 4.59ZM1.85 1.15a.5.5 0 1 0-.7.7l11 11a.5.5 0 0 0 .7-.7l-11-11Z"
  })),
  bell: /* @__PURE__ */ import_react12.default.createElement(import_react12.default.Fragment, null, /* @__PURE__ */ import_react12.default.createElement("path", {
    fillRule: "evenodd",
    d: "M8 1.11a1 1 0 1 0-1.99 0A4.5 4.5 0 0 0 2.5 5.5v3.88l-.94 1.89a.5.5 0 0 0-.06.3.5.5 0 0 0 .51.43h3.58a1.5 1.5 0 1 0 2.82 0H12a.5.5 0 0 0 .45-.73l-.94-1.89V5.5A4.5 4.5 0 0 0 8 1.11ZM2.8 11h8.4l-.5-1H3.3l-.5 1Zm7.7-2V5.5a3.5 3.5 0 1 0-7 0V9h7Zm-4 3.5a.5.5 0 1 1 1 0 .5.5 0 0 1-1 0Z"
  })),
  rss: /* @__PURE__ */ import_react12.default.createElement(import_react12.default.Fragment, null, /* @__PURE__ */ import_react12.default.createElement("path", {
    d: "M1.5.5c0-.28.22-.5.5-.5a12 12 0 0 1 12 12 .5.5 0 0 1-1 0A11 11 0 0 0 2 1a.5.5 0 0 1-.5-.5Z"
  }), /* @__PURE__ */ import_react12.default.createElement("path", {
    d: "M1.5 4.5c0-.28.22-.5.5-.5a8 8 0 0 1 8 8 .5.5 0 0 1-1 0 7 7 0 0 0-7-7 .5.5 0 0 1-.5-.5Z"
  }), /* @__PURE__ */ import_react12.default.createElement("path", {
    fillRule: "evenodd",
    d: "M5 11a2 2 0 1 1-4 0 2 2 0 0 1 4 0Zm-1 0a1 1 0 1 1-2 0 1 1 0 0 1 2 0Z"
  })),
  sharealt: /* @__PURE__ */ import_react12.default.createElement(import_react12.default.Fragment, null, /* @__PURE__ */ import_react12.default.createElement("path", {
    d: "M2 1a1 1 0 0 0-1 1v10a1 1 0 0 0 1 1h10a1 1 0 0 0 1-1V7.5a.5.5 0 0 0-1 0V12H2V2h4.5a.5.5 0 0 0 0-1H2Z"
  }), /* @__PURE__ */ import_react12.default.createElement("path", {
    d: "M7.35 7.36 12 2.7v1.8a.5.5 0 0 0 1 0v-3a.5.5 0 0 0-.5-.5h-3a.5.5 0 1 0 0 1h1.8L6.64 6.64a.5.5 0 1 0 .7.7Z"
  })),
  share: /* @__PURE__ */ import_react12.default.createElement(import_react12.default.Fragment, null, /* @__PURE__ */ import_react12.default.createElement("path", {
    d: "M6.65.15c.2-.2.5-.2.7 0l2 2a.5.5 0 1 1-.7.7L7.5 1.72v6.8a.5.5 0 0 1-1 0V1.7L5.35 2.86a.5.5 0 1 1-.7-.71l2-2Z"
  }), /* @__PURE__ */ import_react12.default.createElement("path", {
    d: "M2 4a1 1 0 0 0-1 1v7a1 1 0 0 0 1 1h10a1 1 0 0 0 1-1V5a1 1 0 0 0-1-1H9.5a.5.5 0 1 0 0 1H12v7H2V5h2.5a.5.5 0 0 0 0-1H2Z"
  })),
  circlehollow: /* @__PURE__ */ import_react12.default.createElement(import_react12.default.Fragment, null, /* @__PURE__ */ import_react12.default.createElement("path", {
    fillRule: "evenodd",
    d: "M7 13A6 6 0 1 0 7 1a6 6 0 0 0 0 12Zm0 1A7 7 0 1 0 7 0a7 7 0 0 0 0 14Z"
  })),
  circle: /* @__PURE__ */ import_react12.default.createElement("path", {
    d: "M14 7A7 7 0 1 1 0 7a7 7 0 0 1 14 0Z"
  }),
  bookmarkhollow: /* @__PURE__ */ import_react12.default.createElement(import_react12.default.Fragment, null, /* @__PURE__ */ import_react12.default.createElement("path", {
    fillRule: "evenodd",
    d: "M3.5 0h7c.28 0 .5.22.5.5v13a.5.5 0 0 1-.45.5.46.46 0 0 1-.38-.12L7 11.16l-3.17 2.72a.46.46 0 0 1-.38.12.5.5 0 0 1-.45-.5V.5c0-.28.22-.5.5-.5ZM4 12.41l2.66-2.28a.45.45 0 0 1 .38-.13c.1.01.2.05.29.12l2.67 2.3V1H4v11.41Z"
  })),
  bookmark: /* @__PURE__ */ import_react12.default.createElement(import_react12.default.Fragment, null, /* @__PURE__ */ import_react12.default.createElement("path", {
    fillRule: "evenodd",
    d: "M3.5 0h7c.28 0 .5.22.5.5v13a.5.5 0 0 1-.45.5.46.46 0 0 1-.38-.12L7 11.16l-3.17 2.72a.46.46 0 0 1-.38.12.5.5 0 0 1-.45-.5V.5c0-.28.22-.5.5-.5Z"
  })),
  hearthollow: /* @__PURE__ */ import_react12.default.createElement(import_react12.default.Fragment, null, /* @__PURE__ */ import_react12.default.createElement("path", {
    fillRule: "evenodd",
    d: "M12.81 1.85 13 2a2.97 2.97 0 0 1 .75 1.17 4.39 4.39 0 0 1 .12 2.51 6.26 6.26 0 0 1-1.65 2.55l-4.78 4.6A.59.59 0 0 1 7 13a.67.67 0 0 1-.44-.17L1.78 8.22a7.84 7.84 0 0 1-1.25-1.6C.37 6.31.24 6 .14 5.67a4.32 4.32 0 0 1 .12-2.51 3.2 3.2 0 0 1 1.95-1.9c.47-.18 1-.27 1.57-.27.3 0 .61.04.91.14.3.09.59.21.86.36s.52.33.77.52c.24.19.47.38.68.58a7.56 7.56 0 0 1 1.46-1.1c.27-.15.55-.27.84-.36.3-.1.6-.14.9-.14.59 0 1.12.09 1.59.26.39.15.73.34 1.02.59ZM1.2 3.53A2.2 2.2 0 0 1 2.57 2.2M1.2 3.53c-.13.33-.2.72-.2 1.18 0 .22.03.45.1.68a3.97 3.97 0 0 0 .79 1.46c.19.23.38.45.59.65l4.51 4.36 4.52-4.35c.2-.2.4-.4.59-.65.18-.23.34-.47.49-.73.13-.23.23-.48.3-.73.08-.23.11-.46.11-.7 0-.45-.07-.84-.2-1.18-.12-.33-.3-.6-.51-.8v-.01c-.22-.2-.5-.38-.85-.51-.34-.13-.75-.2-1.24-.2-.2 0-.4.03-.6.09a4.95 4.95 0 0 0-1.9 1.22l-.68.67-.7-.65a9.97 9.97 0 0 0-.62-.53c-.2-.16-.42-.3-.63-.42h-.01c-.21-.12-.43-.22-.66-.29C4.2 2.03 4 2 3.77 2c-.48 0-.88.07-1.21.2"
  })),
  heart: /* @__PURE__ */ import_react12.default.createElement(import_react12.default.Fragment, null, /* @__PURE__ */ import_react12.default.createElement("path", {
    d: "M12.81 1.85 13 2a2.97 2.97 0 0 1 .75 1.17 4.39 4.39 0 0 1 .12 2.51 6.26 6.26 0 0 1-1.65 2.55l-4.78 4.6A.59.59 0 0 1 7 13a.67.67 0 0 1-.44-.17L1.78 8.22a7.84 7.84 0 0 1-1.25-1.6C.37 6.31.24 6 .14 5.67a4.32 4.32 0 0 1 .12-2.51 3.2 3.2 0 0 1 1.95-1.9c.47-.18 1-.27 1.57-.27.3 0 .61.04.91.14.3.09.59.21.86.36s.52.33.77.52c.24.19.47.38.68.58a7.56 7.56 0 0 1 1.46-1.1c.27-.15.55-.27.84-.36.3-.1.6-.14.9-.14.59 0 1.12.09 1.59.26.39.15.73.34 1.02.59Z"
  })),
  starhollow: /* @__PURE__ */ import_react12.default.createElement(import_react12.default.Fragment, null, /* @__PURE__ */ import_react12.default.createElement("path", {
    d: "M6.32.78a.75.75 0 0 1 1.36 0l1.63 3.54 3.87.46c.63.07.89.86.42 1.3l-2.86 2.64.76 3.81a.75.75 0 0 1-1.1.8L7 11.43l-3.4 1.9a.75.75 0 0 1-1.1-.8l.76-3.81L.4 6.07a.75.75 0 0 1 .42-1.3l3.87-.45L6.32.78ZM7 1.7 5.54 4.86c-.11.24-.34.4-.6.43l-3.46.42 2.56 2.37c.2.17.28.44.23.7l-.68 3.42 3.04-1.7c.23-.14.5-.14.74 0l3.04 1.7-.68-3.43a.75.75 0 0 1 .23-.7l2.56-2.36-3.47-.42a.75.75 0 0 1-.59-.43L7 1.7Z"
  })),
  star: /* @__PURE__ */ import_react12.default.createElement(import_react12.default.Fragment, null, /* @__PURE__ */ import_react12.default.createElement("path", {
    d: "M7.68.78a.75.75 0 0 0-1.36 0L4.69 4.32l-3.87.46a.75.75 0 0 0-.42 1.3l2.86 2.64-.76 3.81a.75.75 0 0 0 1.1.8l3.4-1.9 3.4 1.9a.75.75 0 0 0 1.1-.8l-.76-3.81 2.86-2.65a.75.75 0 0 0-.42-1.3L9.3 4.33 7.68.78Z"
  })),
  certificate: /* @__PURE__ */ import_react12.default.createElement(import_react12.default.Fragment, null, /* @__PURE__ */ import_react12.default.createElement("path", {
    fillRule: "evenodd",
    d: "M10 7.85A4.49 4.49 0 0 0 7 0a4.5 4.5 0 0 0-3 7.85V13a.5.5 0 0 0 .5.5.5.5 0 0 0 .35-.15L7 11.21l2.15 2.14A.5.5 0 0 0 10 13V7.85ZM7 8a3.5 3.5 0 1 0 0-7 3.5 3.5 0 0 0 0 7Zm-.35 2.15c.2-.2.5-.2.7 0L9 11.79V8.53a4.48 4.48 0 0 1-4 0v3.26l1.65-1.64Z"
  })),
  verified: /* @__PURE__ */ import_react12.default.createElement(import_react12.default.Fragment, null, /* @__PURE__ */ import_react12.default.createElement("path", {
    d: "M6.56 13.12a1 1 0 0 1 .88 0l.98.49a1 1 0 0 0 1.31-.43l.52-.97a1 1 0 0 1 .7-.51l1.08-.2a1 1 0 0 0 .81-1.1l-.15-1.1a1 1 0 0 1 .27-.82l.76-.8a1 1 0 0 0 0-1.37l-.76-.79a1 1 0 0 1-.27-.83l.15-1.08a1 1 0 0 0-.8-1.12l-1.09-.19a1 1 0 0 1-.7-.5L9.73.81A1 1 0 0 0 8.43.4l-1 .49a1 1 0 0 1-.87 0L5.58.39a1 1 0 0 0-1.31.43l-.52.97a1 1 0 0 1-.7.51l-1.08.2a1 1 0 0 0-.81 1.1l.15 1.1a1 1 0 0 1-.27.82l-.76.8a1 1 0 0 0 0 1.37l.76.79a1 1 0 0 1 .27.83l-.15 1.08a1 1 0 0 0 .8 1.12l1.09.19a1 1 0 0 1 .7.5l.52.98a1 1 0 0 0 1.3.43l1-.49Zm4.3-8.47c.19.2.19.5 0 .7l-4.5 4.5a.5.5 0 0 1-.71 0l-2.5-2.5a.5.5 0 1 1 .7-.7L6 8.79l4.15-4.14c.2-.2.5-.2.7 0Z"
  })),
  thumbsup: /* @__PURE__ */ import_react12.default.createElement(import_react12.default.Fragment, null, /* @__PURE__ */ import_react12.default.createElement("path", {
    d: "M11 12.02c-.4.37-.91.56-1.56.56h-.88a5.5 5.5 0 0 1-1.3-.16c-.42-.1-.91-.25-1.47-.45-.3-.12-.63-.21-.95-.27H2.88a.84.84 0 0 1-.62-.26.84.84 0 0 1-.26-.61V6.45c0-.24.09-.45.26-.62a.84.84 0 0 1 .62-.25h1.87c.16-.11.47-.47.93-1.06.27-.35.51-.64.74-.88.1-.11.19-.3.24-.58.05-.28.12-.57.2-.87.1-.3.24-.55.43-.74a.87.87 0 0 1 .62-.25c.38 0 .72.07 1.03.22.3.15.54.38.7.7a2.94 2.94 0 0 1 .21 1.58 3 3 0 0 1-.3 1h1.2c.47 0 .88.17 1.23.52s.52.8.52 1.22c0 .29-.04.66-.34 1.12.05.15.07.3.07.47 0 .35-.09.68-.26.98.07.54-.07 1.08-.4 1.51a1.9 1.9 0 0 1-.57 1.5Zm.47-5.33a.96.96 0 0 0 .03-.25.74.74 0 0 0-.23-.51.68.68 0 0 0-.52-.23H7.93l.73-1.45a2 2 0 0 0 .21-.87c0-.44-.07-.7-.13-.82a.53.53 0 0 0-.24-.24 1.3 1.3 0 0 0-.54-.12.99.99 0 0 0-.14.28c-.08.27-.13.52-.18.76-.06.38-.2.77-.48 1.07v.01l-.02.01c-.2.2-.4.46-.67.8l-.61.76c-.15.17-.35.38-.54.51l-.26.18H5v4.13h.02c.38.08.76.18 1.12.32.53.2.98.33 1.35.42.36.09.71.13 1.07.13h.88c.43 0 .68-.11.87-.29a.9.9 0 0 0 .26-.7l-.02-.37.22-.3c.17-.23.25-.5.2-.78l-.04-.33.17-.3a.97.97 0 0 0 .13-.48c0-.09 0-.13-.02-.15l-.15-.46.26-.4c.1-.15.13-.25.15-.33ZM3.5 10.8a.5.5 0 1 0 0-1 .5.5 0 0 0 0 1Z"
  })),
  shield: /* @__PURE__ */ import_react12.default.createElement(import_react12.default.Fragment, null, /* @__PURE__ */ import_react12.default.createElement("path", {
    fillRule: "evenodd",
    d: "M11.76 2.08a.5.5 0 0 1 .24.42v6a.5.5 0 0 1-.17.38l-4.5 3.99a.5.5 0 0 1-.67 0l-4.49-4A.5.5 0 0 1 2 8.5V2.5c0-.18.1-.34.24-.42l.01-.02a2.5 2.5 0 0 1 .3-.16c.22-.1.52-.24.92-.37C4.27 1.26 5.44 1 7 1c1.56 0 2.73.26 3.53.53a6.97 6.97 0 0 1 1.22.53l.01.02ZM3 2.79v5.49l1.07.94 6.59-6.58-.44-.17C9.52 2.24 8.44 2 7 2c-1.44 0-2.52.24-3.22.47-.35.12-.6.24-.78.32Zm4 9.04L4.82 9.9 11 3.71v4.57l-4 3.55Z"
  })),
  basket: /* @__PURE__ */ import_react12.default.createElement(import_react12.default.Fragment, null, /* @__PURE__ */ import_react12.default.createElement("path", {
    d: "M10.35 2.85a.5.5 0 1 0-.7-.7l-3 3a.5.5 0 1 0 .7.7l3-3Z"
  }), /* @__PURE__ */ import_react12.default.createElement("path", {
    d: "M2.09 6H4.5a.5.5 0 0 0 0-1H1.8a.75.75 0 0 0-.74.87l.8 4.88A1.5 1.5 0 0 0 3.36 12h7.3a1.5 1.5 0 0 0 1.48-1.25l.81-4.88A.75.75 0 0 0 12.2 5H10a.5.5 0 0 0 0 1h1.91l-.76 4.58a.5.5 0 0 1-.5.42h-7.3a.5.5 0 0 1-.5-.42L2.1 6Z"
  }), /* @__PURE__ */ import_react12.default.createElement("path", {
    d: "M4.5 7c.28 0 .5.22.5.5v2a.5.5 0 0 1-1 0v-2c0-.28.22-.5.5-.5ZM10 7.5a.5.5 0 0 0-1 0v2a.5.5 0 0 0 1 0v-2ZM6.5 9.5v-2a.5.5 0 0 1 1 0v2a.5.5 0 0 1-1 0Z"
  })),
  beaker: /* @__PURE__ */ import_react12.default.createElement(import_react12.default.Fragment, null, /* @__PURE__ */ import_react12.default.createElement("path", {
    fillRule: "evenodd",
    d: "M4.5 2h.75v3.87l-3.03 5.26c-.48.83.12 1.87 1.08 1.87h7.4c.96 0 1.57-1.04 1.08-1.87L8.75 5.87V2h.75a.5.5 0 0 0 0-1h-5a.5.5 0 0 0 0 1Zm1.75 4V2h1.5v4.13l.07.12 1 1.75H5.18l1.01-1.75.07-.12V6ZM4.6 9l-1.52 2.63c-.1.16.03.37.22.37h7.4c.2 0 .31-.2.22-.37L9.4 9H4.6Z"
  })),
  hourglass: /* @__PURE__ */ import_react12.default.createElement(import_react12.default.Fragment, null, /* @__PURE__ */ import_react12.default.createElement("path", {
    d: "M7.5 10.5a.5.5 0 1 1-1 0 .5.5 0 0 1 1 0Z"
  }), /* @__PURE__ */ import_react12.default.createElement("path", {
    fillRule: "evenodd",
    d: "M3.5 1a.5.5 0 0 0-.5.5c0 1.06.14 1.9.68 2.97.34.7.86 1.5 1.6 2.53a16.53 16.53 0 0 0-1.8 2.96A6 6 0 0 0 3 12.49v.01a.5.5 0 0 0 .5.5h7a.5.5 0 0 0 .5-.5 6 6 0 0 0-.48-2.54c-.34-.8-.9-1.71-1.8-2.96a19.78 19.78 0 0 0 1.6-2.53c.54-1.08.68-1.9.68-2.97a.5.5 0 0 0-.5-.5h-7Zm6.49 11a4.68 4.68 0 0 0-.39-1.65c-.27-.65-.73-1.4-1.5-2.5a133 133 0 0 1-.75 1 .5.5 0 0 1-.56.1.5.5 0 0 1-.2-.16l-.7-.94a14.36 14.36 0 0 0-1.5 2.5A4.68 4.68 0 0 0 4.02 12H10ZM6.3 6.72l.7.94a90.06 90.06 0 0 0 .7-.96c.49-.67.87-1.22 1.17-1.7H5.13A32.67 32.67 0 0 0 6.3 6.72ZM4.56 4h4.88c.36-.73.5-1.31.55-2H4c.04.69.19 1.27.55 2Z"
  })),
  flag: /* @__PURE__ */ import_react12.default.createElement(import_react12.default.Fragment, null, /* @__PURE__ */ import_react12.default.createElement("path", {
    fillRule: "evenodd",
    d: "M11.5 1h-9a.5.5 0 0 0-.5.5v11a.5.5 0 0 0 1 0V8h8.5a.5.5 0 0 0 .35-.85L9.21 4.5l2.64-2.65A.5.5 0 0 0 11.5 1ZM8.15 4.15 10.29 2H3v5h7.3L8.14 4.85a.5.5 0 0 1 0-.7Z"
  })),
  cloudhollow: /* @__PURE__ */ import_react12.default.createElement(import_react12.default.Fragment, null, /* @__PURE__ */ import_react12.default.createElement("path", {
    fillRule: "evenodd",
    d: "M10 7V6a3 3 0 0 0-5.9-.74l-.18.68-.7.07A2.5 2.5 0 0 0 3.5 11h3.19l.07-.01h.08L7 11h4a2 2 0 1 0 0-4h-1ZM3.12 5.02A3.5 3.5 0 0 0 3.5 12H11a3 3 0 1 0 0-6 4 4 0 0 0-7.88-.98Z"
  })),
  cloud: /* @__PURE__ */ import_react12.default.createElement("path", {
    d: "M7 2a4 4 0 0 1 4 4 3 3 0 1 1 0 6H3.5a3.5 3.5 0 0 1-.38-6.98A4 4 0 0 1 7 2Z"
  }),
  edit: /* @__PURE__ */ import_react12.default.createElement(import_react12.default.Fragment, null, /* @__PURE__ */ import_react12.default.createElement("path", {
    fillRule: "evenodd",
    d: "m13.85 2.15-2-2a.5.5 0 0 0-.7 0l-1.5 1.5-9 9a.5.5 0 0 0-.14.26L0 13.39a.5.5 0 0 0 .14.46.5.5 0 0 0 .46.14l2.48-.5a.5.5 0 0 0 .27-.14l9-9 1.5-1.5a.5.5 0 0 0 0-.7ZM12 3.29l.8-.79-1.3-1.3-.8.8L12 3.3Zm-2-.58L1.7 11 3 12.3 11.3 4 10 2.7ZM1.14 12.86l.17-.85.68.68-.85.17Z"
  })),
  cog: /* @__PURE__ */ import_react12.default.createElement(import_react12.default.Fragment, null, /* @__PURE__ */ import_react12.default.createElement("path", {
    d: "M5.59 5.59a2 2 0 0 1 3.27 2.14.5.5 0 1 0 .93.37 3 3 0 1 0-1.7 1.7.5.5 0 1 0-.36-.94A2 2 0 0 1 5.6 5.6Z",
    fill: "#333"
  }), /* @__PURE__ */ import_react12.default.createElement("path", {
    fillRule: "evenodd",
    d: "M.94 6.53c.13.12.19.3.18.46 0 .17-.05.34-.18.47L0 8.39c.19.94.55 1.81 1.07 2.58h1.32c.18 0 .34.07.46.2.12.11.2.27.2.45v1.32c.76.51 1.62.88 2.55 1.06l.94-.94a.63.63 0 0 1 .45-.19h.03c.16 0 .33.07.45.19l.94.94a7.1 7.1 0 0 0 2.55-1.06v-1.33c0-.18.07-.35.2-.46.11-.12.27-.2.45-.2h1.33A7.1 7.1 0 0 0 14 8.4l-.95-.94a.64.64 0 0 1-.18-.47c0-.17.06-.34.18-.46l.95-.95a7.1 7.1 0 0 0-1.05-2.52h-1.34a.63.63 0 0 1-.46-.2.64.64 0 0 1-.2-.46V1.06A7.1 7.1 0 0 0 8.42 0l-.94.94a.63.63 0 0 1-.45.19H7a.63.63 0 0 1-.45-.19L5.6 0a7.1 7.1 0 0 0-2.56 1.06v1.33c0 .18-.07.34-.2.46a.63.63 0 0 1-.45.2H1.06A7.1 7.1 0 0 0 0 5.59l.94.94Zm.7 1.63c.33-.32.49-.75.48-1.17 0-.42-.15-.85-.47-1.17l-.54-.54c.12-.43.3-.85.51-1.23h.77c.46 0 .87-.2 1.17-.5.3-.29.48-.7.48-1.16v-.77c.4-.22.81-.39 1.25-.52l.54.55c.33.32.75.48 1.16.48h.03c.42 0 .84-.16 1.16-.48l.54-.54c.44.12.85.3 1.24.5v.8c0 .45.19.87.49 1.16.3.3.7.5 1.16.5h.78c.2.37.38.78.5 1.2l-.54.55c-.33.32-.49.75-.48 1.17 0 .42.15.85.48 1.17l.55.55c-.13.44-.3.85-.52 1.24h-.77c-.45 0-.87.2-1.16.5-.3.29-.5.7-.5 1.16v.77c-.38.21-.8.39-1.23.51l-.54-.54a1.64 1.64 0 0 0-1.16-.48H7c-.41 0-.83.16-1.16.48l-.54.55a6.1 6.1 0 0 1-1.25-.52v-.76c0-.45-.19-.87-.48-1.16-.3-.3-.71-.5-1.17-.5h-.76a6.1 6.1 0 0 1-.53-1.25l.55-.55Z"
  })),
  nut: /* @__PURE__ */ import_react12.default.createElement(import_react12.default.Fragment, null, /* @__PURE__ */ import_react12.default.createElement("path", {
    d: "M5.59 8.41a2 2 0 1 1 3.27-.68.5.5 0 1 0 .93.37 3 3 0 1 0-1.7 1.7.5.5 0 0 0-.36-.94 2 2 0 0 1-2.14-.45Z"
  }), /* @__PURE__ */ import_react12.default.createElement("path", {
    fillRule: "evenodd",
    d: "M6.5.29a1 1 0 0 1 1 0l5.06 2.92c.31.18.5.51.5.87v5.84a1 1 0 0 1-.5.87L7.5 13.7a1 1 0 0 1-1 0L1.44 10.8a1 1 0 0 1-.5-.87V4.08a1 1 0 0 1 .5-.87L6.5.3Zm.5.86 5.06 2.93v5.84L7 12.85 1.94 9.92V4.08L7 1.15Z"
  })),
  wrench: /* @__PURE__ */ import_react12.default.createElement(import_react12.default.Fragment, null, /* @__PURE__ */ import_react12.default.createElement("path", {
    d: "M10.5 1c.44 0 .56.52.25.83l-.8.81c-.2.2-.2.52 0 .72l.69.7c.2.2.52.2.72 0l.8-.81c.32-.31.84-.2.84.25a2.5 2.5 0 0 1-3.41 2.33L2.7 12.7a1 1 0 0 1-1.42-1.42l6.88-6.88A2.5 2.5 0 0 1 10.5 1ZM2 12.5a.5.5 0 1 0 0-1 .5.5 0 0 0 0 1Z"
  })),
  ellipsis: /* @__PURE__ */ import_react12.default.createElement(import_react12.default.Fragment, null, /* @__PURE__ */ import_react12.default.createElement("path", {
    d: "M4 7a1.5 1.5 0 1 1-3 0 1.5 1.5 0 0 1 3 0ZM13 7a1.5 1.5 0 1 1-3 0 1.5 1.5 0 0 1 3 0ZM7 8.5a1.5 1.5 0 1 0 0-3 1.5 1.5 0 0 0 0 3Z"
  })),
  check: /* @__PURE__ */ import_react12.default.createElement(import_react12.default.Fragment, null, /* @__PURE__ */ import_react12.default.createElement("path", {
    d: "M13.85 3.35a.5.5 0 0 0-.7-.7L5 10.79.85 6.65a.5.5 0 1 0-.7.7l4.5 4.5c.2.2.5.2.7 0l8.5-8.5Z"
  })),
  form: /* @__PURE__ */ import_react12.default.createElement(import_react12.default.Fragment, null, /* @__PURE__ */ import_react12.default.createElement("path", {
    d: "M2 1a1 1 0 0 0-1 1v10a1 1 0 0 0 1 1h10a1 1 0 0 0 1-1V6.4a.5.5 0 0 0-1 0V12H2V2h7.5a.5.5 0 0 0 0-1H2Z"
  }), /* @__PURE__ */ import_react12.default.createElement("path", {
    d: "m6.35 9.86 7.5-7.5a.5.5 0 0 0-.7-.71L6 8.8 3.85 6.65a.5.5 0 1 0-.7.7l2.5 2.5c.2.2.5.2.7 0Z"
  })),
  batchdeny: /* @__PURE__ */ import_react12.default.createElement(import_react12.default.Fragment, null, /* @__PURE__ */ import_react12.default.createElement("path", {
    d: "M11.5 2a.5.5 0 0 0 0 1h2a.5.5 0 0 0 0-1h-2Zm-2.646.646a.5.5 0 0 1 0 .708L5.207 7l3.647 3.646a.5.5 0 0 1-.708.708L4.5 7.707.854 11.354a.5.5 0 0 1-.708-.708L3.793 7 .146 3.354a.5.5 0 1 1 .708-.708L4.5 6.293l3.646-3.647a.5.5 0 0 1 .708 0ZM11 7a.5.5 0 0 1 .5-.5h2a.5.5 0 0 1 0 1h-2A.5.5 0 0 1 11 7Zm.5 4a.5.5 0 0 0 0 1h2a.5.5 0 0 0 0-1h-2Z"
  })),
  batchaccept: /* @__PURE__ */ import_react12.default.createElement(import_react12.default.Fragment, null, /* @__PURE__ */ import_react12.default.createElement("path", {
    d: "M11.5 2a.5.5 0 0 0 0 1h2a.5.5 0 0 0 0-1h-2Zm-2.2.6a.5.5 0 0 1 .1.7l-5.995 7.993a.505.505 0 0 1-.37.206.5.5 0 0 1-.395-.152L.146 8.854a.5.5 0 1 1 .708-.708l2.092 2.093L8.6 2.7a.5.5 0 0 1 .7-.1ZM11 7a.5.5 0 0 1 .5-.5h2a.5.5 0 0 1 0 1h-2A.5.5 0 0 1 11 7Zm.5 4a.5.5 0 0 0 0 1h2a.5.5 0 0 0 0-1h-2Z"
  })),
  controls: /* @__PURE__ */ import_react12.default.createElement(import_react12.default.Fragment, null, /* @__PURE__ */ import_react12.default.createElement("path", {
    d: "M10.5 1c.28 0 .5.22.5.5V2h1.5a.5.5 0 0 1 0 1H11v.5a.5.5 0 0 1-1 0V3H1.5a.5.5 0 0 1 0-1H10v-.5c0-.28.22-.5.5-.5ZM1.5 11a.5.5 0 0 0 0 1H10v.5a.5.5 0 0 0 1 0V12h1.5a.5.5 0 0 0 0-1H11v-.5a.5.5 0 0 0-1 0v.5H1.5ZM1 7c0-.28.22-.5.5-.5H3V6a.5.5 0 0 1 1 0v.5h8.5a.5.5 0 0 1 0 1H4V8a.5.5 0 0 1-1 0v-.5H1.5A.5.5 0 0 1 1 7Z"
  })),
  plus: /* @__PURE__ */ import_react12.default.createElement(import_react12.default.Fragment, null, /* @__PURE__ */ import_react12.default.createElement("path", {
    d: "M7.5.5a.5.5 0 0 0-1 0v6h-6a.5.5 0 0 0 0 1h6v6a.5.5 0 0 0 1 0v-6h6a.5.5 0 0 0 0-1h-6v-6Z"
  })),
  closeAlt: /* @__PURE__ */ import_react12.default.createElement(import_react12.default.Fragment, null, /* @__PURE__ */ import_react12.default.createElement("path", {
    d: "M2.03.97A.75.75 0 0 0 .97 2.03L5.94 7 .97 11.97a.75.75 0 1 0 1.06 1.06L7 8.06l4.97 4.97a.75.75 0 1 0 1.06-1.06L8.06 7l4.97-4.97A.75.75 0 0 0 11.97.97L7 5.94 2.03.97Z"
  })),
  cross: /* @__PURE__ */ import_react12.default.createElement(import_react12.default.Fragment, null, /* @__PURE__ */ import_react12.default.createElement("path", {
    d: "M1.85 1.15a.5.5 0 1 0-.7.7L6.29 7l-5.14 5.15a.5.5 0 0 0 .7.7L7 7.71l5.15 5.14a.5.5 0 0 0 .7-.7L7.71 7l5.14-5.15a.5.5 0 0 0-.7-.7L7 6.29 1.85 1.15Z"
  })),
  trash: /* @__PURE__ */ import_react12.default.createElement(import_react12.default.Fragment, null, /* @__PURE__ */ import_react12.default.createElement("path", {
    d: "M5.5 4.5c.28 0 .5.22.5.5v5a.5.5 0 0 1-1 0V5c0-.28.22-.5.5-.5ZM9 5a.5.5 0 0 0-1 0v5a.5.5 0 0 0 1 0V5Z"
  }), /* @__PURE__ */ import_react12.default.createElement("path", {
    fillRule: "evenodd",
    d: "M4.5.5c0-.28.22-.5.5-.5h4c.28 0 .5.22.5.5V2h3a.5.5 0 0 1 0 1H12v8a2 2 0 0 1-2 2H4a2 2 0 0 1-2-2V3h-.5a.5.5 0 0 1 0-1h3V.5ZM3 3v8a1 1 0 0 0 1 1h6a1 1 0 0 0 1-1V3H3Zm2.5-2h3v1h-3V1Z"
  })),
  pinalt: /* @__PURE__ */ import_react12.default.createElement(import_react12.default.Fragment, null, /* @__PURE__ */ import_react12.default.createElement("path", {
    d: "M13.44 4.44 9.56.56a1.5 1.5 0 0 0-2.12 0L7 1a1.41 1.41 0 0 0 0 2L5 5H3.66A4 4 0 0 0 .83 6.17l-.48.48a.5.5 0 0 0 0 .7l2.8 2.8-3 3a.5.5 0 0 0 .7.7l3-3 2.8 2.8c.2.2.5.2.7 0l.48-.48A4 4 0 0 0 9 10.34V9l2-2c.55.55 1.45.55 2 0l.44-.44a1.5 1.5 0 0 0 0-2.12ZM11 5.59l-3 3v1.75a3 3 0 0 1-.88 2.12L7 12.6 1.41 7l.13-.12A3 3 0 0 1 3.66 6H5.4l3-3-.7-.7a.41.41 0 0 1 0-.6l.44-.43c.2-.2.5-.2.7 0l3.88 3.88c.2.2.2.5 0 .7l-.44.44a.41.41 0 0 1-.58 0L11 5.6Z"
  })),
  unpin: /* @__PURE__ */ import_react12.default.createElement(import_react12.default.Fragment, null, /* @__PURE__ */ import_react12.default.createElement("path", {
    d: "M13.44 4.44 9.56.56a1.5 1.5 0 0 0-2.12 0L7 1a1.41 1.41 0 0 0 0 2L5.7 4.3l.71.7 2-2-.7-.7a.41.41 0 0 1 0-.6l.44-.43c.2-.2.5-.2.7 0l3.88 3.88c.2.2.2.5 0 .7l-.44.44a.41.41 0 0 1-.58 0L11 5.6l-2 2 .7.7L11 7c.55.55 1.45.55 2 0l.44-.44a1.5 1.5 0 0 0 0-2.12ZM.83 6.17A4 4 0 0 1 3.59 5l1 1h-.93a3 3 0 0 0-2.12.88L1.4 7 7 12.59l.12-.13A3 3 0 0 0 8 10.34v-.93l1 1a4 4 0 0 1-1.17 2.76l-.48.48a.5.5 0 0 1-.7 0l-2.8-2.8-3 3a.5.5 0 0 1-.7-.7l3-3-2.8-2.8a.5.5 0 0 1 0-.7l.48-.48Zm1.02-5.02a.5.5 0 1 0-.7.7l11 11a.5.5 0 0 0 .7-.7l-11-11Z"
  })),
  add: /* @__PURE__ */ import_react12.default.createElement(import_react12.default.Fragment, null, /* @__PURE__ */ import_react12.default.createElement("path", {
    d: "M7 3c.28 0 .5.22.5.5v3h3a.5.5 0 0 1 0 1h-3v3a.5.5 0 0 1-1 0v-3h-3a.5.5 0 0 1 0-1h3v-3c0-.28.22-.5.5-.5Z"
  }), /* @__PURE__ */ import_react12.default.createElement("path", {
    fillRule: "evenodd",
    d: "M7 14A7 7 0 1 0 7 0a7 7 0 0 0 0 14Zm0-1A6 6 0 1 0 7 1a6 6 0 0 0 0 12Z"
  })),
  subtract: /* @__PURE__ */ import_react12.default.createElement(import_react12.default.Fragment, null, /* @__PURE__ */ import_react12.default.createElement("path", {
    d: "M3.5 6.5a.5.5 0 0 0 0 1h7a.5.5 0 0 0 0-1h-7Z"
  }), /* @__PURE__ */ import_react12.default.createElement("path", {
    fillRule: "evenodd",
    d: "M14 7A7 7 0 1 1 0 7a7 7 0 0 1 14 0Zm-1 0A6 6 0 1 1 1 7a6 6 0 0 1 12 0Z"
  })),
  close: /* @__PURE__ */ import_react12.default.createElement(import_react12.default.Fragment, null, /* @__PURE__ */ import_react12.default.createElement("path", {
    d: "M9.85 4.15c.2.2.2.5 0 .7L7.71 7l2.14 2.15a.5.5 0 0 1-.7.7L7 7.71 4.85 9.85a.5.5 0 0 1-.7-.7L6.29 7 4.15 4.85a.5.5 0 1 1 .7-.7L7 6.29l2.15-2.14c.2-.2.5-.2.7 0Z"
  }), /* @__PURE__ */ import_react12.default.createElement("path", {
    fillRule: "evenodd",
    d: "M7 14A7 7 0 1 0 7 0a7 7 0 0 0 0 14Zm0-1A6 6 0 1 0 7 1a6 6 0 0 0 0 12Z"
  })),
  delete: /* @__PURE__ */ import_react12.default.createElement(import_react12.default.Fragment, null, /* @__PURE__ */ import_react12.default.createElement("path", {
    fillRule: "evenodd",
    d: "M14 7A7 7 0 1 1 0 7a7 7 0 0 1 14 0Zm-1 0a6 6 0 0 1-9.87 4.58l8.45-8.45A5.98 5.98 0 0 1 13 7ZM2.42 10.87l8.45-8.45a6 6 0 0 0-8.46 8.46Z"
  })),
  passed: /* @__PURE__ */ import_react12.default.createElement(import_react12.default.Fragment, null, /* @__PURE__ */ import_react12.default.createElement("path", {
    d: "M7 14A7 7 0 1 0 7 0a7 7 0 0 0 0 14Zm3.85-9.35c.2.2.2.5 0 .7l-4.5 4.5a.5.5 0 0 1-.7 0l-2.5-2.5a.5.5 0 1 1 .7-.7L6 8.79l4.15-4.14c.2-.2.5-.2.7 0Z"
  })),
  changed: /* @__PURE__ */ import_react12.default.createElement(import_react12.default.Fragment, null, /* @__PURE__ */ import_react12.default.createElement("path", {
    fillRule: "evenodd",
    d: "M7 14A7 7 0 1 0 7 0a7 7 0 0 0 0 14ZM3.5 6.5a.5.5 0 0 0 0 1h7a.5.5 0 0 0 0-1h-7Z"
  })),
  failed: /* @__PURE__ */ import_react12.default.createElement(import_react12.default.Fragment, null, /* @__PURE__ */ import_react12.default.createElement("path", {
    d: "M7 14A7 7 0 1 0 7 0a7 7 0 0 0 0 14Zm2.85-9.85c.2.2.2.5 0 .7L7.71 7l2.14 2.15a.5.5 0 0 1-.7.7L7 7.71 4.85 9.85a.5.5 0 0 1-.7-.7L6.29 7 4.15 4.85a.5.5 0 1 1 .7-.7L7 6.29l2.15-2.14c.2-.2.5-.2.7 0Z"
  })),
  clear: /* @__PURE__ */ import_react12.default.createElement(import_react12.default.Fragment, null, /* @__PURE__ */ import_react12.default.createElement("path", {
    fillRule: "evenodd",
    d: "M5 2h7a2 2 0 0 1 2 2v6a2 2 0 0 1-2 2H5a2 2 0 0 1-1.41-.59l-3-3a2 2 0 0 1 0-2.82l3-3A2 2 0 0 1 5 2Zm1.15 3.15c.2-.2.5-.2.7 0L8 6.29l1.15-1.14a.5.5 0 1 1 .7.7L8.71 7l1.14 1.15a.5.5 0 0 1-.7.7L8 7.71 6.85 8.85a.5.5 0 1 1-.7-.7L7.29 7 6.15 5.85a.5.5 0 0 1 0-.7Z"
  })),
  comment: /* @__PURE__ */ import_react12.default.createElement(import_react12.default.Fragment, null, /* @__PURE__ */ import_react12.default.createElement("path", {
    d: "M3.5 5a.5.5 0 1 0 0 1h7a.5.5 0 0 0 0-1h-7ZM3 8.5c0-.27.22-.5.5-.5h7a.5.5 0 0 1 0 1h-7a.5.5 0 0 1-.5-.5Z"
  }), /* @__PURE__ */ import_react12.default.createElement("path", {
    fillRule: "evenodd",
    d: "M12.5 12H5.7l-1.85 1.86a.5.5 0 0 1-.35.14.5.5 0 0 1-.5-.5V12H1.5a.5.5 0 0 1-.5-.5v-9c0-.27.22-.5.5-.5h11c.28 0 .5.23.5.5v9a.5.5 0 0 1-.5.5ZM2 11V3h10v8H2Z"
  })),
  commentadd: /* @__PURE__ */ import_react12.default.createElement(import_react12.default.Fragment, null, /* @__PURE__ */ import_react12.default.createElement("path", {
    d: "M7.5 5a.5.5 0 1 0-1 0v1.5H5a.5.5 0 1 0 0 1h1.5V9a.5.5 0 0 0 1 0V7.5H9a.5.5 0 0 0 0-1H7.5V5Z"
  }), /* @__PURE__ */ import_react12.default.createElement("path", {
    fillRule: "evenodd",
    d: "M3.7 13.97a.5.5 0 0 1-.7-.46V12H1.5a.5.5 0 0 1-.5-.5v-9c0-.28.22-.5.5-.5h11c.28 0 .5.22.5.5v9a.5.5 0 0 1-.5.5H5.7l-1.85 1.85a.5.5 0 0 1-.16.1ZM2 3v8h10V3H2Z"
  })),
  requestchange: /* @__PURE__ */ import_react12.default.createElement(import_react12.default.Fragment, null, /* @__PURE__ */ import_react12.default.createElement("path", {
    d: "M9.85 6.65c.2.2.2.51 0 .7l-2 2a.5.5 0 1 1-.7-.7L8.3 7.5H4.5a.5.5 0 0 1 0-1h3.79L7.15 5.36a.5.5 0 1 1 .7-.71l2 2Z"
  }), /* @__PURE__ */ import_react12.default.createElement("path", {
    fillRule: "evenodd",
    d: "M3.7 13.97a.5.5 0 0 1-.7-.46V12H1.5a.5.5 0 0 1-.5-.5v-9c0-.28.22-.5.5-.5h11c.28 0 .5.22.5.5v9a.5.5 0 0 1-.5.5H5.7l-1.85 1.85a.5.5 0 0 1-.16.1ZM2 3v8h10V3H2Z"
  })),
  comments: /* @__PURE__ */ import_react12.default.createElement(import_react12.default.Fragment, null, /* @__PURE__ */ import_react12.default.createElement("path", {
    d: "M8.5 7a.5.5 0 0 0 0-1h-5a.5.5 0 1 0 0 1h5ZM9 8.5a.5.5 0 0 1-.5.5h-5a.5.5 0 0 1 0-1h5c.28 0 .5.23.5.5Z"
  }), /* @__PURE__ */ import_react12.default.createElement("path", {
    fillRule: "evenodd",
    d: "M12 11.5V10h1.5a.5.5 0 0 0 .5-.5v-8a.5.5 0 0 0-.5-.5h-11a.5.5 0 0 0-.5.5V3H.5a.5.5 0 0 0-.5.5v8c0 .28.22.5.5.5H2v1.5a.5.5 0 0 0 .5.5.5.5 0 0 0 .35-.14L4.71 12h6.79a.5.5 0 0 0 .5-.5ZM3 3V2h10v7h-1V3.5a.5.5 0 0 0-.5-.5H3Zm-2 8V4h10v7H1Z"
  })),
  lock: /* @__PURE__ */ import_react12.default.createElement(import_react12.default.Fragment, null, /* @__PURE__ */ import_react12.default.createElement("path", {
    d: "M8 8a1 1 0 0 1-.5.87v1.63a.5.5 0 0 1-1 0V8.87A1 1 0 1 1 8 8Z"
  }), /* @__PURE__ */ import_react12.default.createElement("path", {
    fillRule: "evenodd",
    d: "M3 4a4 4 0 1 1 8 0v1h1.5c.28 0 .5.23.5.5v8a.5.5 0 0 1-.5.5h-11a.5.5 0 0 1-.5-.5v-8c0-.27.22-.5.5-.5H3V4Zm7 1V4a3 3 0 1 0-6 0v1h6Zm2 1H2v7h10V6Z"
  })),
  unlock: /* @__PURE__ */ import_react12.default.createElement(import_react12.default.Fragment, null, /* @__PURE__ */ import_react12.default.createElement("path", {
    d: "M6.5 8.87a1 1 0 1 1 1 0v1.63a.5.5 0 0 1-1 0V8.87Z"
  }), /* @__PURE__ */ import_react12.default.createElement("path", {
    fillRule: "evenodd",
    clipRule: "evenodd",
    d: "M7 1a3 3 0 0 0-3 3v1h8.5c.28 0 .5.23.5.5v8a.5.5 0 0 1-.5.5h-11a.5.5 0 0 1-.5-.5v-8c0-.27.22-.5.5-.5H3V4a4 4 0 0 1 7.76-1.38.5.5 0 0 1-.94.34A3 3 0 0 0 7 1ZM2 6h10v7H2V6Z"
  })),
  key: /* @__PURE__ */ import_react12.default.createElement(import_react12.default.Fragment, null, /* @__PURE__ */ import_react12.default.createElement("path", {
    d: "M11 4a1 1 0 1 1-2 0 1 1 0 0 1 2 0Z"
  }), /* @__PURE__ */ import_react12.default.createElement("path", {
    fillRule: "evenodd",
    d: "M7.5 8.53v.97a.5.5 0 0 1-.5.5H5.5v1.5a.5.5 0 0 1-.5.5H3.5v1.5a.5.5 0 0 1-.5.5H.5a.5.5 0 0 1-.5-.5v-2a.5.5 0 0 1 .15-.36l5.12-5.11a4.5 4.5 0 1 1 2.23 2.5ZM6 4.5a3.5 3.5 0 1 1 1.5 2.87c-.29-.2-1-.37-1 .48V9H5a.5.5 0 0 0-.5.5V11H3a.5.5 0 0 0-.5.5V13H1v-1.3l5.2-5.19c.15-.16.18-.4.1-.6A3.47 3.47 0 0 1 6 4.5Z"
  })),
  outbox: /* @__PURE__ */ import_react12.default.createElement(import_react12.default.Fragment, null, /* @__PURE__ */ import_react12.default.createElement("path", {
    d: "M7.35.15a.5.5 0 0 0-.7 0l-2 2a.5.5 0 1 0 .7.7L6.5 1.72v6.8a.5.5 0 0 0 1 0V1.7l1.15 1.15a.5.5 0 1 0 .7-.71l-2-2Z"
  }), /* @__PURE__ */ import_react12.default.createElement("path", {
    d: "M2 7.5a.5.5 0 1 0-1 0v5c0 .28.22.5.5.5h11a.5.5 0 0 0 .5-.5v-5a.5.5 0 0 0-1 0V12H2V7.5Z"
  })),
  credit: /* @__PURE__ */ import_react12.default.createElement(import_react12.default.Fragment, null, /* @__PURE__ */ import_react12.default.createElement("path", {
    d: "M2.5 8a.5.5 0 1 0 0 1h3a.5.5 0 0 0 0-1h-3Z"
  }), /* @__PURE__ */ import_react12.default.createElement("path", {
    fillRule: "evenodd",
    d: "M0 11.5c0 .28.22.5.5.5h13a.5.5 0 0 0 .5-.5v-9a.5.5 0 0 0-.5-.5H.5a.5.5 0 0 0-.5.5v9ZM1 3v1h12V3H1Zm0 8h12V6H1v5Z"
  })),
  button: /* @__PURE__ */ import_react12.default.createElement(import_react12.default.Fragment, null, /* @__PURE__ */ import_react12.default.createElement("path", {
    d: "M1 3a1 1 0 0 0-1 1v5a1 1 0 0 0 1 1h3.5a.5.5 0 1 0 0-1H1V4h12v5h-1a.5.5 0 0 0 0 1h1a1 1 0 0 0 1-1V4a1 1 0 0 0-1-1H1Z"
  }), /* @__PURE__ */ import_react12.default.createElement("path", {
    d: "M6.45 7a.5.5 0 0 1 .3.08l3.48 2.02a.5.5 0 0 1 0 .87l-1.08.62.75 1.3a.75.75 0 0 1-1.3.75l-.75-1.3-1.07.62a.5.5 0 0 1-.67-.13.5.5 0 0 1-.1-.3L6 7.5a.5.5 0 0 1 .45-.5Z"
  })),
  type: /* @__PURE__ */ import_react12.default.createElement(import_react12.default.Fragment, null, /* @__PURE__ */ import_react12.default.createElement("path", {
    d: "M4 1.5c0-.27.22-.5.5-.5h5a.5.5 0 1 1 0 1h-2v10h2a.5.5 0 0 1 0 1h-5a.5.5 0 0 1 0-1h2V2h-2a.5.5 0 0 1-.5-.5Z"
  }), /* @__PURE__ */ import_react12.default.createElement("path", {
    d: "M0 4.5c0-.27.22-.5.5-.5h4a.5.5 0 1 1 0 1H1v4h3.5a.5.5 0 1 1 0 1h-4a.5.5 0 0 1-.5-.5v-5ZM9.5 4a.5.5 0 1 0 0 1H13v4H9.5a.5.5 0 1 0 0 1h4a.5.5 0 0 0 .5-.5v-5a.5.5 0 0 0-.5-.5h-4Z"
  })),
  pointerdefault: /* @__PURE__ */ import_react12.default.createElement(import_react12.default.Fragment, null, /* @__PURE__ */ import_react12.default.createElement("path", {
    d: "M5.94 12.46c.11 0 .2-.06.25-.15l1.58-3.16 2.54 2.54c.04.05.1.07.19.07a.3.3 0 0 0 .2-.07l.8-.8a.27.27 0 0 0 0-.38L8.9 7.9l3.4-1.7c.06-.03.1-.07.12-.11a.22.22 0 0 0 .04-.14.33.33 0 0 0-.06-.16.17.17 0 0 0-.09-.07h-.02L1.91 1.55a.27.27 0 0 0-.35.36l4.15 10.37c.04.09.12.16.23.17Zm-.03 1h-.02a1.28 1.28 0 0 1-1.1-.8L.62 2.29A1.27 1.27 0 0 1 2.3.63l10.35 4.15c.52.18.79.65.81 1.11.04.53-.27.98-.7 1.2l-2.17 1.08L12.2 9.8c.5.5.5 1.3 0 1.8l-.8.8v.01c-.5.46-1.3.48-1.8-.01l-1.56-1.56-.95 1.92c-.23.45-.68.7-1.15.7h-.03Z"
  })),
  pointerhand: /* @__PURE__ */ import_react12.default.createElement(import_react12.default.Fragment, null, /* @__PURE__ */ import_react12.default.createElement("path", {
    d: "M11.87 6v-.02c-.03-.27-.23-.48-.47-.5a.5.5 0 0 0-.53.5v1.41c0 .25-.22.47-.47.47a.48.48 0 0 1-.47-.47V5.17a.6.6 0 0 0 0-.05c-.02-.27-.23-.5-.47-.5a.5.5 0 0 0-.52.5v1.65l-.01.1a.49.49 0 0 1-.46.37.48.48 0 0 1-.47-.47V4.62a.6.6 0 0 0 0-.05c-.03-.27-.23-.48-.47-.5a.5.5 0 0 0-.53.5v2.2c0 .25-.22.47-.47.47a.49.49 0 0 1-.47-.47V1.75c-.02-.27-.22-.5-.47-.5a.5.5 0 0 0-.52.5v6.78c0 .25-.22.47-.47.47a.48.48 0 0 1-.47-.47v-.26a.78.78 0 0 0-.06-.31.65.65 0 0 0-.16-.22l-.2-.19A6.37 6.37 0 0 0 3.06 7h-.02c-.43-.34-.62-.25-.69-.2-.26.14-.29.5-.13.74l1.73 2.6v.01h-.01l-.04.02.05-.02s1.21 2.6 3.57 2.6c3.54 0 4.2-1.9 4.31-4.42.04-.6.04-1.19.03-1.78V6Zm.97 2.38c-.06 1.29-.26 2.67-1.08 3.72-.88 1.12-2.29 1.65-4.23 1.65a4.64 4.64 0 0 1-3.4-1.62 6.96 6.96 0 0 1-1.05-1.5v-.02L1.4 8.1A1.6 1.6 0 0 1 1.15 7c.05-.38.26-.8.69-1.04.2-.13.48-.23.85-.19.36.05.68.22.98.45.14.1.27.22.4.33v-4.8A1.5 1.5 0 0 1 5.63.25c.93.04 1.43.86 1.43 1.55v1.33c.17-.05.35-.07.53-.06h.02c.5.04.91.33 1.15.71a1.5 1.5 0 0 1 .74-.16c.66.03 1.12.46 1.32.97a1.5 1.5 0 0 1 .64-.1h.02c.85.06 1.39.8 1.39 1.55v.48c0 .6 0 1.24-.03 1.86Z"
  })),
  browser: /* @__PURE__ */ import_react12.default.createElement(import_react12.default.Fragment, null, /* @__PURE__ */ import_react12.default.createElement("path", {
    fillRule: "evenodd",
    d: "M.5 13a.5.5 0 0 1-.5-.5v-11c0-.27.22-.5.5-.5h13c.28 0 .5.23.5.5v11a.5.5 0 0 1-.5.5H.5Zm.5-1V4h12v8H1Zm1-9.5a.5.5 0 1 1-1 0 .5.5 0 0 1 1 0Zm2 0a.5.5 0 1 1-1 0 .5.5 0 0 1 1 0Zm2 0a.5.5 0 1 1-1 0 .5.5 0 0 1 1 0Z"
  })),
  tablet: /* @__PURE__ */ import_react12.default.createElement(import_react12.default.Fragment, null, /* @__PURE__ */ import_react12.default.createElement("path", {
    fillRule: "evenodd",
    d: "M3.5 0C2.67 0 2 .68 2 1.5v11c0 .83.67 1.5 1.5 1.5h7c.83 0 1.5-.67 1.5-1.5v-11c0-.82-.67-1.5-1.5-1.5h-7Zm0 1h7c.28 0 .5.23.5.5V11H3V1.5c0-.27.22-.5.5-.5ZM6 12a.5.5 0 0 0 0 1h2a.5.5 0 0 0 0-1H6Z"
  })),
  mobile: /* @__PURE__ */ import_react12.default.createElement(import_react12.default.Fragment, null, /* @__PURE__ */ import_react12.default.createElement("path", {
    fillRule: "evenodd",
    d: "M3 1.5C3 .68 3.67 0 4.5 0h5c.83 0 1.5.68 1.5 1.5v11c0 .83-.67 1.5-1.5 1.5h-5A1.5 1.5 0 0 1 3 12.5v-11ZM4 12V2h6v10H4Z"
  })),
  watch: /* @__PURE__ */ import_react12.default.createElement(import_react12.default.Fragment, null, /* @__PURE__ */ import_react12.default.createElement("path", {
    key: "watch",
    fillRule: "evenodd",
    d: "M4 .5c0-.27.22-.5.5-.5h5a.5.5 0 0 1 0 1h-5A.5.5 0 0 1 4 .5ZM9.5 3h-5a.5.5 0 0 0-.5.5v7c0 .28.22.5.5.5h5a.5.5 0 0 0 .5-.5v-7a.5.5 0 0 0-.5-.5Zm-5-1C3.67 2 3 2.68 3 3.5v7c0 .83.67 1.5 1.5 1.5h5c.83 0 1.5-.67 1.5-1.5v-7c0-.82-.67-1.5-1.5-1.5h-5ZM7 4c.28 0 .5.23.5.5v2h1a.5.5 0 1 1 0 1H7a.5.5 0 0 1-.5-.5V4.5c0-.27.22-.5.5-.5Zm-2.5 9a.5.5 0 0 0 0 1h5a.5.5 0 0 0 0-1h-5Z"
  })),
  sidebar: /* @__PURE__ */ import_react12.default.createElement(import_react12.default.Fragment, null, /* @__PURE__ */ import_react12.default.createElement("path", {
    d: "M2.5 4.5c0-.27.22-.5.5-.5h1a.5.5 0 1 1 0 1H3a.5.5 0 0 1-.5-.5ZM3 6a.5.5 0 1 0 0 1h1a.5.5 0 0 0 0-1H3Zm-.5 2.5c0-.27.22-.5.5-.5h1a.5.5 0 1 1 0 1H3a.5.5 0 0 1-.5-.5Z"
  }), /* @__PURE__ */ import_react12.default.createElement("path", {
    fillRule: "evenodd",
    d: "M1.5 13a.5.5 0 0 1-.5-.5v-11c0-.27.22-.5.5-.5h11c.28 0 .5.23.5.5v11a.5.5 0 0 1-.5.5h-11Zm.5-1V2h3v10H2ZM6 2h6v10H6V2Z"
  })),
  sidebaralt: /* @__PURE__ */ import_react12.default.createElement(import_react12.default.Fragment, null, /* @__PURE__ */ import_react12.default.createElement("path", {
    d: "M9.5 4.5c0-.27.22-.5.5-.5h1a.5.5 0 0 1 0 1h-1a.5.5 0 0 1-.5-.5ZM10 6a.5.5 0 1 0 0 1h1a.5.5 0 0 0 0-1h-1Zm-.5 2.5c0-.27.22-.5.5-.5h1a.5.5 0 0 1 0 1h-1a.5.5 0 0 1-.5-.5Z"
  }), /* @__PURE__ */ import_react12.default.createElement("path", {
    fillRule: "evenodd",
    d: "M1.5 13a.5.5 0 0 1-.5-.5v-11c0-.27.22-.5.5-.5h11c.28 0 .5.23.5.5v11a.5.5 0 0 1-.5.5h-11Zm.5-1V2h6v10H2ZM9 2h3v10H9V2Z"
  })),
  sidebaralttoggle: /* @__PURE__ */ import_react12.default.createElement(import_react12.default.Fragment, null, /* @__PURE__ */ import_react12.default.createElement("path", {
    d: "M11.5 4.5A.5.5 0 0 0 11 4h-1a.5.5 0 1 0 0 1h1a.5.5 0 0 0 .5-.5ZM11 6a.5.5 0 0 1 0 1h-1a.5.5 0 0 1 0-1h1Zm.5 2.5A.5.5 0 0 0 11 8h-1a.5.5 0 1 0 0 1h1a.5.5 0 0 0 .5-.5Z"
  }), /* @__PURE__ */ import_react12.default.createElement("path", {
    fillRule: "evenodd",
    d: "M1.5 13a.5.5 0 0 1-.5-.5v-11c0-.27.22-.5.5-.5h11c.28 0 .5.23.5.5v11a.5.5 0 0 1-.5.5h-11ZM9 12h3V2H9v10Zm-1 0H2V2h6v4.5H5.2l.66-.65a.5.5 0 1 0-.71-.7l-1.5 1.5a.5.5 0 0 0 0 .7l1.5 1.5a.5.5 0 1 0 .7-.7l-.64-.65H8V12Z"
  })),
  sidebartoggle: /* @__PURE__ */ import_react12.default.createElement(import_react12.default.Fragment, null, /* @__PURE__ */ import_react12.default.createElement("path", {
    d: "M2.5 4.5c0-.27.22-.5.5-.5h1a.5.5 0 1 1 0 1H3a.5.5 0 0 1-.5-.5ZM3 6a.5.5 0 1 0 0 1h1a.5.5 0 0 0 0-1H3Zm-.5 2.5c0-.27.22-.5.5-.5h1a.5.5 0 1 1 0 1H3a.5.5 0 0 1-.5-.5Z"
  }), /* @__PURE__ */ import_react12.default.createElement("path", {
    fillRule: "evenodd",
    d: "M1.5 13a.5.5 0 0 1-.5-.5v-11c0-.27.22-.5.5-.5h11c.28 0 .5.23.5.5v11a.5.5 0 0 1-.5.5h-11Zm.5-1V2h3v10H2Zm4 0V7.5h2.8l-.65.65a.5.5 0 1 0 .7.7l1.5-1.5a.5.5 0 0 0 0-.7l-1.5-1.5a.5.5 0 1 0-.7.7l.64.65H6V2h6v10H6Z"
  })),
  bottombar: /* @__PURE__ */ import_react12.default.createElement(import_react12.default.Fragment, null, /* @__PURE__ */ import_react12.default.createElement("path", {
    d: "M3 10.5c0-.27.22-.5.5-.5h1a.5.5 0 0 1 0 1h-1a.5.5 0 0 1-.5-.5Zm3.5-.5a.5.5 0 0 0 0 1h1a.5.5 0 0 0 0-1h-1Zm2.5.5c0-.27.22-.5.5-.5h1a.5.5 0 0 1 0 1h-1a.5.5 0 0 1-.5-.5Z"
  }), /* @__PURE__ */ import_react12.default.createElement("path", {
    fillRule: "evenodd",
    d: "M1 1.5c0-.27.22-.5.5-.5h11c.28 0 .5.23.5.5v11a.5.5 0 0 1-.5.5h-11a.5.5 0 0 1-.5-.5v-11ZM2 8V2h10v6H2Zm10 1v3H2V9h10Z"
  })),
  bottombartoggle: /* @__PURE__ */ import_react12.default.createElement(import_react12.default.Fragment, null, /* @__PURE__ */ import_react12.default.createElement("path", {
    d: "M3.5 10a.5.5 0 0 0 0 1h1a.5.5 0 0 0 0-1h-1Zm2.5.5c0-.27.22-.5.5-.5h1a.5.5 0 0 1 0 1h-1a.5.5 0 0 1-.5-.5Zm3.5-.5a.5.5 0 0 0 0 1h1a.5.5 0 0 0 0-1h-1Z"
  }), /* @__PURE__ */ import_react12.default.createElement("path", {
    fillRule: "evenodd",
    d: "M1 12.5v-11c0-.27.22-.5.5-.5h11c.28 0 .5.23.5.5v11a.5.5 0 0 1-.5.5h-11a.5.5 0 0 1-.5-.5Zm1-.5V9h10v3H2Zm4.5-4H2V2h10v6H7.5V5.21l.65.65a.5.5 0 1 0 .7-.71l-1.5-1.5a.5.5 0 0 0-.7 0l-1.5 1.5a.5.5 0 1 0 .7.7l.65-.64v2.8Z"
  })),
  cpu: /* @__PURE__ */ import_react12.default.createElement(import_react12.default.Fragment, null, /* @__PURE__ */ import_react12.default.createElement("path", {
    fillRule: "evenodd",
    d: "M5 5.5c0-.27.22-.5.5-.5h3c.28 0 .5.23.5.5v3a.5.5 0 0 1-.5.5h-3a.5.5 0 0 1-.5-.5v-3ZM6 8V6h2v2H6Z"
  }), /* @__PURE__ */ import_react12.default.createElement("path", {
    fillRule: "evenodd",
    d: "M5.5 0c.28 0 .5.23.5.5V2h2V.5a.5.5 0 0 1 1 0V2h2.5c.28 0 .5.23.5.5V5h1.5a.5.5 0 0 1 0 1H12v2h1.5a.5.5 0 0 1 0 1H12v2.5a.5.5 0 0 1-.5.5H9v1.5a.5.5 0 0 1-1 0V12H6v1.5a.5.5 0 0 1-1 0V12H2.5a.5.5 0 0 1-.5-.5V9H.5a.5.5 0 0 1 0-1H2V6H.5a.5.5 0 0 1 0-1H2V2.5c0-.27.22-.5.5-.5H5V.5c0-.27.22-.5.5-.5ZM11 3H3v8h8V3Z"
  })),
  database: /* @__PURE__ */ import_react12.default.createElement(import_react12.default.Fragment, null, /* @__PURE__ */ import_react12.default.createElement("path", {
    fillRule: "evenodd",
    d: "M12 3c0-1.1-2.24-2-5-2s-5 .9-5 2v8c0 .43.26.75.54.98.3.23.68.41 1.12.55.88.3 2.06.47 3.34.47 1.28 0 2.46-.17 3.34-.46.44-.15.83-.33 1.12-.56.28-.23.54-.55.54-.98V3Zm-1.03 0a2.45 2.45 0 0 0-.8-.49A8.88 8.88 0 0 0 7 2c-1.29 0-2.4.21-3.16.51a2.45 2.45 0 0 0-.81.49l.05.05c.13.13.37.28.76.44C4.6 3.79 5.7 4 7 4s2.4-.21 3.16-.51a2.45 2.45 0 0 0 .81-.49ZM11 5.75V4.2A8.9 8.9 0 0 1 7 5a8.98 8.98 0 0 1-4-.8v1.55l.02.04c.02.04.06.09.14.15.17.13.44.27.82.4A10 10 0 0 0 7 6.75a10 10 0 0 0 3.02-.41c.38-.13.65-.27.82-.4a.62.62 0 0 0 .14-.15.15.15 0 0 0 .02-.03v-.01ZM3 7.01c.2.1.42.2.66.28.88.29 2.06.46 3.34.46 1.28 0 2.46-.17 3.34-.46.24-.08.46-.17.66-.28V8.5l-.02.04a.62.62 0 0 1-.14.15c-.17.13-.44.27-.82.4A10 10 0 0 1 7 9.5a10 10 0 0 1-3.02-.41 2.76 2.76 0 0 1-.82-.4.62.62 0 0 1-.14-.15.15.15 0 0 1-.02-.03V7Zm0 2.75V11l.02.04c.02.04.06.09.14.15.17.13.44.27.82.4A10 10 0 0 0 7 12a10 10 0 0 0 3.02-.41c.38-.13.65-.27.82-.4a.62.62 0 0 0 .14-.15.15.15 0 0 0 .02-.03V9.76c-.2.1-.42.2-.66.28-.88.29-2.06.46-3.34.46-1.28 0-2.46-.17-3.34-.46A4.77 4.77 0 0 1 3 9.76Z"
  })),
  memory: /* @__PURE__ */ import_react12.default.createElement(import_react12.default.Fragment, null, /* @__PURE__ */ import_react12.default.createElement("path", {
    d: "M5 3a.5.5 0 0 0-1 0v3a.5.5 0 0 0 1 0V3Zm2-.5c.28 0 .5.22.5.5v3a.5.5 0 0 1-1 0V3c0-.28.22-.5.5-.5Zm3 2a.5.5 0 1 0-1 0V6a.5.5 0 0 0 1 0V4.5Z"
  }), /* @__PURE__ */ import_react12.default.createElement("path", {
    fillRule: "evenodd",
    d: "M12 3.54a.5.5 0 0 0-.15-.39l-3-3a.5.5 0 0 0-.38-.14H2.5a.5.5 0 0 0-.5.5v13c0 .27.22.5.5.5h9a.5.5 0 0 0 .5-.5V3.53ZM3 1h5.3L11 3.71v5.3H3V1Zm0 9v3h8v-3H3Z"
  })),
  structure: /* @__PURE__ */ import_react12.default.createElement(import_react12.default.Fragment, null, /* @__PURE__ */ import_react12.default.createElement("path", {
    d: "M8.16 3.45a1.5 1.5 0 1 0-2.33 0l-4.02 6.58A1.5 1.5 0 1 0 2.91 12h8.18a1.5 1.5 0 1 0 1.1-1.97L8.16 3.45Zm-1.47.52a1.5 1.5 0 0 0 .62 0l4.03 6.58c-.11.14-.2.29-.25.45H2.9a1.5 1.5 0 0 0-.25-.45L6.7 3.97Z"
  })),
  box: /* @__PURE__ */ import_react12.default.createElement(import_react12.default.Fragment, null, /* @__PURE__ */ import_react12.default.createElement("path", {
    fillRule: "evenodd",
    d: "m7.21.05 6.49 2.99a.5.5 0 0 1 .3.47v6.98a.5.5 0 0 1-.3.47l-6.47 2.98a.5.5 0 0 1-.46 0L.3 10.96a.5.5 0 0 1-.3-.47V3.5a.5.5 0 0 1 .3-.47L6.79.05a.5.5 0 0 1 .43 0ZM1 4.28v5.9l5.5 2.54v-5.9L1 4.28Zm6.5 8.44 5.5-2.54v-5.9L7.5 6.82v5.9Zm4.8-9.22L7 5.95 1.7 3.5 7 1.05l5.3 2.45Z"
  })),
  power: /* @__PURE__ */ import_react12.default.createElement(import_react12.default.Fragment, null, /* @__PURE__ */ import_react12.default.createElement("path", {
    d: "M7.5.5a.5.5 0 0 0-1 0v6a.5.5 0 0 0 1 0v-6Z"
  }), /* @__PURE__ */ import_react12.default.createElement("path", {
    d: "M4.27 2.8a.5.5 0 0 0-.54-.83 6 6 0 1 0 6.54 0 .5.5 0 0 0-.54.84 5 5 0 1 1-5.46 0Z"
  })),
  photo: /* @__PURE__ */ import_react12.default.createElement(import_react12.default.Fragment, null, /* @__PURE__ */ import_react12.default.createElement("path", {
    fillRule: "evenodd",
    d: "M6.25 4.25a1.25 1.25 0 1 1-2.5 0 1.25 1.25 0 0 1 2.5 0Zm-.5 0a.75.75 0 1 1-1.5 0 .75.75 0 0 1 1.5 0Z"
  }), /* @__PURE__ */ import_react12.default.createElement("path", {
    fillRule: "evenodd",
    d: "M13 1.5v11a.5.5 0 0 1-.5.5h-11a.5.5 0 0 1-.5-.5v-11c0-.27.22-.5.5-.5h11c.28 0 .5.23.5.5ZM2 9.3V2h10v5.3L9.85 5.15a.5.5 0 0 0-.7 0L6.5 7.8 5.35 6.65a.5.5 0 0 0-.7 0L2 9.3Zm7.5-3.1L12 8.7V12H2v-1.3l3-3 3.15 3.15a.5.5 0 0 0 .7-.71L7.21 8.5 9.5 6.21Z"
  })),
  component: /* @__PURE__ */ import_react12.default.createElement(import_react12.default.Fragment, null, /* @__PURE__ */ import_react12.default.createElement("path", {
    fillRule: "evenodd",
    d: "M3.5 1A2.5 2.5 0 0 0 1 3.5v7A2.5 2.5 0 0 0 3.5 13h7a2.5 2.5 0 0 0 2.5-2.5v-7A2.5 2.5 0 0 0 10.5 1h-7ZM12 6.5H7.5V2h3c.83 0 1.5.68 1.5 1.5v3Zm0 1v3c0 .83-.67 1.5-1.5 1.5h-3V7.5H12ZM6.5 12V7.5H2v3c0 .83.67 1.5 1.5 1.5h3ZM2 6.5h4.5V2h-3C2.67 2 2 2.68 2 3.5v3Z"
  })),
  grid: /* @__PURE__ */ import_react12.default.createElement(import_react12.default.Fragment, null, /* @__PURE__ */ import_react12.default.createElement("path", {
    fillRule: "evenodd",
    d: "M1 1.5c0-.27.22-.5.5-.5H6c.28 0 .5.23.5.5V6a.5.5 0 0 1-.5.5H1.5A.5.5 0 0 1 1 6V1.5Zm1 4V2h3.5v3.5H2Zm5.5-4c0-.27.22-.5.5-.5h4.5c.28 0 .5.23.5.5V6a.5.5 0 0 1-.5.5H8a.5.5 0 0 1-.5-.5V1.5Zm1 4V2H12v3.5H8.5Zm-7 2A.5.5 0 0 0 1 8v4.5c0 .28.22.5.5.5H6a.5.5 0 0 0 .5-.5V8a.5.5 0 0 0-.5-.5H1.5Zm.5 1V12h3.5V8.5H2ZM7.5 8c0-.27.22-.5.5-.5h4.5c.28 0 .5.23.5.5v4.5a.5.5 0 0 1-.5.5H8a.5.5 0 0 1-.5-.5V8Zm1 4V8.5H12V12H8.5Z"
  })),
  outline: /* @__PURE__ */ import_react12.default.createElement(import_react12.default.Fragment, null, /* @__PURE__ */ import_react12.default.createElement("path", {
    d: "M2 2v2H1V1.5c0-.27.22-.5.5-.5H4v1H2ZM1 9V5h1v4H1Zm0 1v2.5c0 .28.22.5.5.5H4v-1H2v-2H1Zm9 3h2.5a.5.5 0 0 0 .5-.5V10h-1v2h-2v1Zm2-9h1V1.5a.5.5 0 0 0-.5-.5H10v1h2v2Zm-3 8v1H5v-1h4ZM9 1v1H5V1h4Zm4 8h-1V5h1v4ZM7 8a1 1 0 1 0 0-2 1 1 0 0 0 0 2Z"
  })),
  photodrag: /* @__PURE__ */ import_react12.default.createElement(import_react12.default.Fragment, null, /* @__PURE__ */ import_react12.default.createElement("path", {
    fillRule: "evenodd",
    d: "M8.25 3.25a1.25 1.25 0 1 1-2.5 0 1.25 1.25 0 0 1 2.5 0Zm-.5 0a.75.75 0 1 1-1.5 0 .75.75 0 0 1 1.5 0Z"
  }), /* @__PURE__ */ import_react12.default.createElement("path", {
    fillRule: "evenodd",
    d: "M14 7V.5a.5.5 0 0 0-.5-.5h-10a.5.5 0 0 0-.5.5V3H.5a.5.5 0 0 0-.5.5V6h1V4h2v6.5c0 .28.22.5.5.5H10v2H8v1h2.5a.5.5 0 0 0 .5-.5V11h2.5a.5.5 0 0 0 .5-.5V7ZM4 1v5.8l1.65-1.65c.2-.2.5-.2.7 0L7.5 6.3l2.65-2.65c.2-.2.5-.2.7 0L13 5.8V1H4Zm9 6.21-2.5-2.5-2.3 2.3 1.15 1.14a.5.5 0 1 1-.7.7L6 6.22l-2 2v1.8h9V7.2Z"
  }), /* @__PURE__ */ import_react12.default.createElement("path", {
    d: "M0 10V7h1v3H0Zm0 3.5V11h1v2h2v1H.5a.5.5 0 0 1-.5-.5Zm7 .5H4v-1h3v1Z"
  })),
  search: /* @__PURE__ */ import_react12.default.createElement(import_react12.default.Fragment, null, /* @__PURE__ */ import_react12.default.createElement("path", {
    fillRule: "evenodd",
    d: "M9.54 10.2a5.5 5.5 0 1 1 .66-.66c.06.03.11.06.15.1l3 3a.5.5 0 0 1-.7.71l-3-3a.5.5 0 0 1-.1-.14ZM10.5 6a4.5 4.5 0 1 1-9 0 4.5 4.5 0 0 1 9 0Z"
  })),
  zoom: /* @__PURE__ */ import_react12.default.createElement(import_react12.default.Fragment, null, /* @__PURE__ */ import_react12.default.createElement("path", {
    d: "M6 3.5c.28 0 .5.22.5.5v1.5H8a.5.5 0 0 1 0 1H6.5V8a.5.5 0 0 1-1 0V6.5H4a.5.5 0 0 1 0-1h1.5V4c0-.28.22-.5.5-.5Z"
  }), /* @__PURE__ */ import_react12.default.createElement("path", {
    fillRule: "evenodd",
    d: "M9.54 10.2a5.5 5.5 0 1 1 .66-.66c.06.03.11.06.15.1l3 3a.5.5 0 0 1-.7.71l-3-3a.5.5 0 0 1-.1-.14ZM10.5 6a4.5 4.5 0 1 1-9 0 4.5 4.5 0 0 1 9 0Z"
  })),
  zoomout: /* @__PURE__ */ import_react12.default.createElement(import_react12.default.Fragment, null, /* @__PURE__ */ import_react12.default.createElement("path", {
    d: "M4 5.5a.5.5 0 0 0 0 1h4a.5.5 0 0 0 0-1H4Z"
  }), /* @__PURE__ */ import_react12.default.createElement("path", {
    fillRule: "evenodd",
    d: "M6 11.5c1.35 0 2.59-.49 3.54-1.3.03.06.06.11.1.15l3 3a.5.5 0 0 0 .71-.7l-3-3a.5.5 0 0 0-.14-.1A5.5 5.5 0 1 0 6 11.5Zm0-1a4.5 4.5 0 1 0 0-9 4.5 4.5 0 0 0 0 9Z"
  })),
  zoomreset: /* @__PURE__ */ import_react12.default.createElement(import_react12.default.Fragment, null, /* @__PURE__ */ import_react12.default.createElement("path", {
    d: "M1.5 2.84V1.5a.5.5 0 0 0-1 0V4c0 .28.22.5.5.5h2.5a.5.5 0 0 0 0-1H2.26a4.5 4.5 0 1 1-.5 4.02.5.5 0 1 0-.94.33 5.5 5.5 0 0 0 8.72 2.36l.1.14 3 3a.5.5 0 0 0 .71-.7l-3-3a.5.5 0 0 0-.14-.1 5.5 5.5 0 1 0-8.7-6.7Z"
  })),
  eye: /* @__PURE__ */ import_react12.default.createElement(import_react12.default.Fragment, null, /* @__PURE__ */ import_react12.default.createElement("path", {
    d: "M7 9.5a2.5 2.5 0 1 0 0-5 2.5 2.5 0 0 0 0 5Z"
  }), /* @__PURE__ */ import_react12.default.createElement("path", {
    fillRule: "evenodd",
    d: "m14 7-.2.3c-.13.16-3.06 4.2-6.8 4.2C3.26 11.5.33 7.46.2 7.3L0 7l.2-.3C.34 6.55 3.27 2.5 7 2.5c3.74 0 6.67 4.04 6.8 4.2l.2.3ZM2.9 5.3A13 13 0 0 0 1.24 7 13 13 0 0 0 2.9 8.7c1.14.97 2.58 1.8 4.1 1.8 1.52 0 2.96-.83 4.1-1.8A13 13 0 0 0 12.76 7a13 13 0 0 0-1.66-1.7C9.96 4.33 8.52 3.5 7 3.5c-1.52 0-2.96.83-4.1 1.8Z"
  })),
  eyeclose: /* @__PURE__ */ import_react12.default.createElement(import_react12.default.Fragment, null, /* @__PURE__ */ import_react12.default.createElement("path", {
    d: "M1.85 1.15a.5.5 0 1 0-.7.7l11 11a.5.5 0 0 0 .7-.7l-11-11ZM11.1 8.7c-.17.15-.36.3-.55.44l.72.71a13.25 13.25 0 0 0 2.52-2.56L14 7l-.2-.3c-.13-.16-3.06-4.2-6.8-4.2-.89 0-1.73.23-2.5.58l.76.76A4.86 4.86 0 0 1 7 3.5c1.52 0 2.96.83 4.1 1.8A13 13 0 0 1 12.76 7a13 13 0 0 1-1.66 1.7ZM.2 6.7c.08-.09 1.04-1.41 2.53-2.55l.72.71c-.2.14-.38.3-.55.44A13 13 0 0 0 1.24 7 13 13 0 0 0 2.9 8.7c1.14.97 2.58 1.8 4.1 1.8.6 0 1.18-.13 1.74-.34l.77.76c-.78.35-1.62.58-2.51.58C3.26 11.5.33 7.46.2 7.3L0 7l.2-.3Z"
  }), /* @__PURE__ */ import_react12.default.createElement("path", {
    d: "M4.5 7c0-.32.06-.63.17-.91l3.24 3.24A2.5 2.5 0 0 1 4.5 7Zm4.83.91L6.09 4.67a2.5 2.5 0 0 1 3.24 3.24Z"
  })),
  lightning: /* @__PURE__ */ import_react12.default.createElement(import_react12.default.Fragment, null, /* @__PURE__ */ import_react12.default.createElement("path", {
    fillRule: "evenodd",
    d: "M2.52 6.6a.57.57 0 0 0-.17.54c.04.2.19.37.38.41l2.78.73-1.5 5c-.06.24.02.5.22.63a.5.5 0 0 0 .28.09.5.5 0 0 0 .35-.14L11.5 7.4c.14-.13.2-.34.15-.54a.53.53 0 0 0-.38-.4l-2.7-.7L10.79.78c.1-.23.04-.5-.15-.66a.5.5 0 0 0-.65 0L2.52 6.6Zm7.72.63-3.07-.8 1.85-4.14-5.2 4.51 2.94.77-1.27 4.28 4.75-4.62Zm-5.73 6.2.04.02Z"
  })),
  lightningoff: /* @__PURE__ */ import_react12.default.createElement(import_react12.default.Fragment, null, /* @__PURE__ */ import_react12.default.createElement("path", {
    d: "M10.14 8.72 11.5 7.4c.14-.13.2-.34.15-.54a.53.53 0 0 0-.38-.4l-2.7-.7L10.79.78c.1-.23.04-.5-.15-.66a.5.5 0 0 0-.65 0L5.46 4.05l.71.7L9.02 2.3 7.38 5.97l.7.7 2.16.56-.8.79.7.7ZM2.52 6.6a.57.57 0 0 0-.17.54c.04.2.19.37.38.41l2.78.73-1.5 5c-.06.24.02.5.22.63a.5.5 0 0 0 .63-.05l3.84-3.74-.7-.7-2.51 2.43 1.13-3.81-.68-.69L3.8 6.8l.85-.73-.71-.7L2.52 6.6Zm-.67-5.45a.5.5 0 1 0-.7.7l11 11a.5.5 0 0 0 .7-.7l-11-11Z"
  })),
  contrast: /* @__PURE__ */ import_react12.default.createElement(import_react12.default.Fragment, null, /* @__PURE__ */ import_react12.default.createElement("path", {
    fillRule: "evenodd",
    d: "M3 3H.5a.5.5 0 0 0-.5.5v10c0 .28.22.5.5.5h10a.5.5 0 0 0 .5-.5V11h2.5a.5.5 0 0 0 .5-.5V.5a.5.5 0 0 0-.5-.5h-10a.5.5 0 0 0-.5.5V3Zm1 1v2.3L6.3 4H4ZM3 4v6.5a.5.5 0 0 0 .5.5H10v2H1V4h2Zm1-1h6.5a.5.5 0 0 1 .5.5V10h2V1H4v2Zm6 7V7.71l-2.3 2.3H10Zm0-3.7V4.7L4.7 10h1.6L10 6.3ZM9.3 4H7.7L4 7.71V9.3L9.3 4Z"
  })),
  switchalt: /* @__PURE__ */ import_react12.default.createElement(import_react12.default.Fragment, null, /* @__PURE__ */ import_react12.default.createElement("path", {
    fillRule: "evenodd",
    d: "M3 3V.5c0-.27.22-.5.5-.5h10c.28 0 .5.23.5.5v10a.5.5 0 0 1-.5.5H11v2.5a.5.5 0 0 1-.5.5H.5a.5.5 0 0 1-.5-.5v-10c0-.27.22-.5.5-.5H3Zm1 0V1h9v9h-2V3.5a.5.5 0 0 0-.5-.5H4Zm6 8v2H1V4h2v6.5c0 .28.22.5.5.5H10Zm0-1H4V4h6v6Z"
  })),
  mirror: /* @__PURE__ */ import_react12.default.createElement(import_react12.default.Fragment, null, /* @__PURE__ */ import_react12.default.createElement("path", {
    d: "M1 1.5c0-.27.22-.5.5-.5h11c.28 0 .5.23.5.5v11a.5.5 0 0 1-.5.5h-11a.5.5 0 0 1-.5-.5v-11ZM2 12h10V2L2 12Z"
  })),
  grow: /* @__PURE__ */ import_react12.default.createElement(import_react12.default.Fragment, null, /* @__PURE__ */ import_react12.default.createElement("path", {
    d: "M1.5 1a.5.5 0 1 0 0 1H12v10.5a.5.5 0 0 0 1 0V2a1 1 0 0 0-1-1H1.5Z"
  }), /* @__PURE__ */ import_react12.default.createElement("path", {
    d: "M1 3.5c0-.27.22-.5.5-.5H10a1 1 0 0 1 1 1v8.5a.5.5 0 0 1-1 0V4H1.5a.5.5 0 0 1-.5-.5Z"
  }), /* @__PURE__ */ import_react12.default.createElement("path", {
    fillRule: "evenodd",
    d: "M1.5 5a.5.5 0 0 0-.5.5v7c0 .28.22.5.5.5h7a.5.5 0 0 0 .5-.5v-7a.5.5 0 0 0-.5-.5h-7ZM2 6v6h6V6H2Z"
  })),
  paintbrush: /* @__PURE__ */ import_react12.default.createElement(import_react12.default.Fragment, null, /* @__PURE__ */ import_react12.default.createElement("path", {
    fillRule: "evenodd",
    d: "M11.8535.1464a.5.5 0 0 0-.7071 0L2.9827 8.3102a2.2396 2.2396 0 0 0-1.0737.599C.6772 10.141.2402 11.903.0852 12.9978 0 13.5998 0 14.0002 0 14.0002s.4004 0 1.0023-.0853c1.095-.155 2.8569-.5919 4.0887-1.8237.307-.307.5067-.6806.5992-1.0743l8.1633-8.1633a.5.5 0 0 0 0-.7071l-2-2Zm-6.253 9.546L6.543 8.75l-1.293-1.2929-.9424.9424a2.242 2.242 0 0 1 .7835.5097c.23.2302.4.4977.5095.7831ZM7.25 8.0428 12.7929 2.5 11.5 1.2071 5.957 6.75 7.25 8.0429ZM4.3839 9.6163c.4881.4882.4881 1.2796 0 1.7678-.7665.7664-1.832 1.1845-2.7791 1.403a8.6972 8.6972 0 0 1-.49.0982 8.7151 8.7151 0 0 1 .0982-.4899c.2186-.9471.6367-2.0126 1.403-2.779.4882-.4882 1.2797-.4882 1.7679 0Z"
  })),
  ruler: /* @__PURE__ */ import_react12.default.createElement(import_react12.default.Fragment, null, /* @__PURE__ */ import_react12.default.createElement("path", {
    d: "M1.5 1c.28 0 .5.23.5.5V2h10v-.5a.5.5 0 0 1 1 0v2a.5.5 0 0 1-1 0V3H2v.5a.5.5 0 0 1-1 0v-2c0-.27.22-.5.5-.5Z"
  }), /* @__PURE__ */ import_react12.default.createElement("path", {
    fillRule: "evenodd",
    d: "M1.5 6a.5.5 0 0 0-.5.5v6c0 .28.22.5.5.5h11a.5.5 0 0 0 .5-.5v-6a.5.5 0 0 0-.5-.5h-11ZM2 7v5h10V7h-1v2.5a.5.5 0 0 1-1 0V7h-.75v1a.5.5 0 0 1-1 0V7H7.5v2.5a.5.5 0 0 1-1 0V7h-.75v1a.5.5 0 0 1-1 0V7H4v2.5a.5.5 0 0 1-1 0V7H2Z"
  })),
  stop: /* @__PURE__ */ import_react12.default.createElement(import_react12.default.Fragment, null, /* @__PURE__ */ import_react12.default.createElement("path", {
    d: "M4.5 4a.5.5 0 0 0-.5.5v5c0 .28.22.5.5.5h5a.5.5 0 0 0 .5-.5v-5a.5.5 0 0 0-.5-.5h-5Z"
  }), /* @__PURE__ */ import_react12.default.createElement("path", {
    fillRule: "evenodd",
    d: "M14 7A7 7 0 1 1 0 7a7 7 0 0 1 14 0Zm-1 0A6 6 0 1 1 1 7a6 6 0 0 1 12 0Z"
  })),
  camera: /* @__PURE__ */ import_react12.default.createElement(import_react12.default.Fragment, null, /* @__PURE__ */ import_react12.default.createElement("path", {
    fillRule: "evenodd",
    d: "M10 7a3 3 0 1 1-6 0 3 3 0 0 1 6 0ZM9 7a2 2 0 1 1-4 0 2 2 0 0 1 4 0Z"
  }), /* @__PURE__ */ import_react12.default.createElement("path", {
    fillRule: "evenodd",
    d: "M2.5 1a.5.5 0 0 0-.5.5V2H.5a.5.5 0 0 0-.5.5v9c0 .28.22.5.5.5h13a.5.5 0 0 0 .5-.5v-9a.5.5 0 0 0-.5-.5H6v-.5a.5.5 0 0 0-.5-.5h-3ZM1 3v8h12V3H1Z"
  })),
  video: /* @__PURE__ */ import_react12.default.createElement(import_react12.default.Fragment, null, /* @__PURE__ */ import_react12.default.createElement("path", {
    d: "M2.5 10a.5.5 0 1 0 0-1 .5.5 0 0 0 0 1Z"
  }), /* @__PURE__ */ import_react12.default.createElement("path", {
    fillRule: "evenodd",
    d: "M0 4c0-1.1.9-2 2-2h6a2 2 0 0 1 2 2v.5l3.19-2.4a.5.5 0 0 1 .81.4v9a.5.5 0 0 1-.8.4L10 9.5v.5a2 2 0 0 1-2 2H2a2 2 0 0 1-2-2V4Zm9 0v1.5a.5.5 0 0 0 .8.4L13 3.5v7L9.8 8.1a.5.5 0 0 0-.8.4V10a1 1 0 0 1-1 1H2a1 1 0 0 1-1-1V4a1 1 0 0 1 1-1h6a1 1 0 0 1 1 1Z"
  })),
  speaker: /* @__PURE__ */ import_react12.default.createElement(import_react12.default.Fragment, null, /* @__PURE__ */ import_react12.default.createElement("path", {
    fillRule: "evenodd",
    d: "M1 4.50004V9.50004C1 9.77618 1.22386 10 1.5 10H4L7.17075 12.7744C7.49404 13.0573 8 12.8277 8 12.3982V1.60192C8 1.17235 7.49404 0.942757 7.17075 1.22564L4 4.00004H1.5C1.22386 4.00004 1 4.2239 1 4.50004ZM4 9.00004V5.00004H2V9.00004H4ZM4.99804 9.54456C4.99934 9.52989 5 9.51505 5 9.50004V4.50004C5 4.48504 4.99934 4.47019 4.99804 4.45552L7 2.70381V11.2963L4.99804 9.54456Z"
  }), /* @__PURE__ */ import_react12.default.createElement("path", {
    d: "M10.1498 1.75202C9.88637 1.66927 9.60572 1.81577 9.52297 2.07922C9.44023 2.34267 9.58672 2.62332 9.85017 2.70607C11.6763 3.27963 13 4.98596 13 7.00014C13 9.01433 11.6763 10.7207 9.85017 11.2942C9.58672 11.377 9.44023 11.6576 9.52297 11.9211C9.60572 12.1845 9.88637 12.331 10.1498 12.2483C12.3808 11.5476 14 9.4636 14 7.00014C14 4.53669 12.3808 2.45272 10.1498 1.75202Z"
  }), /* @__PURE__ */ import_react12.default.createElement("path", {
    d: "M10.2504 3.96861C10.0113 3.83033 9.70547 3.91201 9.5672 4.15105C9.42893 4.39008 9.51061 4.69594 9.74964 4.83421C10.4982 5.26723 11 6.07534 11 7.00006C11 7.92479 10.4982 8.7329 9.74964 9.16591C9.51061 9.30418 9.42893 9.61005 9.5672 9.84908C9.70547 10.0881 10.0113 10.1698 10.2504 10.0315C11.2952 9.42711 12 8.29619 12 7.00006C12 5.70394 11.2952 4.57302 10.2504 3.96861Z"
  })),
  play: /* @__PURE__ */ import_react12.default.createElement(import_react12.default.Fragment, null, /* @__PURE__ */ import_react12.default.createElement("path", {
    d: "m12.81 7.43-9.05 5.6A.5.5 0 0 1 3 12.6V1.4c0-.4.43-.63.76-.43l9.05 5.6a.5.5 0 0 1 0 .86Z"
  })),
  playback: /* @__PURE__ */ import_react12.default.createElement(import_react12.default.Fragment, null, /* @__PURE__ */ import_react12.default.createElement("path", {
    d: "M11.24 12.04 3.7 7.42a.5.5 0 0 1-.2-.23v4.05a.75.75 0 0 1-1.5 0v-8.5a.75.75 0 0 1 1.5 0V6.8a.5.5 0 0 1 .2-.23l7.54-4.6a.5.5 0 0 1 .76.42v9.22a.5.5 0 0 1-.76.43Z"
  })),
  playnext: /* @__PURE__ */ import_react12.default.createElement(import_react12.default.Fragment, null, /* @__PURE__ */ import_react12.default.createElement("path", {
    d: "m2.76 12.04 7.54-4.61a.5.5 0 0 0 .2-.23v4.05a.75.75 0 0 0 1.5 0v-8.5a.75.75 0 0 0-1.5 0V6.8a.5.5 0 0 0-.2-.23l-7.54-4.6a.5.5 0 0 0-.76.42v9.22c0 .39.43.63.76.43Z"
  })),
  rewind: /* @__PURE__ */ import_react12.default.createElement(import_react12.default.Fragment, null, /* @__PURE__ */ import_react12.default.createElement("path", {
    d: "M9 2.42v2.32L13.23 2a.5.5 0 0 1 .77.42v9.16a.5.5 0 0 1-.77.42L9 9.26v2.32a.5.5 0 0 1-.77.42L1.5 7.65v3.6a.75.75 0 0 1-1.5 0v-8.5a.75.75 0 0 1 1.5 0v3.6L8.23 2a.5.5 0 0 1 .77.42Z"
  })),
  fastforward: /* @__PURE__ */ import_react12.default.createElement(import_react12.default.Fragment, null, /* @__PURE__ */ import_react12.default.createElement("path", {
    d: "M5 2.42v2.32L.77 2a.5.5 0 0 0-.77.42v9.16c0 .4.44.64.77.42L5 9.26v2.32c0 .4.44.64.77.42l6.73-4.35v3.6a.75.75 0 0 0 1.5 0v-8.5a.75.75 0 0 0-1.5 0v3.6L5.77 2a.5.5 0 0 0-.77.42Z"
  })),
  stopalt: /* @__PURE__ */ import_react12.default.createElement(import_react12.default.Fragment, null, /* @__PURE__ */ import_react12.default.createElement("path", {
    d: "M1 1.5c0-.27.22-.5.5-.5h11c.28 0 .5.23.5.5v11a.5.5 0 0 1-.5.5h-11a.5.5 0 0 1-.5-.5v-11Z"
  })),
  book: /* @__PURE__ */ import_react12.default.createElement(import_react12.default.Fragment, null, /* @__PURE__ */ import_react12.default.createElement("path", {
    fillRule: "evenodd",
    d: "M13 2a2 2 0 0 0-2-2H1.5a.5.5 0 0 0-.5.5v13c0 .28.22.5.5.5H11a2 2 0 0 0 2-2V2ZM3 13h8a1 1 0 0 0 1-1V2a1 1 0 0 0-1-1H7v6a.5.5 0 0 1-.86.36L5.5 6.7l-.65.65A.5.5 0 0 1 4 7V1H3v12ZM5 1v4.8l.15-.15a.5.5 0 0 1 .74.04l.11.1V1H5Z"
  })),
  document: /* @__PURE__ */ import_react12.default.createElement(import_react12.default.Fragment, null, /* @__PURE__ */ import_react12.default.createElement("path", {
    d: "M4 5.5c0-.28.22-.5.5-.5h5a.5.5 0 0 1 0 1h-5a.5.5 0 0 1-.5-.5ZM4.5 7.5a.5.5 0 0 0 0 1h5a.5.5 0 0 0 0-1h-5ZM4 10.5c0-.28.22-.5.5-.5h5a.5.5 0 0 1 0 1h-5a.5.5 0 0 1-.5-.5Z"
  }), /* @__PURE__ */ import_react12.default.createElement("path", {
    fillRule: "evenodd",
    d: "M1.5 0a.5.5 0 0 0-.5.5v13c0 .28.22.5.5.5h11a.5.5 0 0 0 .5-.5V3.2a.5.5 0 0 0-.15-.35l-2.7-2.7A.5.5 0 0 0 9.79 0H1.5ZM2 1h7.5v2c0 .28.22.5.5.5h2V13H2V1Z"
  })),
  copy: /* @__PURE__ */ import_react12.default.createElement(import_react12.default.Fragment, null, /* @__PURE__ */ import_react12.default.createElement("path", {
    fillRule: "evenodd",
    d: "M11.75.07A.5.5 0 0 0 11.5 0h-6a.5.5 0 0 0-.5.5V3H.5a.5.5 0 0 0-.5.5v10c0 .28.22.5.5.5h8a.5.5 0 0 0 .5-.5V11h4.5a.5.5 0 0 0 .5-.5V2.51a.5.5 0 0 0-.15-.36l-2-2a.5.5 0 0 0-.1-.08ZM9 10h4V3h-1.5a.5.5 0 0 1-.5-.5V1H6v2h.5a.5.5 0 0 1 .36.15l1.99 2c.1.09.15.21.15.35v4.51ZM1 4v9h7V6H6.5a.5.5 0 0 1-.5-.5V4H1Z"
  })),
  category: /* @__PURE__ */ import_react12.default.createElement(import_react12.default.Fragment, null, /* @__PURE__ */ import_react12.default.createElement("path", {
    d: "M3 1.5c0-.28.22-.5.5-.5h7a.5.5 0 0 1 0 1h-7a.5.5 0 0 1-.5-.5Zm-1 2c0-.27.22-.5.5-.5h9a.5.5 0 0 1 0 1h-9a.5.5 0 0 1-.5-.5Z"
  }), /* @__PURE__ */ import_react12.default.createElement("path", {
    fillRule: "evenodd",
    d: "M1 5.5c0-.28.22-.5.5-.5h11c.28 0 .5.22.5.5v7a.5.5 0 0 1-.5.5h-11a.5.5 0 0 1-.5-.5v-7ZM2 12V6h10v6H2Z"
  })),
  folder: /* @__PURE__ */ import_react12.default.createElement(import_react12.default.Fragment, null, /* @__PURE__ */ import_react12.default.createElement("path", {
    fillRule: "evenodd",
    d: "M6.59 3.5 5.09 2H1v9h12V3.5H6.59Zm.41-1L5.8 1.3a1 1 0 0 0-.71-.3H.5a.5.5 0 0 0-.5.5v10c0 .28.22.5.5.5h13a.5.5 0 0 0 .5-.5V3a.5.5 0 0 0-.5-.5H7Z"
  })),
  print: /* @__PURE__ */ import_react12.default.createElement(import_react12.default.Fragment, null, /* @__PURE__ */ import_react12.default.createElement("path", {
    d: "M4.5 8a.5.5 0 1 0 0 1h5a.5.5 0 0 0 0-1h-5Zm0 2a.5.5 0 0 0 0 1h5a.5.5 0 0 0 0-1h-5Z"
  }), /* @__PURE__ */ import_react12.default.createElement("path", {
    fillRule: "evenodd",
    d: "M2 1.5c0-.27.22-.5.5-.5h8a.5.5 0 0 1 .36.15l.99 1c.1.09.15.21.15.35v1.51h1.5c.28 0 .5.22.5.5v5a.5.5 0 0 1-.5.5H12v2.5a.5.5 0 0 1-.5.5h-9a.5.5 0 0 1-.5-.5V10H.5a.5.5 0 0 1-.5-.5v-5c0-.28.22-.5.5-.5H2V1.5ZM13 9h-1V6.5a.5.5 0 0 0-.5-.5h-9a.5.5 0 0 0-.5.5V9H1V5h12v4Zm-2-6v1H3V2h7v.5c0 .28.22.5.5.5h.5Zm-8 9h8V7H3v5Z"
  })),
  graphline: /* @__PURE__ */ import_react12.default.createElement(import_react12.default.Fragment, null, /* @__PURE__ */ import_react12.default.createElement("path", {
    d: "M5.15 6.15c.2-.2.5-.2.7 0L7 7.3l2.15-2.15c.2-.2.5-.2.7 0l1 1a.5.5 0 0 1-.7.7l-.65-.64-2.15 2.15a.5.5 0 0 1-.7 0L5.5 7.2 3.85 8.86a.5.5 0 1 1-.7-.71l2-2Z"
  }), /* @__PURE__ */ import_react12.default.createElement("path", {
    fillRule: "evenodd",
    d: "M1.5 1a.5.5 0 0 0-.5.5v11c0 .28.22.5.5.5h11a.5.5 0 0 0 .5-.5v-11a.5.5 0 0 0-.5-.5h-11ZM2 2v10h10V2H2Z"
  })),
  calendar: /* @__PURE__ */ import_react12.default.createElement(import_react12.default.Fragment, null, /* @__PURE__ */ import_react12.default.createElement("path", {
    fillRule: "evenodd",
    d: "M3.5 0c.28 0 .5.22.5.5V1h6V.5a.5.5 0 0 1 1 0V1h1.5c.28 0 .5.22.5.5v11a.5.5 0 0 1-.5.5h-11a.5.5 0 0 1-.5-.5v-11c0-.28.22-.5.5-.5H3V.5c0-.28.22-.5.5-.5ZM2 4v2.3h3V4H2Zm0 5.2V6.8h3v2.4H2Zm0 .5V12h3V9.7H2Zm3.5 0V12h3V9.7h-3Zm3.5 0V12h3V9.7H9Zm3-.5H9V6.8h3v2.4Zm-3.5 0h-3V6.8h3v2.4ZM9 4v2.3h3V4H9ZM5.5 6.3h3V4h-3v2.3Z"
  })),
  graphbar: /* @__PURE__ */ import_react12.default.createElement(import_react12.default.Fragment, null, /* @__PURE__ */ import_react12.default.createElement("path", {
    d: "M12 2.5a.5.5 0 0 0-1 0v10a.5.5 0 0 0 1 0v-10Zm-3 2a.5.5 0 0 0-1 0v8a.5.5 0 0 0 1 0v-8ZM5.5 7c.28 0 .5.22.5.5v5a.5.5 0 0 1-1 0v-5c0-.28.22-.5.5-.5ZM3 10.5a.5.5 0 0 0-1 0v2a.5.5 0 0 0 1 0v-2Z"
  })),
  menu: /* @__PURE__ */ import_react12.default.createElement(import_react12.default.Fragment, null, /* @__PURE__ */ import_react12.default.createElement("path", {
    d: "M13 2a.5.5 0 0 1 0 1H1a.5.5 0 0 1 0-1h12Zm-3 3a.5.5 0 0 1 0 1H1a.5.5 0 0 1 0-1h9Zm1.5 3.5A.5.5 0 0 0 11 8H1a.5.5 0 0 0 0 1h10a.5.5 0 0 0 .5-.5Zm-4 2.5a.5.5 0 0 1 0 1H1a.5.5 0 0 1 0-1h6.5Z"
  })),
  menualt: /* @__PURE__ */ import_react12.default.createElement(import_react12.default.Fragment, null, /* @__PURE__ */ import_react12.default.createElement("path", {
    d: "M1 2a.5.5 0 0 0 0 1h12a.5.5 0 0 0 0-1H1Zm3 3a.5.5 0 0 0 0 1h9a.5.5 0 0 0 0-1H4ZM2.5 8.5c0-.28.22-.5.5-.5h10a.5.5 0 0 1 0 1H3a.5.5 0 0 1-.5-.5Zm4 2.5a.5.5 0 0 0 0 1H13a.5.5 0 0 0 0-1H6.5Z"
  })),
  filter: /* @__PURE__ */ import_react12.default.createElement(import_react12.default.Fragment, null, /* @__PURE__ */ import_react12.default.createElement("path", {
    d: "M1 2a.5.5 0 0 0 0 1h12a.5.5 0 0 0 0-1H1Zm2 3a.5.5 0 0 0 0 1h8a.5.5 0 0 0 0-1H3Zm1.5 3.5c0-.28.22-.5.5-.5h4a.5.5 0 0 1 0 1H5a.5.5 0 0 1-.5-.5Zm2 2.5a.5.5 0 0 0 0 1h1a.5.5 0 0 0 0-1h-1Z"
  })),
  docchart: /* @__PURE__ */ import_react12.default.createElement(import_react12.default.Fragment, null, /* @__PURE__ */ import_react12.default.createElement("path", {
    fillRule: "evenodd",
    d: "M1 1.5C1 1.22386 1.22386 1 1.5 1H12.5C12.7761 1 13 1.22386 13 1.5V12.5C13 12.7761 12.7761 13 12.5 13H1.5C1.22386 13 1 12.7761 1 12.5V1.5ZM2 4V6.2998H5V4H2ZM2 9.2002V6.7998H5V9.2002H2ZM2 9.7002V12H5V9.7002H2ZM5.5 9.7002V12H8.5V9.7002H5.5ZM9 9.7002V12H12V9.7002H9ZM12 9.2002H9V6.7998H12V9.2002ZM8.5 9.2002H5.5V6.7998H8.5V9.2002ZM9 6.2998H12V4H9V6.2998ZM5.5 6.2998H8.5V4H5.5V6.2998Z"
  })),
  doclist: /* @__PURE__ */ import_react12.default.createElement(import_react12.default.Fragment, null, /* @__PURE__ */ import_react12.default.createElement("path", {
    d: "M3.5 6.5c0-.28.22-.5.5-.5h6a.5.5 0 0 1 0 1H4a.5.5 0 0 1-.5-.5ZM4 9a.5.5 0 0 0 0 1h6a.5.5 0 0 0 0-1H4Z"
  }), /* @__PURE__ */ import_react12.default.createElement("path", {
    fillRule: "evenodd",
    d: "M1 1.5c0-.28.22-.5.5-.5h11c.28 0 .5.22.5.5v11a.5.5 0 0 1-.5.5h-11a.5.5 0 0 1-.5-.5v-11ZM2 4v8h10V4H2Z"
  })),
  markup: /* @__PURE__ */ import_react12.default.createElement(import_react12.default.Fragment, null, /* @__PURE__ */ import_react12.default.createElement("path", {
    d: "M8.98 1.63a.5.5 0 0 0-.96-.26l-3 11a.5.5 0 1 0 .96.26l3-11ZM3.32 3.62a.5.5 0 0 1 .06.7L1.15 7l2.23 2.68a.5.5 0 1 1-.76.64l-2.5-3a.5.5 0 0 1 0-.64l2.5-3a.5.5 0 0 1 .7-.06Zm7.36 0a.5.5 0 0 0-.06.7L12.85 7l-2.23 2.68a.5.5 0 0 0 .76.64l2.5-3a.5.5 0 0 0 0-.64l-2.5-3a.5.5 0 0 0-.7-.06Z"
  })),
  bold: /* @__PURE__ */ import_react12.default.createElement(import_react12.default.Fragment, null, /* @__PURE__ */ import_react12.default.createElement("path", {
    fillRule: "evenodd",
    d: "M3 2v1.5h1v7H3V12h5a3 3 0 0 0 1.8-5.4A2.74 2.74 0 0 0 8 2H3Zm5 5.5H5.5v3H8a1.5 1.5 0 1 0 0-3Zm-.25-4H5.5V6h2.25a1.25 1.25 0 1 0 0-2.5Z"
  })),
  italic: /* @__PURE__ */ import_react12.default.createElement("path", {
    d: "M5 2h6v1H8.5l-2 8H9v1H3v-1h2.5l2-8H5V2Z"
  }),
  paperclip: /* @__PURE__ */ import_react12.default.createElement(import_react12.default.Fragment, null, /* @__PURE__ */ import_react12.default.createElement("path", {
    d: "M10.55 2.27a1.5 1.5 0 0 0-2.12 0L2.78 7.92a2.5 2.5 0 0 0 3.53 3.54l3.54-3.54a.5.5 0 1 1 .7.71l-3.53 3.54a3.5 3.5 0 0 1-4.96-4.94v-.01l5.66-5.66h.01a2.5 2.5 0 0 1 3.53 3.53L5.6 10.76a1.5 1.5 0 0 1-2.12-2.12L7.02 5.1a.5.5 0 1 1 .7.7L4.2 9.34a.5.5 0 0 0 .7.7l5.66-5.65a1.5 1.5 0 0 0 0-2.12Z"
  })),
  listordered: /* @__PURE__ */ import_react12.default.createElement(import_react12.default.Fragment, null, /* @__PURE__ */ import_react12.default.createElement("path", {
    d: "M5 2.5c0-.28.22-.5.5-.5h7a.5.5 0 0 1 0 1h-7a.5.5 0 0 1-.5-.5ZM5 7c0-.28.22-.5.5-.5h7a.5.5 0 0 1 0 1h-7A.5.5 0 0 1 5 7Zm.5 4a.5.5 0 0 0 0 1h7a.5.5 0 0 0 0-1h-7Zm-3-9H1v1h1v3h1V2.5a.5.5 0 0 0-.5-.5ZM3 8.5v1a.5.5 0 0 1-1 0V9h-.5a.5.5 0 0 1 0-1h1c.28 0 .5.22.5.5Zm-1 2a.5.5 0 0 0-1 0V12h2v-1H2v-.5Z"
  })),
  listunordered: /* @__PURE__ */ import_react12.default.createElement(import_react12.default.Fragment, null, /* @__PURE__ */ import_react12.default.createElement("path", {
    d: "M2.75 2.5a.75.75 0 1 1-1.5 0 .75.75 0 0 1 1.5 0ZM5.5 2a.5.5 0 0 0 0 1h7a.5.5 0 0 0 0-1h-7Zm0 9a.5.5 0 0 0 0 1h7a.5.5 0 0 0 0-1h-7ZM2 12.25a.75.75 0 1 0 0-1.5.75.75 0 0 0 0 1.5ZM5 7c0-.28.22-.5.5-.5h7a.5.5 0 0 1 0 1h-7A.5.5 0 0 1 5 7Zm-3 .75a.75.75 0 1 0 0-1.5.75.75 0 0 0 0 1.5Z"
  })),
  paragraph: /* @__PURE__ */ import_react12.default.createElement(import_react12.default.Fragment, null, /* @__PURE__ */ import_react12.default.createElement("path", {
    d: "M6 7a3 3 0 1 1 0-6h5.5a.5.5 0 0 1 0 1H10v10.5a.5.5 0 0 1-1 0V2H7v10.5a.5.5 0 0 1-1 0V7Z"
  })),
  markdown: /* @__PURE__ */ import_react12.default.createElement(import_react12.default.Fragment, null, /* @__PURE__ */ import_react12.default.createElement("path", {
    d: "M2 4.5h1.5L5 6.38 6.5 4.5H8v5H6.5V7L5 8.88 3.5 7v2.5H2v-5Zm7.75 0h1.5V7h1.25l-2 2.5-2-2.5h1.25V4.5Z"
  }), /* @__PURE__ */ import_react12.default.createElement("path", {
    fillRule: "evenodd",
    d: "M.5 2a.5.5 0 0 0-.5.5v9c0 .28.22.5.5.5h13a.5.5 0 0 0 .5-.5v-9a.5.5 0 0 0-.5-.5H.5ZM1 3v8h12V3H1Z"
  })),
  repository: /* @__PURE__ */ import_react12.default.createElement(import_react12.default.Fragment, null, /* @__PURE__ */ import_react12.default.createElement("path", {
    d: "M5 2.5C5 2.77614 4.77614 3 4.5 3C4.22386 3 4 2.77614 4 2.5C4 2.22386 4.22386 2 4.5 2C4.77614 2 5 2.22386 5 2.5Z"
  }), /* @__PURE__ */ import_react12.default.createElement("path", {
    d: "M4.5 5C4.77614 5 5 4.77614 5 4.5C5 4.22386 4.77614 4 4.5 4C4.22386 4 4 4.22386 4 4.5C4 4.77614 4.22386 5 4.5 5Z"
  }), /* @__PURE__ */ import_react12.default.createElement("path", {
    d: "M5 6.5C5 6.77614 4.77614 7 4.5 7C4.22386 7 4 6.77614 4 6.5C4 6.22386 4.22386 6 4.5 6C4.77614 6 5 6.22386 5 6.5Z"
  }), /* @__PURE__ */ import_react12.default.createElement("path", {
    fillRule: "evenodd",
    d: "M11 0C12.1046 0 13 0.895431 13 2V12C13 13.1046 12.1046 14 11 14H1.5C1.22386 14 1 13.7761 1 13.5V0.5C1 0.223857 1.22386 0 1.5 0H11ZM11 1H3V13H11C11.5523 13 12 12.5523 12 12V2C12 1.44772 11.5523 1 11 1Z"
  })),
  commit: /* @__PURE__ */ import_react12.default.createElement(import_react12.default.Fragment, null, /* @__PURE__ */ import_react12.default.createElement("path", {
    fillRule: "evenodd",
    d: "M3.03 7.5a4 4 0 0 0 7.94 0h2.53a.5.5 0 0 0 0-1h-2.53a4 4 0 0 0-7.94 0H.5a.5.5 0 0 0 0 1h2.53ZM7 10a3 3 0 1 0 0-6 3 3 0 0 0 0 6Z"
  })),
  branch: /* @__PURE__ */ import_react12.default.createElement(import_react12.default.Fragment, null, /* @__PURE__ */ import_react12.default.createElement("path", {
    fillRule: "evenodd",
    d: "M6 2.5c0 .65-.42 1.2-1 1.41v4.06A3.36 3.36 0 0 1 7.5 7a2.7 2.7 0 0 0 1.81-.56c.22-.18.38-.4.48-.62a1.5 1.5 0 1 1 1.03.15c-.16.42-.43.87-.86 1.24-.57.47-1.37.79-2.46.79-1.04 0-1.64.42-2 .92-.26.37-.4.8-.47 1.18A1.5 1.5 0 1 1 4 10.09V3.9a1.5 1.5 0 1 1 2-1.4Zm-2 9a.5.5 0 1 1 1 0 .5.5 0 0 1-1 0Zm1-9a.5.5 0 1 1-1 0 .5.5 0 0 1 1 0Zm6 2a.5.5 0 1 1-1 0 .5.5 0 0 1 1 0Z"
  })),
  pullrequest: /* @__PURE__ */ import_react12.default.createElement(import_react12.default.Fragment, null, /* @__PURE__ */ import_react12.default.createElement("path", {
    fillRule: "evenodd",
    d: "M8.35 1.35 7.71 2h.79A2.5 2.5 0 0 1 11 4.5v5.59a1.5 1.5 0 1 1-1 0V4.5C10 3.67 9.33 3 8.5 3h-.8l.65.65a.5.5 0 1 1-.7.7l-1.5-1.5a.5.5 0 0 1 0-.7l1.5-1.5a.5.5 0 1 1 .7.7ZM11 11.5a.5.5 0 1 1-1 0 .5.5 0 0 1 1 0ZM4 3.91a1.5 1.5 0 1 0-1 0v6.18a1.5 1.5 0 1 0 1 0V3.9ZM3.5 11a.5.5 0 1 0 0 1 .5.5 0 0 0 0-1Zm0-8a.5.5 0 1 0 0-1 .5.5 0 0 0 0 1Z"
  })),
  merge: /* @__PURE__ */ import_react12.default.createElement(import_react12.default.Fragment, null, /* @__PURE__ */ import_react12.default.createElement("path", {
    fillRule: "evenodd",
    d: "M4.1 3.87a1.5 1.5 0 1 0-1.1.04v6.18a1.5 1.5 0 1 0 1 0V6.4c.26.4.57.77.93 1.08A6.57 6.57 0 0 0 9.08 9a1.5 1.5 0 1 0 0-1 5.57 5.57 0 0 1-3.5-1.25 4.74 4.74 0 0 1-1.47-2.87ZM3.5 11a.5.5 0 1 0 0 1 .5.5 0 0 0 0-1ZM4 2.5a.5.5 0 1 1-1 0 .5.5 0 0 1 1 0Zm7 6a.5.5 0 1 1-1 0 .5.5 0 0 1 1 0Z"
  })),
  apple: /* @__PURE__ */ import_react12.default.createElement(import_react12.default.Fragment, null, /* @__PURE__ */ import_react12.default.createElement("path", {
    d: "M11.03 8.1a3.05 3.05 0 0 1-.2-1.74 2.7 2.7 0 0 1 1.4-1.94 3.13 3.13 0 0 0-2.35-1.4c-.84-.08-2.01.56-2.65.57h-.02c-.63 0-1.81-.65-2.64-.57-.42.04-1.75.32-2.55 1.6-.28.44-.5 1.01-.58 1.74a6.36 6.36 0 0 0 .02 1.74 7.5 7.5 0 0 0 1.35 3.33c.7 1.01 1.51 1.6 1.97 1.6.93.02 1.74-.6 2.41-.6l.02.01h.04c.67-.02 1.48.61 2.42.6.45-.02 1.26-.6 1.97-1.6a7.95 7.95 0 0 0 .97-1.86 2.6 2.6 0 0 1-1.58-1.48ZM8.86 2.13c.72-.85.7-2.07.63-2.12-.07-.06-1.25.16-1.99.98a2.78 2.78 0 0 0-.62 2.13c.06.05 1.27-.14 1.98-.99Z"
  })),
  linux: /* @__PURE__ */ import_react12.default.createElement(import_react12.default.Fragment, null, /* @__PURE__ */ import_react12.default.createElement("path", {
    fillRule: "evenodd",
    d: "M7 0a3 3 0 0 1 3 3v1.24c.13.13.25.27.36.42l.52.43.2.15c.32.26.7.59 1.09.97A6.28 6.28 0 0 1 14 9.54a.5.5 0 0 1-.35.44c-.31.1-.8.18-1.34.13-.33-.03-.7-.12-1.05-.3-.04.17-.1.34-.17.51a2 2 0 1 1-2.89 2.56 5.5 5.5 0 0 1-2.4 0 2 2 0 1 1-2.9-2.56 5.56 5.56 0 0 1-.16-.51c-.35.18-.72.27-1.05.3a3.4 3.4 0 0 1-1.34-.13.5.5 0 0 1-.35-.44l.01-.14a6.28 6.28 0 0 1 1.82-3.2 13.42 13.42 0 0 1 1.3-1.11c.22-.19.4-.32.5-.43.12-.15.24-.29.37-.42V3a3 3 0 0 1 3-3Zm1 11.9a2 2 0 0 1 2.14-1.9 5.5 5.5 0 0 0 .36-2c0-.51-.1-1.07-.3-1.6l-.03-.02a4.4 4.4 0 0 0-.86-.42 6.71 6.71 0 0 0-1-.31l-.86.64c-.27.2-.63.2-.9 0l-.85-.64a6.72 6.72 0 0 0-1.87.73l-.03.02A4.6 4.6 0 0 0 3.5 8c0 .68.11 1.39.36 2H4a2 2 0 0 1 2 1.9 4.49 4.49 0 0 0 2 0ZM5 12a1 1 0 1 1-2 0 1 1 0 0 1 2 0Zm6 0a1 1 0 1 1-2 0 1 1 0 0 1 2 0ZM6.1 4.3a1.5 1.5 0 0 1 1.8 0l.27.2L7 5.38 5.83 4.5l.27-.2ZM8.5 2c.28 0 .5.22.5.5V3a.5.5 0 0 1-1 0v-.5c0-.28.22-.5.5-.5ZM6 2.5a.5.5 0 0 0-1 0V3a.5.5 0 0 0 1 0v-.5Z"
  })),
  ubuntu: /* @__PURE__ */ import_react12.default.createElement(import_react12.default.Fragment, null, /* @__PURE__ */ import_react12.default.createElement("path", {
    d: "M12.26 2.07c0 1.14-.89 2.06-1.99 2.06s-1.99-.92-1.99-2.06c0-1.14.9-2.07 2-2.07s1.98.93 1.98 2.07ZM3.98 6.6c0 1.14-.9 2.07-2 2.07C.9 8.67 0 7.74 0 6.6c0-1.14.9-2.07 1.99-2.07 1.1 0 1.99.93 1.99 2.07ZM6.47 11.92a4.76 4.76 0 0 1-3.3-2.62c-.53.25-1.12.33-1.7.22a6.72 6.72 0 0 0 1.84 2.63 6.38 6.38 0 0 0 4.24 1.58c-.37-.5-.57-1.1-.59-1.73a4.77 4.77 0 0 1-.49-.08ZM11.81 11.93c0 1.14-.89 2.07-1.99 2.07s-1.98-.93-1.98-2.07c0-1.14.89-2.06 1.98-2.06 1.1 0 2 .92 2 2.06ZM12.6 11.17a6.93 6.93 0 0 0 .32-7.93A2.95 2.95 0 0 1 11.8 4.6a5.23 5.23 0 0 1-.16 5.03c.47.4.8.94.95 1.54ZM1.99 3.63h-.15A6.48 6.48 0 0 1 8 .24a3.07 3.07 0 0 0-.6 1.68 4.7 4.7 0 0 0-3.9 2.17c-.46-.3-.98-.45-1.51-.45Z"
  })),
  windows: /* @__PURE__ */ import_react12.default.createElement(import_react12.default.Fragment, null, /* @__PURE__ */ import_react12.default.createElement("path", {
    d: "M6.5 1H1v5.5h5.5V1ZM13 1H7.5v5.5H13V1ZM7.5 7.5H13V13H7.5V7.5ZM6.5 7.5H1V13h5.5V7.5Z"
  })),
  storybook: /* @__PURE__ */ import_react12.default.createElement(import_react12.default.Fragment, null, /* @__PURE__ */ import_react12.default.createElement("path", {
    d: "M2.04.62a.7.7 0 0 0-.66.72l.44 11.56c.01.37.3.66.67.68l9.4.42h.02a.7.7 0 0 0 .7-.7V.66a.7.7 0 0 0-.74-.66l-.77.05.05 1.62a.1.1 0 0 1-.17.08l-.52-.4-.61.46a.1.1 0 0 1-.17-.09L9.75.13l-7.7.49Zm8 4.74c-.24.2-2.09.33-2.09.05.04-1.04-.43-1.09-.69-1.09-.24 0-.66.08-.66.64 0 .57.6.89 1.32 1.27 1.02.53 2.24 1.18 2.24 2.82 0 1.57-1.27 2.43-2.9 2.43-1.67 0-3.14-.68-2.97-3.03.06-.27 2.2-.2 2.2 0-.03.97.19 1.26.75 1.26.43 0 .62-.24.62-.64 0-.6-.63-.95-1.36-1.36-.99-.56-2.15-1.2-2.15-2.7 0-1.5 1.03-2.5 2.86-2.5 1.83 0 2.84.99 2.84 2.85Z"
  })),
  azuredevops: /* @__PURE__ */ import_react12.default.createElement(import_react12.default.Fragment, null, /* @__PURE__ */ import_react12.default.createElement("path", {
    d: "m0 5.18 1.31-1.73 4.9-2V.01l4.3 3.15-8.78 1.7v4.8L0 9.16V5.18Zm14-2.6v8.55l-3.36 2.86-5.42-1.79V14L1.73 9.66l8.78 1.05V3.16L14 2.58Z"
  })),
  bitbucket: /* @__PURE__ */ import_react12.default.createElement(import_react12.default.Fragment, null, /* @__PURE__ */ import_react12.default.createElement("path", {
    d: "M1 1.52A.41.41 0 0 0 .59 2l1.74 10.6c.05.26.28.46.55.46h8.37c.2 0 .38-.14.42-.34l1.01-6.25H8.81l-.46 2.71H5.68L4.95 5.4h7.91L13.4 2a.41.41 0 0 0-.41-.48H1Z"
  })),
  chrome: /* @__PURE__ */ import_react12.default.createElement(import_react12.default.Fragment, null, /* @__PURE__ */ import_react12.default.createElement("path", {
    fillRule: "evenodd",
    d: "M13.02 3.43a.11.11 0 0 1-.1.17H7a3.4 3.4 0 0 0-3.3 2.55.11.11 0 0 1-.21.03L1.52 2.76a.11.11 0 0 1 0-.12 6.97 6.97 0 0 1 9-1.7c1.03.6 1.9 1.47 2.5 2.5ZM7 9.62a2.62 2.62 0 1 1 0-5.24 2.62 2.62 0 0 1 0 5.24Zm1.03.7a.11.11 0 0 0-.12-.04 3.4 3.4 0 0 1-4-1.84L1.1 3.57a.11.11 0 0 0-.2 0 7 7 0 0 0 5.07 10.35c.04 0 .08-.02.1-.05l1.97-3.42a.11.11 0 0 0 0-.13Zm1.43-5.95h3.95c.05 0 .1.03.1.07a6.97 6.97 0 0 1-1.53 7.48A6.96 6.96 0 0 1 7.08 14a.11.11 0 0 1-.1-.17l2.81-4.88h.01a3.38 3.38 0 0 0-.42-4.38.11.11 0 0 1 .08-.2Z"
  })),
  chromatic: /* @__PURE__ */ import_react12.default.createElement(import_react12.default.Fragment, null, /* @__PURE__ */ import_react12.default.createElement("path", {
    fillRule: "evenodd",
    d: "M0 7a7 7 0 1 0 14 0A7 7 0 0 0 0 7Zm5.22-3.87a1.97 1.97 0 0 1 3.75.83v1.29L5.61 3.32a2.49 2.49 0 0 0-.4-.19ZM8.7 5.71 5.35 3.78a1.97 1.97 0 0 0-2.6 2.83c.12-.1.24-.18.37-.26l1.51-.87a.27.27 0 0 1 .27 0L7 6.69l1.7-.98Zm-.32 4.97-1.52-.87a.27.27 0 0 1-.13-.23V7.15l-1.7-.97v3.86a1.97 1.97 0 0 0 3.75.83 2.5 2.5 0 0 1-.4-.19Zm.26-.46a1.97 1.97 0 0 0 2.6-2.83c-.11.1-.23.18-.36.26L7.53 9.58l1.11.64Zm-4.1.26h-.17a1.97 1.97 0 0 1-1.9-2.47 2 2 0 0 1 .92-1.2l1.11-.63v3.86c0 .14.01.29.04.44Zm6.79-5.98a1.97 1.97 0 0 0-1.87-.97c.03.14.04.29.04.43v1.75c0 .1-.05.19-.14.23l-2.1 1.22V9.1l3.35-1.93a1.97 1.97 0 0 0 .72-2.68Z"
  })),
  componentdriven: /* @__PURE__ */ import_react12.default.createElement(import_react12.default.Fragment, null, /* @__PURE__ */ import_react12.default.createElement("path", {
    d: "M10.85 2.18 8.87.2a.69.69 0 0 0-.97 0L3.09 5.01a.69.69 0 0 0 0 .97l2.46 2.46-2.4 2.4a.69.69 0 0 0 0 .98l1.98 1.98c.27.27.7.27.97 0l4.8-4.81a.69.69 0 0 0 0-.97L8.45 5.56l2.4-2.4a.69.69 0 0 0 0-.98Z"
  })),
  discord: /* @__PURE__ */ import_react12.default.createElement(import_react12.default.Fragment, null, /* @__PURE__ */ import_react12.default.createElement("path", {
    d: "M11.85 2.88C10.95 2.48 10 2.18 9 2a7.05 7.05 0 0 0-.4.75 10.66 10.66 0 0 0-3.2 0c-.1-.23-.24-.5-.36-.73A.04.04 0 0 0 4.99 2a11.51 11.51 0 0 0-2.86.9 11.82 11.82 0 0 0-2.05 8 11.6 11.6 0 0 0 3.5 1.77c.01 0 .03 0 .04-.02.27-.36.51-.75.72-1.16a.04.04 0 0 0-.03-.06 7.66 7.66 0 0 1-1.09-.52.04.04 0 0 1 0-.08 5.96 5.96 0 0 0 .26-.17 8.28 8.28 0 0 0 7.08 0l.22.17c.02.02.02.06 0 .08-.36.2-.72.37-1.1.52a.04.04 0 0 0-.02.06c.2.4.45.8.71 1.16.01.02.03.02.05.02a11.57 11.57 0 0 0 3.52-1.8 11.74 11.74 0 0 0-2.09-7.99Zm-7.17 6.4c-.7 0-1.26-.63-1.26-1.41 0-.78.56-1.41 1.26-1.41s1.27.64 1.26 1.4c0 .79-.56 1.42-1.26 1.42Zm4.65 0c-.69 0-1.26-.63-1.26-1.41 0-.78.56-1.41 1.26-1.41s1.27.64 1.26 1.4c0 .79-.55 1.42-1.26 1.42Z"
  })),
  facebook: /* @__PURE__ */ import_react12.default.createElement(import_react12.default.Fragment, null, /* @__PURE__ */ import_react12.default.createElement("path", {
    d: "M7.4 14H5.06V7H3.5V4.59h1.56V3.17C5.06 1.2 5.53 0 7.6 0h1.72v2.41H8.25c-.8 0-.85.34-.85.97v1.2h1.93L9.11 7H7.4l-.01 7Z"
  })),
  figma: /* @__PURE__ */ import_react12.default.createElement(import_react12.default.Fragment, null, /* @__PURE__ */ import_react12.default.createElement("path", {
    fillRule: "evenodd",
    d: "M9.2 0H4.8a2.6 2.6 0 0 0-1.4 4.8 2.6 2.6 0 0 0 0 4.4 2.6 2.6 0 1 0 4 2.2V8.89a2.6 2.6 0 1 0 3.2-4.09A2.6 2.6 0 0 0 9.2 0ZM7.4 7A1.8 1.8 0 1 0 11 7a1.8 1.8 0 0 0-3.6 0Zm-.8 2.6H4.8a1.8 1.8 0 1 0 1.8 1.8V9.6ZM4.8 4.4h1.8V.8H4.8a1.8 1.8 0 0 0 0 3.59Zm0 .8a1.8 1.8 0 0 0 0 3.6h1.8V5.2H4.8Zm4.4-.8H7.4V.8h1.8a1.8 1.8 0 1 1 0 3.59Z"
  })),
  gdrive: /* @__PURE__ */ import_react12.default.createElement(import_react12.default.Fragment, null, /* @__PURE__ */ import_react12.default.createElement("path", {
    d: "M6.37 8.77 4.33 12.3h6.75l2.04-3.54H6.38Zm6.18-1-3.5-6.08h-4.1l3.51 6.08h4.09ZM4.38 2.7.88 8.77l2.04 3.54 3.5-6.07L4.38 2.7Z"
  })),
  github: /* @__PURE__ */ import_react12.default.createElement(import_react12.default.Fragment, null, /* @__PURE__ */ import_react12.default.createElement("path", {
    d: "M7 0a7 7 0 0 0-2.21 13.64c.35.06.48-.15.48-.33L5.26 12c-1.76.32-2.21-.43-2.35-.83-.08-.2-.43-.82-.72-.99-.25-.13-.6-.45-.01-.46.55 0 .94.5 1.07.72.63 1.06 1.64.76 2.04.58.07-.46.25-.77.45-.94-1.56-.18-3.19-.78-3.19-3.46 0-.76.28-1.39.72-1.88-.07-.17-.31-.9.07-1.85 0 0 .59-.19 1.93.71a6.5 6.5 0 0 1 3.5 0c1.34-.9 1.92-.71 1.92-.71.39.96.14 1.68.07 1.85.45.5.72 1.11.72 1.88 0 2.69-1.64 3.28-3.2 3.46.26.22.48.64.48 1.3l-.01 1.92c0 .18.13.4.48.33A7.01 7.01 0 0 0 7 0Z"
  })),
  gitlab: /* @__PURE__ */ import_react12.default.createElement(import_react12.default.Fragment, null, /* @__PURE__ */ import_react12.default.createElement("path", {
    d: "M4.53 5.58H1.07l1.49-4.55a.26.26 0 0 1 .48 0l1.49 4.55ZM7 13.15 1.07 5.58l-.75 2.3a.5.5 0 0 0 .18.57l6.5 4.7Zm0 0 6.5-4.7a.5.5 0 0 0 .18-.57l-.75-2.3L7 13.15l2.47-7.57H4.53L7 13.15Zm2.47-7.57h3.46l-1.49-4.55a.26.26 0 0 0-.48 0L9.47 5.58Z"
  })),
  google: /* @__PURE__ */ import_react12.default.createElement(import_react12.default.Fragment, null, /* @__PURE__ */ import_react12.default.createElement("path", {
    d: "M10.92 1.1H7.26c-1.64 0-3.19 1.24-3.19 2.68 0 1.47 1.12 2.66 2.8 2.66l.33-.01c-.1.2-.18.44-.18.68 0 .41.22.75.5 1.02h-.64c-2.03 0-3.6 1.3-3.6 2.64 0 1.32 1.72 2.15 3.75 2.15 2.32 0 3.6-1.31 3.6-2.64 0-1.06-.31-1.7-1.28-2.38-.33-.23-.96-.8-.96-1.14 0-.39.1-.58.7-1.04a2.46 2.46 0 0 0 1.03-1.92c0-.92-.4-1.82-1.18-2.11h1.17l.81-.6ZM9.6 10.04c.03.13.05.25.05.38 0 1.07-.7 1.9-2.67 1.9-1.4 0-2.42-.88-2.42-1.95 0-1.05 1.26-1.92 2.66-1.9a3 3 0 0 1 .92.14c.76.53 1.3.83 1.46 1.43ZM7.34 6.07c-.94-.03-1.84-1.06-2-2.3-.17-1.24.47-2.19 1.41-2.16.94.03 1.84 1.03 2 2.26.17 1.24-.47 2.23-1.41 2.2Z"
  })),
  graphql: /* @__PURE__ */ import_react12.default.createElement(import_react12.default.Fragment, null, /* @__PURE__ */ import_react12.default.createElement("path", {
    d: "M7.87 11.6a1.17 1.17 0 0 0-1.7-.02l-2.71-1.56.01-.04h7.07l.02.07-2.69 1.56Zm-1.7-9.18.03.03-3.54 6.12h-.04V5.43a1.17 1.17 0 0 0 .84-1.46l2.7-1.56Zm4.38 1.56a1.17 1.17 0 0 0 .84 1.46v3.12l-.04.01-3.54-6.12c.02 0 .03-.02.04-.03l2.7 1.56ZM3.47 9.42a1.17 1.17 0 0 0-.32-.57l3.53-6.12a1.17 1.17 0 0 0 .65 0l3.54 6.12a1.17 1.17 0 0 0-.33.57H3.47Zm8.8-.74c-.1-.05-.21-.1-.32-.12V5.44a1.17 1.17 0 1 0-1.12-1.94l-2.7-1.56a1.17 1.17 0 1 0-2.24 0L3.19 3.5a1.17 1.17 0 1 0-1.13 1.94v3.12a1.17 1.17 0 1 0 1.12 1.94l2.7 1.56a1.17 1.17 0 1 0 2.24-.03l2.69-1.55a1.17 1.17 0 1 0 1.45-1.8Z"
  })),
  medium: /* @__PURE__ */ import_react12.default.createElement(import_react12.default.Fragment, null, /* @__PURE__ */ import_react12.default.createElement("path", {
    d: "M0 0v14h14V0H0Zm11.63 3.32-.75.72a.22.22 0 0 0-.08.2v5.33c0 .07.03.14.08.18l.73.72v.16H7.92v-.16l.76-.74c.08-.07.08-.1.08-.21V5.24l-2.11 5.37h-.29L3.9 5.24v3.67c0 .13.05.25.14.34l.99 1.2v.16h-2.8v-.16l.98-1.2a.48.48 0 0 0 .13-.41V4.65c0-.11-.04-.2-.12-.27l-.88-1.06v-.16h2.73l2.1 4.62 1.86-4.62h2.6v.16Z"
  })),
  redux: /* @__PURE__ */ import_react12.default.createElement(import_react12.default.Fragment, null, /* @__PURE__ */ import_react12.default.createElement("path", {
    d: "M4.06 9.69c.02.49.42.88.91.88H5a.91.91 0 0 0-.03-1.83h-.03c-.03 0-.08 0-.11.02a5.97 5.97 0 0 1-.85-3.62c.06-.98.39-1.82.96-2.52.47-.6 1.39-.9 2-.92 1.73-.03 2.47 2.12 2.51 2.99.22.04.57.16.82.24-.2-2.64-1.83-4-3.4-4-1.46 0-2.81 1.05-3.35 2.61a6.67 6.67 0 0 0 .65 5.68.74.74 0 0 0-.11.47Zm8.28-2.3a6.62 6.62 0 0 0-5.15-2.25h-.26a.9.9 0 0 0-.8-.49H6.1a.91.91 0 0 0 .03 1.83h.03a.92.92 0 0 0 .8-.56h.3c1.23 0 2.4.36 3.47 1.06.81.54 1.4 1.24 1.72 2.09.28.68.26 1.35-.03 1.92a2.4 2.4 0 0 1-2.23 1.34c-.65 0-1.27-.2-1.6-.34-.18.16-.5.42-.73.58.7.33 1.41.5 2.1.5 1.56 0 2.72-.85 3.16-1.72.47-.94.44-2.57-.78-3.96ZM4.9 12.9a4 4 0 0 1-.98.11c-1.2 0-2.3-.5-2.84-1.32C.38 10.6.13 8.3 2.5 6.58c.05.26.15.62.22.83-.31.23-.8.68-1.11 1.3a2.4 2.4 0 0 0 .13 2.53c.36.54.93.86 1.66.96.9.11 1.8-.05 2.66-.5a5.83 5.83 0 0 0 2.67-2.56.91.91 0 0 1 .62-1.55h.03a.92.92 0 0 1 .1 1.82 6.26 6.26 0 0 1-4.56 3.49Z"
  })),
  twitter: /* @__PURE__ */ import_react12.default.createElement(import_react12.default.Fragment, null, /* @__PURE__ */ import_react12.default.createElement("path", {
    d: "M14 2.55c-.51.23-1.07.39-1.65.46.6-.36 1.05-.94 1.26-1.63-.55.34-1.17.58-1.82.72a2.84 2.84 0 0 0-2.1-.93 2.9 2.9 0 0 0-2.8 3.61 8.09 8.09 0 0 1-5.9-3.07 2.99 2.99 0 0 0 .88 3.93 2.8 2.8 0 0 1-1.3-.37v.04c0 1.42 1 2.61 2.3 2.89a2.82 2.82 0 0 1-1.3.05 2.89 2.89 0 0 0 2.7 2.04A5.67 5.67 0 0 1 0 11.51a7.98 7.98 0 0 0 4.4 1.32c5.29 0 8.17-4.48 8.17-8.38v-.38A5.93 5.93 0 0 0 14 2.55Z"
  })),
  youtube: /* @__PURE__ */ import_react12.default.createElement(import_react12.default.Fragment, null, /* @__PURE__ */ import_react12.default.createElement("path", {
    d: "M13.99 8.17V5.83a14.95 14.95 0 0 0-.23-2.22c-.09-.38-.27-.7-.55-.96s-.6-.41-.97-.45A51.3 51.3 0 0 0 7 2c-2.34 0-4.09.07-5.24.2A1.78 1.78 0 0 0 .25 3.61 15.26 15.26 0 0 0 0 7v1.16a15.24 15.24 0 0 0 .24 2.22c.09.38.27.7.55.96.27.26.6.41.97.45 1.15.13 2.9.2 5.24.2 2.34 0 4.08-.06 5.24-.2.37-.04.7-.19.97-.45s.45-.58.54-.96a15.26 15.26 0 0 0 .24-2.22Zm-4.23-1.6c.16.1.24.24.24.43 0 .2-.08.33-.24.42l-4 2.5a.44.44 0 0 1-.26.08.54.54 0 0 1-.24-.06A.46.46 0 0 1 5 9.5v-5c0-.2.08-.34.26-.44.17-.1.34-.09.5.02l4 2.5Z"
  })),
  vscode: /* @__PURE__ */ import_react12.default.createElement(import_react12.default.Fragment, null, /* @__PURE__ */ import_react12.default.createElement("path", {
    d: "M10.24.04c.13 0 .26.03.38.09L13.5 1.5a.87.87 0 0 1 .5.8v.03-.01 9.39c0 .33-.2.63-.5.78l-2.88 1.38a.87.87 0 0 1-1-.17l-5.5-5.03-2.4 1.83a.58.58 0 0 1-.75-.04l-.77-.7a.58.58 0 0 1 0-.86L2.27 7 .2 5.1a.58.58 0 0 1 0-.86l.77-.7c.21-.2.52-.2.75-.04l2.4 1.83L9.63.3a.87.87 0 0 1 .61-.26Zm.26 3.78L6.32 7l4.18 3.18V3.82Z"
  }))
};

// src/icon/icon.tsx
var Svg = import_theming28.styled.svg`
  display: inline-block;
  shape-rendering: inherit;
  transform: translate3d(0, 0, 0);
  vertical-align: middle;
  fill: currentColor;

  path {
    fill: currentColor;
  }
`;
var Icons = ({ icon, useSymbol, ...props }) => {
  return /* @__PURE__ */ import_react13.default.createElement(Svg, {
    viewBox: "0 0 14 14",
    width: "14px",
    height: "14px",
    ...props
  }, useSymbol ? /* @__PURE__ */ import_react13.default.createElement("use", {
    xlinkHref: `#icon--${icon}`
  }) : icons[icon]);
};
var Symbols = (0, import_react13.memo)(({ icons: keys = Object.keys(icons) }) => /* @__PURE__ */ import_react13.default.createElement(Svg, {
  viewBox: "0 0 14 14",
  style: { position: "absolute", width: 0, height: 0 },
  "data-chromatic": "ignore"
}, keys.map((key) => /* @__PURE__ */ import_react13.default.createElement("symbol", {
  id: `icon--${key}`,
  key
}, icons[key]))));

// src/typography/link/link.tsx
var LEFT_BUTTON = 0;
var isPlainLeftClick = (e) => e.button === LEFT_BUTTON && !e.altKey && !e.ctrlKey && !e.metaKey && !e.shiftKey;
var cancelled = (e, cb) => {
  if (isPlainLeftClick(e)) {
    e.preventDefault();
    cb(e);
  }
};
var LinkInner = import_theming29.styled.span(
  ({ withArrow }) => withArrow ? {
    "> svg:last-of-type": {
      height: "0.7em",
      width: "0.7em",
      marginRight: 0,
      marginLeft: "0.25em",
      bottom: "auto",
      verticalAlign: "inherit"
    }
  } : {},
  ({ containsIcon }) => containsIcon ? {
    svg: {
      height: "1em",
      width: "1em",
      verticalAlign: "middle",
      position: "relative",
      bottom: 0,
      marginRight: 0
    }
  } : {}
);
var A2 = import_theming29.styled.a(
  ({ theme }) => ({
    display: "inline-block",
    transition: "all 150ms ease-out",
    textDecoration: "none",
    color: theme.color.secondary,
    "&:hover, &:focus": {
      cursor: "pointer",
      color: curriedDarken$1(0.07, theme.color.secondary),
      "svg path": {
        fill: curriedDarken$1(0.07, theme.color.secondary)
      }
    },
    "&:active": {
      color: curriedDarken$1(0.1, theme.color.secondary),
      "svg path": {
        fill: curriedDarken$1(0.1, theme.color.secondary)
      }
    },
    svg: {
      display: "inline-block",
      height: "1em",
      width: "1em",
      verticalAlign: "text-top",
      position: "relative",
      bottom: "-0.125em",
      marginRight: "0.4em",
      "& path": {
        fill: theme.color.secondary
      }
    }
  }),
  ({ theme, secondary, tertiary }) => {
    let colors;
    if (secondary) {
      colors = [theme.textMutedColor, theme.color.dark, theme.color.darker];
    }
    if (tertiary) {
      colors = [theme.color.dark, theme.color.darkest, theme.textMutedColor];
    }
    return colors ? {
      color: colors[0],
      "svg path": {
        fill: colors[0]
      },
      "&:hover": {
        color: colors[1],
        "svg path": {
          fill: colors[1]
        }
      },
      "&:active": {
        color: colors[2],
        "svg path": {
          fill: colors[2]
        }
      }
    } : {};
  },
  ({ nochrome }) => nochrome ? {
    color: "inherit",
    "&:hover, &:active": {
      color: "inherit",
      textDecoration: "underline"
    }
  } : {},
  ({ theme, inverse }) => inverse ? {
    color: theme.color.lightest,
    "svg path": {
      fill: theme.color.lightest
    },
    "&:hover": {
      color: theme.color.lighter,
      "svg path": {
        fill: theme.color.lighter
      }
    },
    "&:active": {
      color: theme.color.light,
      "svg path": {
        fill: theme.color.light
      }
    }
  } : {},
  ({ isButton }) => isButton ? {
    border: 0,
    borderRadius: 0,
    background: "none",
    padding: 0,
    fontSize: "inherit"
  } : {}
);
var Link2 = ({
  cancel,
  children,
  onClick,
  withArrow,
  containsIcon,
  className,
  ...rest
}) => /* @__PURE__ */ import_react14.default.createElement(A2, {
  ...rest,
  onClick: onClick && cancel ? (e) => cancelled(e, onClick) : onClick,
  className
}, /* @__PURE__ */ import_react14.default.createElement(LinkInner, {
  withArrow,
  containsIcon
}, children, withArrow && /* @__PURE__ */ import_react14.default.createElement(Icons, {
  icon: "arrowright"
})));
Link2.defaultProps = {
  cancel: true,
  className: void 0,
  style: void 0,
  onClick: void 0,
  withArrow: false,
  containsIcon: false
};

// src/typography/DocumentWrapper.tsx
var import_theming30 = require("@storybook/theming");
var DocumentWrapper = import_theming30.styled.div(({ theme }) => ({
  fontSize: `${theme.typography.size.s2}px`,
  lineHeight: "1.6",
  h1: {
    fontSize: `${theme.typography.size.l1}px`,
    fontWeight: theme.typography.weight.black
  },
  h2: {
    fontSize: `${theme.typography.size.m2}px`,
    borderBottom: `1px solid ${theme.appBorderColor}`
  },
  h3: {
    fontSize: `${theme.typography.size.m1}px`
  },
  h4: {
    fontSize: `${theme.typography.size.s3}px`
  },
  h5: {
    fontSize: `${theme.typography.size.s2}px`
  },
  h6: {
    fontSize: `${theme.typography.size.s2}px`,
    color: theme.color.dark
  },
  "pre:not(.prismjs)": {
    background: "transparent",
    border: "none",
    borderRadius: 0,
    padding: 0,
    margin: 0
  },
  "pre pre, pre.prismjs": {
    padding: 15,
    margin: 0,
    whiteSpace: "pre-wrap",
    color: "inherit",
    fontSize: "13px",
    lineHeight: "19px"
  },
  "pre pre code, pre.prismjs code": {
    color: "inherit",
    fontSize: "inherit"
  },
  "pre code": {
    margin: 0,
    padding: 0,
    whiteSpace: "pre",
    border: "none",
    background: "transparent"
  },
  "pre code, pre tt": {
    backgroundColor: "transparent",
    border: "none"
  },
  "body > *:first-of-type": {
    marginTop: "0 !important"
  },
  "body > *:last-child": {
    marginBottom: "0 !important"
  },
  a: {
    color: theme.color.secondary,
    textDecoration: "none"
  },
  "a.absent": {
    color: "#cc0000"
  },
  "a.anchor": {
    display: "block",
    paddingLeft: 30,
    marginLeft: -30,
    cursor: "pointer",
    position: "absolute",
    top: 0,
    left: 0,
    bottom: 0
  },
  "h1, h2, h3, h4, h5, h6": {
    margin: "20px 0 10px",
    padding: 0,
    cursor: "text",
    position: "relative",
    "&:first-of-type": {
      marginTop: 0,
      paddingTop: 0
    },
    "&:hover a.anchor": {
      textDecoration: "none"
    },
    "& tt, & code": {
      fontSize: "inherit"
    }
  },
  "h1:first-of-type + h2": {
    marginTop: 0,
    paddingTop: 0
  },
  "p, blockquote, ul, ol, dl, li, table, pre": {
    margin: "15px 0"
  },
  hr: {
    border: "0 none",
    borderTop: `1px solid ${theme.appBorderColor}`,
    height: 4,
    padding: 0
  },
  "body > h1:first-of-type, body > h2:first-of-type, body > h3:first-of-type, body > h4:first-of-type, body > h5:first-of-type, body > h6:first-of-type": {
    marginTop: 0,
    paddingTop: 0
  },
  "body > h1:first-of-type + h2": {
    marginTop: 0,
    paddingTop: 0
  },
  "a:first-of-type h1, a:first-of-type h2, a:first-of-type h3, a:first-of-type h4, a:first-of-type h5, a:first-of-type h6": {
    marginTop: 0,
    paddingTop: 0
  },
  "h1 p, h2 p, h3 p, h4 p, h5 p, h6 p": {
    marginTop: 0
  },
  "li p.first": {
    display: "inline-block"
  },
  "ul, ol": {
    paddingLeft: 30,
    "& :first-of-type": {
      marginTop: 0
    },
    "& :last-child": {
      marginBottom: 0
    }
  },
  dl: {
    padding: 0
  },
  "dl dt": {
    fontSize: "14px",
    fontWeight: "bold",
    fontStyle: "italic",
    margin: "0 0 15px",
    padding: "0 15px",
    "&:first-of-type": {
      padding: 0
    },
    "& > :first-of-type": {
      marginTop: 0
    },
    "& > :last-child": {
      marginBottom: 0
    }
  },
  blockquote: {
    borderLeft: `4px solid ${theme.color.medium}`,
    padding: "0 15px",
    color: theme.color.dark,
    "& > :first-of-type": {
      marginTop: 0
    },
    "& > :last-child": {
      marginBottom: 0
    }
  },
  table: {
    padding: 0,
    borderCollapse: "collapse",
    "& tr": {
      borderTop: `1px solid ${theme.appBorderColor}`,
      backgroundColor: "white",
      margin: 0,
      padding: 0,
      "& th": {
        fontWeight: "bold",
        border: `1px solid ${theme.appBorderColor}`,
        textAlign: "left",
        margin: 0,
        padding: "6px 13px"
      },
      "& td": {
        border: `1px solid ${theme.appBorderColor}`,
        textAlign: "left",
        margin: 0,
        padding: "6px 13px"
      },
      "&:nth-of-type(2n)": {
        backgroundColor: theme.color.lighter
      },
      "& th :first-of-type, & td :first-of-type": {
        marginTop: 0
      },
      "& th :last-child, & td :last-child": {
        marginBottom: 0
      }
    }
  },
  img: {
    maxWidth: "100%"
  },
  "span.frame": {
    display: "block",
    overflow: "hidden",
    "& > span": {
      border: `1px solid ${theme.color.medium}`,
      display: "block",
      float: "left",
      overflow: "hidden",
      margin: "13px 0 0",
      padding: 7,
      width: "auto"
    },
    "& span img": {
      display: "block",
      float: "left"
    },
    "& span span": {
      clear: "both",
      color: theme.color.darkest,
      display: "block",
      padding: "5px 0 0"
    }
  },
  "span.align-center": {
    display: "block",
    overflow: "hidden",
    clear: "both",
    "& > span": {
      display: "block",
      overflow: "hidden",
      margin: "13px auto 0",
      textAlign: "center"
    },
    "& span img": {
      margin: "0 auto",
      textAlign: "center"
    }
  },
  "span.align-right": {
    display: "block",
    overflow: "hidden",
    clear: "both",
    "& > span": {
      display: "block",
      overflow: "hidden",
      margin: "13px 0 0",
      textAlign: "right"
    },
    "& span img": {
      margin: 0,
      textAlign: "right"
    }
  },
  "span.float-left": {
    display: "block",
    marginRight: 13,
    overflow: "hidden",
    float: "left",
    "& span": {
      margin: "13px 0 0"
    }
  },
  "span.float-right": {
    display: "block",
    marginLeft: 13,
    overflow: "hidden",
    float: "right",
    "& > span": {
      display: "block",
      overflow: "hidden",
      margin: "13px auto 0",
      textAlign: "right"
    }
  },
  "code, tt": {
    margin: "0 2px",
    padding: "0 5px",
    whiteSpace: "nowrap",
    border: `1px solid ${theme.color.mediumlight}`,
    backgroundColor: theme.color.lighter,
    borderRadius: 3,
    color: theme.base === "dark" && theme.color.darkest
  }
}));

// src/syntaxhighlighter/lazy-syntaxhighlighter.tsx
var import_react15 = __toESM(require("react"));
var LazySyntaxHighlighter = (0, import_react15.lazy)(() => Promise.resolve().then(() => (init_syntaxhighlighter(), syntaxhighlighter_exports)));
var LazySyntaxHighlighterWithFormatter = (0, import_react15.lazy)(async () => {
  const [{ SyntaxHighlighter: SyntaxHighlighter4 }, { formatter: formatter2 }] = await Promise.all([
    Promise.resolve().then(() => (init_syntaxhighlighter(), syntaxhighlighter_exports)),
    Promise.resolve().then(() => (init_formatter(), formatter_exports))
  ]);
  return {
    default: (props) => /* @__PURE__ */ import_react15.default.createElement(SyntaxHighlighter4, {
      ...props,
      formatter: formatter2
    })
  };
});
var SyntaxHighlighter3 = (props) => /* @__PURE__ */ import_react15.default.createElement(import_react15.Suspense, {
  fallback: /* @__PURE__ */ import_react15.default.createElement("div", null)
}, props.format !== false ? /* @__PURE__ */ import_react15.default.createElement(LazySyntaxHighlighterWithFormatter, {
  ...props
}) : /* @__PURE__ */ import_react15.default.createElement(LazySyntaxHighlighter, {
  ...props
}));

// src/index.ts
init_syntaxhighlighter();
init_ActionBar();

// src/spaced/Spaced.tsx
var import_react16 = __toESM(require("react"));
var import_theming31 = require("@storybook/theming");
var toNumber = (input) => typeof input === "number" ? input : Number(input);
var Container2 = import_theming31.styled.div(
  ({ theme, col, row = 1 }) => col ? {
    display: "inline-block",
    verticalAlign: "inherit",
    "& > *": {
      marginLeft: col * theme.layoutMargin,
      verticalAlign: "inherit"
    },
    [`& > *:first-child`]: {
      marginLeft: 0
    }
  } : {
    "& > *": {
      marginTop: row * theme.layoutMargin
    },
    [`& > *:first-child`]: {
      marginTop: 0
    }
  },
  ({ theme, outer, col, row }) => {
    switch (true) {
      case !!(outer && col): {
        return {
          marginLeft: outer * theme.layoutMargin,
          marginRight: outer * theme.layoutMargin
        };
      }
      case !!(outer && row): {
        return {
          marginTop: outer * theme.layoutMargin,
          marginBottom: outer * theme.layoutMargin
        };
      }
      default: {
        return {};
      }
    }
  }
);
var Spaced = ({ col, row, outer, children, ...rest }) => {
  const outerAmount = toNumber(typeof outer === "number" || !outer ? outer : col || row);
  return /* @__PURE__ */ import_react16.default.createElement(Container2, {
    col,
    row,
    outer: outerAmount,
    ...rest
  }, children);
};

// src/placeholder/placeholder.tsx
var import_react17 = __toESM(require("react"));
var import_theming32 = require("@storybook/theming");
var Title = import_theming32.styled.div(({ theme }) => ({
  fontWeight: theme.typography.weight.bold
}));
var Desc = import_theming32.styled.div();
var Message = import_theming32.styled.div(({ theme }) => ({
  padding: 30,
  textAlign: "center",
  color: theme.color.defaultText,
  fontSize: theme.typography.size.s2 - 1
}));
var Placeholder = ({ children, ...props }) => {
  const [title, desc] = import_react17.Children.toArray(children);
  return /* @__PURE__ */ import_react17.default.createElement(Message, {
    ...props
  }, /* @__PURE__ */ import_react17.default.createElement(Title, null, title), desc && /* @__PURE__ */ import_react17.default.createElement(Desc, null, desc));
};

// src/index.ts
init_ScrollArea();

// src/Zoom/ZoomElement.tsx
var import_react18 = __toESM(require("react"));
var import_theming33 = require("@storybook/theming");

// src/Zoom/browserSupportsCssZoom.ts
var import_global2 = __toESM(require_window());
var { window: globalWindow2 } = import_global2.default;
function browserSupportsCssZoom() {
  try {
    return globalWindow2.document.implementation.createHTMLDocument("").body.style.zoom !== void 0;
  } catch (error) {
    return false;
  }
}

// src/Zoom/ZoomElement.tsx
var hasBrowserSupportForCssZoom = browserSupportsCssZoom();
var ZoomElementWrapper = import_theming33.styled.div(
  ({ scale = 1, height }) => hasBrowserSupportForCssZoom ? {
    "> *": {
      zoom: 1 / scale
    }
  } : {
    height: height ? height + 50 : "auto",
    transformOrigin: "top left",
    transform: `scale(${1 / scale})`
  }
);
var useMutationObserver = ({
  element,
  options = {},
  callback
}) => {
  const observer = (0, import_react18.useMemo)(
    () => new MutationObserver((mutationRecord, mutationObserver) => {
      callback(mutationRecord, mutationObserver);
    }),
    [callback]
  );
  (0, import_react18.useEffect)(() => {
    if (element == null ? void 0 : element.current) {
      observer.observe(element.current, options);
    }
    return () => observer.disconnect();
  }, [element, observer, options]);
};
var mutationObserverOptions = { subtree: true, childList: true };
function ZoomElement({ scale, children }) {
  const componentWrapperRef = (0, import_react18.useRef)(null);
  const [height, setHeight] = (0, import_react18.useState)(0);
  const handleMutations = (0, import_react18.useCallback)(() => {
    setHeight(componentWrapperRef.current.getBoundingClientRect().height);
  }, []);
  (0, import_react18.useEffect)(() => {
    if (componentWrapperRef.current) {
      setHeight(componentWrapperRef.current.getBoundingClientRect().height);
    }
  }, [scale, componentWrapperRef.current]);
  useMutationObserver({
    element: componentWrapperRef,
    options: mutationObserverOptions,
    callback: handleMutations
  });
  return /* @__PURE__ */ import_react18.default.createElement(ZoomElementWrapper, {
    scale,
    height
  }, /* @__PURE__ */ import_react18.default.createElement("div", {
    ref: hasBrowserSupportForCssZoom ? null : componentWrapperRef,
    className: "innerZoomElementWrapper"
  }, children));
}

// src/Zoom/ZoomIFrame.tsx
var import_react19 = require("react");
var ZoomIFrame = class extends import_react19.Component {
  constructor() {
    super(...arguments);
    this.iframe = null;
  }
  componentDidMount() {
    const { iFrameRef } = this.props;
    this.iframe = iFrameRef.current;
  }
  shouldComponentUpdate(nextProps) {
    const { scale, active } = this.props;
    if (scale !== nextProps.scale) {
      this.setIframeInnerZoom(nextProps.scale);
    }
    if (active !== nextProps.active) {
      this.iframe.setAttribute("data-is-storybook", nextProps.active ? "true" : "false");
    }
    return nextProps.children.props.src !== this.props.children.props.src;
  }
  setIframeInnerZoom(scale) {
    try {
      if (browserSupportsCssZoom()) {
        Object.assign(this.iframe.contentDocument.body.style, {
          zoom: 1 / scale
        });
      } else {
        Object.assign(this.iframe.contentDocument.body.style, {
          width: `${scale * 100}%`,
          height: `${scale * 100}%`,
          transform: `scale(${1 / scale})`,
          transformOrigin: "top left"
        });
      }
    } catch (e) {
      this.setIframeZoom(scale);
    }
  }
  setIframeZoom(scale) {
    Object.assign(this.iframe.style, {
      width: `${scale * 100}%`,
      height: `${scale * 100}%`,
      transform: `scale(${1 / scale})`,
      transformOrigin: "top left"
    });
  }
  render() {
    const { children } = this.props;
    return children;
  }
};

// src/Zoom/Zoom.tsx
var Zoom = {
  Element: ZoomElement,
  IFrame: ZoomIFrame
};

// src/Button/Button.tsx
var import_react20 = __toESM(require("react"));
var import_theming34 = require("@storybook/theming");
var ButtonWrapper = import_theming34.styled.button(
  ({ small, theme }) => ({
    border: 0,
    borderRadius: "3em",
    cursor: "pointer",
    display: "inline-block",
    overflow: "hidden",
    padding: small ? "8px 16px" : "13px 20px",
    position: "relative",
    textAlign: "center",
    textDecoration: "none",
    transition: "all 150ms ease-out",
    transform: "translate3d(0,0,0)",
    verticalAlign: "top",
    whiteSpace: "nowrap",
    userSelect: "none",
    opacity: 1,
    margin: 0,
    background: "transparent",
    fontSize: `${small ? theme.typography.size.s1 : theme.typography.size.s2 - 1}px`,
    fontWeight: theme.typography.weight.bold,
    lineHeight: "1",
    svg: {
      display: "inline-block",
      height: small ? 12 : 14,
      width: small ? 12 : 14,
      verticalAlign: "top",
      marginRight: small ? 4 : 6,
      marginTop: small ? 0 : -1,
      marginBottom: small ? 0 : -1,
      pointerEvents: "none",
      path: {
        fill: "currentColor"
      }
    }
  }),
  ({ disabled }) => disabled ? {
    cursor: "not-allowed !important",
    opacity: 0.5,
    "&:hover": {
      transform: "none"
    }
  } : {},
  ({ containsIcon, small }) => containsIcon ? {
    svg: {
      display: "block",
      margin: 0
    },
    ...small ? { padding: 10 } : { padding: 13 }
  } : {},
  ({ theme, primary, secondary, gray }) => {
    let color;
    if (gray) {
      color = theme.color.mediumlight;
    } else if (secondary) {
      color = theme.color.secondary;
    } else if (primary) {
      color = theme.color.primary;
    }
    return color ? {
      background: color,
      color: gray ? theme.color.darkest : theme.color.lightest,
      "&:hover": {
        background: curriedDarken$1(0.05, color)
      },
      "&:active": {
        boxShadow: "rgba(0, 0, 0, 0.1) 0 0 0 3em inset"
      },
      "&:focus": {
        boxShadow: `${rgba(color, 1)} 0 1px 9px 2px`,
        outline: "none"
      },
      "&:focus:hover": {
        boxShadow: `${rgba(color, 0.2)} 0 8px 18px 0px`
      }
    } : {};
  },
  ({ theme, tertiary, inForm, small }) => tertiary ? {
    background: theme.button.background,
    color: theme.input.color,
    boxShadow: `${theme.button.border} 0 0 0 1px inset`,
    borderRadius: theme.input.borderRadius,
    ...inForm && small ? { padding: "10px 16px" } : {},
    "&:hover": {
      background: theme.base === "light" ? curriedDarken$1(0.02, theme.button.background) : curriedLighten$1(0.03, theme.button.background),
      ...inForm ? {} : {
        boxShadow: "rgba(0,0,0,.2) 0 2px 6px 0, rgba(0,0,0,.1) 0 0 0 1px inset"
      }
    },
    "&:active": {
      background: theme.button.background
    },
    "&:focus": {
      boxShadow: `${rgba(theme.color.secondary, 1)} 0 0 0 1px inset`,
      outline: "none"
    }
  } : {},
  ({ theme, outline }) => outline ? {
    boxShadow: `${curriedTransparentize$1(0.8, theme.color.defaultText)} 0 0 0 1px inset`,
    color: curriedTransparentize$1(0.3, theme.color.defaultText),
    background: "transparent",
    "&:hover, &:focus": {
      boxShadow: `${curriedTransparentize$1(0.5, theme.color.defaultText)} 0 0 0 1px inset`,
      outline: "none"
    },
    "&:active": {
      boxShadow: `${curriedTransparentize$1(0.5, theme.color.defaultText)} 0 0 0 2px inset`,
      color: curriedTransparentize$1(0, theme.color.defaultText)
    }
  } : {},
  ({ theme, outline, primary }) => {
    const color = theme.color.primary;
    return outline && primary ? {
      boxShadow: `${color} 0 0 0 1px inset`,
      color,
      "svg path": {
        fill: color
      },
      "&:hover": {
        boxShadow: `${color} 0 0 0 1px inset`,
        background: "transparent"
      },
      "&:active": {
        background: color,
        boxShadow: `${color} 0 0 0 1px inset`,
        color: theme.color.tertiary
      },
      "&:focus": {
        boxShadow: `${color} 0 0 0 1px inset, ${rgba(color, 0.4)} 0 1px 9px 2px`,
        outline: "none"
      },
      "&:focus:hover": {
        boxShadow: `${color} 0 0 0 1px inset, ${rgba(color, 0.2)} 0 8px 18px 0px`
      }
    } : {};
  },
  ({ theme, outline, primary, secondary }) => {
    let color;
    if (secondary) {
      color = theme.color.secondary;
    } else if (primary) {
      color = theme.color.primary;
    }
    return outline && color ? {
      boxShadow: `${color} 0 0 0 1px inset`,
      color,
      "svg path": {
        fill: color
      },
      "&:hover": {
        boxShadow: `${color} 0 0 0 1px inset`,
        background: "transparent"
      },
      "&:active": {
        background: color,
        boxShadow: `${color} 0 0 0 1px inset`,
        color: theme.color.tertiary
      },
      "&:focus": {
        boxShadow: `${color} 0 0 0 1px inset, ${rgba(color, 0.4)} 0 1px 9px 2px`,
        outline: "none"
      },
      "&:focus:hover": {
        boxShadow: `${color} 0 0 0 1px inset, ${rgba(color, 0.2)} 0 8px 18px 0px`
      }
    } : {};
  }
);
var ButtonLink = ButtonWrapper.withComponent("a");
var Button = Object.assign(
  (0, import_react20.forwardRef)(({ isLink, children, ...props }, ref) => {
    if (isLink) {
      return /* @__PURE__ */ import_react20.default.createElement(ButtonLink, {
        ...props,
        ref
      }, children);
    }
    return /* @__PURE__ */ import_react20.default.createElement(ButtonWrapper, {
      ...props,
      ref
    }, children);
  }),
  {
    defaultProps: {
      isLink: false
    }
  }
);

// src/form/index.tsx
var import_theming37 = require("@storybook/theming");

// src/form/field/field.tsx
var import_react21 = __toESM(require("react"));
var import_theming35 = require("@storybook/theming");
var Wrapper2 = import_theming35.styled.label(({ theme }) => ({
  display: "flex",
  borderBottom: `1px solid ${theme.appBorderColor}`,
  margin: "0 15px",
  padding: "8px 0",
  "&:last-child": {
    marginBottom: "3rem"
  }
}));
var Label = import_theming35.styled.span(({ theme }) => ({
  minWidth: 100,
  fontWeight: theme.typography.weight.bold,
  marginRight: 15,
  display: "flex",
  justifyContent: "flex-start",
  alignItems: "center",
  lineHeight: "16px"
}));
var Field = ({ label, children, ...props }) => /* @__PURE__ */ import_react21.default.createElement(Wrapper2, {
  ...props
}, label ? /* @__PURE__ */ import_react21.default.createElement(Label, null, /* @__PURE__ */ import_react21.default.createElement("span", null, label)) : null, children);
Field.defaultProps = {
  label: void 0
};

// src/form/input/input.tsx
var import_react25 = __toESM(require("react"));
var import_theming36 = require("@storybook/theming");

// ../../node_modules/react-textarea-autosize/dist/react-textarea-autosize.esm.js
init_extends();
init_objectWithoutPropertiesLoose();
var import_react24 = require("react");

// ../../node_modules/use-latest/dist/use-latest.esm.js
var React21 = __toESM(require("react"));

// ../../node_modules/use-isomorphic-layout-effect/dist/use-isomorphic-layout-effect.esm.js
var import_react22 = require("react");
var index = typeof document !== "undefined" ? import_react22.useLayoutEffect : import_react22.useEffect;
var use_isomorphic_layout_effect_esm_default = index;

// ../../node_modules/use-latest/dist/use-latest.esm.js
var useLatest = function useLatest2(value) {
  var ref = React21.useRef(value);
  use_isomorphic_layout_effect_esm_default(function() {
    ref.current = value;
  });
  return ref;
};

// ../../node_modules/use-composed-ref/dist/use-composed-ref.esm.js
var import_react23 = require("react");
var updateRef = function updateRef2(ref, value) {
  if (typeof ref === "function") {
    ref(value);
    return;
  }
  ref.current = value;
};
var useComposedRef = function useComposedRef2(libRef, userRef) {
  var prevUserRef = (0, import_react23.useRef)();
  return (0, import_react23.useCallback)(function(instance) {
    libRef.current = instance;
    if (prevUserRef.current) {
      updateRef(prevUserRef.current, null);
    }
    prevUserRef.current = userRef;
    if (!userRef) {
      return;
    }
    updateRef(userRef, instance);
  }, [userRef]);
};
var use_composed_ref_esm_default = useComposedRef;

// ../../node_modules/react-textarea-autosize/dist/react-textarea-autosize.esm.js
var HIDDEN_TEXTAREA_STYLE = {
  "min-height": "0",
  "max-height": "none",
  height: "0",
  visibility: "hidden",
  overflow: "hidden",
  position: "absolute",
  "z-index": "-1000",
  top: "0",
  right: "0"
};
var forceHiddenStyles = function forceHiddenStyles2(node) {
  Object.keys(HIDDEN_TEXTAREA_STYLE).forEach(function(key) {
    node.style.setProperty(key, HIDDEN_TEXTAREA_STYLE[key], "important");
  });
};
var hiddenTextarea = null;
var getHeight = function getHeight2(node, sizingData) {
  var height = node.scrollHeight;
  if (sizingData.sizingStyle.boxSizing === "border-box") {
    return height + sizingData.borderSize;
  }
  return height - sizingData.paddingSize;
};
function calculateNodeHeight(sizingData, value, minRows, maxRows) {
  if (minRows === void 0) {
    minRows = 1;
  }
  if (maxRows === void 0) {
    maxRows = Infinity;
  }
  if (!hiddenTextarea) {
    hiddenTextarea = document.createElement("textarea");
    hiddenTextarea.setAttribute("tabindex", "-1");
    hiddenTextarea.setAttribute("aria-hidden", "true");
    forceHiddenStyles(hiddenTextarea);
  }
  if (hiddenTextarea.parentNode === null) {
    document.body.appendChild(hiddenTextarea);
  }
  var paddingSize = sizingData.paddingSize, borderSize = sizingData.borderSize, sizingStyle = sizingData.sizingStyle;
  var boxSizing = sizingStyle.boxSizing;
  Object.keys(sizingStyle).forEach(function(_key) {
    var key = _key;
    hiddenTextarea.style[key] = sizingStyle[key];
  });
  forceHiddenStyles(hiddenTextarea);
  hiddenTextarea.value = value;
  var height = getHeight(hiddenTextarea, sizingData);
  hiddenTextarea.value = "x";
  var rowHeight = hiddenTextarea.scrollHeight - paddingSize;
  var minHeight = rowHeight * minRows;
  if (boxSizing === "border-box") {
    minHeight = minHeight + paddingSize + borderSize;
  }
  height = Math.max(minHeight, height);
  var maxHeight = rowHeight * maxRows;
  if (boxSizing === "border-box") {
    maxHeight = maxHeight + paddingSize + borderSize;
  }
  height = Math.min(maxHeight, height);
  return [height, rowHeight];
}
var noop = function noop2() {
};
var pick = function pick2(props, obj) {
  return props.reduce(function(acc, prop) {
    acc[prop] = obj[prop];
    return acc;
  }, {});
};
var SIZING_STYLE = [
  "borderBottomWidth",
  "borderLeftWidth",
  "borderRightWidth",
  "borderTopWidth",
  "boxSizing",
  "fontFamily",
  "fontSize",
  "fontStyle",
  "fontWeight",
  "letterSpacing",
  "lineHeight",
  "paddingBottom",
  "paddingLeft",
  "paddingRight",
  "paddingTop",
  "tabSize",
  "textIndent",
  "textRendering",
  "textTransform",
  "width",
  "wordBreak"
];
var isIE = typeof document !== "undefined" ? !!document.documentElement.currentStyle : false;
var getSizingData = function getSizingData2(node) {
  var style = window.getComputedStyle(node);
  if (style === null) {
    return null;
  }
  var sizingStyle = pick(SIZING_STYLE, style);
  var boxSizing = sizingStyle.boxSizing;
  if (boxSizing === "") {
    return null;
  }
  if (isIE && boxSizing === "border-box") {
    sizingStyle.width = parseFloat(sizingStyle.width) + parseFloat(sizingStyle.borderRightWidth) + parseFloat(sizingStyle.borderLeftWidth) + parseFloat(sizingStyle.paddingRight) + parseFloat(sizingStyle.paddingLeft) + "px";
  }
  var paddingSize = parseFloat(sizingStyle.paddingBottom) + parseFloat(sizingStyle.paddingTop);
  var borderSize = parseFloat(sizingStyle.borderBottomWidth) + parseFloat(sizingStyle.borderTopWidth);
  return {
    sizingStyle,
    paddingSize,
    borderSize
  };
};
var useWindowResizeListener = function useWindowResizeListener2(listener) {
  var latestListener = useLatest(listener);
  (0, import_react24.useLayoutEffect)(function() {
    var handler = function handler2(event) {
      latestListener.current(event);
    };
    window.addEventListener("resize", handler);
    return function() {
      window.removeEventListener("resize", handler);
    };
  }, []);
};
var TextareaAutosize = function TextareaAutosize2(_ref, userRef) {
  var cacheMeasurements = _ref.cacheMeasurements, maxRows = _ref.maxRows, minRows = _ref.minRows, _ref$onChange = _ref.onChange, onChange = _ref$onChange === void 0 ? noop : _ref$onChange, _ref$onHeightChange = _ref.onHeightChange, onHeightChange = _ref$onHeightChange === void 0 ? noop : _ref$onHeightChange, props = _objectWithoutPropertiesLoose(_ref, ["cacheMeasurements", "maxRows", "minRows", "onChange", "onHeightChange"]);
  if (process.env.NODE_ENV !== "production" && props.style) {
    if ("maxHeight" in props.style) {
      throw new Error("Using `style.maxHeight` for <TextareaAutosize/> is not supported. Please use `maxRows`.");
    }
    if ("minHeight" in props.style) {
      throw new Error("Using `style.minHeight` for <TextareaAutosize/> is not supported. Please use `minRows`.");
    }
  }
  var isControlled = props.value !== void 0;
  var libRef = (0, import_react24.useRef)(null);
  var ref = use_composed_ref_esm_default(libRef, userRef);
  var heightRef = (0, import_react24.useRef)(0);
  var measurementsCacheRef = (0, import_react24.useRef)();
  var resizeTextarea = function resizeTextarea2() {
    var node = libRef.current;
    var nodeSizingData = cacheMeasurements && measurementsCacheRef.current ? measurementsCacheRef.current : getSizingData(node);
    if (!nodeSizingData) {
      return;
    }
    measurementsCacheRef.current = nodeSizingData;
    var _calculateNodeHeight = calculateNodeHeight(nodeSizingData, node.value || node.placeholder || "x", minRows, maxRows), height = _calculateNodeHeight[0], rowHeight = _calculateNodeHeight[1];
    if (heightRef.current !== height) {
      heightRef.current = height;
      node.style.setProperty("height", height + "px", "important");
      onHeightChange(height, {
        rowHeight
      });
    }
  };
  var handleChange = function handleChange2(event) {
    if (!isControlled) {
      resizeTextarea();
    }
    onChange(event);
  };
  if (typeof document !== "undefined") {
    (0, import_react24.useLayoutEffect)(resizeTextarea);
    useWindowResizeListener(resizeTextarea);
  }
  return /* @__PURE__ */ (0, import_react24.createElement)("textarea", _extends({}, props, {
    onChange: handleChange,
    ref
  }));
};
var index2 = /* @__PURE__ */ (0, import_react24.forwardRef)(TextareaAutosize);
var react_textarea_autosize_esm_default = index2;

// src/form/input/input.tsx
var styleResets = {
  appearance: "none",
  border: "0 none",
  boxSizing: "inherit",
  display: " block",
  margin: " 0",
  background: "transparent",
  padding: 0,
  fontSize: "inherit",
  position: "relative"
};
var styles = ({ theme }) => ({
  ...styleResets,
  transition: "box-shadow 200ms ease-out, opacity 200ms ease-out",
  color: theme.input.color || "inherit",
  background: theme.input.background,
  boxShadow: `${theme.input.border} 0 0 0 1px inset`,
  borderRadius: theme.input.borderRadius,
  fontSize: theme.typography.size.s2 - 1,
  lineHeight: "20px",
  padding: "6px 10px",
  "&:focus": {
    boxShadow: `${theme.color.secondary} 0 0 0 1px inset`,
    outline: "none"
  },
  "&[disabled]": {
    cursor: "not-allowed",
    opacity: 0.5
  },
  "&:-webkit-autofill": { WebkitBoxShadow: `0 0 0 3em ${theme.color.lightest} inset` },
  "&::placeholder": {
    color: theme.textMutedColor,
    opacity: 1
  }
});
var sizes = ({ size }) => {
  switch (size) {
    case "100%": {
      return { width: "100%" };
    }
    case "flex": {
      return { flex: 1 };
    }
    case "auto":
    default: {
      return { display: "inline" };
    }
  }
};
var alignment = ({
  align
}) => {
  switch (align) {
    case "end": {
      return { textAlign: "right" };
    }
    case "center": {
      return { textAlign: "center" };
    }
    case "start":
    default: {
      return { textAlign: "left" };
    }
  }
};
var validation = ({ valid, theme }) => {
  switch (valid) {
    case "valid": {
      return { boxShadow: `${theme.color.positive} 0 0 0 1px inset !important` };
    }
    case "error": {
      return { boxShadow: `${theme.color.negative} 0 0 0 1px inset !important` };
    }
    case "warn": {
      return {
        boxShadow: `${theme.color.warning} 0 0 0 1px inset`
      };
    }
    case void 0:
    case null:
    default: {
      return {};
    }
  }
};
var Input = Object.assign(
  (0, import_theming36.styled)(
    (0, import_react25.forwardRef)(({ size, valid, align, ...props }, ref) => /* @__PURE__ */ import_react25.default.createElement("input", {
      ...props,
      ref
    }))
  )(styles, sizes, alignment, validation, {
    minHeight: 32
  }),
  {
    displayName: "Input"
  }
);
var Select = Object.assign(
  (0, import_theming36.styled)(
    (0, import_react25.forwardRef)(({ size, valid, align, ...props }, ref) => /* @__PURE__ */ import_react25.default.createElement("select", {
      ...props,
      ref
    }))
  )(styles, sizes, validation, {
    height: 32,
    userSelect: "none",
    paddingRight: 20,
    appearance: "menulist"
  }),
  {
    displayName: "Select"
  }
);
var Textarea = Object.assign(
  (0, import_theming36.styled)(
    (0, import_react25.forwardRef)(({ size, valid, align, ...props }, ref) => /* @__PURE__ */ import_react25.default.createElement(react_textarea_autosize_esm_default, {
      ...props,
      ref
    }))
  )(styles, sizes, alignment, validation, ({ height = 400 }) => ({
    overflow: "visible",
    maxHeight: height
  })),
  {
    displayName: "Textarea"
  }
);
var ButtonStyled = (0, import_theming36.styled)(
  (0, import_react25.forwardRef)(({ size, valid, align, ...props }, ref) => /* @__PURE__ */ import_react25.default.createElement(Button, {
    ...props,
    ref
  }))
)(sizes, validation, {
  userSelect: "none",
  overflow: "visible",
  zIndex: 2,
  "&:hover": {
    transform: "none"
  }
});
var Button2 = Object.assign(
  (0, import_react25.forwardRef)((props, ref) => /* @__PURE__ */ import_react25.default.createElement(ButtonStyled, {
    ...props,
    ...{ tertiary: true, small: true, inForm: true },
    ref
  })),
  {
    displayName: "Button"
  }
);

// src/form/index.tsx
var Form = Object.assign(
  import_theming37.styled.form({
    boxSizing: "border-box",
    width: "100%"
  }),
  {
    Field,
    Input,
    Select,
    Textarea,
    Button: Button2
  }
);

// src/tooltip/lazy-WithTooltip.tsx
var import_react29 = __toESM(require("react"));
var LazyWithTooltip = (0, import_react29.lazy)(
  () => Promise.resolve().then(() => (init_WithTooltip(), WithTooltip_exports)).then((mod) => ({ default: mod.WithTooltip }))
);
var WithTooltip = (props) => /* @__PURE__ */ import_react29.default.createElement(import_react29.Suspense, {
  fallback: /* @__PURE__ */ import_react29.default.createElement("div", null)
}, /* @__PURE__ */ import_react29.default.createElement(LazyWithTooltip, {
  ...props
}));
var LazyWithTooltipPure = (0, import_react29.lazy)(
  () => Promise.resolve().then(() => (init_WithTooltip(), WithTooltip_exports)).then((mod) => ({ default: mod.WithTooltipPure }))
);
var WithTooltipPure2 = (props) => /* @__PURE__ */ import_react29.default.createElement(import_react29.Suspense, {
  fallback: /* @__PURE__ */ import_react29.default.createElement("div", null)
}, /* @__PURE__ */ import_react29.default.createElement(LazyWithTooltipPure, {
  ...props
}));

// src/tooltip/TooltipMessage.tsx
var import_react30 = __toESM(require("react"));
var import_theming40 = require("@storybook/theming");
var Title2 = import_theming40.styled.div(({ theme }) => ({
  fontWeight: theme.typography.weight.black
}));
var Desc2 = import_theming40.styled.span();
var Links = import_theming40.styled.div(({ theme }) => ({
  marginTop: 8,
  textAlign: "center",
  "> *": {
    margin: "0 8px",
    fontWeight: theme.typography.weight.black
  }
}));
var Message2 = import_theming40.styled.div(({ theme }) => ({
  color: theme.color.defaultText,
  lineHeight: "18px"
}));
var MessageWrapper = import_theming40.styled.div({
  padding: 15,
  width: 280,
  boxSizing: "border-box"
});
var TooltipMessage = ({ title, desc, links }) => {
  return /* @__PURE__ */ import_react30.default.createElement(MessageWrapper, null, /* @__PURE__ */ import_react30.default.createElement(Message2, null, title && /* @__PURE__ */ import_react30.default.createElement(Title2, null, title), desc && /* @__PURE__ */ import_react30.default.createElement(Desc2, null, desc)), links && /* @__PURE__ */ import_react30.default.createElement(Links, null, links.map(({ title: linkTitle, ...other }) => /* @__PURE__ */ import_react30.default.createElement(Link2, {
    ...other,
    key: linkTitle
  }, linkTitle))));
};
TooltipMessage.defaultProps = {
  title: null,
  desc: null,
  links: null
};

// src/tooltip/TooltipNote.tsx
var import_react31 = __toESM(require("react"));
var import_theming41 = require("@storybook/theming");
var Note = import_theming41.styled.div(({ theme }) => ({
  padding: "2px 6px",
  lineHeight: "16px",
  fontSize: 10,
  fontWeight: theme.typography.weight.bold,
  color: theme.color.lightest,
  boxShadow: "0 0 5px 0 rgba(0, 0, 0, 0.3)",
  borderRadius: 4,
  whiteSpace: "nowrap",
  pointerEvents: "none",
  zIndex: -1,
  background: theme.base === "light" ? "rgba(60, 60, 60, 0.9)" : "rgba(0, 0, 0, 0.95)",
  margin: 6
}));
var TooltipNote = ({ note, ...props }) => {
  return /* @__PURE__ */ import_react31.default.createElement(Note, {
    ...props
  }, note);
};

// src/tooltip/TooltipLinkList.tsx
var import_react33 = __toESM(require("react"));
var import_theming43 = require("@storybook/theming");

// src/tooltip/ListItem.tsx
var import_react32 = __toESM(require("react"));
var import_theming42 = require("@storybook/theming");
var import_memoizerific4 = __toESM(require("memoizerific"));
var Title3 = (0, import_theming42.styled)(({ active, loading, disabled, ...rest }) => /* @__PURE__ */ import_react32.default.createElement("span", {
  ...rest
}))(
  ({ theme }) => ({
    color: theme.color.defaultText,
    fontWeight: theme.typography.weight.regular
  }),
  ({ active, theme }) => active ? {
    color: theme.color.primary,
    fontWeight: theme.typography.weight.bold
  } : {},
  ({ loading, theme }) => loading ? {
    display: "inline-block",
    flex: "none",
    ...theme.animation.inlineGlow
  } : {},
  ({ disabled, theme }) => disabled ? {
    color: curriedTransparentize$1(0.7, theme.color.defaultText)
  } : {}
);
var Right = import_theming42.styled.span(
  {
    "& svg": {
      transition: "all 200ms ease-out",
      opacity: 0,
      height: 12,
      width: 12,
      margin: "3px 0",
      verticalAlign: "top"
    },
    "& path": {
      fill: "inherit"
    }
  },
  ({ active, theme }) => active ? {
    "& svg": {
      opacity: 1
    },
    "& path": {
      fill: theme.color.primary
    }
  } : {}
);
var Center = import_theming42.styled.span({
  flex: 1,
  textAlign: "left",
  display: "inline-flex",
  "& > * + *": {
    paddingLeft: 10
  }
});
var CenterText = import_theming42.styled.span(
  {
    flex: 1,
    textAlign: "center"
  },
  ({ active, theme }) => active ? {
    color: theme.color.primary
  } : {},
  ({ theme, disabled }) => disabled ? {
    color: theme.textMutedColor
  } : {}
);
var Left = import_theming42.styled.span(
  ({ active, theme }) => active ? {
    "& svg": {
      opacity: 1
    },
    "& path": {
      fill: theme.color.primary
    }
  } : {}
);
var Item = import_theming42.styled.a(
  ({ theme }) => ({
    fontSize: theme.typography.size.s1,
    transition: "all 150ms ease-out",
    color: curriedTransparentize$1(0.5, theme.color.defaultText),
    textDecoration: "none",
    cursor: "pointer",
    justifyContent: "space-between",
    lineHeight: "18px",
    padding: "7px 15px",
    display: "flex",
    alignItems: "center",
    "& > * + *": {
      paddingLeft: 10
    },
    "&:hover": {
      background: theme.background.hoverable
    },
    "&:hover svg": {
      opacity: 1
    }
  }),
  ({ disabled }) => disabled ? {
    cursor: "not-allowed"
  } : {}
);
var getItemProps = (0, import_memoizerific4.default)(100)((onClick, href, LinkWrapper) => {
  const result = {};
  if (onClick) {
    Object.assign(result, {
      onClick
    });
  }
  if (href) {
    Object.assign(result, {
      href
    });
  }
  if (LinkWrapper && href) {
    Object.assign(result, {
      to: href,
      as: LinkWrapper
    });
  }
  return result;
});
var ListItem = ({
  loading,
  left: left2,
  title,
  center,
  right: right2,
  active,
  disabled,
  href,
  onClick,
  LinkWrapper,
  ...rest
}) => {
  const itemProps = getItemProps(onClick, href, LinkWrapper);
  const commonProps = { active, disabled };
  return /* @__PURE__ */ import_react32.default.createElement(Item, {
    ...commonProps,
    ...rest,
    ...itemProps
  }, left2 && /* @__PURE__ */ import_react32.default.createElement(Left, {
    ...commonProps
  }, left2), title || center ? /* @__PURE__ */ import_react32.default.createElement(Center, null, title && /* @__PURE__ */ import_react32.default.createElement(Title3, {
    ...commonProps,
    loading
  }, title), center && /* @__PURE__ */ import_react32.default.createElement(CenterText, {
    ...commonProps
  }, center)) : null, right2 && /* @__PURE__ */ import_react32.default.createElement(Right, {
    ...commonProps
  }, right2));
};
ListItem.defaultProps = {
  loading: false,
  left: null,
  title: /* @__PURE__ */ import_react32.default.createElement("span", null, "Loading state"),
  center: null,
  right: null,
  active: false,
  disabled: false,
  href: null,
  LinkWrapper: null,
  onClick: null
};
var ListItem_default = ListItem;

// src/tooltip/TooltipLinkList.tsx
var List = import_theming43.styled.div(
  {
    minWidth: 180,
    overflow: "hidden",
    overflowY: "auto",
    maxHeight: 15.5 * 32
  },
  ({ theme }) => ({
    borderRadius: theme.appBorderRadius * 2
  })
);
var Item2 = (props) => {
  const { LinkWrapper, onClick: onClickFromProps, ...rest } = props;
  const { title, href, active } = rest;
  const onClick = (0, import_react33.useCallback)(
    (event) => {
      onClickFromProps(event, rest);
    },
    [onClickFromProps]
  );
  const hasOnClick = !!onClickFromProps;
  return /* @__PURE__ */ import_react33.default.createElement(ListItem_default, {
    title,
    active,
    href,
    LinkWrapper,
    ...rest,
    ...hasOnClick ? { onClick } : {}
  });
};
var TooltipLinkList = ({ links, LinkWrapper }) => /* @__PURE__ */ import_react33.default.createElement(List, null, links.map(({ isGatsby, ...p }) => /* @__PURE__ */ import_react33.default.createElement(Item2, {
  key: p.id,
  LinkWrapper: isGatsby ? LinkWrapper : null,
  ...p
})));
TooltipLinkList.defaultProps = {
  LinkWrapper: ListItem_default.defaultProps.LinkWrapper
};

// src/tabs/tabs.tsx
var import_react36 = __toESM(require("react"));
var import_theming46 = require("@storybook/theming");
var import_csf = require("@storybook/csf");

// src/bar/bar.tsx
var import_react34 = __toESM(require("react"));
var import_theming44 = require("@storybook/theming");
init_ScrollArea();
var Side = import_theming44.styled.div(
  {
    display: "flex",
    whiteSpace: "nowrap",
    flexBasis: "auto",
    flexShrink: 0,
    marginLeft: 3,
    marginRight: 3
  },
  ({ left: left2 }) => left2 ? {
    "& > *": {
      marginLeft: 4
    }
  } : {},
  ({ right: right2 }) => right2 ? {
    marginLeft: 30,
    "& > *": {
      marginRight: 4
    }
  } : {}
);
Side.displayName = "Side";
var UnstyledBar = ({ children, className }) => /* @__PURE__ */ import_react34.default.createElement(ScrollArea, {
  horizontal: true,
  vertical: false,
  className
}, children);
var Bar = (0, import_theming44.styled)(UnstyledBar)(
  ({ theme }) => ({
    color: theme.barTextColor,
    width: "100%",
    height: 40,
    flexShrink: 0,
    overflow: "auto",
    overflowY: "hidden"
  }),
  ({ theme, border = false }) => border ? {
    boxShadow: `${theme.appBorderColor}  0 -1px 0 0 inset`,
    background: theme.barBg
  } : {}
);
Bar.displayName = "Bar";
var BarInner = import_theming44.styled.div(({ bgColor }) => ({
  display: "flex",
  justifyContent: "space-between",
  position: "relative",
  flexWrap: "nowrap",
  flexShrink: 0,
  height: 40,
  backgroundColor: bgColor || ""
}));
var FlexBar = ({ children, backgroundColor, ...rest }) => {
  const [left2, right2] = import_react34.Children.toArray(children);
  return /* @__PURE__ */ import_react34.default.createElement(Bar, {
    ...rest
  }, /* @__PURE__ */ import_react34.default.createElement(BarInner, {
    bgColor: backgroundColor
  }, /* @__PURE__ */ import_react34.default.createElement(Side, {
    left: true
  }, left2), right2 ? /* @__PURE__ */ import_react34.default.createElement(Side, {
    right: true
  }, right2) : null));
};
FlexBar.displayName = "FlexBar";

// src/bar/button.tsx
var import_react35 = __toESM(require("react"));
var import_theming45 = require("@storybook/theming");
init_lib();
var ButtonOrLink = ({ children, ...restProps }) => restProps.href != null ? /* @__PURE__ */ import_react35.default.createElement("a", {
  ...restProps
}, children) : /* @__PURE__ */ import_react35.default.createElement("button", {
  type: "button",
  ...restProps
}, children);
var TabButton = (0, import_theming45.styled)(ButtonOrLink, { shouldForwardProp: import_theming45.isPropValid })(
  {
    whiteSpace: "normal",
    display: "inline-flex",
    overflow: "hidden",
    verticalAlign: "top",
    justifyContent: "center",
    alignItems: "center",
    textAlign: "center",
    textDecoration: "none",
    "&:empty": {
      display: "none"
    }
  },
  ({ theme }) => ({
    padding: "0 15px",
    transition: "color 0.2s linear, border-bottom-color 0.2s linear",
    height: 40,
    lineHeight: "12px",
    cursor: "pointer",
    background: "transparent",
    border: "0 solid transparent",
    borderTop: "3px solid transparent",
    borderBottom: "3px solid transparent",
    fontWeight: "bold",
    fontSize: 13,
    "&:focus": {
      outline: "0 none",
      borderBottomColor: theme.color.secondary
    }
  }),
  ({ active, textColor, theme }) => active ? {
    color: textColor || theme.barSelectedColor,
    borderBottomColor: theme.barSelectedColor
  } : {
    color: textColor || theme.barTextColor,
    borderBottomColor: "transparent"
  }
);
TabButton.displayName = "TabButton";
var IconButton = (0, import_theming45.styled)(ButtonOrLink, { shouldForwardProp: import_theming45.isPropValid })(
  () => ({
    alignItems: "center",
    background: "transparent",
    border: "none",
    borderRadius: 4,
    color: "inherit",
    cursor: "pointer",
    display: "inline-flex",
    fontSize: 13,
    fontWeight: "bold",
    height: 28,
    justifyContent: "center",
    marginTop: 6,
    padding: "8px 7px",
    "& > svg": {
      width: 14
    }
  }),
  ({ active, theme }) => active ? {
    backgroundColor: theme.background.hoverable,
    color: theme.color.secondary
  } : {},
  ({ disabled, theme }) => disabled ? {
    opacity: 0.5,
    cursor: "not-allowed"
  } : {
    "&:hover, &:focus-visible": {
      background: curriedTransparentize$1(0.88, theme.color.secondary),
      color: theme.color.secondary
    },
    "&:focus-visible": {
      outline: auto
    },
    "&:focus:not(:focus-visible)": {
      outline: "none"
    }
  }
);
IconButton.displayName = "IconButton";
var IconPlaceholder = import_theming45.styled.div(({ theme }) => ({
  width: 14,
  height: 14,
  backgroundColor: theme.appBorderColor,
  animation: `${theme.animation.glow} 1.5s ease-in-out infinite`
}));
var IconButtonSkeletonWrapper = import_theming45.styled.div(() => ({
  marginTop: 6,
  padding: 7,
  height: 28
}));
var IconButtonSkeleton = () => /* @__PURE__ */ import_react35.default.createElement(IconButtonSkeletonWrapper, null, /* @__PURE__ */ import_react35.default.createElement(IconPlaceholder, null));

// src/tabs/tabs.tsx
var Wrapper4 = import_theming46.styled.div(
  ({ theme, bordered }) => bordered ? {
    backgroundClip: "padding-box",
    border: `1px solid ${theme.appBorderColor}`,
    borderRadius: theme.appBorderRadius,
    overflow: "hidden",
    boxSizing: "border-box"
  } : {},
  ({ absolute }) => absolute ? {
    width: "100%",
    height: "100%",
    boxSizing: "border-box",
    display: "flex",
    flexDirection: "column"
  } : {
    display: "block"
  }
);
var TabBar = import_theming46.styled.div({
  overflow: "hidden",
  "&:first-of-type": {
    marginLeft: -3
  }
});
var Content = import_theming46.styled.div(
  {
    display: "block",
    position: "relative"
  },
  ({ theme }) => ({
    fontSize: theme.typography.size.s2 - 1,
    background: theme.background.content
  }),
  ({ bordered, theme }) => bordered ? {
    borderRadius: `0 0 ${theme.appBorderRadius - 1}px ${theme.appBorderRadius - 1}px`
  } : {},
  ({ absolute, bordered }) => absolute ? {
    height: `calc(100% - ${bordered ? 42 : 40}px)`,
    position: "absolute",
    left: 0 + (bordered ? 1 : 0),
    right: 0 + (bordered ? 1 : 0),
    bottom: 0 + (bordered ? 1 : 0),
    top: 40 + (bordered ? 1 : 0),
    overflow: "auto",
    [`& > *:first-child`]: {
      position: "absolute",
      left: 0 + (bordered ? 1 : 0),
      right: 0 + (bordered ? 1 : 0),
      bottom: 0 + (bordered ? 1 : 0),
      top: 0 + (bordered ? 1 : 0),
      height: `calc(100% - ${bordered ? 2 : 0}px)`,
      overflow: "auto"
    }
  } : {}
);
var VisuallyHidden = import_theming46.styled.div(
  ({ active }) => active ? { display: "block" } : { display: "none" }
);
var TabWrapper = ({ active, render, children }) => /* @__PURE__ */ import_react36.default.createElement(VisuallyHidden, {
  active
}, render ? render() : children);
var childrenToList = (children, selected) => import_react36.Children.toArray(children).map(
  ({ props: { title, id, color, children: childrenOfChild } }, index3) => {
    const content = Array.isArray(childrenOfChild) ? childrenOfChild[0] : childrenOfChild;
    return {
      active: selected ? id === selected : index3 === 0,
      title,
      id,
      color,
      render: typeof content === "function" ? content : ({ active, key }) => /* @__PURE__ */ import_react36.default.createElement(VisuallyHidden, {
        key,
        active,
        role: "tabpanel"
      }, content)
    };
  }
);
var Tabs = (0, import_react36.memo)(
  ({ children, selected, actions, absolute, bordered, tools, backgroundColor, id: htmlId }) => {
    const list = childrenToList(children, selected);
    return list.length ? /* @__PURE__ */ import_react36.default.createElement(Wrapper4, {
      absolute,
      bordered,
      id: htmlId
    }, /* @__PURE__ */ import_react36.default.createElement(FlexBar, {
      border: true,
      backgroundColor
    }, /* @__PURE__ */ import_react36.default.createElement(TabBar, {
      role: "tablist"
    }, list.map(({ title, id, active, color }) => {
      const tabTitle = typeof title === "function" ? title() : title;
      return /* @__PURE__ */ import_react36.default.createElement(TabButton, {
        id: `tabbutton-${(0, import_csf.sanitize)(tabTitle)}`,
        className: `tabbutton ${active ? "tabbutton-active" : ""}`,
        type: "button",
        key: id,
        active,
        textColor: color,
        onClick: (e) => {
          e.preventDefault();
          actions.onSelect(id);
        },
        role: "tab"
      }, tabTitle);
    })), tools ? /* @__PURE__ */ import_react36.default.createElement(import_react36.Fragment, null, tools) : null), /* @__PURE__ */ import_react36.default.createElement(Content, {
      id: "panel-tab-content",
      bordered,
      absolute
    }, list.map(({ id, active, render }) => render({ key: id, active })))) : /* @__PURE__ */ import_react36.default.createElement(Placeholder, null, /* @__PURE__ */ import_react36.default.createElement(import_react36.Fragment, {
      key: "title"
    }, "Nothing found"));
  }
);
Tabs.displayName = "Tabs";
Tabs.defaultProps = {
  id: null,
  children: null,
  tools: null,
  selected: null,
  absolute: false,
  bordered: false
};
var TabsState = class extends import_react36.Component {
  constructor(props) {
    super(props);
    this.handlers = {
      onSelect: (id) => this.setState({ selected: id })
    };
    this.state = {
      selected: props.initial
    };
  }
  render() {
    const { bordered = false, absolute = false, children, backgroundColor } = this.props;
    const { selected } = this.state;
    return /* @__PURE__ */ import_react36.default.createElement(Tabs, {
      bordered,
      absolute,
      selected,
      backgroundColor,
      actions: this.handlers
    }, children);
  }
};
TabsState.defaultProps = {
  children: [],
  initial: null,
  absolute: false,
  bordered: false,
  backgroundColor: ""
};

// src/bar/separator.tsx
var import_react37 = __toESM(require("react"));
var import_theming47 = require("@storybook/theming");
var Separator = import_theming47.styled.span(
  ({ theme }) => ({
    width: 1,
    height: 20,
    background: theme.appBorderColor,
    marginTop: 10,
    marginLeft: 6,
    marginRight: 2
  }),
  ({ force }) => force ? {} : {
    "& + &": {
      display: "none"
    }
  }
);
Separator.displayName = "Separator";
var interleaveSeparators = (list) => list.reduce(
  (acc, item, index3) => item ? /* @__PURE__ */ import_react37.default.createElement(import_react37.Fragment, {
    key: item.id || item.key || `f-${index3}`
  }, acc, index3 > 0 ? /* @__PURE__ */ import_react37.default.createElement(Separator, {
    key: `s-${index3}`
  }) : null, item.render() || item) : acc,
  null
);

// src/addon-panel/addon-panel.tsx
var import_react38 = __toESM(require("react"));
var usePrevious = (value) => {
  const ref = (0, import_react38.useRef)();
  (0, import_react38.useEffect)(() => {
    ref.current = value;
  }, [value]);
  return ref.current;
};
var useUpdate = (update, value) => {
  const previousValue = usePrevious(value);
  return update ? value : previousValue;
};
var AddonPanel = ({ active, children }) => {
  return /* @__PURE__ */ import_react38.default.createElement("div", {
    hidden: !active,
    style: { transform: "translateX(0px)" }
  }, useUpdate(active, children));
};

// src/brand/StorybookLogo.tsx
var import_react39 = __toESM(require("react"));
var StorybookLogo = ({ alt, ...props }) => /* @__PURE__ */ import_react39.default.createElement("svg", {
  width: "200px",
  height: "40px",
  viewBox: "0 0 200 40",
  ...props,
  role: "img"
}, alt ? /* @__PURE__ */ import_react39.default.createElement("title", null, alt) : null, /* @__PURE__ */ import_react39.default.createElement("defs", null, /* @__PURE__ */ import_react39.default.createElement("path", {
  d: "M1.2 36.9L0 3.9c0-1.1.8-2 1.9-2.1l28-1.8a2 2 0 0 1 2.2 1.9 2 2 0 0 1 0 .1v36a2 2 0 0 1-2 2 2 2 0 0 1-.1 0L3.2 38.8a2 2 0 0 1-2-2z",
  id: "a"
})), /* @__PURE__ */ import_react39.default.createElement("g", {
  fill: "none",
  fillRule: "evenodd"
}, /* @__PURE__ */ import_react39.default.createElement("path", {
  d: "M53.3 31.7c-1.7 0-3.4-.3-5-.7-1.5-.5-2.8-1.1-3.9-2l1.6-3.5c2.2 1.5 4.6 2.3 7.3 2.3 1.5 0 2.5-.2 3.3-.7.7-.5 1.1-1 1.1-1.9 0-.7-.3-1.3-1-1.7s-2-.8-3.7-1.2c-2-.4-3.6-.9-4.8-1.5-1.1-.5-2-1.2-2.6-2-.5-1-.8-2-.8-3.2 0-1.4.4-2.6 1.2-3.6.7-1.1 1.8-2 3.2-2.6 1.3-.6 2.9-.9 4.7-.9 1.6 0 3.1.3 4.6.7 1.5.5 2.7 1.1 3.5 2l-1.6 3.5c-2-1.5-4.2-2.3-6.5-2.3-1.3 0-2.3.2-3 .8-.8.5-1.2 1.1-1.2 2 0 .5.2 1 .5 1.3.2.3.7.6 1.4.9l2.9.8c2.9.6 5 1.4 6.2 2.4a5 5 0 0 1 2 4.2 6 6 0 0 1-2.5 5c-1.7 1.2-4 1.9-7 1.9zm21-3.6l1.4-.1-.2 3.5-1.9.1c-2.4 0-4.1-.5-5.2-1.5-1.1-1-1.6-2.7-1.6-4.8v-6h-3v-3.6h3V11h4.8v4.6h4v3.6h-4v6c0 1.8.9 2.8 2.6 2.8zm11.1 3.5c-1.6 0-3-.3-4.3-1a7 7 0 0 1-3-2.8c-.6-1.3-1-2.7-1-4.4 0-1.6.4-3 1-4.3a7 7 0 0 1 3-2.8c1.2-.7 2.7-1 4.3-1 1.7 0 3.2.3 4.4 1a7 7 0 0 1 3 2.8c.6 1.2 1 2.7 1 4.3 0 1.7-.4 3.1-1 4.4a7 7 0 0 1-3 2.8c-1.2.7-2.7 1-4.4 1zm0-3.6c2.4 0 3.6-1.6 3.6-4.6 0-1.5-.3-2.6-1-3.4a3.2 3.2 0 0 0-2.6-1c-2.3 0-3.5 1.4-3.5 4.4 0 3 1.2 4.6 3.5 4.6zm21.7-8.8l-2.7.3c-1.3.2-2.3.5-2.8 1.2-.6.6-.9 1.4-.9 2.5v8.2H96V15.7h4.6v2.6c.8-1.8 2.5-2.8 5-3h1.3l.3 4zm14-3.5h4.8L116.4 37h-4.9l3-6.6-6.4-14.8h5l4 10 4-10zm16-.4c1.4 0 2.6.3 3.6 1 1 .6 1.9 1.6 2.5 2.8.6 1.2.9 2.7.9 4.3 0 1.6-.3 3-1 4.3a6.9 6.9 0 0 1-2.4 2.9c-1 .7-2.2 1-3.6 1-1 0-2-.2-3-.7-.8-.4-1.5-1-2-1.9v2.4h-4.7V8.8h4.8v9c.5-.8 1.2-1.4 2-1.9.9-.4 1.8-.6 3-.6zM135.7 28c1.1 0 2-.4 2.6-1.2.6-.8 1-2 1-3.4 0-1.5-.4-2.5-1-3.3s-1.5-1.1-2.6-1.1-2 .3-2.6 1.1c-.6.8-1 2-1 3.3 0 1.5.4 2.6 1 3.4.6.8 1.5 1.2 2.6 1.2zm18.9 3.6c-1.7 0-3.2-.3-4.4-1a7 7 0 0 1-3-2.8c-.6-1.3-1-2.7-1-4.4 0-1.6.4-3 1-4.3a7 7 0 0 1 3-2.8c1.2-.7 2.7-1 4.4-1 1.6 0 3 .3 4.3 1a7 7 0 0 1 3 2.8c.6 1.2 1 2.7 1 4.3 0 1.7-.4 3.1-1 4.4a7 7 0 0 1-3 2.8c-1.2.7-2.7 1-4.3 1zm0-3.6c2.3 0 3.5-1.6 3.5-4.6 0-1.5-.3-2.6-1-3.4a3.2 3.2 0 0 0-2.5-1c-2.4 0-3.6 1.4-3.6 4.4 0 3 1.2 4.6 3.6 4.6zm18 3.6c-1.7 0-3.2-.3-4.4-1a7 7 0 0 1-3-2.8c-.6-1.3-1-2.7-1-4.4 0-1.6.4-3 1-4.3a7 7 0 0 1 3-2.8c1.2-.7 2.7-1 4.4-1 1.6 0 3 .3 4.4 1a7 7 0 0 1 2.9 2.8c.6 1.2 1 2.7 1 4.3 0 1.7-.4 3.1-1 4.4a7 7 0 0 1-3 2.8c-1.2.7-2.7 1-4.3 1zm0-3.6c2.3 0 3.5-1.6 3.5-4.6 0-1.5-.3-2.6-1-3.4a3.2 3.2 0 0 0-2.5-1c-2.4 0-3.6 1.4-3.6 4.4 0 3 1.2 4.6 3.6 4.6zm27.4 3.4h-6l-6-7v7h-4.8V8.8h4.9v13.6l5.8-6.7h5.7l-6.6 7.5 7 8.2z",
  fill: "currentColor"
}), /* @__PURE__ */ import_react39.default.createElement("mask", {
  id: "b",
  fill: "#fff"
}, /* @__PURE__ */ import_react39.default.createElement("use", {
  xlinkHref: "#a"
})), /* @__PURE__ */ import_react39.default.createElement("use", {
  fill: "#FF4785",
  fillRule: "nonzero",
  xlinkHref: "#a"
}), /* @__PURE__ */ import_react39.default.createElement("path", {
  d: "M23.7 5L24 .2l3.9-.3.1 4.8a.3.3 0 0 1-.5.2L26 3.8l-1.7 1.4a.3.3 0 0 1-.5-.3zm-5 10c0 .9 5.3.5 6 0 0-5.4-2.8-8.2-8-8.2-5.3 0-8.2 2.8-8.2 7.1 0 7.4 10 7.6 10 11.6 0 1.2-.5 1.9-1.8 1.9-1.6 0-2.2-.9-2.1-3.6 0-.6-6.1-.8-6.3 0-.5 6.7 3.7 8.6 8.5 8.6 4.6 0 8.3-2.5 8.3-7 0-7.9-10.2-7.7-10.2-11.6 0-1.6 1.2-1.8 2-1.8.6 0 2 0 1.9 3z",
  fill: "#FFF",
  fillRule: "nonzero",
  mask: "url(#b)"
})));

// src/brand/StorybookIcon.tsx
var import_react40 = __toESM(require("react"));
var StorybookIcon = ({ ...props }) => /* @__PURE__ */ import_react40.default.createElement("svg", {
  viewBox: "0 0 64 64",
  ...props
}, /* @__PURE__ */ import_react40.default.createElement("title", null, "Storybook icon"), /* @__PURE__ */ import_react40.default.createElement("g", {
  id: "Artboard",
  stroke: "none",
  strokeWidth: "1",
  fill: "none",
  fillRule: "evenodd"
}, /* @__PURE__ */ import_react40.default.createElement("path", {
  d: "M8.04798541,58.7875918 L6.07908839,6.32540407 C6.01406344,4.5927838 7.34257463,3.12440831 9.07303814,3.01625434 L53.6958037,0.227331489 C55.457209,0.117243658 56.974354,1.45590096 57.0844418,3.21730626 C57.0885895,3.28366922 57.0906648,3.35014546 57.0906648,3.41663791 L57.0906648,60.5834697 C57.0906648,62.3483119 55.6599776,63.7789992 53.8951354,63.7789992 C53.847325,63.7789992 53.7995207,63.7779262 53.7517585,63.775781 L11.0978899,61.8600599 C9.43669044,61.7854501 8.11034889,60.4492961 8.04798541,58.7875918 Z",
  id: "path-1",
  fill: "#FF4785",
  fillRule: "nonzero"
}), /* @__PURE__ */ import_react40.default.createElement("path", {
  d: "M35.9095005,24.1768792 C35.9095005,25.420127 44.2838488,24.8242707 45.4080313,23.9509748 C45.4080313,15.4847538 40.8652557,11.0358878 32.5466666,11.0358878 C24.2280775,11.0358878 19.5673077,15.553972 19.5673077,22.3311017 C19.5673077,34.1346028 35.4965208,34.3605071 35.4965208,40.7987804 C35.4965208,42.606015 34.6115646,43.6790606 32.6646607,43.6790606 C30.127786,43.6790606 29.1248356,42.3834613 29.2428298,37.9783269 C29.2428298,37.0226907 19.5673077,36.7247626 19.2723223,37.9783269 C18.5211693,48.6535354 25.1720308,51.7326752 32.7826549,51.7326752 C40.1572906,51.7326752 45.939005,47.8018145 45.939005,40.6858282 C45.939005,28.035186 29.7738035,28.3740425 29.7738035,22.1051974 C29.7738035,19.5637737 31.6617103,19.2249173 32.7826549,19.2249173 C33.9625966,19.2249173 36.0864917,19.4328883 35.9095005,24.1768792 Z",
  id: "path9_fill-path",
  fill: "#FFFFFF",
  fillRule: "nonzero"
}), /* @__PURE__ */ import_react40.default.createElement("path", {
  d: "M44.0461638,0.830433986 L50.1874092,0.446606143 L50.443532,7.7810017 C50.4527198,8.04410717 50.2468789,8.26484453 49.9837734,8.27403237 C49.871115,8.27796649 49.7607078,8.24184808 49.6721567,8.17209069 L47.3089847,6.3104681 L44.5110468,8.43287463 C44.3012992,8.591981 44.0022839,8.55092814 43.8431776,8.34118051 C43.7762017,8.25288717 43.742082,8.14401677 43.7466857,8.03329059 L44.0461638,0.830433986 Z",
  id: "Path",
  fill: "#FFFFFF"
})));

// src/Loader/Loader.tsx
var import_global4 = __toESM(require_window());
var import_react41 = __toESM(require("react"));
var import_theming49 = require("@storybook/theming");

// src/shared/animation.ts
var import_theming48 = require("@storybook/theming");
var rotate360 = import_theming48.keyframes`
	from {
		transform: rotate(0deg);
	}
	to {
		transform: rotate(360deg);
	}
`;

// src/Loader/Loader.tsx
var { EventSource, CONFIG_TYPE } = import_global4.default;
var LoaderWrapper = import_theming49.styled.div(({ size = 32 }) => ({
  borderRadius: "50%",
  cursor: "progress",
  display: "inline-block",
  overflow: "hidden",
  position: "absolute",
  transition: "all 200ms ease-out",
  verticalAlign: "top",
  top: "50%",
  left: "50%",
  marginTop: -(size / 2),
  marginLeft: -(size / 2),
  height: size,
  width: size,
  zIndex: 4,
  borderWidth: 2,
  borderStyle: "solid",
  borderColor: "rgba(97, 97, 97, 0.29)",
  borderTopColor: "rgb(100,100,100)",
  animation: `${rotate360} 0.7s linear infinite`,
  mixBlendMode: "difference"
}));
var ProgressWrapper = import_theming49.styled.div({
  position: "absolute",
  display: "flex",
  flexDirection: "column",
  justifyContent: "center",
  alignItems: "center",
  width: "100%",
  height: "100%"
});
var ProgressTrack = import_theming49.styled.div(({ theme }) => ({
  position: "relative",
  width: "80%",
  marginBottom: "0.75rem",
  maxWidth: 300,
  height: 5,
  borderRadius: 5,
  background: curriedTransparentize$1(0.8, theme.color.secondary),
  overflow: "hidden",
  cursor: "progress"
}));
var ProgressBar = import_theming49.styled.div(({ theme }) => ({
  position: "absolute",
  top: 0,
  left: 0,
  height: "100%",
  background: theme.color.secondary
}));
var ProgressMessage = import_theming49.styled.div(({ theme }) => ({
  minHeight: "2em",
  fontSize: `${theme.typography.size.s1}px`,
  color: theme.barTextColor
}));
var ErrorIcon = (0, import_theming49.styled)(Icons)(({ theme }) => ({
  width: 20,
  height: 20,
  marginBottom: "0.5rem",
  color: theme.textMutedColor
}));
var ellipsis = import_theming49.keyframes`
  from { content: "..." }
  33% { content: "." }
  66% { content: ".." }
  to { content: "..." }
`;
var Ellipsis = import_theming49.styled.span({
  "&::after": {
    content: "'...'",
    animation: `${ellipsis} 1s linear infinite`,
    animationDelay: "1s",
    display: "inline-block",
    width: "1em",
    height: "auto"
  }
});
var PureLoader = ({
  progress,
  error,
  size,
  ...props
}) => {
  if (error) {
    return /* @__PURE__ */ import_react41.default.createElement(ProgressWrapper, {
      "aria-label": error.toString(),
      "aria-live": "polite",
      role: "status",
      ...props
    }, /* @__PURE__ */ import_react41.default.createElement(ErrorIcon, {
      icon: "lightningoff"
    }), /* @__PURE__ */ import_react41.default.createElement(ProgressMessage, null, error.message));
  }
  if (progress) {
    const { value, modules } = progress;
    let { message } = progress;
    if (modules)
      message += ` ${modules.complete} / ${modules.total} modules`;
    return /* @__PURE__ */ import_react41.default.createElement(ProgressWrapper, {
      "aria-label": "Content is loading...",
      "aria-live": "polite",
      "aria-valuemin": 0,
      "aria-valuemax": 100,
      "aria-valuenow": value * 100,
      "aria-valuetext": message,
      role: "progressbar",
      ...props
    }, /* @__PURE__ */ import_react41.default.createElement(ProgressTrack, null, /* @__PURE__ */ import_react41.default.createElement(ProgressBar, {
      style: { width: `${value * 100}%` }
    })), /* @__PURE__ */ import_react41.default.createElement(ProgressMessage, null, message, value < 1 && /* @__PURE__ */ import_react41.default.createElement(Ellipsis, {
      key: message
    })));
  }
  return /* @__PURE__ */ import_react41.default.createElement(LoaderWrapper, {
    "aria-label": "Content is loading...",
    "aria-live": "polite",
    role: "status",
    size,
    ...props
  });
};
var Loader = (props) => {
  const [progress, setProgress] = (0, import_react41.useState)(void 0);
  const [error, setError] = (0, import_react41.useState)(void 0);
  (0, import_react41.useEffect)(() => {
    if (CONFIG_TYPE !== "DEVELOPMENT" || !EventSource)
      return void 0;
    const eventSource = new EventSource("/progress");
    let lastProgress;
    eventSource.onmessage = (event) => {
      try {
        lastProgress = JSON.parse(event.data);
        setProgress(lastProgress);
      } catch (e) {
        setError(e);
        eventSource.close();
      }
    };
    eventSource.onerror = () => {
      if (lastProgress && lastProgress.value !== 1)
        setError(new Error("Connection closed"));
      eventSource.close();
    };
    return () => eventSource.close();
  }, []);
  return /* @__PURE__ */ import_react41.default.createElement(PureLoader, {
    progress,
    error,
    ...props
  });
};

// src/utils/getStoryHref.ts
function parseQuery(queryString) {
  const query = {};
  const pairs = queryString.split("&");
  for (let i = 0; i < pairs.length; i++) {
    const pair = pairs[i].split("=");
    query[decodeURIComponent(pair[0])] = decodeURIComponent(pair[1] || "");
  }
  return query;
}
var getStoryHref = (baseUrl, storyId, additionalParams = {}) => {
  const [url, paramsStr] = baseUrl.split("?");
  const params = paramsStr ? {
    ...parseQuery(paramsStr),
    ...additionalParams,
    id: storyId
  } : {
    ...additionalParams,
    id: storyId
  };
  return `${url}?${Object.entries(params).map((item) => `${item[0]}=${item[1]}`).join("&")}`;
};

// src/index.ts
var components2 = components;
var resetComponents = {};
Object.keys(components).forEach((key) => {
  resetComponents[key] = (0, import_react42.forwardRef)((props, ref) => (0, import_react42.createElement)(key, { ...props, ref }));
});
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
  A,
  ActionBar,
  AddonPanel,
  Badge,
  Bar,
  Blockquote,
  Button,
  Code,
  DL,
  Div,
  DocumentWrapper,
  FlexBar,
  Form,
  H1,
  H2,
  H3,
  H4,
  H5,
  H6,
  HR,
  IconButton,
  IconButtonSkeleton,
  Icons,
  Img,
  LI,
  Link,
  Loader,
  OL,
  P,
  Placeholder,
  Pre,
  ResetWrapper,
  ScrollArea,
  Separator,
  Spaced,
  Span,
  StorybookIcon,
  StorybookLogo,
  Symbols,
  SyntaxHighlighter,
  TT,
  TabBar,
  TabButton,
  TabWrapper,
  Table,
  Tabs,
  TabsState,
  TooltipLinkList,
  TooltipMessage,
  TooltipNote,
  UL,
  WithTooltip,
  WithTooltipPure,
  Zoom,
  codeCommon,
  components,
  createCopyToClipboardFunction,
  getStoryHref,
  interleaveSeparators,
  nameSpaceClassNames,
  resetComponents,
  withReset
});
