"use strict";
var __create = Object.create;
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __getProtoOf = Object.getPrototypeOf;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __copyProps = (to, from, except, desc) => {
  if (from && typeof from === "object" || typeof from === "function") {
    for (let key of __getOwnPropNames(from))
      if (!__hasOwnProp.call(to, key) && key !== except)
        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  }
  return to;
};
var __toESM = (mod, isNodeMode, target) => (target = mod != null ? __create(__getProtoOf(mod)) : {}, __copyProps(
  isNodeMode || !mod || !mod.__esModule ? __defProp(target, "default", { value: mod, enumerable: true }) : target,
  mod
));
var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);

// src/index.ts
var src_exports = {};
__export(src_exports, {
  addons: () => addons
});
module.exports = __toCommonJS(src_exports);
var import_path = __toESM(require("path"));
var import_node_logger = require("@storybook/node-logger");
var import_core_common = require("@storybook/core-common");
var requireMain = (configDir) => {
  const absoluteConfigDir = import_path.default.isAbsolute(configDir) ? configDir : import_path.default.join(process.cwd(), configDir);
  const mainFile = import_path.default.join(absoluteConfigDir, "main");
  return (0, import_core_common.serverRequire)(mainFile) ?? {};
};
function addons(options) {
  const checkInstalled = (addon, main2) => {
    var _a;
    const existingAddon = (_a = main2.addons) == null ? void 0 : _a.find((entry) => {
      const name = typeof entry === "string" ? entry : entry.name;
      return name == null ? void 0 : name.startsWith(addon);
    });
    if (existingAddon) {
      import_node_logger.logger.info(`Found existing addon ${JSON.stringify(existingAddon)}, skipping.`);
    }
    return !!existingAddon;
  };
  const main = requireMain(options.configDir);
  return [
    "docs",
    "controls",
    "actions",
    "backgrounds",
    "viewport",
    "toolbars",
    "measure",
    "outline",
    "highlight"
  ].filter((key) => options[key] !== false).map((key) => `@storybook/addon-${key}`).filter((addon) => !checkInstalled(addon, main)).map((addon) => {
    try {
      return (0, import_path.dirname)(require.resolve((0, import_path.join)(addon, "package.json")));
    } catch (err) {
    }
    return require.resolve(addon);
  });
}
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
  addons
});
