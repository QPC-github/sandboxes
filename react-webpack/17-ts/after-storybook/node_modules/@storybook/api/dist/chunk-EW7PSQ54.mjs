var __defProp = Object.defineProperty;
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};

// src/lib/shortcut.ts
import global from "global";
var { navigator } = global;
var isMacLike = () => navigator && navigator.platform ? !!navigator.platform.match(/(Mac|iPhone|iPod|iPad)/i) : false;
var controlOrMetaSymbol = () => isMacLike() ? "\u2318" : "ctrl";
var controlOrMetaKey = () => isMacLike() ? "meta" : "control";
var optionOrAltSymbol = () => isMacLike() ? "\u2325" : "alt";
var isShortcutTaken = (arr1, arr2) => JSON.stringify(arr1) === JSON.stringify(arr2);
var eventToShortcut = (e) => {
  if (["Meta", "Alt", "Control", "Shift"].includes(e.key)) {
    return null;
  }
  const keys = [];
  if (e.altKey) {
    keys.push("alt");
  }
  if (e.ctrlKey) {
    keys.push("control");
  }
  if (e.metaKey) {
    keys.push("meta");
  }
  if (e.shiftKey) {
    keys.push("shift");
  }
  if (e.key && e.key.length === 1 && e.key !== " ") {
    keys.push(e.key.toUpperCase());
  }
  if (e.key === " ") {
    keys.push("space");
  }
  if (e.key === "Escape") {
    keys.push("escape");
  }
  if (e.key === "ArrowRight") {
    keys.push("ArrowRight");
  }
  if (e.key === "ArrowDown") {
    keys.push("ArrowDown");
  }
  if (e.key === "ArrowUp") {
    keys.push("ArrowUp");
  }
  if (e.key === "ArrowLeft") {
    keys.push("ArrowLeft");
  }
  return keys.length > 0 ? keys : null;
};
var shortcutMatchesShortcut = (inputShortcut, shortcut) => {
  if (!inputShortcut || !shortcut)
    return false;
  if (inputShortcut.join("") === "shift/")
    inputShortcut.shift();
  if (inputShortcut.length !== shortcut.length)
    return false;
  return !inputShortcut.find((key, i) => key !== shortcut[i]);
};
var eventMatchesShortcut = (e, shortcut) => {
  return shortcutMatchesShortcut(eventToShortcut(e), shortcut);
};
var keyToSymbol = (key) => {
  if (key === "alt") {
    return optionOrAltSymbol();
  }
  if (key === "control") {
    return "\u2303";
  }
  if (key === "meta") {
    return "\u2318";
  }
  if (key === "shift") {
    return "\u21E7\u200B";
  }
  if (key === "Enter" || key === "Backspace" || key === "Esc") {
    return "";
  }
  if (key === "escape") {
    return "";
  }
  if (key === " ") {
    return "SPACE";
  }
  if (key === "ArrowUp") {
    return "\u2191";
  }
  if (key === "ArrowDown") {
    return "\u2193";
  }
  if (key === "ArrowLeft") {
    return "\u2190";
  }
  if (key === "ArrowRight") {
    return "\u2192";
  }
  return key.toUpperCase();
};
var shortcutToHumanString = (shortcut) => {
  return shortcut.map(keyToSymbol).join(" ");
};

export {
  __export,
  isMacLike,
  controlOrMetaSymbol,
  controlOrMetaKey,
  optionOrAltSymbol,
  isShortcutTaken,
  eventToShortcut,
  shortcutMatchesShortcut,
  eventMatchesShortcut,
  keyToSymbol,
  shortcutToHumanString
};
