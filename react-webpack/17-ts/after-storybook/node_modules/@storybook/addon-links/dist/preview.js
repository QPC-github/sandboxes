"use strict";
var __create = Object.create;
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __getProtoOf = Object.getPrototypeOf;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __copyProps = (to, from, except, desc) => {
  if (from && typeof from === "object" || typeof from === "function") {
    for (let key of __getOwnPropNames(from))
      if (!__hasOwnProp.call(to, key) && key !== except)
        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  }
  return to;
};
var __toESM = (mod, isNodeMode, target) => (target = mod != null ? __create(__getProtoOf(mod)) : {}, __copyProps(
  isNodeMode || !mod || !mod.__esModule ? __defProp(target, "default", { value: mod, enumerable: true }) : target,
  mod
));
var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);

// src/preview.ts
var preview_exports = {};
__export(preview_exports, {
  decorators: () => decorators
});
module.exports = __toCommonJS(preview_exports);

// src/index.ts
var import_ts_dedent = require("ts-dedent");

// src/utils.ts
var import_global = __toESM(require("global"));
var import_addons = require("@storybook/addons");
var import_core_events = require("@storybook/core-events");
var import_csf = require("@storybook/csf");

// src/constants.ts
var ADDON_ID = "storybook/links";
var PARAM_KEY = `links`;
var constants_default = {
  NAVIGATE: `${ADDON_ID}/navigate`,
  REQUEST: `${ADDON_ID}/request`,
  RECEIVE: `${ADDON_ID}/receive`
};

// src/utils.ts
var { document, HTMLElement } = import_global.default;
var navigate = (params) => import_addons.addons.getChannel().emit(import_core_events.SELECT_STORY, params);
var linksListener = (e) => {
  const { target } = e;
  if (!(target instanceof HTMLElement)) {
    return;
  }
  const element = target;
  const { sbKind: kind, sbStory: story } = element.dataset;
  if (kind || story) {
    e.preventDefault();
    navigate({ kind, story });
  }
};
var hasListener = false;
var on = () => {
  if (!hasListener) {
    hasListener = true;
    document.addEventListener("click", linksListener);
  }
};
var off = () => {
  if (hasListener) {
    hasListener = false;
    document.removeEventListener("click", linksListener);
  }
};
var withLinks = (0, import_addons.makeDecorator)({
  name: "withLinks",
  parameterName: PARAM_KEY,
  wrapper: (getStory, context) => {
    on();
    import_addons.addons.getChannel().once(import_core_events.STORY_CHANGED, off);
    return getStory(context);
  }
});

// src/index.ts
if (module && module.hot && module.hot.decline) {
  module.hot.decline();
}

// src/preview.ts
var decorators = [withLinks];
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
  decorators
});
