"use strict";
var __create = Object.create;
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __getProtoOf = Object.getPrototypeOf;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __copyProps = (to, from, except, desc) => {
  if (from && typeof from === "object" || typeof from === "function") {
    for (let key of __getOwnPropNames(from))
      if (!__hasOwnProp.call(to, key) && key !== except)
        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  }
  return to;
};
var __toESM = (mod, isNodeMode, target) => (target = mod != null ? __create(__getProtoOf(mod)) : {}, __copyProps(
  isNodeMode || !mod || !mod.__esModule ? __defProp(target, "default", { value: mod, enumerable: true }) : target,
  mod
));
var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);

// src/preset.ts
var preset_exports = {};
__export(preset_exports, {
  addons: () => addons,
  core: () => core,
  frameworkOptions: () => frameworkOptions,
  webpack: () => webpack
});
module.exports = __toCommonJS(preset_exports);
var import_path = __toESM(require("path"));
var addons = [
  import_path.default.dirname(require.resolve(import_path.default.join("@storybook/preset-react-webpack", "package.json"))),
  import_path.default.dirname(require.resolve(import_path.default.join("@storybook/react", "package.json")))
];
var defaultFrameworkOptions = {
  legacyRootApi: true
};
var frameworkOptions = async (_, options) => {
  const config = await options.presets.apply("framework");
  if (typeof config === "string") {
    return {
      name: config,
      options: defaultFrameworkOptions
    };
  }
  if (typeof config === "undefined") {
    return {
      name: require.resolve("@storybook/react-webpack5"),
      options: defaultFrameworkOptions
    };
  }
  return {
    name: config.name,
    options: {
      ...defaultFrameworkOptions,
      ...config.options
    }
  };
};
var core = async (config, options) => {
  const framework = await options.presets.apply("framework");
  return {
    ...config,
    builder: {
      name: import_path.default.dirname(
        require.resolve(import_path.default.join("@storybook/builder-webpack5", "package.json"))
      ),
      options: typeof framework === "string" ? {} : framework.options.builder || {}
    }
  };
};
var webpack = async (config) => {
  var _a;
  config.resolve = config.resolve || {};
  config.resolve.alias = {
    ...(_a = config.resolve) == null ? void 0 : _a.alias,
    "@storybook/react": import_path.default.dirname(
      require.resolve(import_path.default.join("@storybook/react", "package.json"))
    )
  };
  return config;
};
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
  addons,
  core,
  frameworkOptions,
  webpack
});
