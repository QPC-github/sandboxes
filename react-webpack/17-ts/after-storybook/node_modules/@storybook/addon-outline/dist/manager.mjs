import {
  ADDON_ID,
  PARAM_KEY
} from "./chunk-ZQ5HVVVC.mjs";

// src/manager.tsx
import React2 from "react";
import { addons, types } from "@storybook/addons";

// src/OutlineSelector.tsx
import React, { memo, useCallback, useEffect } from "react";
import { useGlobals, useStorybookApi } from "@storybook/api";
import { Icons, IconButton } from "@storybook/components";
var OutlineSelector = memo(() => {
  const [globals, updateGlobals] = useGlobals();
  const api = useStorybookApi();
  const isActive = globals[PARAM_KEY] || false;
  const toggleOutline = useCallback(
    () => updateGlobals({
      [PARAM_KEY]: !isActive
    }),
    [isActive]
  );
  useEffect(() => {
    api.setAddonShortcut(ADDON_ID, {
      label: "Toggle Measure [O]",
      defaultShortcut: ["O"],
      actionName: "outline",
      showInMenu: false,
      action: toggleOutline
    });
  }, [toggleOutline, api]);
  return /* @__PURE__ */ React.createElement(IconButton, {
    key: "outline",
    active: isActive,
    title: "Apply outlines to the preview",
    onClick: toggleOutline
  }, /* @__PURE__ */ React.createElement(Icons, {
    icon: "outline"
  }));
});

// src/manager.tsx
addons.register(ADDON_ID, () => {
  addons.add(ADDON_ID, {
    title: "Outline",
    type: types.TOOL,
    match: ({ viewMode }) => !!(viewMode && viewMode.match(/^(story|docs)$/)),
    render: () => /* @__PURE__ */ React2.createElement(OutlineSelector, null)
  });
});
