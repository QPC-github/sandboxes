import {
  ADDON_ID,
  TOOL_ID
} from "./chunk-OI6RWK4S.mjs";

// src/manager.tsx
import React2 from "react";
import { addons, types } from "@storybook/addons";

// src/Tool.tsx
import React, { useCallback, useEffect } from "react";
import { useGlobals, useStorybookApi } from "@storybook/api";
import { Icons, IconButton } from "@storybook/components";
var Tool = () => {
  const [globals, updateGlobals] = useGlobals();
  const { measureEnabled } = globals;
  const api = useStorybookApi();
  const toggleMeasure = useCallback(
    () => updateGlobals({
      measureEnabled: !measureEnabled
    }),
    [updateGlobals, measureEnabled]
  );
  useEffect(() => {
    api.setAddonShortcut(ADDON_ID, {
      label: "Toggle Measure [M]",
      defaultShortcut: ["M"],
      actionName: "measure",
      showInMenu: false,
      action: toggleMeasure
    });
  }, [toggleMeasure, api]);
  return /* @__PURE__ */ React.createElement(IconButton, {
    key: TOOL_ID,
    active: measureEnabled,
    title: "Enable measure",
    onClick: toggleMeasure
  }, /* @__PURE__ */ React.createElement(Icons, {
    icon: "ruler"
  }));
};

// src/manager.tsx
addons.register(ADDON_ID, () => {
  addons.add(TOOL_ID, {
    type: types.TOOL,
    title: "Measure",
    match: ({ viewMode }) => viewMode === "story",
    render: () => /* @__PURE__ */ React2.createElement(Tool, null)
  });
});
