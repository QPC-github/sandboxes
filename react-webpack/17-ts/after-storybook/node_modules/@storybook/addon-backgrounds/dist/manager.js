var __create = Object.create;
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __getProtoOf = Object.getPrototypeOf;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __copyProps = (to, from, except, desc) => {
  if (from && typeof from === "object" || typeof from === "function") {
    for (let key of __getOwnPropNames(from))
      if (!__hasOwnProp.call(to, key) && key !== except)
        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  }
  return to;
};
var __toESM = (mod, isNodeMode, target) => (target = mod != null ? __create(__getProtoOf(mod)) : {}, __copyProps(
  isNodeMode || !mod || !mod.__esModule ? __defProp(target, "default", { value: mod, enumerable: true }) : target,
  mod
));

// src/manager.tsx
var import_react3 = __toESM(require("react"));
var import_addons = require("@storybook/addons");

// src/constants.ts
var ADDON_ID = "storybook/background";
var PARAM_KEY = "backgrounds";
var EVENTS = {
  UPDATE: `${ADDON_ID}/update`
};

// src/containers/BackgroundSelector.tsx
var import_react = __toESM(require("react"));
var import_memoizerific = __toESM(require("memoizerific"));
var import_api = require("@storybook/api");
var import_client_logger2 = require("@storybook/client-logger");
var import_components = require("@storybook/components");

// src/components/ColorIcon.tsx
var import_theming = require("@storybook/theming");
var ColorIcon = import_theming.styled.span(
  ({ background }) => ({
    borderRadius: "1rem",
    display: "block",
    height: "1rem",
    width: "1rem",
    background
  }),
  ({ theme }) => ({
    boxShadow: `${theme.appBorderColor} 0 0 0 1px inset`
  })
);

// src/helpers/index.ts
var import_global = __toESM(require("global"));
var import_ts_dedent = require("ts-dedent");
var import_client_logger = require("@storybook/client-logger");
var { document, window } = import_global.default;
var getBackgroundColorByName = (currentSelectedValue, backgrounds = [], defaultName) => {
  if (currentSelectedValue === "transparent") {
    return "transparent";
  }
  if (backgrounds.find((background) => background.value === currentSelectedValue)) {
    return currentSelectedValue;
  }
  const defaultBackground = backgrounds.find((background) => background.name === defaultName);
  if (defaultBackground) {
    return defaultBackground.value;
  }
  if (defaultName) {
    const availableColors = backgrounds.map((background) => background.name).join(", ");
    import_client_logger.logger.warn(
      import_ts_dedent.dedent`
        Backgrounds Addon: could not find the default color "${defaultName}".
        These are the available colors for your story based on your configuration:
        ${availableColors}.
      `
    );
  }
  return "transparent";
};

// src/containers/BackgroundSelector.tsx
var createBackgroundSelectorItem = (0, import_memoizerific.default)(1e3)(
  (id, name, value, hasSwatch, change, active) => ({
    id: id || name,
    title: name,
    onClick: () => {
      change({ selected: value, name });
    },
    value,
    right: hasSwatch ? /* @__PURE__ */ import_react.default.createElement(ColorIcon, {
      background: value
    }) : void 0,
    active
  })
);
var getDisplayedItems = (0, import_memoizerific.default)(10)(
  (backgrounds, selectedBackgroundColor, change) => {
    const backgroundSelectorItems = backgrounds.map(
      ({ name, value }) => createBackgroundSelectorItem(
        null,
        name,
        value,
        true,
        change,
        value === selectedBackgroundColor
      )
    );
    if (selectedBackgroundColor !== "transparent") {
      return [
        createBackgroundSelectorItem(
          "reset",
          "Clear background",
          "transparent",
          null,
          change,
          false
        ),
        ...backgroundSelectorItems
      ];
    }
    return backgroundSelectorItems;
  }
);
var DEFAULT_BACKGROUNDS_CONFIG = {
  default: null,
  disable: true,
  values: []
};
var BackgroundSelector = (0, import_react.memo)(() => {
  var _a;
  const backgroundsConfig = (0, import_api.useParameter)(
    PARAM_KEY,
    DEFAULT_BACKGROUNDS_CONFIG
  );
  const [globals, updateGlobals] = (0, import_api.useGlobals)();
  const globalsBackgroundColor = (_a = globals[PARAM_KEY]) == null ? void 0 : _a.value;
  const selectedBackgroundColor = (0, import_react.useMemo)(() => {
    return getBackgroundColorByName(
      globalsBackgroundColor,
      backgroundsConfig.values,
      backgroundsConfig.default
    );
  }, [backgroundsConfig, globalsBackgroundColor]);
  if (Array.isArray(backgroundsConfig)) {
    import_client_logger2.logger.warn(
      "Addon Backgrounds api has changed in Storybook 6.0. Please refer to the migration guide: https://github.com/storybookjs/storybook/blob/next/MIGRATION.md"
    );
  }
  const onBackgroundChange = (0, import_react.useCallback)(
    (value) => {
      updateGlobals({ [PARAM_KEY]: { ...globals[PARAM_KEY], value } });
    },
    [backgroundsConfig, globals, updateGlobals]
  );
  if (backgroundsConfig.disable) {
    return null;
  }
  return /* @__PURE__ */ import_react.default.createElement(import_react.Fragment, null, /* @__PURE__ */ import_react.default.createElement(import_components.WithTooltip, {
    placement: "top",
    trigger: "click",
    closeOnClick: true,
    tooltip: ({ onHide }) => {
      return /* @__PURE__ */ import_react.default.createElement(import_components.TooltipLinkList, {
        links: getDisplayedItems(
          backgroundsConfig.values,
          selectedBackgroundColor,
          ({ selected }) => {
            if (selectedBackgroundColor !== selected) {
              onBackgroundChange(selected);
            }
            onHide();
          }
        )
      });
    }
  }, /* @__PURE__ */ import_react.default.createElement(import_components.IconButton, {
    key: "background",
    title: "Change the background of the preview",
    active: selectedBackgroundColor !== "transparent"
  }, /* @__PURE__ */ import_react.default.createElement(import_components.Icons, {
    icon: "photo"
  }))));
});

// src/containers/GridSelector.tsx
var import_react2 = __toESM(require("react"));
var import_api2 = require("@storybook/api");
var import_components2 = require("@storybook/components");
var GridSelector = (0, import_react2.memo)(() => {
  var _a;
  const [globals, updateGlobals] = (0, import_api2.useGlobals)();
  const { grid } = (0, import_api2.useParameter)(PARAM_KEY, {
    grid: { disable: false }
  });
  if (grid == null ? void 0 : grid.disable) {
    return null;
  }
  const isActive = ((_a = globals[PARAM_KEY]) == null ? void 0 : _a.grid) || false;
  return /* @__PURE__ */ import_react2.default.createElement(import_components2.IconButton, {
    key: "background",
    active: isActive,
    title: "Apply a grid to the preview",
    onClick: () => updateGlobals({
      [PARAM_KEY]: { ...globals[PARAM_KEY], grid: !isActive }
    })
  }, /* @__PURE__ */ import_react2.default.createElement(import_components2.Icons, {
    icon: "grid"
  }));
});

// src/manager.tsx
import_addons.addons.register(ADDON_ID, () => {
  import_addons.addons.add(ADDON_ID, {
    title: "Backgrounds",
    type: import_addons.types.TOOL,
    match: ({ viewMode }) => !!(viewMode && viewMode.match(/^(story|docs)$/)),
    render: () => /* @__PURE__ */ import_react3.default.createElement(import_react3.Fragment, null, /* @__PURE__ */ import_react3.default.createElement(BackgroundSelector, null), /* @__PURE__ */ import_react3.default.createElement(GridSelector, null))
  });
});
