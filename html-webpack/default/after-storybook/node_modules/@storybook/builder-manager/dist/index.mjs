var a=(e=>typeof require!="undefined"?require:typeof Proxy!="undefined"?new Proxy(e,{get:(t,r)=>(typeof require!="undefined"?require:t)[r]}):e)(function(e){if(typeof require!="undefined")return require.apply(this,arguments);throw new Error('Dynamic require of "'+e+'" is not supported')});import{dirname as J,join as f}from"path";import{copy as z,writeFile as K,remove as Q}from"fs-extra";import M from"express";import{logger as x}from"@storybook/node-logger";import{globalExternals as X}from"@fal-works/esbuild-plugin-global-externals";import{pnpPlugin as Y}from"@yarnpkg/esbuild-plugin-pnp";import Z from"esbuild-plugin-alias";import ie,{dirname as q,join as _}from"path";import{readFile as B,pathExists as ae}from"fs-extra";import{render as I}from"ejs";var P=async e=>_(q(a.resolve("@storybook/builder-manager/package.json")),"templates",e),N=async e=>{let t=await P(e);return B(t,"utf8")};var E=async(e,t,r,s,i,o,n,l,c,{versionCheck:u,releaseNotesData:w,docsMode:F,previewUrl:O,serverChannelUrl:m})=>{let d=await r,g=await t,h=await e;return I(h,{title:g?`${g} - Storybook`:"Storybook",files:{js:i,css:s},globals:{FEATURES:JSON.stringify(await o,null,2),REFS:JSON.stringify(await n,null,2),LOGLEVEL:JSON.stringify(await l,null,2),DOCS_OPTIONS:JSON.stringify(await c,null,2),VERSIONCHECK:JSON.stringify(JSON.stringify(u),null,2),RELEASE_NOTES_DATA:JSON.stringify(JSON.stringify(w),null,2),PREVIEW_URL:JSON.stringify(O,null,2),SERVER_CHANNEL_URL:JSON.stringify(m,null,2)},head:d?await B(d,"utf8"):""})};import{definitions as T}from"@storybook/ui/dist/globals";import{join as A}from"path";import{getRefs as U}from"@storybook/core-common";var R=e=>{try{return Promise.resolve(a.resolve(e))}catch{return Promise.resolve(!1)}};var v=async e=>{let t=U(e),r=e.presets.apply("features"),s=e.presets.apply("logLevel"),i=e.presets.apply("title"),o=e.presets.apply("docs",{}),n=N("template.ejs"),l=R(A(e.configDir,"manager-head.html")),[c,u]=await Promise.all([L.get(),C(e)]);return{refs:t,features:r,title:i,docsOptions:o,template:n,customHead:l,instance:c,config:u,logLevel:s}};import{writeFile as V,ensureFile as G}from"fs-extra";import{join as W}from"path";async function D(e,t){let r=await Promise.all(t?.map(async o=>{let{location:n,url:l}=$(o,e);return await G(n).then(()=>V(n,o.contents)),l})||[]),s=r.filter(o=>o.endsWith(".mjs"));return{cssFiles:r.filter(o=>o.endsWith(".css")),jsFiles:s}}function $(e,t){let r=e.path.replace(t,""),s=W(t,r),i=`./sb-addons${r.split("/").map(encodeURIComponent).join("/")}`;return{location:s,url:i}}var p,y,C=async e=>{let[t,r,s]=await Promise.all([e.presets.apply("managerEntries",[]),R(f(e.configDir,"manager")),P("addon.tsconfig.json")]);return{entryPoints:r?[...t,r]:t,outdir:f(e.outputDir||"./","sb-addons"),format:"esm",write:!1,outExtension:{".js":".mjs"},loader:{".js":"jsx",".png":"dataurl",".gif":"dataurl",".jpg":"dataurl",".jpeg":"dataurl",".svg":"dataurl",".webp":"dataurl",".webm":"dataurl"},target:["chrome100"],platform:"browser",bundle:!0,minify:!1,sourcemap:!0,jsxFactory:"React.createElement",jsxFragment:"React.Fragment",jsx:"transform",jsxImportSource:"react",tsconfig:s,legalComments:"external",plugins:[Z({process:a.resolve("process/browser.js"),util:a.resolve("util/util.js"),assert:a.resolve("browser-assert")}),X(T),Y()],define:{"process.env.NODE_ENV":"'production'","process.env":"{}",global:"window",module:"{}"}}},L={get:async()=>{let{build:e}=await import("esbuild");return e}},ee=async function*({startTime:t,options:r,router:s}){x.info("=> Starting manager..");let{config:i,customHead:o,features:n,instance:l,refs:c,template:u,title:w,logLevel:F,docsOptions:O}=await v(r);yield;let m=i.outdir;await Q(m),yield,p=await l({...i,watch:!0}),yield;let d=f(J(a.resolve("@storybook/ui/package.json")),"dist");s.use("/sb-addons",M.static(m)),s.use("/sb-manager",M.static(d));let{cssFiles:g,jsFiles:h}=await D(m,p?.outputFiles);yield;let S=await E(u,w,o,g,h,n,c,F,O,r);return yield,s.use("/",({path:j},k,H)=>{j==="/"?k.status(200).send(S):H()}),{bail:re,stats:{toJson:()=>({})},totalTime:process.hrtime(t)}},te=async function*({startTime:t,options:r}){if(!r.outputDir)throw new Error("outputDir is required");x.info("=> Building manager..");let{config:s,customHead:i,features:o,instance:n,refs:l,template:c,title:u,logLevel:w,docsOptions:F}=await v(r);yield;let O=s.outdir,m=f(J(a.resolve("@storybook/ui/package.json")),"dist"),d=f(r.outputDir,"sb-manager");p=await n({...s,minify:!0,watch:!1}),yield;let g=z(m,d),{cssFiles:h,jsFiles:S}=await D(O,p?.outputFiles);yield;let j=await E(c,u,i,h,S,o,l,w,F,r);return await Promise.all([K(f(r.outputDir,"index.html"),j),g]),x.trace({message:"=> Manager built",time:process.hrtime(t)}),{toJson:()=>({})}},re=async()=>{if(y)try{await y.throw(new Error)}catch{}if(p&&p.stop)try{p.stop(),x.warn("Force closed manager build")}catch{x.warn("Unable to close manager build!")}},Le=async e=>{y=ee(e);let t;do t=await y.next();while(!t.done);return t.value},Me=async e=>{y=te(e);let t;do t=await y.next();while(!t.done);return t.value},Je=[],ke=[];export{re as bail,Me as build,Je as corePresets,L as executor,C as getConfig,ke as overridePresets,Le as start};
