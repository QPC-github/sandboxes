var __require = /* @__PURE__ */ ((x) => typeof require !== "undefined" ? require : typeof Proxy !== "undefined" ? new Proxy(x, {
  get: (a, b) => (typeof require !== "undefined" ? require : a)[b]
}) : x)(function(x) {
  if (typeof require !== "undefined")
    return require.apply(this, arguments);
  throw new Error('Dynamic require of "' + x + '" is not supported');
});

// src/preset.ts
import path from "path";
var addons = [
  path.dirname(__require.resolve(path.join("@storybook/preset-html-webpack", "package.json"))),
  path.dirname(__require.resolve(path.join("@storybook/html", "package.json")))
];
var core = async (config, options) => {
  const framework = await options.presets.apply("framework");
  return {
    ...config,
    builder: {
      name: path.dirname(
        __require.resolve(path.join("@storybook/builder-webpack5", "package.json"))
      ),
      options: typeof framework === "string" ? {} : framework.options.builder || {}
    }
  };
};
export {
  addons,
  core
};
