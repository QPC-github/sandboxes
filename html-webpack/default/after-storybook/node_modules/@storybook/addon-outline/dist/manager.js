var __create = Object.create;
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __getProtoOf = Object.getPrototypeOf;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __copyProps = (to, from, except, desc) => {
  if (from && typeof from === "object" || typeof from === "function") {
    for (let key of __getOwnPropNames(from))
      if (!__hasOwnProp.call(to, key) && key !== except)
        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  }
  return to;
};
var __toESM = (mod, isNodeMode, target) => (target = mod != null ? __create(__getProtoOf(mod)) : {}, __copyProps(
  isNodeMode || !mod || !mod.__esModule ? __defProp(target, "default", { value: mod, enumerable: true }) : target,
  mod
));

// src/manager.tsx
var import_react2 = __toESM(require("react"));
var import_addons = require("@storybook/addons");

// src/constants.ts
var ADDON_ID = "storybook/outline";
var PARAM_KEY = "outline";

// src/OutlineSelector.tsx
var import_react = __toESM(require("react"));
var import_api = require("@storybook/api");
var import_components = require("@storybook/components");
var OutlineSelector = (0, import_react.memo)(() => {
  const [globals, updateGlobals] = (0, import_api.useGlobals)();
  const api = (0, import_api.useStorybookApi)();
  const isActive = globals[PARAM_KEY] || false;
  const toggleOutline = (0, import_react.useCallback)(
    () => updateGlobals({
      [PARAM_KEY]: !isActive
    }),
    [isActive]
  );
  (0, import_react.useEffect)(() => {
    api.setAddonShortcut(ADDON_ID, {
      label: "Toggle Measure [O]",
      defaultShortcut: ["O"],
      actionName: "outline",
      showInMenu: false,
      action: toggleOutline
    });
  }, [toggleOutline, api]);
  return /* @__PURE__ */ import_react.default.createElement(import_components.IconButton, {
    key: "outline",
    active: isActive,
    title: "Apply outlines to the preview",
    onClick: toggleOutline
  }, /* @__PURE__ */ import_react.default.createElement(import_components.Icons, {
    icon: "outline"
  }));
});

// src/manager.tsx
import_addons.addons.register(ADDON_ID, () => {
  import_addons.addons.add(ADDON_ID, {
    title: "Outline",
    type: import_addons.types.TOOL,
    match: ({ viewMode }) => !!(viewMode && viewMode.match(/^(story|docs)$/)),
    render: () => /* @__PURE__ */ import_react2.default.createElement(OutlineSelector, null)
  });
});
